Smartwatches promise to bring enhanced convenience to common communication, creation and information retrieval tasks.
Due to their prominent placement on the wrist, they must be small and otherwise unobtrusive, which limits the sophistication of interactions we can perform.
This problem is particularly acute if the smartwatch relies on a touchscreen for input, as the display is small and our fingers are relatively large.
In this work, we propose a complementary input approach: using the watch face as a multi-degreeof-freedom, mechanical interface.
We developed a proof of concept smartwatch that supports continuous 2D panning and twist, as well as binary tilt and click.
To illustrate the potential of our approach, we developed a series of example applications, many of which are cumbersome - or even impossible - on today's smartwatch devices.
ACM Classification: H.5.2 : User Interfaces - Input devices and strategies.
Keywords: Wearable computing; buttons; touchscreens; watch; smart clothing; on-body interfaces.
These devices rely on small buttons and/or touchscreens for input.
We propose using the watch face as a multi-degree-offreedom mechanical interface.
Our proof-of-concept smartwatch supports continuous 2D panning and twist, as well as binary tilt and click .
This input approach can operate in parallel with buttons, touchscreens and voice, offering greater expressivity in the same compact form.
The wristwatch has been an ever-present wearable technology since its inception in the early 1900s, and has undergone continuous technical refinement since that time.
Researchers have long viewed the immediacy and ubiquity of the wristwatch as a vehicle for computation, pushing its capabilities to ever-greater heights.
In 2000, IBM demonstrated the first watch running a full operating system .
However, unlike smartphones, which can be scaled to a variety of sizes, smartwatches must be small and unobtrusive in order to remain socially acceptable, which has long limited their practicality.
Recently, smartwatches have experienced a resurgence of interest as electronics have become more powerful and power efficient, making them more practical and capable than ever before.
Copyrights for components of this work owned by others than the author must be honored.
Abstracting with credit is permitted.
To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee.
Publication rights licensed to ACM.
Our prototype, seen in Figure 2, has four primary components.
The topmost element is a 1.5-inch TFT LCD color display with a resolution of 280 x 220 pixels.
This display is mounted on top of a pair of N35P112 Hall-effect joystick sensors, set apart by 35mm .
These sensors capture 2D movements  with a maximum displacement of 0.5mm.
Additionally, each sensor has a binary click action perpendicular to the movement plane.
This configuration allows several different manipulations of the display to be digitized .
Specifically, panning the display  results in identical X/Y translations on the joysticks underneath.
Analog twist  can be calculated by looking for opposing translations on the joysticks .
When both sensors are depressed, a click event is fired.
The two sensors are connected to an ARM Cortex M3based Maple Mini over an I2C bus.
Each sensor provides 8bit X and Y position data, as well as click state, 200 times per second.
This data is sent via USB to a host computer, where a Java program processes the inputs and implements an interactive application.
The graphical output of this application is sent to the smartwatch display.
A more advanced prototype could include additional input dimensions.
For example, instead of joystick sensors with binary click, pressure sensors could be used.
This would allow for analog tilt sensing.
With four such sensors, 2D analog tilt is possible - yielding a device with pitch, yaw and roll, in addition to 2D positional tracking.
Small devices have appeared in many forms, ranging from "inch-scale" devices , to digital jewelry , and now smartwatches.
The latter form has inspired a myriad of research efforts, of which we highlight a few .
Touchscreens have been used in various ways to enhance interactions on wearable and diminutive devices.
For example, Facet  was a prototype smartwatch that used many small touchscreens synergistically to enable more sophisticated operations.
Zoomboard  used iterative zooming to make text entry on smartwatch-sized displays more accurate.
NanoTouch  moved the touchpad to the rear of the device so that interactions do not occlude the screen.
In-air gestures can utilize area around the watch for input with minimal screen occlusion.
For example, the Gesture Watch  and HoverFlow  used IR proximity sensors to capture gestures performed above a device.
Ni and Baudisch  used a tiny, wrist-worn, high-resolution optical sensor to recognize gestures performed on top of it.
Abracadabra  used free-space magnetic tracking to sense an instrumented finger near a wrist-worn device.
However, these gesture-based techniques require specific clutching mechanisms, lack tactile feedback, and are generally indiscreet.
Our approach hopes to mitigate these issues by providing users a physical, direct manipulation interface.
Utilizing the watchband or the bezel for input is another popular technique, as it minimizes screen occlusion.
WatchIt  instrumented the watchband itself to act as a simple slider or button input.
Although these techniques mitigate occlusion, they may require larger surface areas to operate effectively, and generally only offer 1D radial input.
In contrast, our approach uses hall-effect sensors operating behind the watchface and provides three or more analog degrees of freedom.
Also related to our technique are systems that sense physical force applied to a screen.
Touchscreens with shear capabilities  can sense the tangential forces of touch inputs, offering an additional input dimension.
Tilt has also been explored for mobile input .
Lastly, the use of pressure as an input channel has long been studied for applications such as continuous scrolling and zooming .
To illustrate the potential and immediate feasibility of our approach, we developed seven applications to showcase five interaction techniques we developed on our prototype hardware .
Of note, we reserve left and right tilt for system-wide functionality, such as switching between applications.
Thus, our applications only utilize pan, twist and click inputs for interactive use.
Our smartwatch offers 2D panning and zooming , which is ideal for the navigation of planar content .
Using this interaction paradigm, we created a map application .
Tangentially pushing the watch face pans the map; users can vary the applied force to move at different speeds.
A cursor is shown in the center of the screen; clicking the smartwatch displays information on the location beneath the cursor.
This modality could also be used for navigation .
Many applications require only a single degree of freedom for navigation, coupled with a binary click for action or selection.
For example, we created a clock application that displays the current time .
When the watch face is depressed , the clock switches mode, allowing the user to set an alarm time.
Twisting the watch clockwise and counterclockwise adjusts the alarm time.
To illustrate this interaction technique, we created a music player , which naturally lends itself to a hierarchical menu structure.
Users pan the watch right to select menu items, and left to return to the previous menu.
Within menus, panning up and down scrolls the list at a variable rate.
At the topmost level, users select a categorization , then a specific group of songs within that categorization.
They can then select a song to play, and change the currently playing song using up-and-down panning motions.
Additionally, twist and click inputs are recognized application-wide: twist adjusts the volume, while clicks pause and play the current song.
Calendars are another popular application for smartwatches.
In our calendar application , panning left or right allows the user to move between days, while panning up or down allows the user to view calendar items for a particular day.
Clicking on an event brings up additional detail.
Games can often take advantage of expressive input dimension, such as those offered by our prototype.
To demonstrate the potential for smartwatch gaming, we ported Doom, a first-person shooter by id Software .
2D pan is bound to forward/backward movement and left/right strafing.
Twist is used to turn left and right, and click shoots.
Other control schemes are possible.
For example, a racing game could utilize twist for steering wheel control, which is ideal, as it offers continuous, analog control.
Depressing the watch face could be coupled to the gas pedal.
Finally, 2D games such as Tetris, Space Invaders, and more generally, side-scrollers and overheads, could use panning for up/down/left/right player movement, while twist and click could provide different actions, .
Another interaction technique is to manipulate the watch face gesturally.
For example, the user can grasp the display and move it in a circular fashion.
As a proof of concept, we created a basic application utilizing the $1 Gesture Recognizer  using 2D pan position .
The application supported all of the aforementioned gestures, and could be used in the future for quick actions such as turning the device to silent, playing voicemails, taking a photo, and bookmarking locations.
The approach we present complements contemporary smartwatch input mechanisms, namely touch, physical buttons and voice.
Our approach does not hinder any of latter modalities, while simultaneously enabling new dimensions of input, which we view as a significant benefit.
That being said, there are several drawbacks and limitations that should also be noted, which we now describe.
Foremost, our approach requires extra components to be placed inside of a smartwatch.
This is no small feat given the compactness of these devices.
A tightly integrated solution should be readily possible in the near future.
In addition to requiring extra space inside of the device, the sensors we require will also increase cost and potentially power consumption.
Secondly, mechanical components inside mobile devices are less than ideal .
This is because particulates and water have the potential to enter the enclosure and wear and even destroy these components.
One possible alternative is to use strain gauges, force sensitive resistors, and similar sensors, which measure the same forces we employ, but with essentially zero mechanical displacement.
This would allow tighter integration at the expense of tactile feedback .
Another issue is the fact that manipulating the watch face displaces the visual content one is trying to interact with.
Initially, this was a chief concern, but in practice, we found the effect to be minimal.
Fortunately, when users are manipulating the watch face, their visual and motor systems work in tandem, and the perceived effect is minimal .
This is why, for example, it is possible for people to read a smartphone while walking, while those around them cannot.
As with capacitive touch, buttons and voice, there is a danger of accidental input.
This might occur by snagging on clothing or being "pushed" when e.g., the hands are resting on a table.
Like other modalities, an "unlock" mechanism might have to be employed to reduce false activations.
Indeed, a device could have one such mechanism shared by all input modalities.
Finally, we learned that with mechanical input, we lose affordances that a touchscreen button can provide in the form of an icon or text.
Specifically, untrained users will initially find it difficult to deduce the mapping between mechanical inputs and actions on their watches.
However, we observed that people quickly learned these mappings .
Similarly, we found that using gestures was particularly difficult without some sort of immediate feedback to visualize the displacement of the watch face.
To address this, we added a small dot and ghosted trail  that shows the displacement state and history.
In this work, we designed and implemented a new smartwatch interaction modality that uses the watch face as a multi-degree-of-freedom mechanical interface, enabling users to pan, zoom, navigate, select and perform other actions using simple physical controls.
We demonstrated these capabilities with a suite of example applications, built around five interaction techniques.
Our approach is inexpensive, potentially compact, and can complement existing inputs, such as physical buttons, touch and voice.
