Wizard of Oz  testing has shown promise as an effective way to test location-enhanced applications.
However, it is challenging to conduct a location-based WOz test because of the dynamic nature of target settings in the field.
In particular, continuous location tracking, a major task in such a test, requires a wizard to frequently update a user's location to simulate a location system.
This imposes a heavy task load on a wizard.
To ease wizards' tasks for location tracking, we designed two techniques, Directional Crossing and Steering, and conducted a field experiment to investigate the performance of the two techniques.
A quantitative analysis shows that Directional Crossing and Steering significantly lowered a wizard's task load for location tracking without sacrificing accuracy.
Wizard of Oz  testing, which has been widely employed in user interface design, is a technique in which a wizard  fakes an incomplete  system component to conduct early user evaluations .
WOz testing has shown great potential as an inexpensive but effective way to test location-enhanced applications in the early stages of design .
It is extremely challenging to perform such a study in the mobile, dynamic target settings found in the field.
In particular, location tracking requires much attention of the wizard.
Thus, we set out to design effective techniques to relieve wizards from heavily-loaded location tracking tasks, so that they can save their effort for performing other tasks.
In this work, we describe two new techniques we designed that allow a wizard to keep track of a user's location: DirectionalCrossing and Steering.
We conducted a field experiment to investigate the performance of the two techniques.
A quantitative analysis showed that our new techniques resulted in significantly lower task load for wizard participants than two benchmark techniques.
Location-enhanced applications, one of the most widely adopted types of ubicomp applications today, provide useful services based on the location of people, places and things .
However, despite steady improvements and growing ubiquity, location sensing technologies are still complex to use.
For example, GPS does not work indoors or in areas with high, dense buildings, while WiFi-based positioning needs lots of training for high precision and depends on RF infrastructure that may not be present in a locale.
Consequently, it is expensive and time-consuming to test location-enhanced applications with existing location sensing infrastructures.
This is especially true in the early stages of design when the goal is to quickly get feedback.
To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee.
Location tracking often employs a map-based interface  in which a wizard moves an icon representing the user's location on a map image .
We call location tracking with a map-based representation "continuous location tracking."
This is in contrast to tracking with a discrete, textual representation of locations .
In general, a discrete representation is insufficient to reflect continuous spatial relations such as distance information, which is useful for many scenarios such as finding the closest bus stop.
In addition, use of a discrete representation increases the reaction time required of a wizard as the number of places of interest increases, as described by Hick's Law .
In contrast, a map-based representation provides a direct mapping of the physical world.
There are two major challenges in designing an efficient technique for continuous location tracking.
First, creation of a map that allows easy mapping to a physical space.
Second, the design of an interaction technique that allows a wizard to easily update the user's location on the map while walking in the field.
Substantial work on map design has been conducted by cartographers.
We focus here on the second challenge in the context of using a pen-based computer , which offers better mobility, as a target device for a wizard.
Accelerometer-based sensing technologies can provide reliable estimates of a person's walking speed .
We designed a Steering technique that employs a real-time, accelerometer-based step-estimation algorithm to estimate how far a user moves and to automatically update the user's location on the map along the current trajectory.
At the same time, a wizard can steer the icon by specifying movement direction with directional crossing.
Note that in Steering, a directional crossing does not move a crossed icon but only changes its movement direction.
For example, a wizard crosses the icon to change its movement direction when a user makes a turn.
Pick & Drop is again used for directly adjusting the icon's position.
Steering is similar to "dead-reckoning"  in that both techniques infer current position based on a known previous position and a stream of readings from onboard inertial sensors , and do so independently of environmental infrastructure.
However, "dead-reckoning" solely relies on inference; this has proven extremely difficult in practice with current technologies.
In contrast, Steering includes a human user  to provide correct directional information as well as to compensate for large cumulative error in position estimation.
We ran a field experiment to investigate the performance of the two new techniques  as well as two benchmark techniques  that are commonly used for moving graphical objects.
Drag&Drop has been used for location tracking in previous WOz studies .
Directional crossing allows a wizard to update the user's location on a map by crossing an icon using a pen.
Each crossing will move the icon along the direction of the crossing gesture  for a fixed distance .
The icon is designed as a circle  to avoid biasing the crossing direction.
A crossing can begin or end inside or outside of the icon, but it must cross the border of the icon.
The length of a crossing gesture is ignored in our current design.
This was mainly because we found it difficult to draw a stroke of a specific length while walking.
This technique does not require precise positioning and allows an operation with multiple operands  to be specified in a single stroke.
As a complement to the incremental updates of directional crossing, Pick & Drop  is also allowed for moving an icon to any target position on a map.
A stroke that completely falls within an icon is recognized as a Pick.
The experiment was conducted on one floor of a building .
We chose an indoor environment for the experiment so as to allow for greater control over experimental conditions.
For example, the degree of reflection from a Tablet PC screen may vary based on the time and weather condition in outdoor settings.
The experimental path starts from the blue dot and ends at the red dot .
Blue lines stand for an experimenter being tracked walking at a normal speed while green lines stand for fast speed.
The path denoted by the dashed line was used for warming up and was not used for analysis.
The experiment included a demographic questionnaire, an introductory tour to acquaint participants with the floor and the map, four experimental sessions with one session for each technique, and a post-study questionnaire.
Each experiment took about 70 minutes in total.
A 4x4 Latin Square was used to counterbalance the order of the techniques.
Each session was divided into two parts: in the first part, participants learned to use a technique through extensive practice; the second part was the experimental phase in which a participant  followed an experimenter  around the floor keeping track of the experimenter's location using one of the four techniques.
An experimental phase lasted about six minutes and participants were allowed breaks between sessions.
Forty checkpoints, unknown to participants, were distributed on the experimental path .
While walking the path, the experimenter recorded his arrival time at each checkpoint.
The experimenter's log was later used to analyze the accuracy of each location tracking.
We collected data on all experimental events including pen down/up, pen draw, location updates on the map, and times when the experimenter reached checkpoints.
The tracking deviation measures how accurate a participant kept track of the experimenter's location using a particular technique.
The operation frequency and the percentage of interaction time reflect how much attention or effort is required of a wizard participant while using a technique.
The wizard's device, used by a participant for performing tracking tasks, was a Motion M1400 Tablet PC.
This device has a Pentium M 1.1GHz processor, 512MB of RAM and a 12.1" display with a digitizer.
The experiment was conducted at a resolution of 1024x768 pixels and the wizard UI  was maximized on the screen.
The user's device  was a Toshiba Protege Tablet PC.
The interface on this device showed the same floor map as the wizard's tablet but with the previous and next four checkpoints overlaid so as to aid the experimenter in remembering where he should record time.
The experimenter could record time by pressing a physical button on the Tablet PC, alleviating the need to slow down and hiding the operation from the participants.
For the Steering technique, a 3-axis accelerometer on Intel's sensor board , wired to the experimenter's tablet PC, was used to estimate the experimenter's movement.
The accelerometer data was processed locally on the tablet and the resulting movement distance information was sent to the wizard's device.
The two devices communicated via a peer-to-peer wireless connection.
In this way we give higher weight to location updates that occur closer to when the experimenter reaches the checkpoint.
We tested tracking deviation with different  values, ranging from 1 to 3 seconds.
The tracking deviation of DirectionalCrossing was consistently the smallest with a mean of 1.6 meters; Steering always had the greatest deviation with a mean of 2.2 meters; Drag&Drop and Pick&Drop had similar tracking deviations with a mean ranging from 1.8 to 1.9.
However, there was no significant difference found on the tracking deviation among the four techniques.
Twelve adult volunteers were recruited from a university campus, four female and eight male, 19 to 28 years old.
They received $25 for their participation.
One of the twelve participants was left-handed.
50% of participants had experience using a Tablet PC, and 58% of participants were familiar with the building floor for the experiment.
Four of the twelve participants had heard of WOz testing but only one of them had experience in conducting a WOz study.
There was a significant difference found in the operation frequency of the four techniques, F=9.2, p<.001.
The operation frequency for Steering was the smallest with a mean of 0.16 times/second, which was significantly lower than the other three techniques  .
There was no significant difference found in operation frequency among the other three techniques.
We also found there was a significant difference in the percentage of interaction time among the four techniques, F=52.03, p<.001 .
All of our participants were "experts" with Drag&Drop, but even so, Drag&Drop did not perform as well as the two new techniques.
However, a future longitudinal study in a more realistic setting  would complement these results.
We are also investigating issues such as how the inaccuracy of actual sensors affects the results of a WOz study by modeling sensor inaccuracies in a WOz system.
The results indicate that Steering requires a much lower operation frequency than the other techniques without significantly increasing tracking deviation.
The high rating on Steering's required attention and hand and eye fatigue also support this .
However, Steering was not significantly superior to DirectionalCrossing in terms of interaction time.
This is because Pick&Drop was used significantly more frequently during Steering  than DirectionalCrossing , and Pick&Drop was significantly slower   than crossing gestures.
Note that there was no significant difference found on operation speed of crossing gestures between DirectionalCrossing  and Steering  .
This implies that Steering required many corrections from participants.
Although Steering's tracking deviation was not significantly higher than the others, the subjective preference showed the lowest rating on its accuracy.
Some participants felt the location updates were not fully under their control while using Steering.
Some participants did not feel fully acquainted with Steering.
The lowest rating on Steering's ease of learning reflects this.
In contrast, DirectionalCrossing seems to have the best global performance among the four techniques.
The results suggest finding a better technique than Pick&Drop to adjust Steering's automatic location updates.
All of these experimental techniques require a wizard to explicitly specify a target to update, e.g., by crossing or tapping.
We designed two continuous location tracking techniques for WOz testing of location-enhanced applications.
We conducted a field experiment to quantitatively compare the performance of the four techniques.
The results showed that compared to two benchmark techniques, our two new techniques achieved a similar tracking accuracy but significantly lowered a wizard's task load.
In addition, the two new techniques support movement direction, which is not available in the two traditional techniques.
Steering required the least interaction time and frequency, while DirectionalCrossing had the best global performance.
