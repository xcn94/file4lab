This paper clarifies two common patterns of multitasking on the Web, namely Multiple Tasks  and Multiple Session Task .
To support both of these, the task concept needs to be introduced into a browser.
An online pilot survey has revealed which attributes of the task concept are most significant to Web users and as a result a simple prototype, the Multitasking Bar , is proposed based on these findings.
The MB copes with the multitasking needs of both MT and MST in the browser by providing functions for task related Web page management and task schedule management.
A two-session controlled experiment has been conducted to evaluate the MB and to compare user performance and experience when multitasking on the Web with and without support for MT and MST.
Results show that support for both MST and MT significantly improves user task performance efficiency and greatly enhances the user experience when multitasking on the Web.
This leads to simultaneously executed activities, interruptions and resumption of tasks both on and off the Web .
Meanwhile, a diary study of knowledge workers has identified an average of 50 task shifts per person during a typical working week , and a log study has identified an average of 3.74 e-mail or IM-driven task shifts per hour, taking between 8 and 10 minutes on average for the person to return to the interrupted task .
Cognitive psychologists have studied many aspects of multitasking or task switching, providing several definitions of multitasking .
We follow these definitions in this paper and concentrate especially on tasks that depend on Web resources, typically Web pages.
When users multitask while working on the Web, they switch among several tasks running simultaneously, often suspending and then resuming their task.
In doing so, they tend to follow one of two common patterns, which we define as Multi-Tasks  and Multi-Session-Task .
In this paper, Multi-Tasks  is defined as the pattern of executing a set of tasks simultaneously, where the execution often depends on bundles of Web pages.
MST on the other hand, is the pattern of executing a single task spanning multiple Web sessions .
For example, whilst shopping on an e-commerce web site, and doing other task on the Web at the same time, i.e., planning the itinerary of a vacation, constitutes MT.
Furthermore, the shopping task is classed as an MST if it spans more than one Web session; in other words, if at some point the browser is closed and the shopping task temporarily suspended, and then later resumed in a new instance of the browser.
These patterns of MT and MST in Web use are very common, and have frequently been reported in the literature.
The study by Sellen et al.
Currently with the ubiquity of the Internet, we are doing more and more of our jobs online , with the most important workplace for these jobs being the browser.
On the other hand, humans are naturally multitasking beings, often either doing several tasks simultaneously and alternatively, or executing a single task through several working sessions.
To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee.
MacKay and Watters found that users with tabbed browsing typically worked on several tasks during a single web session .
In summary, there is significant evidence that both MT and MST are typical patterns of Web use, and should be well supported by browsers.
This means that there should be some effective functions within the browser to help users manage tasks whilst multitasking on the Web, including functions for managing bunches of Web pages for corresponding tasks both simultaneously and across Web sessions, and functions for managing a task's status and schedule.
For example, in the aforementioned shopping example, while shopping online a user may browse several related web pages simultaneously.
Some pages may be commodity pages from the actual e-commerce site, while others may be web pages from other sites about these commodities, such as user comments, background information, and reviews.
In this situation, all these web pages comprise a bundle of resources forming the context for the user's shopping task.
Consequently, this resource bundle should be able to be saved, found, and restored as a whole whenever needed.
Furthermore, when work is done on more than one task, the browser should provide better support than it does at present.
It should intuitively make sense of and present the user with tasks to help switch quickly and easily between them.
It also should manage the status of the tasks, to remind the user when these tasks must be completed, and what their current status is.
In short, what is needed is support for task resource  management and task schedule management in a browser.
Unfortunately however, contemporary browsers do not provide these kinds of functions, at least, not very well.
In almost all widely-used browsers, there is neither the concept nor awareness of a task or task session, making it difficult to detect or explicitly define a task, manage its status, and hence save or resume work on it accordingly .
To resolve this issue, users have resorted to various workarounds, such as opening several browser windows or tabs simultaneously for different tasks , bookmarking all related Web pages for a task as a group, and even writing the URLs of the relevant Web pages for a task on paper  to enable continuing the task between sessions.
Besides these workarounds, the most effective approaches hitherto lie in various research prototypes and browser extensions and plugins .
We believe that if we explicitly introduce the task concept into a browser and allow the browser to manage the task status and related Web pages for both MT and MST, it will promote user performance efficiency and enhance user experiences when multitasking on the Web.
Our study attempts to answer two research questions:
How will the introduction of the task concept into a browser impact a user's multitasking performance efficiency on the Web?
How will this introduction impact a user's experience while multitasking on the Web?
In the rest of this paper, we first review related works on multitasking in a browser.
We then introduce the pilot survey used to investigate how users expect to cope with multitasking in a browser.
Next, we describe the design and implementation details of our prototype, the Multitasking Bar .
Thereafter, we report on the user study conducted to test the impact of introducing the task concept into a browser by comparing user performance efficiency and experience when multitasking on the Web with and without support for MT or MST in the browser.
Next, we analyze data collected from our user study to ascertain research results and implications.
Finally, we conclude by discussing the contributions of this paper and suggesting possible future work.
Various studies have been conducted to investigate the multitasking features and patterns in current browsers.
Jhaveri and Raiha argued that the weakness of a browser's support for MST is inherited from the weakness of revisitation support in a browser .
Moreover, MacKay and Watters revealed the importance of better task session resumption support in a browser through a field study that investigated users' interactions with the Web on MST.
They also identified three main features needed by browser tools to support MST .
However, all these studies typically focused on MST and hardly considered MT.
Previous studies also proposed approaches to enhance MST in a browser.
Jhaveri and Raiha proposed Session Highlights to support MST in web-based research tasks , in which a research task is visualized as a workspace and each related Web page is represented as a thumbnail.
By using search queries as a fundamental organizational metaphor, the SearchBar groups a user's browsing history into topic-centric tasks, and provides a quick task context resumption function.
MacKay and Watters developed 3 prototypes to enhance a browser's support for MST .
These prototypes can store and resume a bundle of web pages as a task context across Web sessions, and can switch between saved tasks by selecting the task in a dropdown list.
However, all these approaches concentrated solely on MST, and ignored MT.
Moreover, with the exception of MacKay and Watters' study, the other studies did not even incorporate the task concept, which means that in these approaches users are not able to explicitly define and track a task on its necessary attributes, such as end date , status, etc.
Furthermore, in these approaches tasks differ in that they are specific to different application domains in the different approaches.
Each of these studies, except for MacKay and Watters', can only support multitasking for a particular kind of Web tasks, and not for generic Web tasks.
In addition, except for MacKay and Watters' approach, none of them considered task schedule management.
Besides these publications, there are also many plug-ins, extensions and even built-in functions for browsers that can be used to support MST and MT partially.
Save Session  and Session Manager  for Firefox and TabSaver for Internet Explorer  can save a current Web session and restore it at the next startup of the browser.
However, although this feature can support MST in two adjacent sessions  of the browser, it cannot support either defining task related Web pages explicitly or resuming a task to a state before several browser running sessions.
Another function that can be used to support MT is tab grouping, which is provided by some Firefox extensions such as Multi Row Bookmarks Toolbar , Group/Sort Tabs , Tab Kit , and TabGroups Manager , etc.
Nevertheless, none of these have the explicit task concept built in.
Therefore, once again they cannot resume tasks across more than one Web session and do not support task schedule management.
Moreover, we have not found any literature on the impact of these extensions on the user's performance or experience when multitasking on the Web, and most of the time the improvement in user efficiency and enhancement of user experience are just taken for granted.
In summary, previous studies and tools seldom introduce the concept of a task into a browser directly and explicitly, and provide little in the way of task schedule management.
Furthermore, the impact of incorporating the task concept in a browser has not been studied thoroughly.
To extend these studies we have implemented a simple prototype, the Multitasking Bar , which explicitly incorporates the task concept in a browser and supports both MT and MST.
Distribution on significance of task attributes.
For this reason, we conducted an online survey at SurveyGizmo  about multitasking on the Web between April 10 and May 10, 2009.
We received 582 valid responses with 82% of the respondents being male.
The respondents had varied occupations, including teachers, software developers, librarians, salespersons, assistants and secretaries, marketing specialists, managers, and students.
All respondents identified themselves as either average  or expert  web users; none were novice users.
Our survey asked 32 questions about a variety of Web use habits, including their usage of the browser, and their experience with multitasking , etc.
Many of these questions are beyond the scope of this paper and thus here, we only report on the most relevant questions.
It should also be noted that the data presented in this section are self-reported, and thus we have used these results as design guidelines only, since we cannot verify their absolute accuracy.
In the survey, respondents reported having experience of MT  and MST , and when multitasking on the Web, on average they often had 2 - 8 tasks  ongoing simultaneously.
The most important question in the survey is Question 19, which relates to the significance of 6 attributes1 of the task concept which we considered to be candidates for incorporation in a browser in our research prototype.
The results are shown in Figure 1.
We also recruited 48 participants who are Firefox users familiar with tabs for our subsequent user study .
Before introducing the task concept into a browser for multitasking, we need to answer the question of what attributes the task concept should have in a multitasking-enabled browser or, in other words, what attributes of a task are most significant to users multitasking on the Web?
Unfortunately, although some previous studies explored multitasking features of Web tasks, they typically concentrated on task types, task resumption times or task dwelling times, and browser functions to support multitasking .
They did not answer the questions we have posed here.
1 Here we selected the 6 attributes from task attributes which appear in almost all well-known task management tools, such as Microsoft Project , Microsoft Outlook , iGTD , Todolist , etc.
Other attributes such as remind method, remind time, assign to, report to, etc.
2 This question was not posed to respondents who identified themselves as Web users without multitasking experience.
1 - Multitasking Bar, 2 - Context Menu of Task Tab, 3 - Context Menu of Multitasking Bar, 4 - Status Icon, 5 - Tabs of Web pages of Current Task, 6 - Tooltip of Task Tab.
Furthermore, according to its end .
Three screenshots of the MB are shown in Figure 2. date, at any time a task may be in one of the four states, namely IN PROCESS, APPROACHING END DATE, The MB supports both MT and MST.
If a task is approaching its for a task into a bundle and presents a task as a tab in the deadline it will be shown with an APPROACHING END Multitasking Bar .
It manages the status of DATE status with the icon on its tab, and if it has already tasks, and can store, resume, rollback, and close related Web missed its end date it will be shown with a DELAYED status pages as a whole.
Since the MB was designed to evaluate the impact of incorporating the task related Web pages for a task may be different.
This feature concept in a browser, we made it as simple as possible.
That has often been neglected by previous studies all of which is, we excluded values that may be added by additional assumed the user only wanted to resume a task to the state at functions rather than essential advantages brought about by its last running.
But in fact, users occasionally need to roll a introducing the task concept into a browser.
The MB supports this feature; a user can roll back a task to any Task Concept previous state stored, by selecting it from a drop down list in The task concept in the MB only has four attributes, namely the context menu of the task tab .
It is worth mentioning here that none of these attributes, except name, have generally been incorporated in a browser in previous studies; MacKay and Watters  used end date, but without status and active time.
In the MB, the name of a task is either defined by the user or automatically generated by the MB by using the title of the first Web page  opened in the task.
The MB represents a task as a Task Tab in the Multitasking Bar, and its name and status are shown as label and status icons, respectively .
A large task often consists of a few smaller tasks, and sometimes the relationships between these child tasks can be complex.
There may be certain business rules in these relationships, or these child tasks may even comprise complicated business processes or workflows.
This complexity is beyond the scope of this study and we merely leave the management of the task structure to the user.
Sometimes tasks may be reused, especially the routine tasks recognized by Kellar et al.
Although the MB has no dedicated function to reuse a task and does not even distinguish tasks running once from tasks running many times, it implicitly supports this feature.
This means that a user can `reuse' a task by rolling it back to a preferred stored state.
There are several strategies for grouping Web pages to a related task in previous studies .
To make this as simple as possible, the MB follows and extends the strategy of Mackay and Watters , that is, first grouping any newly opened Web page into the current active task unless the user explicitly defines it as a new task, and then permitting the user to move any Web page to another task or even to drop it to the special "Non-Task" task.
Here the "Non-Task" task is a dummy task in the MB which represents any casual Web surfing without a specific goal.
Hence it collects Web pages that do not belong to any real task.
It is always shown at the end of the Multitasking Bar as a task tab with a grey background .
We recruited 48 participants .
They ranged in age from 19 to 43 years , and had a variety of occupations, including 25 students majoring in computer science, 3 students majoring in economics, 6 students majoring in psychology, 2 student majoring in management, 3 teachers, a librarian, 4 insurance salespersons, and 4 marketing specialists.
Participants were given vouchers for food or beverages from the cafeteria as a gratuity.
A typical scenario for using the MB follows.
In the beginning a user starts a task by optionally giving it a name and end date.
Any newly opened Web page is then collected unless the user moves it to another task or drops it to the "Non-Task".
Users can store the state of a task at any time.
When the browser is about to close, the MB automatically stores the states of all tasks active in the browser.
Hence afterwards the user can resume from a stored state.
Users can also easily switch between tasks running simultaneously in the browser, and can suspend, resume, or close any of them as desired.
The MB also highlights the status, end date, and accumulated active time of the tasks, making the user aware of her task schedule painlessly.
We used a between subjects design for our user study, with 16 participants each in one of 3 different groups.
Participants in Group 1  were controlled like ordinary Web users without explicit multitasking support, while participants in Group 2 , similar to users of previous approaches discussed in RELATED WORK, had MST support provided by the MB.
Finally, participants in Group 3  had full support for MT and MST provided by the MB.
We conducted the experiment in two separate sessions at our lab.
Sessions lasted 110 minutes each including an additional questionnaire, and were scheduled one week apart.
We created the same Web working environment for each participant in both sessions, including a computer with a 19' screen with the following software installed: Windows XP Professional, Firefox with MB, Microsoft Instant Messenger , and Windows Office 2003.
We instructed the participants that they could use any available tools to assist them in their tasks, including pen and paper .
On June 29, a week before the beginning of the first session, we held a 20 minute training session of the MB for the participants in G2 and G3 according to their different configurations  and asked them to practice using the MB during the following week.
The MB can collect user interactions with the browser and itself, including any opening, closing, leaving, or returning to a Web page, and creating, renaming, storing, and resuming a task, as well as moving and dropping a Web page from a task.
The MB also takes and stores screenshots when any new task is defined or any new tab is opened.
This data can be used to calculate the time a user has spent on a particular task, and to compare the different usage patterns of users.
After installation, the MB can be configured with or without MT and/or MST support.
When the MT functions are disabled, the plus button on the Multitasking Bar disappears and there is only one real task available in the browser.
When both MT and MST are disabled, the Multitasking Bar disappears and the MB acts only as a user browser interaction data collector.
Our study goal is to evaluate the impact of incorporating the task concept in a browser on a user's performance efficiency and experience when multitasking on the Web.
We conducted a two session experiment on July 6 and July 13, 2009.
Our experimental method was inspired by the method of Morris et al.
In the experiment we simulated a manager - secretary working scenario, in which participants acted as secretaries and were instructed by their managers, us the experimenters, to complete several tasks.
In the first session, all participants were required to complete 5 tasks 4 , and the manager  launched these tasks one by one at 10 minute intervals by sending MIM group messages and delivering the required documents to all participants.
All these tasks had been completed by the researchers in a pilot study to estimate the time needed for each task.
The results showed that about 142 minutes were required to complete all tasks, which means that the participants were not likely to finish all of these tasks in a single experiment session.
It is worth emphasizing here that although we asked participants to resume and complete these tasks in the second session, we did not inform them of this until the start of the second session.
For each task, we asked the participants each to submit a Microsoft Word document containing the results of their work.
They did this based on a semi-complete Word file issued by the experimenter at the beginning of the task, and were asked to fill in all blanks in the file, i.e., street name of a particular place, date of a specific event, etc., and to complete several unfinished paragraphs.
Task 1 was the same as task 1 in Morris et al.
The manager requested that the assistants complete the itinerary for his upcoming business trip to Prague no later than July 14 .
He told participants his itinerary requirements, such as the dates of travel, his desire to visit three famous historic sites and see three theatre productions, etc.
Task 2 was an easy job, and the same as task 2 in Morris et al.
Participants were required to find a restaurant for the manager in Chicago where he could take a client for lunch.
They were asked to finish this task immediately in no more than 10 minutes, and were asked to fill in the blanks of restaurant name, address, telephone, 5 recommended cuisines, reasons for recommendations, etc.
When the time was up, the experimenter instructed all unfinished participants to stop working on the task.
In task 3, we required participants to finish a semi-complete report on a 2008 summary of the environmental industry in the United States .
Participants were required to fill in the blanks of the Industry Gross Product, leading equipment manufacturers of advanced waste disposal, smog mitigation and water purification, etc., and to finish two paragraphs about technology and investment trends, with each paragraph having at least 500 words.
Task 4 was another long-term task whose deadline was July 11.
Participants were asked to complete a semi-complete speech script for the manager's speech at an environmental forum.
The report contained 20 blanks, such as the name of the chairman of the forum, city of the event, etc., and two uncompleted paragraphs about environmentalism and ecologicalism, both requiring more than 500 words.
Task 5 was also easy.
Participants were required to write a recommendation for a digital camera the manager wished to purchase that met certain resolution and zoom requirements.
At the end of the session, the experimenter instructed all participants to stop working, and then asked them to complete an online questionnaire soliciting demographic information, information about their browsing habits, and multitasking strategies employed by them, and feedback on the MB tool .
Specifically, they were required to state how many minutes they had spent on each task, and for the unfinished tasks how many minutes they would need to complete them.
All their paper notes were on the desk as they had left them.
However, we replaced the in-process result documents for their tasks with the unprocessed blank template files originally issued by the experimenter.
We informed the participants that they would continue in their role as secretary to the manager and that the computer was in the exact state they had left it the previous week, except that a computer virus had destroyed their work result files.
Then we instructed all participants to report on the progress on their tasks giving task name, end date, status, time they had spent, and time still needed to complete the task.
Each of them was asked to submit a report within 10 minutes.
It is worth mentioning here that we did not tell them how many tasks there were or what they were; instead, we told them that if they couldn't remember, they could ask the experimenter for help, but not the other participants.
Ten minutes later, we gave participants the correct information about their tasks' status according to the records from the first session and instructed them to carry on with the tasks.
At the end of the second session, the experimenter distributed another questionnaire similar to session 1, and specifically with respect to the question on how much time participants had spent on each task, including both completed and uncompleted tasks.
Data gathered during the study included notes and observations from four experimenters who observed each session, questionnaires completed after each session, the participants' task result documents from each of the two sessions, the transcripts of the instant messages, any other digital or paper notes made by participants, and the participants' Firefox profiles at the end of each session including history, bookmarks, and user browser interaction data collected by the MB.
Two participants  deviated from this one-week gap between sessions, returning after 8 and 10 days, respectively.
According to our survey, participants view 38 Web pages per day on average, and create a bookmark every two days.
Moreover, the decrease in mean task time consumed brought about by MT is 11.87 minutes, which is close to the decrease of 15.63 minutes brought about by MST.
Meanwhile, MB users performed fewer other browsing actions.
Table 1 shows that participants in G2 and G3 used search engines significantly fewer times and copied and pasted fewer times than those in G1.
This fact plus the fact mentioned previously that MB users accessed fewer web pages indicate that the MB helped its users find the required Web resources quickly and accurately.
Equally important, the MB was also helpful in "Keeping found things found" , since the participants in G2 and G3 also performed fewer revisitation actions .
Once again, participants with MT support in G3 performed better.
Finally, the MB improved the user's performance on resuming tasks across Web sessions.
In session 2 of our experiment, all participants in G2 and G3 successfully resumed all their tasks left unfinished in session 1.
But only 4 participants  in G1 could achieve this without experimenter's help.
Other participants in G1 failed to resume their tasks for various reasons.
6 of them  could not remember how many tasks there were in the experiment, while 4  forgot at least one of their unfinished tasks.
It is astonishing to note that 2 in G1  even forget that they had finished Task 2 in the first session and tried to do it again in session 2.
The MB improved participants' multitasking performance.
Except for one user in G2 who failed to finish task 4, all other MB users  accomplished all their tasks in the experiment.
Yet, among the participants not using the MB, 3 users  had 4 tasks unfinished at the end of session 2.
There are differences between the groups' mean times for accomplishing all five tasks in our experiment.
Likert scale responses are on a scale of 1 to 5, where 1 = strongly disagree and 5 = strongly agree.
8 According to the average time spent by experimenters in the pilot study on every section  of each result document, we estimated a proportionate completion time for the unfinished tasks of participants based on the result document they submitted at the end of the experiment and the time they spent on it.
Question Easy to work on multiple tasks simultaneously.
Easy to remember tasks unfinished in session 1.2 Easy to re-find information used in session 1.
2 Easy to remember the end date and progress of each of unfinished tasks.
2 Question MB is useful, and I want to install it in my browser.
Easy to learn how to use MB.
Easy to remember usage of MB.
MB was confusing to me.
MB helped me work on multiple tasks simultaneously.
Easy to create a task.
Difficult to remember how to create a new task.
MB took up too much space in browser.
Multiple task tab feature helpful.
MB helped me remember what I did last week.2 MB was useful for my tasks.
1 MB was useful for my tasks.2 Schedule management helpful.1 Schedule management helpful.
The usability rating for schedule management of the MB increased dramatically after session 2.
A conversation between a participant in G2 and an experimenter during session 2 explains this change.
She said, "I admit that I downgraded the schedule management feature of MB in Session 1.
You know, although technically saying the end date and active time is critical when having several tasks, nobody really realizes it and bothers themselves to track these data until these data are required."
The MB helped participants track the time consumed on each task.
When we asked participants to report their task status at the beginning of session 2, almost all participants in G2  and G3  accurately reported the name, current status , and end date required by manager, but none of participants in G1 could do this.
Unlike what Morris et al.
The reason for this difference might be due to the fact that the SearchBar was shown in a left pane of the browser which consumes horizontal screen real estate, while the MB was shown in a toolbar of the browser which consumes more precious vertical screen real estate.
Table 3 shows the participants' Likert-scale rating for the usability of the MB and their user experience when multitasking on the Web after both the first and second sessions.
A participant in G3 said in her questionnaire that the MB released her from the cognitive burden of remembering the status and resources of tasks both within and across Web sessions and made working on multiple tasks pleasant and efficient.
An interesting observation is that, although participants using the MB rated it as only moderately useful during the first session, when they were able to use the MB to resume their tasks, the usability rating increased greatly for the second session.
Likewise, MB users with MT support agreed significantly more with the statement that the MB is helpful when working on multiple tasks simultaneously.
The results presented in the previous section confirm that the participants found the MB is easy to use.
It introduces the task concept into a browser thereby improving a user's experience with multitasking.
Users thought that the MB was easy to learn and to use, and they also thought that it decreased their cognitive burden and improved their performance when multitasking on the Web.
Data collected in the experiment support this view.
MB users opened fewer Web pages, performed fewer navigation actions, and made little use of traditional history tools, yet re-found required Web pages more easily.
At the same time, they used less time to accomplish tasks, and were better aware of and had better control over their tasks.
Moreover, they were able to switch between tasks and resume interrupted or suspended tasks more quickly.
In addition, they could remember the deadline and current status of their tasks and were aware of the time consumed on these tasks with little effort.
We also observed that the user performance improvement brought by MT is as much as by MST.
Users with MT support always showed better performance and experience in almost all kinds of data we collected, especially when multiple tasks were running simultaneously.
It might be a little surprising that in our experiment the overall improvement in task time consumed brought about by MT is close to that brought about by MST.
We could not compare MB against other prototypes in previous studies owing to their unavailability, but according to our comparison, users with support for both MT and MST showed significantly better performance and experience in tasking switching, tab using, navigating, and revisiting than users with support for only MST.
One of the main unexplored questions here is that of users' browsing pattern shifts when introducing the task concept into a browser.
As observed in this experiment, the introduction greatly impacted users' usage of browsers.
It is obvious that users will gradually cope with this impact and alter their browsing behavior in many aspects, such as their refinding and revisitation strategy, searching strategy, and even collaborative strategy.
These pattern shifts are more likely to occur in long-term, real-world use than in the lab.
Therefore, a long-term study is required to ascertain how users will eventually adapt to the task concept in browsers through exploring and trying out the new features, and finally integrating them with their own browser habits.
We also acknowledge the limitations of this study.
Firstly, we used a selected sample population consisting mainly of university students with specific characteristics .
This means that we cannot expect that our results will generalize to a more general population.
Instead, the results of this study have provided insight into how the introduction of the task concept into browsers impacts skilled Firefox users' performance and experience when multitasking on the Web.
Although it is very likely that these results also apply to skilled users of other browsers, further studies are needed.
Secondly, although we decided to introduce the task concept into a browser with 4 attributes based on our survey results, there are possibly other attributes that can bring great benefit to users, the importance of which users cannot appreciate before actually experiencing them.
We intend pursuing a study in this direction to compare different impact factors for all attributes of a task.
Finally, although we have tried our best to simulate an ordinary multitasking scenario in our experiment, the "Hawthorne Effect"  may still exist, and a long-term study is needed to verify our results.
We have presented results from a pilot survey of users' expectations of tasks in browsers and their task-related browsing habits.
These show that the four attributes of a task, namely name, status, end date, and active time, are most significant to users when coping with tasks in a browser.
We have presented the Multitasking Bar, a novel tool to help users multitask on the Web.
With its help, users can define task and manage related Web pages, and also switch between, suspend and resume task as required.
It also helps users in schedule management and releases their cognitive burden by informing them of deadlines and time consumed on task when needed.
We have presented a user study on the impact of introducing the task concept into a browser on users' performance and experience when multitasking on the Web.
This evaluation is based on the MB.
We found that with the MB's help, the performance and experience of users improved dramatically.
The results provide answers to the two research questions posed in the introduction.
Introducing the task concept into a browser definitely improves a user's performance and experience when multitasking on the Web.
Therefore, it is worthwhile considering when designing and implementing browsers and tools.
Future work includes extending this study to ascertain the impact of introducing tasks into browsers for users who do not use tabs, which was neglected in this work, and a broader deployment of the MB to explore its impact over longer periods of time and within a larger user population.
Future development of the MB will focus on a better visualization method, a more sophisticated task grouping algorithm, and tighter and more seamless integration with history and bookmark utilities of the browser.
We have clarified two common patterns in multitasking on the Web, namely Multiple Tasks and Multiple Session Task.
We found that unlike MST, MT has often been ignored in previous studies and implementations.
Nevertheless we found that supporting MT in a browser is as effective as supporting MST for improving a user's performance and experience when multitasking on the Web.
Real-world multitasking from a cognitive neuroscience perspective.
Cognitive control of multistep routines: Information processing and conscious intentions.
Control of cognitive processes: Attention and performance XVIII, , 443.
Cockburn A. and Mckenzie B.
What do web users do?
An empirical analysis of web use.
Czerwinski, M., Horvitz, E., and Wilhite, S. A diary study of task switching and interruptions.
Proceedings of the SIGCHI conference on Human factors in computing systems, ACM , 175-182.
Proceedings of the SIGCHI conference on Human factors in computing systems, ACM , 113-120.
GVU's 10th WWW user survey.
Proceedings of the SIGCHI conference on Human factors in computing systems, ACM , 677-686.
Jhaveri, N. and Raiha, K. The advantages of a cross-session web workspace.
Jones, W., Bruce, H., and Dumais, S. Keeping found things found on the web.
Proceedings of the tenth international conference on Information and knowledge management, ACM , 119-126.
Interdependence of non-overlapping cortical systems in dual cognitive task.
Kellar, M., Watters, C., and Shepherd, M. A field study characterizing Web-based information-seeking tasks.
MacKay, B. and Carolyn Watters.
Understanding and supporting multi-session web tasks.
Proceedings of the American Society for Information Science and Technology 45, 1 , 1-13.
MacKay, B. and Watters, C. Exploring multi-session web tasks.
Proceeding of the twenty-sixth annual SIGCHI conference on Human factors in computing systems, ACM , 1187-1196.
MacKay, B. and Watters, C. Building support for multi-session tasks.
Proceedings of the 27th international conference extended abstracts on Human factors in computing systems, ACM , 4273-4278.
Mayer, M. Web history tools and revisitation support: a survey of existing approaches and directions.
Mintzberg, H. The nature of managerial work.
Mintzberg, H. Structured observation as a method to study managerial work.
Psychological issues in support of multiple activities.
Morris, D., Morris, M.R., and Venolia, G. SearchBar: a search-centric web history for task resumption and information re-finding.
Proceeding of the twenty-sixth annual SIGCHI conference on Human factors in computing systems, ACM , 1207-1216.
Reiss, F. The hawthorne effect in a pilot program.
Executive control of cognitive processes in task switching.
How knowledge workers use the web.
Proceedings of the SIGCHI conference on Human factors in computing systems: Changing our world, changing ourselves, ACM , 227-234.
Spink, A., Jansen, B.J., Wolfram, D., and Saracevic, T. From e-sex to e-commerce: Web search changes.
Spink, A., Park, M., Jansen, B.J., and Pedersen, J. Multitasking during Web search sessions.
University of Southern California  Annenberg School, C.F.T.D.F.
Center for the Digital Future: 2008 Digital Future Report.
