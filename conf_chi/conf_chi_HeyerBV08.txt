The primary contribution of this paper is discussion of the deployment and actual, long-term usage of a mobile social research system with a large number of participants.
In deploying a mobile social system for research the principal issues relate to accessibility, usability and utility: 1.
Accessibility - the system must be accessible using a wide range of devices and media in order to enable as many people as possible to participate.
Usability - the system interface must be easy to use so that people will use it frequently, for everyday socializing.
Utility - the system must facilitate socializing in a way that is more useful than existing media, so that it is worth using.
In this paper, we introduce a prototype system designed to support mobile group socializing that has been appropriated for everyday use by 150 users over 18 months.
The system supports cross-channel communication, allowing users to participate in group conversations using text messaging, instant messaging, email and the web.
It does this with the "console," a uniform text-based syntax that enables the prototype to be used over a variety of mediums.
We found that participants used the system mostly for adhoc coordination rather than chat, with pervasive, crosschannel group communication supporting an informal "half-invite" style of invitation.
We examine why coordination dominates over chat, suggesting that crosschannel mobile group messaging serves a distinct role, different to traditional text messaging, instant messaging and email.
Furthermore, we found differences in the content and usage habits across channels, for example messages sent from a computer were more likely to refer to time and location than those sent using a phone.
We also discuss the usage of the prototype and compare it to other work.
This paper describes the iterative user centred design process, used to gradually deploy and grow Rhub for use by 150 users over 18 months.
The paper focuses on three primary features of Rhub: Group messaging and its use; Use of presence awareness features such as locations; Design and usability of a text command syntax for group messaging across multiple media and devices; Trade-offs made in order to maximize the triad of utility, accessibility and usability are discussed.
Methods used to gather and evaluate data about use are also discussed.
Mobile Social Software  identifies systems that can be used whilst mobile and aim to either directly support socializing or indirectly take advantage of social information or social networks.
While commercial mobile social systems measure their users by the thousands or millions, their systems are relatively closed to researchers.
Early MoSoSo work utilized wearable computers as they offered higher levels of sophistication than the days' mobile phones , however most recent work uses client software installed on a mobile or that can be used via text messaging.
There are difficulties with both approaches: client software requires maintenance, and there are a multitude of platforms to support, while text message-based interfaces can be difficult to use because of the lack of transparency and visual cues .
Whilst MoSoSo is a broad field, this discussion focuses primarily on systems that support social communication.
Some systems use context-derived data in order to determine when a message should appear, for example showing a message when someone arrives home , or sending a message to everyone at particular location, in effect determining a dynamic messaging group, as in Dodgeball  and Playtxt .
While the aforementioned services use predefined named locations, Loopt  references location using GPS-supplied geographic coordinates.
Coordinates are accurate, however they lack semantic value for a person unless they are displayed on a map.
Reno  attempts to link meaningful, user-defined location names automatically to current location using cellular tower-derived position information.
It was observed that Reno users mostly relied on pre-populated locations set by the researchers rather than creating their own.
Misunderstanding can result from location-based systems as they only capture a narrow aspect of context and automatic disclosure of location can be both beneficial or detrimental, depending on the broader context .
Rhub is similar to "Swarm"  in this respect, however Swarm is only used for group messaging, and only supports usage via text messaging.
Swarm was deployed for a long period with a small number of users whilst Slam was deployed for a short period with a small number of users.
Reported usage of group messaging systems varies.
With Slam, 48% of group communication was chat, 18% coordination, quite different from the results of Swarm, which was mostly used by one large social group  in which 68% of messages were coordination, 28% chat.
With reported figures ranging from 18% to 68% of messages being for coordination, it is worthwhile to investigate the area further.
Presence sharing is a common use of text messaging , and there are services which attempt to make this type of context information easily disseminated, such as Twitter  and Jaiku .
Presence notifications are textual and free form, for example using the message "I'm at working having a dull day" rather than setting a location to a specific, pre-determined place or coordinate.
Notifications can be posted to and from a variety of technologies such as the web, SMS and instant messaging.
Free-form presence messages allow the sender to imbue messages with their own sense of meaning at the expense of opaqueness from the systems' point of view - it is not straightforward to "place" someone at a geographical coordinate, for example.
Our original goal was to explore how small social groups communicate, coordinate and share.
We started with a basic system that supported messaging, discussions, user profiles and group management.
Once the system started being used, observations and feedback from participants were reflected upon and used to inform further development or redesign in an ongoing, rapid, iterative process.
Rather than only refining what was already present in the design, we also experimented and provoked response by adding new features to see how users would make use of them.
In the first three months of deployment, micro-iterations happened frequently during the day, with this process slowing as the design matured.
In order to maximize the pool of potential participants, we built our prototype to use existing, mundane technologies such as the web, instant messaging, SMS and email.
These technologies are already appropriated into people's everyday lives and are readily accessible for use.
Leveraging existing technologies also allowed us to run the study for a relatively long period as participants used their own software and devices.
Importantly, this also meant that the study could be run "in the wild" outside of the confines of a laboratory study with people using it for everyday purposes as need dictated.
To ground the later results and discussion, we will introduce the three pertinent features of Rhub: console, messaging and locations, however it also supports other common social software features such as sharing of photos, tagging, and aggregation of RSS-based feeds.
While Rhub is not overly technologically complex, it is different from existing academic work primarily in that was designed for cross-media communication and has a flexible location and presence system.
It also makes use of many common social software idioms and features that allow participants to have a richer experience, and thus encourage further participation in the study.
Text messaging, or Short Messaging Service , is a popular mobile communication system, used mostly for person-to-person messaging.
Popular with teenagers , text messaging is seen as a low-priority channel of communication because of its cheapness and asynchronous, background nature .
Ling's study of 882 messages sent by Norwegian teenagers  reports that only 33% of messages are about coordination, but when related categories are included  the total is 64%.
On the other hand, Grinter and Eldridge's  study of 185 messages from British teenagers show that 55% of messages were coordination-related.
To allow Rhub to be used across a variety of mediums, or channels, we developed a text command syntax, similar to a command prompt, which can be used in conjunction with the primary rich web interface.
We call this syntax the "console", and it is used by sending text in the appropriate form using a supported medium.
The same commands can be sent using the web, SMS, IM  or email although system responses may vary depending on inherent limitations of each medium.
For example, rather than requiring our participants to carry around a new device, we leverage the fact that they usually already carry around a mobile phone.
There are also many difficulties with using such an interface, primarily that there are no visible cues for the interface for the user to determine the state of the system, its available commands or options.
Although this form of interaction may seem cryptic, once mastered, the user can participate fully in messaging across media.
This approach emphasizes robustness of basic function over initial ease of use and might seem to be antithetical to a user-centered approach.
That said, we aspired to develop the simplest text based system possible, through iterative user centered design, in order to support intuitive use and to minimize the need for user workarounds.
We did not anticipate all of Rhub's functionality to be used via the console, only functions most likely to be used when the main web interface was unavailable, such as when mobile.
After identifying the main functionality to expose, we attempted to group the features and assign commands in a way that was discoverable, memorable and usable .
There are three main forms of messaging within Rhub, person-to-person  instant messaging, group instant messaging and threaded discussions.
Messages are crossmedia in that they can be sent and received using the web, email, SMS, or IM  seamlessly.
Messages are also persistent, in that they are available on the web for later perusal, regardless of the originating source.
For example, in the one group conversation, Thom might use IM because he is in front of his computer, Phil might participate via SMS because he is mobile and Jonny might correspond via the web.
Rhub ensures that every message sent to an entity, regardless of source, is distributed to all interested parties, regardless of destination.
Thus, the conversation spans technologies as each person sends messages using the medium that best suits them, and receives messages using an appropriate medium.
When sending a message using Rhub's website users can choose which channels to use for sending a message.
By default, sending a message using the console will attempt all mediums.
To decide which medium to use when contacting someone, Rhub uses a series of heuristics based on which mediums are available for a person, which mediums the message has been permitted to use, and which mediums the user has allowed for a particular message type.
For example, if you have permitted Rhub to send you group messages via IM, SMS and email, and your IM status is "online", you will get a group message that way, but if you walked away from your computer and your IM status changes to "away", you will receive it via SMS.
If the sender thought the message was not very important, they might choose to have the message delivered via online means only, and in the previous example, the message might be sent via email instead of SMS.
To illustrate further, Lisa might send a message to the group "tennis" with this IM, using the console syntax: >&tennis: Anyone want to play tennis this afternoon?
Members of the tennis group might receive the following message via SMS : Lisa: Anyone want to play tennis this afternoon?
While we did seed the network with our own friends, because of friends inviting their friends and so on, the system had many users not known to us personally.
The busiest Rhub group, in terms of messaging and members who actively used the system was "Alpha" , created for a university sporting club by one of the authors, who was also an active member of club.
Rhub was also introduced to other groups; however, this large, dynamic, highly social group was the most prolific.
Membership size of Alpha varied during the course of the study, the majority of the club's members are foreign exchange students and typically return home at the end of the each semester.
Content of 500 randomly selected messages from Alpha were manually analyzed by one author who was a member of Alpha, using the ontology from Farnham and Keyani  as the basis of our analysis.
Messages were labeled with one or more categories, for example, a single message proposing a dinner plan might be labeled with coordinationinvitation, reference-location, reference-time.
Although analysis would benefit from being double-blind checked by another researcher, we had to abide by the privacy agreement that only the first author would analyze messages.
It was decided to cross-check data by triangulating with other methods: interview, workshop and quizzes.
Groups within Rhub are designed to be lightweight: quick to create and easy to manage.
Groups have a variety of settings to set the visibility and openness of the group as well as set how messages can be sent to the group and by whom.
In addition to instant messages and discussions, groups can have associated locations and sets of things .
By default, groups are publicly viewable and joinable, and all group members can send messages to it using any available medium.
Locations in Rhub are mostly used for presence features, such as notifying friends when they are close to each other, or displaying users on a map.
They can also be used as context for discussions, for example talking about upcoming events at a music venue, and instant messaging, for example sending an instant message to everyone who has set their location to a particular place.
Rhub uses flexible referencing of locations that allows users to refer to precise "well-known" locations by name, which have additional encoded data such as geographical coordinates, or set arbitrary free-form locations, which may mean something to other users, but not to Rhub itself.
Unlike other work, Rhub also allows users to add and edit existing locations  and set personal aliases.
Thus, instead of having to SMS "@the royal exchange hotel" to set their location, it is possible to send "@pub".
Rhub resolve locations by looking for an exact matching title and if that fails, it looks for an alias the user has defined, or the user's friends, or finally, any matching alias.
Aliases allow users to refer to locations in a natural way, and because they can be inherited from others, they can be used without a "setup cost" such as in Reno .
We used a multi-method approach to understand system usage and explore participants' perceptions of the system, which is outlined in this section.
Quantitative data was collected in the form of extensive automatic logging of usage; qualitative data was gathered with semi-structured contextual interviews, Rhub-delivered quizzes, informal conversation with participants and a workshop.
The quiz we ran using Rhub has two purposes.
One, to gain an understanding of our users' contexts and technology usage and two, to investigate the utility and effects of using a system like Rhub for research.
We use the term "quiz" rather than "questionnaire" to convey its informal, lightweight nature.
Questions were delivered using Rhub to members of two groups , and thus could have been received by or replied to using SMS, IM, email or the web.
In the spirit of cultural probes , the questions were designed to gain an understanding of context and practice rather than glean quantitative data.
There were 16 questions in total, organized into six themes: location, activity, presence, technology availability, technology use and technology preference.
For example, one question from the activity theme was: "what's your position: walking, reclining, jumping, sitting etc..?"
The quiz took place over 80 days, and we received 102 responses from 590 sent questions leading to a response rate of 17%.
Questions were answered quickly, 37% within two minutes and 69% within 10 minutes, suggesting that answers are about the current context rather than a recollection of a past.
We found this a useful method for mobile contextual inquiry and framing of quantitative results.
In-depth interviews were conducted with fifteen participants, selected based on availability, all of whom were known to the researchers.
We conducted the interviews at a place of convenience for the participants , and used printed transcripts of Rhub activity and the user's own phones and devices as scaffolding for the discussion.
Interviews took approximately an hour with audio of the interviews and notes recorded on a tablet computer and later transcribed.
Alpha, over the course of the study, averaged 18 messages per week with an average of 30 members.
The mean weekly message rate for all groups was 1 .
We noticed that people's usage of Rhub reflected the channel they received messages on.
A group  of academic colleagues who were mostly all receiving messages via IM sent frequent short messages in quick succession while Alpha tended to have a slower pace and denser messages.
Iota's high-throughput usage managed to crash our messaging system, while Alpha's low-throughput messages did not, even though Alpha sent a much larger quantity of messages over a longer period of time.
We also ran a workshop, inviting members from the Alpha group, and four attended.
The workshop ran for two hours, and a series of design activities were conducted, aiming to explore users' understanding and use of Rhub.
We used a combination of exercises which included sketching, a variation of the video card game , annotation of past messages, and reflective use.
Extended discussion of the quiz and workshop methods and results are beyond the scope of this paper as we have focused on results from interviews and quantitative data here.
In this paper, we briefly outline the results of our preliminary data analysis.
Generally, Rhub's group messaging feature was the most used, typically with participants organizing last minute, ad-hoc events.
People also used it to share amongst the group and wider Rhub community, such as adding favorite shops using the locations feature, uploading photos of events and establishing social ties using the contacts system.
Social bonding  was less prevalent  than coordination messages .
Coordination messages were further broken down into subcategories.
Frequently, an invitation or idea is sent: "whos getting funky 2nite?
During the course of this negotiation, some will indicate whether they will come ; query aspects of the plan ; direct others on a course of action "RSVP me before Wednesday!"
While the event takes place, members might send messages to report on how it is going , often with an aim to entice more people to come: "Cookamungas anyone?
Messages might also promote or hype an upcoming event , for example this response to a wrestling themed party invite: "Hulk Hogan is back in fashion baby."
Messages were tagged as a status reference if the sender included information about their current state or context, for example "Short pub crawl?
Exam tmro but i'm sooo bored".
Status was often included as an `excuse' when declining invitations, or to otherwise fill in context for others.
Not surprisingly, activity was often referenced in coordination messages, for example suggesting a potential event: "I'll be well keen in three hours for drinking and or football".
We found that Rhub's messaging capability was mostly used for coordination , rather than social chat .
This was also supported by interviews we conducted with participants, who saw Rhub as being primarily a tool for coordination, with some actually suggesting that Rhub be explicitly not used for chat.
This result is very similar to the Swarm  group text messaging system  suggesting that the finding might be generalizable across individual social groups.
The high level of coordination within the larger groups in both Rhub and Swarm contrast to the higher level of chat which took place in Slam , which had smaller groups.
Coordination between group members happened quickly over a burst of messages, a form of micro-coordination .
Participants were active in shaping messaging norms using both talk and action .
Users who sent too many message to a group were publicly reprimanded by others, both in person and also using Rhub itself, such as this message sent by Michael to a group which he though Sam was sending too many messages to: "Sam...your Rhub rights have been temporarily revoked...feel free to start again in 2 months time..." Existing handsets are not usually designed for composing, managing or displaying group text messages, and as such usability suffers.
Additionally, a phone's "new message arrived" notification does not distinguish between group or private text messages for systems such as Rhub, which makes it difficult for users to determine the urgency for reading a message.
These two design factors--coupled with the fact that group text messaging increases the quantity of received messages--results in a higher level of disturbance than direct messaging.
Participants reported the extra quantity of group text messages they received was only annoying if the messages were of no value.
Coordination messages were acceptable because usually the event was something of interest.
Even if they were not interested, they realized that next time they might be, therefore the annoyance now is tolerable, considering potentially useful messages later.
As one interviewee stated, "that's the price you pay for group messaging".
Chat messages on the other hand were seen as extraneous and better sent using less intrusive systems such as IM or a web-based forum.
Interview participants likened Rhub to be something inbetween email and text messaging.
Email was seen as a cheap, reliable way of distributing a message to a group of people, but interviewees did not consider it useful for shortterm organization because many of their friends did not check email regularly.
Text messaging on the other hand was thought to be quick and instant, but unwieldy for group messages.
For our interviewees, Rhub was seen as a more robust way of getting a message to a group, easier than text messaging and more direct than email.
Participants discounted instant messaging for group coordination because of the difficulties in synchronizing availability.
Most people valued Rhub for keeping them "in the loop" of their group's social events and happenings.
When they themselves had something to say or event to organize, they found Rhub highly useful for "getting the word out".
We observed a style of off-the-cuff, ad-hoc form of coordination that group mobile messaging supports particularly well.
Unlike traditional invitations that require response, "half-invites" tell a group of people that an event is taking place and others are welcome to join, or as one interviewee stated, "we're doing this, come show up".
Halfinvites often invite implicitly, for example this message sent on a Sunday afternoon: "Sunday night at the pub: because you know you shouldn't".
Within the Alpha group, we often observed small groups of two or three people deciding on an event amongst themselves - such as going to a particular pub - with one of the organizers sending a group Rhub message to entice others to attend.
For these types of informal events, responses are not required, and thus invitations can be easily ignored if they are of no interest.
For small groups that would not mind additional numbers, sending a mass half-invite is quick to do, and may yield some extra company.
Half-invites suggest an informal, inclusive style of events where attendance is fluid and invitees may not be well known.
Rhub is particularly useful for this, as contact details do not need to be known or collated by the inviter - they can just send the invite to the group, and trust Rhub to route the message appropriately.
Whilst it may seem odd that people would want to invite others they do not have contact information for, we found it was a common case with Alpha group members, as one interviewee said of the scenario: "I might not know your number but you're invited".
Participants were also aware of the less personal nature of group invitations.
They felt that mass invitations were less personal than individual invitations .
Natural social tensions arise and there might be events that you do not want everyone invited to, or you may not want particular people to be privy to the group's messages.
We found that messaging dynamic subsets of groups was not a common enough scenario to support within Rhub.
Participants either manually messaged a set of users, or for less transient sets, established a new group.
For example, five offshoot groups were established for sub-interests within the Alpha group membership.
Rhub offers privacy and moderation controls, it is possible to have secret groups which are invisible to non-members, or public groups that require invitation to join, for example.
While it did not happen during our study, we would expect that forcibly removing someone from a Rhub group would result in significant social ramifications.
Two users requested to be removed from Rhub entirely after their relationship with their respective Rhub-using partners ceased.
First, we examine how cross-channel system interaction was used, that is, user input to the system and secondly we discuss the implications of cross-channel communication as an output of the system.
We processed group instant messages using a basic algorithm, grouping messages into conversations, based primarily on the temporal difference between subsequent messages.
Applying this algorithm on 1,977 messages  produced 496 conversations.
We found that conversations tended to happen within a single channel  or a pair of channels , with only 7% taking place over three channels and no conversations taking place over all four supported channels.
We believe this to be a reflection on the ubiquity of mobile phone access .
After receiving a Rhub message on their phone, users found little reason to go to a computer to compose a reply message: 64% of replies were sent using a phone, while only 27% of replies were sent using the web yet the percentage of initiating messages for both mediums is similar .
To understand differences between fixed and mobile usage of group messaging, we analyzed message content with regard to source channel .
Instant message, email and web messages were grouped as "computer"  and SMS messages were grouped as "phone" .
We generalize that messages sent from a computer are likely from a fixed location rather than highly mobile.
Overall, there is little difference in the percentage of messages that contain references or relate to coordination or social activity.
Mobile-sourced messages however contain less reference to time and activity, perhaps as they are "incontext", in the midst of activity, whilst fixed-location usage relates more to future activity where time and location must be defined.
Invitations were more likely to be sent using a computer, echoing data showing initial messages were more often sent using the web .
A slightly higher percentage of coordination confirmation and report messages were sent from a mobile.
Message content across phone  and computer  sources.
Percentages show the number of messages categorized out of the total number of analyzed messages for that source, such as 24% of analyzed messages from a phone contained a reference to location.
In co-opting existing mediums for an alternative purpose, such as using SMS for system interaction when it is normally used for human to human conversation, we inherit usage norms from the medium as noted in .
Originally, the console's parser was strict: to send a message to a group using an SMS, the user had to use a precise syntax of >&: , such as >&tennis: Game this afternoon.
This was to ensure the correctness of the parser and to avoid missent messages.
Even though all messages sent by Rhub include a postfix hint message "To reply send >&tennis: ", we found that many users tended to instinctively reply as they would to a person, without any special syntax.
As a result, we successively made the parser less strict, for example dropping the requirement for the ampersand to denote groups and the colon to separate group name from message.
Input that cannot be parsed is treated as a message destined for the entity the user last got a message from, within a three-hour period.
When initiating a conversation using Rhub, some interviewees reported they would turn on their computer especially to compose a new message - such as to invite people to a party - rather than use their at-hand mobile phone.
Interviewees preferred the visual web interface to the console syntax because it was easier to use, offered more control and they felt less likely to make an error.
New users found starting a new Rhub conversation using the console syntax difficult.
Each attempt at sending a message using SMS has a financial cost and there is the possibility that an erroneous message might humiliate the sender if it was accidently broadcast to the wrong group, for example.
Several participants reported keeping old Rhub messages  as templates so that they can easily send a new message when they need to.
Thus, using the web was seen as a "safer" option, which is reflected in the proportionally high level of usage for initiating conversations .
To assist mobile users who cannot access the web-based help system, we produced a three-sided card  with a list of commonly used commands with examples, which can be slipped into a wallet or purse.
Cards were distributed by the author and occasionally through other Rhub members who requested batches of cards to give to people they invited.
It was also available on the web to download and print.
We observed people using the cards on a number of occasions as a quick reference for infrequently used commands.
We also observed group members educating each other about how to use the console.
A previously sent message might be called up on a phone and shown to someone as an example of how to send a message, or some "early adopter" users eagerly demonstrated more advanced features to others.
Some users reported keeping previous Rhub commands or messages they had sent on their phone as templates for when they needed them again.
Using a text-based syntax allows Rhub to be easily made accessible with alternative systems.
While there are many usability disadvantages with an opaque command-based system, we found that our syntax  could be used with minimal errors by most users.
The average error rate for users for their first 25 weeks of usage is 21%.
Average error rates per user did not depreciably drop over time.
We reason this is because most users only used the console for messaging, and because other commands were so infrequently used, difficulty was encountered when they were needed again.
We noticed differences in error rates between channels.
SMS, which incurs a cost to send a message, places an economic pressure on the person to produce correct syntax and have their command performed.
Resultantly, 65% of usage attempts were abandoned after one erroneous command.
With other channels, users have the opportunity to easily retry commands, leading to a much lower abandonment rate .
To help the user repair from errors, we try to provide contextual error responses, such as providing a list of group-related commands if it looks like they are trying to manipulate a group, or providing example syntax if they are missing a required part of a command.
For example, if the user issues ">&mygroup add", the system would reply with a response indicating they should include who to add to the group, and to try ">&mygroup add bob jane mary".
After receiving an error response, the user could alter their command and resend it, which often leads to success, for example, 71% of erroneous IM sessions eventually succeed, while only 36% of erroneous SMS sessions eventually succeed as they are often prematurely abandoned.
Participants in the largest group spoke of the volume of messages they were receiving , as active periods sometimes produced over 20 messages per day.
The average interviewee reported receiving 52 text messages per month prior to Rhub , so there is a considerably larger quantity of messages that have to be managed by the person.
As one participant said, " phone holds 150 messages - it's always getting full after Rhub".
Two interviewees described being woken by Rhub messages during their sleep, with one now putting his phone on `silent' overnight while it charges at his bedside.
Participants who received few text messages before joining Rhub formed new associations with their text message tone, saying: "when I hear my phone beep, I know it's Rhub".
When the group was out socially, there would be a cacophony when another member not present would send the group a message, as everyone's mobile beeped in series.
We did experiment with this, whereby messages could be marked by including a tag within curly braces, such as: "Go the blues!
Users could then set per-group filters to determine which message would be forwarded to them .
This system was not used to any appreciable degree.
Because of the dual requirement of senders having to tag messages and receivers having to define filters, it ultimately was not worth their bother.
We later modified this system so instead of requiring tags to be within braces, filters could be set based on words appearing in the message, and a few people used this to filter messages from group Alpha.
We also added other features to help users cope with incoming messages, such as the ability to set to a `silence' which disables all Rhub notifications for a specified number of hours or days.
As designers, we were aware of certain features that can be provided if a culture of presence-information setting developed amongst users.
For example, users can be notified when their friends are nearby, or the value of a location could be gauged by how many friends frequented it.
We have reservations with automatic detection and disclosure of location and status.
We believe there is more meaning to being "at" a location than being physically located there.
For example, waiting for a bus in front of a pub at 11am does not necessarily infer a drinking problem; merely that it is a handy bus stop.
There is no way to reliably and accurately automatically capture and determine this notion of being "at" a location.
As such, we decided on manual disclosure of presence, which permits greater user control at the expense of greater effort.
For referring to a location that exists in the database, people can use its canonical name or alias; for locations that don't exist, freeform text can be used.
Most users  set locations that were already defined , 17% used arbitrary text, and 13% used the in-built "home" alias for their "home base" as set in their profile.
Presence was mostly set to people's work location and popular nightspots.
The presence feature underwent significant design evolution as we attempted to increase its usage among participants, and thus increase the flow-on benefits of additional data available to the system.
During interviews, participants agreed on the value of presence information to others and several of their suggestions, such as a prominent prompt for presence information when logging in, were implemented.
Participants however indicated that there was little personal reward for the effort to set presence and as there were few friends using the feature, the group usage rewards did not eventuate either.
To counter this, we progressively increased the visibility of presence information, and the feature generally.
We also introduced a feature that provided information on public transport.
After setting a location, for example by sending "@work", the user could ask Rhub how to get to another location using a particular form of transport, or whichever is quickest, for example "!bus home" or "!transport gym".
Rhub would reply with information on route numbers and times for the first three available departures in ten minutes' time.
Users liked the transport feature and as a result, set their presence more often.
However rather than setting their presence "properly" when they first arrived at a location, users were setting their location as they were departing the location, just to use the transport feature.
To further increase the visibility of presence setting, we introduced notifications for when a friend sets their presence.
Generated notifications such as "John is @ Tennis Club," are sent via SMS and IM to nearby friends or friends who've recently been to that location, and IM notifications are sent to remaining friends.
Results of enabling notifications are preliminary; however, we observed a doubling of usage that has been sustained for three months so far.
By increasing the visibility of the presence feature using an iterative, user-centered design process we slowly evolved it to be more useful to the end-user.
In a smaller scale study, we might have asked participants to set their presence regularly; however, this was not possible in the context of our study, and as a result, we needed to appeal to users' self-interest.
Groups of friends setting presence information might enable interesting features, however people naturally want to be able to see some selfish benefit before investing effort for a possible group benefit.
In our discussion of a pervasive, multi-channel mobile social software system, we outlined observations that can inform the design of similar systems.
Significantly, our results represent a large number of users over a long period of time, data which is lacking from most academic studies.
By observing the system over a period of 18 months we saw how use patterns developed, repeated and diminished, and how the interface could be adapted and new features introduced through an iterative development method.
Upon reflection, we observe that the shift to facilitating group messaging as well as socialization across media engender specific kinds of use, even new kinds of use,
For example, our findings confirm other work showing that group messaging systems tend to be used for coordination more so than chat.
One particularly common pattern of use that emerged was that of half-invites, where anyone within the group is invited to come along, often at short notice, without requiring any RSVP.
We found differences in the content and usage habits across channels, for example messages sent from a computer were more likely to refer to time and location than those sent using a phone, probably because fixed-location usage relates more to future activity where time and location must be defined, whereas mobile usage is "in-context", in the midst of activity.
Although the console syntax that allowed messages to be sent across media was not ideal, it was sufficiently usable that we observed long-term usage of the system by a number of social groups.
A more intuitive interface could be developed, although the fact that usability was not a barrier for many people suggests an alternative.
When paying attention to facilitating accessibility and utility it is worth making the system easily accessible and available on devices that people already own.
In effect, designers must consider the broader parameters of what makes a system useful by considering the assemblage of devices and practices that are supported in the context of use rather than focusing solely on the interface or the design of a particular device.
We'd like to thank the anonymous reviewers, colleagues and of course the bers themselves for their help and insight.
This research was partly conducted within the Australasian CRC for Interaction Design which is established and supported under the Australian Government's Cooperative Research Centres Programme.
Jung, Y., Persson, P. and Blom, J. DeDe: Design and Evaluation of a Context-Enhanced Mobile Messaging System.
Kopomaa, T. The Breakthrough of Text Messaging in Finland.
Korteum, G. and Segall, Z. Wearable Communities: Augmenting Social Networks with Wearable Computers.
Ling, R. The Mobile Connection: The Cell Phone's Impact on Society.
Mogan Kaufmann Publishers, San Francisco, CA, USA, 2004.
Ling, R. The Sociolinguistics of SMS: An Analysis of SMS Use by a Random Sample of Norwegians.
Ling, R. and Yttri, B. Hyper-coordination via mobile phones in Norway.
Perpetual Contact, Cambridge University Press, Cambridge, 2002.
Maden, A., Caneel, R. and Pentland, A. GroupMedia Using Wearable Devices to Understand Social Context.
Matsuda, M. Mobile Communication and Selective Sociality.
Okada, T. Youth Culture and the Shaping of Japanese Mobile Media: Personalization and the Keitai Internet as Multimedia.
Schusteritsch, R., Rao, S. and Rodden, K. Mobile Search with Text Messages: Designing the User Experience for Google SMS.
Sillence, E. and Baber, C. Integrated digital communities: combining web-based interaction with text messaging to develop a system for encouraging group communication and competition.
Smith, I., Consolvo, S., Lamarca, A., Hightower, J., Scott, J., Sohn, T., Hughes, J., Iachello, G. and Abowd, G.D. Social Disclosure of Place: From Location Technology to Communication Practices.
Negotiating Use: Making Sense of Mobile Technology.
