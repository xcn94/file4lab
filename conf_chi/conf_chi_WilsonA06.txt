We present a new bimanual text entry technique designed for today's dual-joystick game controllers.
The left and right joysticks are used to independently select characters from the corresponding  half of an on-screen selection keyboard.
Our dual-stick approach is analogous to typing on a standard keyboard, where each hand  presses keys on the corresponding side of the keyboard.
We conducted a user study showing that our technique supports keyboarding skills transfer and is thereby readily learnable.
Our technique increases entry speed significantly compared to the status quo single stick selection keyboard technique.
Today's video game consoles are powerful computers that provide access to all forms of electronic media, including music, movies and, of course, video games.
Already these consoles connect to the Internet through services like Xbox Live, and software for next generation consoles is likely to enable digital video recording, photo browsing, web surfing, instant messaging  and email.
An effective text entry technique would greatly enhance all of these applications and it is a fundamental requirement for extended use of IM and email.
Even video games, especially networked games, often require text entry for registration, character setup and in-game chat.
But a significant limitation of current and next generation video game consoles is the lack of an effective mechanism for entering text.
To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee.
The most common approach allows users to select characters from an onscreen selection keyboard using a single joystick.
The advantage of this approach is that firsttime users can immediately enter text without having to learn a complicated input procedure.
However, entering lots of text this way can be very slow and tedious .
While alternative key layouts  might reduce selection time in the long run, users initially have to spend time visually searching for and learning the location of each character.
In this paper, we propose a different approach for improving the speed of selection keyboards.
Instead of selecting characters with a single joystick, users drive our system using the two joysticks commonly found on a game controller .
We maintain the QWERTY layout of a standard keyboard to promote skills transfer between typing and entering text with our system.
Because our approach is bimanual, it is a closer analog to typing on a keyboard than selecting characters with a single joystick.
A key feature of our system is that it requires almost no learning and is therefore more likely to be picked up by casual users.
User studies show that, even with first-time users, our technique increases entry speed by 22% over the single joystick selection keyboard.
Text entry is a very old interface problem and as a result there is a vast body of work on the topic.
Here, we briefly touch on earlier work concerning joystick-based text entry.
Gesture-based text entry techniques allow users to enter characters by drawing gestures.
However, accurately drawing curved gestures with a joystick is very difficult.
As a result it is easier to learn the mapping between the EdgeWrite gestures and characters.
Nevertheless, EdgeWrite requires some practice to learn the gestures.
All of these techniques are designed for single joystick input.
Radial marking menus have also been used for joystick based text entry .
Weegie  is notable because it is a dual-stick technique with a separate marking menu available through each stick.
XNav  is a zone-based technique that builds on Perlin's Quikwriting system .
A major drawback of all of these techniques is that users must learn the location of characters within the menu hierarchy.
Transfer of typing skills to joystick text entry is impossible with these techniques.
The onscreen keyboard can either remain fixed in one part of the screen or move continuously so that it appears just below the current insertion point.
We included the continuously moving option to reduce the divided attention problem that can occur when users must look at two different locations that are far away from one another.
Our dual-stick text entry method uses an onscreen keyboard that is split into two halves .
Each half separately maintains a currently selected key, indicated graphically by highlighting.
Moving the left or right joystick on the gamepad moves the corresponding selection.
Both the left and right selections may be changed simultaneously.
To enter the character users must hit the corresponding left or right trigger on the controller.
We anticipate that this two stick selection keyboard will improve typing speed due to the reduction in distance  required to reach a given key, compared to a similar single stick approach.
The most frequently used character in many typing tasks is `space'.
In our system hitting both triggers simultaneously enters a `space'.
We chose this approach rather than including a separate spacebar key in the keyboard because it facilitates quick entry.
To enter the second most frequent character `backspace', users must move both sticks to the left .
A `sticky' shift mode is entered by pushing either stick down into the case of the controller.
Shifted mode is automatically disabled upon selection of a key.
Finally, the top row of the usual QWERTY keyboard, including numbers and many symbols, as well as some symbols missing from the layout in Figure 2, can be reached by switching to a new key layout  by simultaneously moving both sticks up.
Our technique takes advantage of the typical user's familiarity with typing on a QWERTY keyboard.
Users do not have to visually search for a desired key because they know the keyboard layout.
Moreover, users who type on a QWERTY keyboard regularly build motor memory of the keyboard layout within each hand.
The left hand strikes keys on the left half of the keyboard while the right hand strikes keys on the right half.
To evaluate the performance of our text entry technique, we conducted a user study in which subjects were asked to type text phrases as quickly as they could using our technique.
Besides demonstrating that naive users are able to quickly learn the technique, we were interested in isolating the effects of two of its salient features: the use of two sticks and QWERTY layout.
In addition to the dual stick/QWERTY  prototype discussed above, we had our subjects use variants of our prototype that used a single stick with a QWERTY layout , single stick with an alphanumeric layout , and two sticks with an alphanumeric layout .
Figure 3 illustrates all configurations in the study.
In the single stick configurations, the left stick alone is used to change the single highlighted keystroke before it is selected by pulling the left trigger.
To enter a space, the X button is depressed with the right hand, while hitting either trigger.
Similarly, to enter a backspace, the X button is depressed while moving the stick to the left.
In this way the X button takes on the role of the right trigger of our 2 joystick design.
Shift mode is entered as before, by pressing the left stick into the case.
In our study we wished to test the following hypotheses: H1--Users will obtain higher text entry speeds with QWERTY layout; H2--Users will obtain higher text entry speeds with dual stick configuration; and H3--The greatest text entry speed will be obtained with QWERTY layout and dual stick configuration .
Informally, we also wished to demonstrate that novice subjects with no prior experience entering text through a gamepad could achieve a level of performance comparable with alternative gamepad-based text entry methods during a single experimental session.
Phrases during the practice trials were chosen to ensure that at least one capital letter appeared, so that subjects were familiar with the use of the `shift' mode functionality during test trials.
At the session's conclusion, subjects answered a questionnaire in which they were required to rank their preference of the 4 text entry techniques.
We recruited 14 right-handed participants between the ages of 23 and 53 .
All had experience using computers, but none regularly played games.
Nine subjects rated themselves as `non touch-typists', where `touch typing' referred to whether they needed to look at the keyboard while they typed.
Measures of words per minute  were averaged across all trials and all subjects for each of the 4 conditions.
These means, displayed in Table 1, indicate that users performed about 22% better in the DQ condition than the SA condition.
These results obtained with first-time users are comparable to those of joystick EdgeWrite obtained after a longer practice session, and with much younger subjects .
There were no significant interactions.
Variability in performance among subjects was high.
For example, the fastest subject averaged 9.1 WPM across all trials, while the slowest averaged 3.6 WPM.
This variability inflates the standard error in Table 1.
To remove some of this variability we normalized the WPM measurements for each subject by subtracting their overall average WPM, computed across all conditions , which clearly illustrates that in terms of text entry speed, DQ >> DA, SQ >> SA, but SQ  DA.
Throughout the experiment, a trial consisted of the subject reproducing a phrase displayed on screen by entering text in a text-edit box under the phrase .
The software described in  was used to present the target phrases and log all keystrokes and timing information.
The phrases were drawn in a random order from the standard phrase set developed by .
The total time to enter each phrase was calculated as the duration between the first and last keystrokes made during the trial.
Subjects advanced to the next trial by hitting the `enter' key .
Data such as words per minute  and text entry errors were extracted from the log file by software also graciously provided by the authors of .
To familiarize subjects with the experimental procedure, we first administered a practice block in which they used a standard QWERTY keyboard to enter text.
We used a 2 x 2 within-subjects design with hands  and key layout  as factors.
Blocks of 10 trials were preceded by 3 or more practice trials in which the experimenter coached the subject on the use of the particular game pad text entry technique.
A drawback of the approach presented here is that onscreen keyboards in general tend to divide the user's attention between the onscreen keyboard itself and the typed text, and they can obscure parts of the interface.
Future work should address making the technique more `eyes-free'.
One idea is to display only the half of the keyboard corresponding to the stick most recently in motion.
It may be possible to further reduce the onscreen presentation by exploiting familiarity with QWERTY within each hand.
For example, each of the three rows of the main part of the keyboard maps onto the `up', `center', and `down' states of the stick, such that it may be possible to select at least the row in an eyesfree fashion assuming familiarity with QWERTY.
We conclude that we can accept all three hypotheses.
While 9 subjects declared that they were not touch typists, in the regular typing practice block before the main experiment we observed only two subjects that we would judge as non-touch typists, and even they seemed to be familiar with the QWERTY layout.
Since their performance did not trend differently than other subjects, we did not pursue further analysis regarding touch typing ability.
Errant keystrokes, including those corrected by the subject, were logged to generate an average total error rate for each subject and condition, listed in Table 1.
We performed a 2 x 2 Repeated Measures ANOVA on the error rate to show that there was a significant effect for hands  = 17.3, p < 0.001 and no significant effect from key layout, indicating that there were more errors in the dual stick condition .
We also confirmed that while subjects make more errors in the DA and DQ conditions, subjects were equally conscientious in correcting typos across all conditions, with corrected error rates showing no significant difference across conditions.
Informally, we observed that in the DA and DQ conditions, many errors were caused by pulling the incorrect trigger, a behavior that is reminiscent of homologous errors in keyboarding .
We note that the error rate obtained in the fastest condition  is approximately half that of joystick EdgeWrite.
Subsequent Wilcoxon Signed Rank tests revealed that the difference in ranking between DQ and SA was significant , while the difference in ranking DQ and SQ was not.
In conclusion, even though subjects' preference for DQ was only very weak, their text entry performance gains with DQ were much greater than their preferences indicate.
While the present study demonstrates that naive users are able to pick up the dual joystick text entry technique relatively quickly, it does not explore the effect that experience may have on performance of the technique.
One of the authors, for example, has been able to achieve more than 13 WPM on the main condition with very little practice.
Bellman, T., and MacKenzie, I. S., A probabilistic character layout strategy for mobile text entry.
Error patterns in novice and skilled transcription typing.
Isokoski, P., and Raisamo, R., Device independent text input: A rationale and an example.
MacKenzie, I.S., and Soukoreff, R. W., Phrase sets for evaluating text entry techniques.
MacKenzie, I.S., and Zhang, S. X., The design and evaluation of a high-performance soft keyboard.
Perlin, K., Quikwriting: Continuous stylus-based text entry.
Venolia, G., and Neiberg, F., T-Cube: A fast, selfdisclosing pen-based alphabet.
A. Analyzing the input stream for character-level errors in unconstrained text entry evaluations.
A., and Aung, H. H., Writing with a joystick: A comparison of date stamp, selection keyboard and EdgeWrite.
