T YPE R IGHT is a new tactile input device for text entry.
It combines the advantages of tactile feedback with error prevention methods of word processors.
T YPE R IGHT extends the standard keyboard so that the resistance to press each key becomes dynamically adjustable through software.
Before each keystroke, the resistance of keys that would lead to a typing error according to dictionary and grammar rules is increased momentarily to make them harder to press, thus avoiding typing errors rather than indicating them after the fact.
Two user studies showed that T YPE R IGHT decreases error correction rates by an average of 46%.
Prevention methods, on the other hand, such as city selection menus in navigation systems, limit the user's interactions and are only useful for special applications with very constrained ontologies.
T YPE R IGHT bridges the gap between tactile feedback and data entry error prevention.
Each key provides tactile feedback to prevent errors during text entry, instead of reporting them after they have been made.
The T YPE R IGHT keyboard consists of keys with adjustable pressure sensitivity.
Our blocking algorithms make those keys significantly harder to press that would lead to a typing error or misspelling.
We start by summarizing related work that addresses existing text entry error prevention and correction methods.
We then present the first prototype system, which offered numerical input with T YPE R IGHT technology, and report results from its evaluation.
This initial pilot study influenced design and construction of our final system, a complete alphanumeric keyboard.
We discuss the results of our final user study with the full T YPE R IGHT keyboard, summarize insights gained from our experiments, and conclude with future directions for tactile error prevention.
A human working with a computer perceives information from three input channels: visual, auditory, and haptic.
Although sight and hearing are the primary sources of information , touch is also important.
To give just a few examples: We need touch to evaluate if things are cold or hot, to estimate the stability of a glass we are holding without breaking it, or to feel the weight or texture of an object.
Haptic input devices provide the user with tactile feedback.
In virtual reality , medical testing scenarios , training assistants , and games, tactile feedback is used to provide the user with a more authentic experience.
While the user is operating the system, tactile feedback can indicate that input errors need to be corrected, or to convey additional information .
On software level, word processors also offer various error correction methods to prevent and correct typos.
To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee.
The system consists of tracked thimbles for the fingers with thin shape memory alloy wires wound around each thimble.
The wires can be shortened by slightly heating them up, which results in tactile feedback at the fingertips.
Users preferred to work with the tactile system compared to a VR system without any feedback.
To use this approach for preventing typing errors, the system would need to accurately locate finger positions.
In case the user is about to press a wrong key, the tactile impulse would have to be triggered shortly before pressing the key.
However, wearing thimbles does not work well in many typing scenarios.
The addition of tactile feedback to touchscreens  significantly improves finger-based text entry, resulting in typing performance close to that of real physical keyboards.
Typing errors are addressed in one of three ways: Prevention, live correction, and aftercare .
Prevention informs users before making an error.
Live Correction corrects him directly during writing.
Aftercare, the most widely established correction method, marks possible errors for later correction, manually or with the help of a spell checker.
Long-established word processors like Microsoft Word, as well as novel systems like Apple's iPhone and Nuance's XT9 input method for mobile phones, adopt live correction algorithms.
Typical examples include correcting ordering errors , capitalization errors , and even CapsLock errors .
Their impact on usability is debatable; while many mistakes are caught this way, these mechanisms frequently annoy users enough to disable them.
Prevention is the strictest method.
The look-ahead function when entering street or city names into in-car navigation systems is a popular example.
It does not allow the user to make mistakes.
However, this also means that input is limited to a given set of words and selections.
This method clearly avoids errors, but the accuracy and usefulness of the system strongly depends on the completeness of its database.
For more flexible text input, the hard boundaries of prevention methods can be softened.
A prominent recent example is, again, the iPhone: The software constantly scans its dictionary during text input.
If a key would lead to a mismatch while its neighboring key would not, the neighboring key's active touch area is enlarged, and the touch area of the key that would lead to a mismatch is diminished.
This approach has interesting parallels to the T YPE R IGHT keyboard: T YPE R IGHT uses physical resistance to lower the likelihood of mistakes, while the iPhone uses 2-D spatial characteristics -- the size of each key in touch-sensor space.
Another approach to "soften" prevention are timeouts and delays: Consider the SET button on a digital watch, which is only activated after being pressed for a certain duration.
Its Caps Lock key only activates after a very short delay, presumably to decrease accidental activations.
The disadvantages of any time-based interactions such as these are wellknown, however: Timeouts impair usability because they are too long or too short in most situations; they take the control and feeling of flow away from the user; and they lead to invisible, hard-to-detect features.
Apart from delay mechanisms, such as the one used in the Apple Keyboard, none of the presented systems use hardware-based error correction methods.
T YPE R IGHT populates a new area of devices that deploy hardware-enabled tactile feedback to prevent typing errors.
To explore the potential of tactile feedback keyboards for error prevention, we built two prototypes.
The first prototype consisted of a numerical keypad with 12 keys .
This system addressed numerical data entry and was used during an exploratory pilot study.
Both keyboards are similar in their electrical and mechanical design, and support controlling the resistance of each individual key from software.
After considering various techniques such as bi-metals, hydraulic shock absorbers, or magnetorheological fluids to alter the pressure resistance of keys, we decided to work with small electromagnets, so-called solenoids.
We embedded a standard computer keyboard inside a wooden box.
Solenoids were screwed to the lid of the box in such a way that, when the lid was placed onto the box, the lower pin extensions of the solenoids would touch the contact areas of the keyboard that register individual key presses.
The upper pin extensions of the solenoids' plungers extend above the box and were covered with key caps.
2 illustrates the cross section of a modified key.
In their passive state, solenoids have no influence on the force necessary to press a key x .
Thus, the resistance to perform a keystroke is similar to that of common keyboards.
To block a key, we switch on the corresponding magnet, which then creates an additional, electromagnetic force that the user needs to overcome to press key x .
To control the current to the solenoids, which adjusts the pressure sensitivity of the modified keys, three Arduino2 microcontrollers connect the solenoids to a desktop computer.
This computer runs blocking algorithms that modify the resistance of individual keys via software.
An external power supply provided power for the magnets.
This study aimed at comparing typing performance on a full alphanumeric keyboard under two conditions:  graphical highlighting of mistyped words,  tactile error prevention feedback.
We hypothesized that text entry with T YPE R IGHT, which provides tactile feedback, increases typing speed and decreases error rates compared to traditional methods that highlight mistyped words.
We designed a user study to compare task performance times, error and correction rates between these two text entry conditions.
The T YPE R IGHT keyboard was placed on a table in front of a 14" LCD screen.
All key presses were logged with their timestamps.
Twelve users aged 23-37 participated.
They were given a short introduction explaining the functionality and the idea behind the system.
None of the participants had previous experience with T YPE R IGHT.
No training session was included before the experiment.
A desktop application was implemented to conduct user studies.
It displays a box that shows entered text.
We decided to use Java Swing for the implementation, and Sun's javax.comm package implements the data communication between software and Arduinos.
The application also runs three different tests to determine which keys have to be blocked: a dictionary test against a database of 46000 English words, a grammatical test , and a context test .
After every key press, the system calculates which keys can potentially yield wrong words, and updates the pressure sensitivity of all keys accordingly.
Keys that do not match the current word context are blocked.
Keys that conform to the word context are released and can be pressed without extra force.
The participants' task was to faultlessly copy two handwritten texts of 140 words each.
For one text, participants received tactile feedback using T YPE R IGHT.
For the other text, participants received graphical feedback by highlighting mistyped words in yellow .
The dictionary comprised 46000 words.
The two texts were always presented in the same order.
The order of presentation of the two feedback conditions was counterbalanced across subjects.
We found that fewer corrections are required with tactile feedback, as compared to graphical feedback .
On average, the number of backspace key presses was reduced by 46% in the tactile feedback condition.
We also found that T YPE R IGHT significantly prevents typing errors.
Tactile feedback reduced the number of mistyped letters by 87% .
Tactile feedback forced users to reconsider their doing, thereby preventing them from typing wrong letters.
Average execution times were similar in both conditions .
We were not able to prove the expected time benefit of the tactile system with this experiment, although our observations suggest that trained users will be faster with tactile feedback than without.
Users quickly adapted to the functionality of the keyboard.
Questionnaires confirmed that 75% of participants did not consider T YPE RI GHT to be a "big changeover compared to typing on a standard keyboard".
Counter-balancing the test conditions, as we did in this study, did not avoid learning effects.
We first evaluated our 12-key T YPE R IGHT keypad in a pilot study with 24 participants  to analyze if error rates and execution times during date entry can be decreased compared to a common keypad.
A blocking algorithm controlled the syntactical correctness of entered dates.
No training session was included before the experiment.
We performed video analysis of the experiment, and administered post-experiment questionnaires to test whether we reached our design goals.
This pilot study showed that 30% of the mistakes made without tactile feedback were grammatically incorrect and could have been avoided with the aid of T YPE R IGHT.
Only one participant did not agree that T YPE R IGHT helped avoiding errors.
In date entry applications, T YPE R IGHT lowered the task completion time of some users by as much as 50%.
More details about the design process and the evaluation can be found in .
Motivated by these results, we expanded the keypad to a fully functional keyboard.
Furthermore, the use of the backspace key decreased by 46% on average.
For a user trained on the T YPE R IGHT system, typing speed increased due to tactile feedback: This user learned to react to tactile "messages" of the system, and saved time that would otherwise be required for corrections.
More than half of the study participants agreed, and the rest strongly agreed, that blocked keys made them aware of possible typos and helped to prevent errors.
Nobody agreed or strongly agreed that the changing key resistance was disturbing.
Further improvements are necessary to reduce the noise level, however, as the sound of magnets switching on and off was considered to be distracting.
The question whether changing key resistance interrupted our users' workflow was not answered conclusively.
These results are only preliminary and more extensive studies need to be done.
T YPE R IGHT also needs to be compared to auto-correction and predictive text entry strategies.
Moreover, common text-entry evaluation methods, standard metrics that better assess typing performance, and a comparison to existing user studies addressing text-entry on mobile phones should be considered.
We plan to further extend the ideas behind T YPE R IGHT to other data entry tasks and devices.
Task completion times for typing the 2nd text was on average 111 seconds  faster than for the first text, independent of the feedback condition .
It might also be that the second text was easier to type than the first.
To avoid these effects, future studies should include practice sessions and control for task difficulty.
One member of our team  used the system over the course of three months.
Unlike the novice subjects in the previous study, this expert learned how to react to possible tactile feedback, i.e., he was not surprised about changing key resistance.
Moreover, he did not try to overcome a key's resistance when this key was blocked.
After the training period, we had the expert perform the same tasks as the study described previously, starting with the tactile condition.
The results were consistent with our assumption that TYPERIGHT reduces typing time in the long run.
The execution time with the first text was 10% faster than with the second text with graphical feedback.
With tactile feedback activated, 16 corrections were necessary, compared to 23 corrections with graphical feedback .
With graphical feedback, the user typed 78 words that were not part of the dictionary, compared to zero
Obviously these findings need to be confirmed by a study involving several expert users.
S. Brewster and L. M. Brown.
Tactons: structured tactile messages for non-visual information display.
Australian Computer Society, Inc. 2.
Haptic keyboard prototype for data entry.
E. Hoggan, S. A. Brewster, and J. Johnston.
Investigating the effectiveness of tactile feedback for mobile touchscreens.
Palpation simulator for laparoscopic surgery with haptic feedback.
Multimodal presentation method for a dance training system.
R. Scheibe, M. Moehring, and B. Froehlich.
Tactile feedback at the finger tips for improved direct interaction in immersive environments.
This case study described the development and evaluation of T YPE R IGHT, a tactile feedback keyboard that supports typists by preventing typing errors.
Inexperienced people who mostly look at the keyboard while typing do not discover mistakes in time.
T YPE R IGHT provides immediate feedback.
The core concept is to increase the force required to press keys that would lead to typing mistakes.
We believe that this promising technique will reduce beginners' mistakes and benefit novices in touch-typing.
