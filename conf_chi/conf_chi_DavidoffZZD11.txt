Part of being a parent is taking responsibility for arranging and supplying transportation of children between various events.
Dual-income parents frequently develop routines to help manage transportation with a minimal amount of attention.
On days when families deviate from their routines, effective logistics can often depend on knowledge of the routine location, availability and intentions of other family members.
Since most families rarely document their routine activities, making that needed information unavailable, coordination breakdowns are much more likely to occur.
To address this problem we demonstrate the feasibility of learning family routines using mobile phone GPS.
We describe how we  detect pick-ups and dropoffs;  predict which parent will perform a future pick-up or drop-off; and  infer if a child will be left at an activity.
We discuss how these routine models give digital calendars, reminder and location systems new capabilities to help prevent breakdowns, and improve family life.
One these days, effective logistics can often depend on knowledge of the routine location, availability and intentions of other family members.
Interestingly, families rarely document routine events on their home calendars .
Even when they do, descriptions are incomplete, missing key information, like which parent will drive.
Without a resource to provide needed information on routines, family members must recall details of other members' routines , and here errors can take place.
Plans for new events or reactions to unanticipated situations can result in double-booked schedules, missed events, and even children being left at events , and, or course, stress and anxiety for parents .
This paper explores how sensing and modeling can provide computational access to family transportation routines, and how these learned models function as an enabling technology.
Specifically, we demonstrate how location data from standard mobile phones can be used to: 1.
Parents are often responsible for planning, coordinating, and executing the transportation of their children to and from their many activities.
One coping strategy dualincome parents employ is to develop routines.
As parents repeatedly perform similar sequences of actions around each pick-up and drop-off, a routine emerges, significantly reducing the attention required to complete the task.
When tasks unfold in a routine fashion, coordination requires minimal attention to detail.
To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee.
We also discuss how these learned models can create new resources that enable end-user applications, for example: 1.
In this paper, we describe the design and evaluation of our learned models of family routine.
Our goal is to develop a proof-of-concept while providing insights on how to improve technical performance.
We provide an overview of our previous research and situate our contribution within the field; we describe the design and performance of our learning systems; and we discuss how learned models can enable end-user applications, and ultimately, families.
Our focus on routine models emerges from three years of fieldwork on the needs and values of dual-income families.
While many domestic research projects envision technology to provide people more control over home devices, our first yearlong ethnography of dual-income families showed that more than control of their devices, families desire more control of their lives .
Next, a year Speed Dating design concepts highlighted that parents' often feel seriously out of control as they decide how to transport their children to and from their activities .
A third yearlong field study to understand how families manage transportation illustrated how and why coordination breakdowns occur .
These breakdowns cut across families, parents, coordination styles and economic class.
Parents would commit their spouses to tasks they could not do given the spouse's current routines.
Even when known in advance, we saw parents go to a routine place to pick-up a child when the child was at another location.
We family members neglect to inform one another when their routines changed.
Finally, on multiple occasions, we witnessed well adjusted, responsible parents forget to pick-up their children, leaving them at their activity locations for as long as 40 minutes.
Routines are at once central to many coordination problems, and at the same time not documented , so unavailable to family members and coordination support applications.
Since family members currently do not record their routine information, we developed a vision where learned models of routine could create new resources to help families with: 1.
Planning - Using our models, calendaring systems like LINC  and DateLens  could display implicit routine events, event times, pick-ups and drop-offs that parents don't document but are critical to making effective plans for and that affect others.
Family members could see an entire day's plan, helping make unresolved and conflicting responsibilities salient.
Coordinating - Using our models, location systems like Motion Presence  and the Whereabouts Clock  could display where people are with implicit routine information like future pick-ups and drop-offs, helping remind family members what they need to do, and alerting others as days happen as planned.
Improvising - Using our models, applications could update plans in real-time, helping parents make more reliable decisions.
As pick-ups happen, reminder systems like comMotion  and PlaceMail  could suppress potentially annoying reminders.
Protecting - Using our models, reminder systems could infer that a required pick-up is not happening, and remind parents without their explicit creation of a reminder, creating a new kind of safety net to guard families against this uncommon but stressful outcome.
Existing research has highlighted the value of routines in support of everyday living, while observing limits to that support when people depart from their routines.
Many successful routines serve important organizational and social purposes.
A form of habituated memory, routines free up people's attention, creating a tacit knowledge that constrains and directs activity .
Successful routines help to scaffold and streamline the decision-making process .
However, as their performance becomes more automatic, people cannot recall the details of what they do, making routines difficult to transfer between people .
Also, since people often default to routines when faced with limited information, deviations from routine  can cause plans to break down .
But because dual-income families also experience many deviations from routine - e.g.
Even the thought that a non-routine day might occur, such as a child showing signs of getting sick, can cause parents stress .
During non-routine days, information about the routines of others would often help improvise appropriate responses.
Despite this value, routines themselves rarely are documented - they do not appear on calendars .
Our work explores the use of machine learning and data mining to learn routines in order to make this information available to families and to family support systems.
The routine is emerging as a useful computational abstraction across a variety of domains.
It has been used, for example, to improve the classification of domestic activities  and to create opportunities for workplace communication .
GPS has provided a gateway to many of those capabilities.
Researchers have used GPS data to model geographic mobility , social networks , individual one-step destination , and navigation for the cognitively impaired .
Our work builds upon these findings, extending them into the complex and highly nuanced context of family coordination.
Currently, the only extant notification mechanism we know for forgotten children arrives as phone calls from impatient day care managers , embarrassed friends , or irritated spouses .
Notification of this event in any form would present a significant contribution to family life, and create a new kind of safety net.
The goal of this paper is to provide an initial demonstration of the feasibility of our underlying technical approach in a realistic setting.
It is also important to note that we in no way claim that our approach is optimal.
Instead, the reader should consider the approach in this paper a demonstration of what is possible, and food for thought about other capabilities that knowledge of routines can offer.
First, to operate with a shared vocabulary, we offer a set of definitions.
Since we are relying on GPS as our primary sensor for learning routines, we developed a place-centric view of coordination.
A person's day can be described as an ordered list of the places they go.
We call the transition between each place a ride.
In our families, each ride has a driver  and possibly a passenger .
A drop-off is a ride given to a place, and a pick-up is a ride given from a place.
A plan is an ordered list of pick-ups and drop-offs, each with an ideal time, when the parent intends it to occur, and an actual time, when it actually does occur.
As a plan unfolds, the family coordinates, acknowledging completed rides, and reflecting on the need to modify their current plan for future rides.
Families improvise; they dynamically modify and even generate new plans based on unanticipated situations that challenge the current plan.
Collectively, we refer to planning, coordinating and improvising as family logistics .
Children participate in activities like violin and swimming lessons Parents give children rides to events, which are instances of the activities.
With this shared vocabulary, the remainder of this section describes the construction of three models of routine, their relationships, and how they can help families plan, coordinate and improvise; creating a new kind of protection against logistical breakdowns.
Figure 1 depicts our modeling approach graphically, with arrows indicating the flow of data and inference.
Models are constructed from two data sources: interviews, and GPS .
Our GPS data set follows the movements of 23 people in 5 dualincome families across approximately six months, and is labeled with data collected from nearly 1,000 surveys, over 500 phone interviews, and over 100 home visits .
Leveraging previous work on automated place discovery , we assume that all models include a set of known locations .
Interviews provide a ground truth about which activities occur each day, and the ideal pick-up and drop-off times.
We combined this information with GPS, and designed a series of three models, each recombining and building on the output of the previous model, and each supporting family logistics in different ways.
First, we apply a temporal logic to our GPS data streams, and compare the location and driving state of separate individuals to recognize when rides occur and who participated in the rides.
Participation allows us infer which parent drives which kid to which activity.
Interviews provide each activity's location and each event's intended pick-up time.
All other knowledge is inferred from low-level GPS, creating unsupervised models that  sense rides;  predict the driver for the next event; and  predict if parents will arrive late for pick-ups.
End-user coordination applications can use any model's output as a new data source to help families plan, coordinate and improvise.
Model 3 can work with reminder systems to create a new kind of safety net.
The output from this model can begin to fill in the empty calendar spaces for the things people do every day.
Second, the ride recognition model provides seed data to learn the probability distribution that each parent will be driving a child to an activity .
We can use this distribution to predict future drivers, which, when compared with observations in real time, can offer an indicator of when events are happening in non-routine ways .
Because non-routine events are those most likely to lead to logistical breakdowns, early detection of non-routine rides can help propagate that information to coordinating family members, and, when appropriate, allow them to respond earlier, and to make plans in response to these situations with a more complete overall picture.
Third, the driver prediction model, along with real-time location and driving state, a learned distribution on lateness, and a driver destination model, feeds into a higher-level inference machine to detect when parents forget a child at an activity .
We demonstrate that our approach is practical by conducting this work under legitimate sensor and modeling constraints.
Since families literally rely on their phones, battery-heavy GPS sampling is limited to once per minute instead of the more common rates upwards of once per second.
Models are then trained using an online approach, meaning we use only the data that would be available at any given point in time, and not the entire data set.
The routine rides family members take every day are one of the basic units of undocumented family logistics.
The automatic capture of rides introduces the possibility of computational support while requiring minimal behavioral changes.
Each sensed ride includes a driver, a passenger, a place and a time, providing information that can be immediately shared with calendaring and awareness systems, as well as creating a source of labeled data with which computing systems can perform further reasoning.
In this section, we describe a method for recognizing rides and examine its performance.
To evaluate the performance of our ride-sensing method, we compare its predictions with the ground truth taken from our interviews.
Aggregate interviews report 3283 rides, or roughly one ride per day per family.
Real-world constraints on phone use  place 1721 beyond the reach of sensor data collection.
We report on the 1562 rides accessible to sensing.
Across all families, for both pick-ups and drop-offs, our simple temporal model performs well.
90.1% of the events the model identified were in fact rides , and 95.5% of all rides were sensed .
To recognize when rides occur, we apply a simple temporal logic to the synchronized, discretized GPS data.
A person is always either at a location, Ln, or traveling, T, which we define as the unique location occupying the space between all known places.
Two family members are said to be co-traveling, CoT, if during the same time, ti they are both traveling and are located at a Euclidian distance of less than 500 meters apart.
Any remaining states  are collectively labeled else.
At time t1, the child is at location Ln.
At time t2 both parent and child are at location Ln.
Lastly, at time t3, both parent and child are cotraveling, CoT.
This definition is broad enough to cover two cases of pick-ups.
In the majority of cases, a parent comes from a different location to the child's location and they drive off together.
We also consider a pick-up in the case where a parent is already at the child's location, and they depart together.
Precision and recall measures between families are also consistent, with a variance of 0.072.
This variance measure is dominated by the precision value of 0.684 for family E drop-offs, the only value below .80.
Three factors appear responsible for this low drop-off precision value.
First, for family E, false positive drop-offs, where a drop-off was detected but did not occur, are five times as likely to occur at home than at any other location.
Second, false positive errors at home occur almost exclusively in the late afternoon.
Third, false positive errors in the afternoon at home occur almost entirely between their 10-year-old daughter  and Mom.
Narratives from our interviews help explain the meaning behind these numbers.
In family E, D10 walks to and from school.
Family E's Mom, a doctor, arrives home from some hospital shifts at around the same time as D10 arrives home from school.
Both Mom and D10 are correctly labeled as traveling, and are within 500 meters of one another, but are not traveling together, causing the false positive errors.
This transformation pushes the labels for deviation examples closer to 0 and non-deviation examples closer to the original -1 or 1.
The closer the label to 0, the less impact it has on the accuracy of the classifier.
The overall classification process combines local weighting with a binary decision tree, creating a locally weighted decision tree  to predict which parent drives for each ride.
The ride model's treatment of the output class  as a nominal variable leaves only two cases for evaluation:  a prediction of Mom when Mom drives or Dad when Dad drives is correct; and  a prediction of Mom when Dad drives or Dad when Mom drives is incorrect.
With no case that can lead to false positive or false negative, we cannot evaluate using precision or recall.
Instead, we look at accuracy: how many times out of the total did the classifier predict mom or dad correctly.
We then train the model using a sliding window, and test on the week immediately following the training period, a common technique used with time-series data .
Searching for an optimal window size, we vary the size of the sliding window from one to 24 weeks, and analyze the results.
Across all families, when the model is trained using only one week of training data , the model correctly predicts the driver 72.1% of the time, showing that a deployed system might be able to provide useable data after just a single week in the field.
The optimal window size is four weeks, which predicts the driver correctly 87.7% of the time.
At test weeks twelve  and eighteen , nearly every graph in Figure 2 shows a steep drop in performance, correctly predicting the driver only marginally better than chance.
These dips correspond to significant changes in family routines at test week eleven , when all our families transitioned from school to a new summer schedule, and at test week seventeen , when camps ended , families vacationed , and summer sports ended .
Poor performance during these weeks is consistent with previous findings that routines are least stable during transition times .
Changes in routine that occurred in weeks eleven and seventeen would not appear in the training data until weeks twelve and eighteen, which exactly overlap the drops in performance.
Looking more closely, the changes in routine at weeks eleven and seventeen also influence the outcome of our driver model optimization.
For each example, we assign the label, y, as -1 if Dad was detected as the driver, and +1 if Mom was detected.
Our  goal is to create a classifier to determine the probability that each parent is driving.
Because the shape of the decision boundary is unknown, we use a decision tree classifier, which performs well with both linear and non-linear boundaries.
Because previous research on family routines observes frequent deviations from the intended family schedule , before classification we chose to use local weighting to reduce the impact of these non-routine outliers .
For each labeled example q, we calculate a new label d as a function of the old label y and the features f:
Accuracy  of our driver prediction model across all families, plotted by test week number , varying the amount of training data provided to the model from one  to fourteen  weeks.
No matter how much training data is used, accuracy drops at weeks 12 and 18 .
Performance drops of the driver prediction model at weeks 12 and 18 occur as transitions from the routines of school to into summer , and from the routines of camp to back-to-school prep  first appear in training data.
Because these changepoints are separated by five weeks, models using five weeks or more of training data will include one of these aberrant weeks.
Figure 3 shows the relationship between the size of the training data sets, and the number of times they include an aberrant week.
Since five weeks separate the routine changes, training data sets that include five weeks of data or more will include one of these aberrant weeks more often than not, providing them with noisier training data, and lowering their accuracy.
In fact, four weeks of training data marks the turning point, when training data sets do not include aberrant weeks more often than they do, explaining why it is the optimal number of weeks of training data to use in the driver prediction model.
Lastly, despite poor performance at test weeks twelve and eighteen across the variations in size of the sliding window, performance makes a sharp turnaround in weeks thirteen and nineteen.
This suggests that the model is able to make correct predictions with only one week's data from the new routine, adding support to the belief that a deployed model could recover quickly and again provide useful data even after facing changes in routine.
We assemble these features into a Bayesian Network .
The Bayesian network captures the complex dependencies shared by coordinating parents.
Here, we use the term dependency as used in probability theory to mean the outcome of an event makes its dependent event more or less likely.
It can be read as influences.
Each side of the symmetrical model represents the state of one parent .
Mutual dependencies are represented at the crossover nodes in the graph's center.
For example, the location of each parent depends on  the location of the child, Lchild, and whose job the pick-up is, J.
Other dependencies are mirrored for each parent.
For example, according to the model, whether or not a parent is traveling, T, depends on their location, Lstart, the location of the child, Lchild, how often they have been late in the past, , and if they remember the pick-up, R. The model also shows that a parent's destination, D, depends on the location of their child, Lchild, their current location, Lcurrent, and if they remember the pick-up, R. The driver prediction model appears in the network as node J, predicting which parent has the job to make the pick-up.
We can see that according to the network, if a parent remembers the pick-up, R depends on whether or not the pick-up is their job, J.
Starting 30 minutes before every late pick-up, we ask the network to make two predictions.
First, we see if the nondriver is not going to be late.
Second, we look to see if the driver is going to be late.
We repeat these calculations at each minute until the actual time of the late pick-up, and see how early we can make the correct predictions.
We use the properties of the network structure to derive the formulas that will provide us the prediction values.
To see if Dad remembers, we calculate the posterior probability Rdad, and then repeat the calculation for Mom.
In this section, we explore the feasibility of a system that can predict when a parent will forget to pick a child up from an activity at an agreed-upon time, using only GPS trace information for family members.
The fear of being late and forgetting a child is a constant source of stress and anxiety for dual-income families .
Such a prediction system could create a new kind of safety net, reducing anxiety and increasing feelings of safety.
Forgetting is an ambiguous term.
It can mean that a parent never goes to get a child, or that a parent failed to remember at the appropriate time and thus began the pickup task later than expected.
Relying on GPS for all our information, we develop a time- and place-centric definition of forgetting.
We say that a parent wants to arrive at an ideal time, tideal.
We say a parent forgets a pick-up when their actual arrival time, t0, is more than ten minutes after tideal .
As an alternative, we evaluate the model using a technique from signal processing  called the receiver operating characteristic , which is a more conservative measure of performance .
Figure 5 shows two ROC plots.
For each plot, the y-axis shows correct predictions, and the xaxis shows incorrect predictions.
The points inside each square represent different ratios of correct predictions to incorrect predictions.
Points along the diagonals mean the ratio is even, and the model is performing no better than a coin flip - for every one correct prediction, there is one incorrect prediction.
The upper left corner is perfection, with all correct predictions and no mistakes.
We can use this property of ROC curves to visualize how a notification system would balance the desire of the parent to never miss a pick-up, against the cost of sending wrong information .
For any given number of correct predictions, an ROC curve indicates how many incorrect predictions the model will also produce.
At tideal-30 , for every 6 correct predictions the model makes 5 incorrect predictions.
When viewed as percentages, every rate of accurate predictions between 0 and 1 has a corresponding rate of inaccurate predictions between 0 and 1, producing a smooth curve.
If we continue to follow this curve up and to the right, we can see that the ratio improves little.
At tideal , for every 8 correct predictions the model makes 2 incorrect predictions.
At tideal+10  for every 8 correct predictions the model makes only 1 incorrect prediction.
We can also measure the area beneath an ROC curve to describe a model's cumulative performance across all confidence values.
At thirty minutes before tideal, the area under the ROC curve is 0.649 .
The performance gradually rises as the pick-up time approaches, and is highest tideal+10, at 0.826.
A Bayesian Network used to predict if a parent remembers to make a pick-up.
Each side of the symmetrical model represents the state of one parent.
At each point in time the model makes two predictions:  does the parent who drives remember the pick-up; and  does the other parent not remember the pick-up.
To evaluate the forgotten child model, we first learn the optimal distributions for the remaining learned model nodes - , and D. Using four weeks of training data for the driver prediction model, J  we vary the amount of training data to  and D, and compare the output.
Ten weeks of data gives optimal values for both , and D. To calculate the output of the entire network, we use the Maximum Entropy Inverse Optimal Control algorithm  to compute D, destination, and starting thirty minutes before each forgotten pick-up, compute values for Rmom and Rdad at one-minute intervals, until we arrive at tideal+10, ten minutes after the ideal pick-up time, when the parent is late .
Given the unequal distribution of forgotten pick-ups , a model based on no data, but that simply always predicted on-time arrival would be right 0.885 of the time.
This paper describes a successful initial demonstration of the feasibility of our approach to the sensing and modeling of pick-ups and drop-offs, and hopes to spur investigation of routine as a versatile and enabling abstraction.
In this section, we discuss possible directions, and identify ways to continue towards optimal performance.
As a broad reaching proof-of-concept, this work required many simplifications.
In this section we discuss their impact, and extensions to the work as a whole.
While we explored a general-purpose algorithm for use across all families, we know that there is great variation in the ways families plan, coordinate and improvise.
Even within families, as children grow, parents age, interests, even entire geographies, evolve.
Exploration remains to find algorithms both for family style, and for attending to and integrating to the inevitable changes.
The driver prediction model also showed a remarkable potential for detecting large-scale transitions in routine.
Because families experience the most stress during times of large-scale routine change, an algorithm tuned to this class of events could effectively function as a seasonal boundary detector, offering an index of routineness to other models providing services to families, helping the driver prediction model identify seasonal boundaries in training data and achieve better learning faster.
Our ride detection model provides ample evidence that the large scale detection of rides is within reach.
Still, across all families, the model overlooks about ten percent of rides , and makes incorrect detections  around ten percent of the time.
Because our hierarchical approach to modeling means that errors in ride detection propagate to downstream models, causing further errors, improvements in ride detection will pay threefold, helping to improve driver and forgotten child prediction as well.
A variety of ways exist to improve upon our ride detection.
Because we sample GPS only once per minute, pick-ups, or examples of co-location that happen on a faster time scale are simply missed.
In our fieldwork, we observed busy families carrying out pick-ups and drop-offs below this detection threshold.
An intelligent approach to sampling would increase rates during times when data collection would be more valuable , and lower the sampling rate during periods of stasis, avoiding battery depletion.
This approach would require the integration of other low-level sensors into the model .
The addition of Bluetooth could also improve co-location and co-travel accuracy by providing additional proximity cues to the model.
Missed rides are also caused by the model's simple ride representation.
We defined travel in terms of one parent, one child and one car.
The model has no representation of other modes of transport, causing it to miss common activities like walking, riding bicycles, and taking the bus.
For simplicity we limited our observations to the nuclear family, but in reality families plan and coordinate with their extended families, friends and carpoolers, all whom were outside the scope of this investigation.
The model also requires that activities occur while people are at a location.
Activities like paper routes, however, occur over a wide area that contains home, neighbors, and schools, making it appear to the model as an unusual occurrence of travel.
Instead, we presented an ROC analysis, which quantifies performance tradeoffs as confidence values.
End-user application designers can define the behavior of systems that implement the model by calculating a future expected value based on model confidence, and the costs and benefits as defined by their domain.
Unfortunately, without a field deployment, we can only estimate costs and benefits.
The ROC analysis, for example, showed that the model has about sixty percent accuracy at thirty minutes before a parent forgets a child.
With about twenty actual incidents of forgetting children per family, this would equate to forty alerts over six months, or about 1.5 per week.
Given the stress caused by forgetting a child, would this number of alerts constitute an annoyance, or prompt a parent to take a moment and double-check their plan and their assumptions?
This question is further complicated by the question of information delivery.
It is unknown how early a forgotten pick-up needs to be detected in order to be of use.
A message that comes too late to enable a parent to arrive on time might be marginally helpful, but the real goal is to make this detection early enough to ensure prevention of the event.
Improved models will also need to address the temporal complexity of coordinating parents.
In some families, ten minutes late might be considered on time.
In others, it might constitute abandonment.
A range might more faithfully represent an ideal time than any particular minute.
Also, if a parent plans to be late, then their late arrival time is their ideal time, and not the one the model assumes.
The driver prediction model learns parental responsibilities at more than 70% accuracy with only one week of training data, and about 85% accuracy with four weeks of training data.
These are satisfactory numbers when seen as a technical problem.
A deployed system, however, will face unknown scrutiny from coordinating parents during stressful times.
Even small errors may deter adoption,
The haphazard introduction of learning systems into the home has been a subject of concern to researchers.
Their caution reflects an understanding of the technical challenges that idiosyncratic human behavior could present to modeling , a sensitivity to the unintended consequences of technology in the home , a concern over the appropriate role of domestic technology , all which threaten to take away autonomy from families.
Ultimately, we distinguish a belief that aspects of family life can be modeled from the belief that family life should be automated.
We advocate a measured approach where intelligence is applied in such a way that it does not take on the role of parent and does not conflict with the social structure within the family.
Our work does not focus on optimizing the work of families in order to allow an ever-increasing number of activities to be performed.
Instead, our intention is to help family members more elegantly and effortlessly perform their role within the family by providing the resources they need to better understand what they do and what they plan to do.
Our technical models of routine support this decisively human need by acting through existing research family support systems, allowing them to better address the situations they were originally designed for.
Calendaring systems like LINC  and DateLens  could display implicit routine events, event times, pick-ups and drop-offs that parents don't document but are critical to making effective plans for and that affect others.
Location systems like Motion Presence  and the Whereabouts Clock  could display where people are with implicit routine information like future pick-ups and drop-offs, helping remind family members what they need to do, and alerting others as days happen as planned.
Applications could update plans in real-time, helping parents make more reliable decisions.
As pick-ups happen, reminder systems like comMotion  and PlaceMail  could suppress potentially annoying reminders.
Reminder systems could infer that a required pick-up is not happening, and remind parents without their explicit creation of a reminder, creating a new kind of safety net to guard families against this stressful outcome.
We provided examples of how learned models of family routines can function as an enabling technology.
We described how they could be added to digital calendars to help families make better plans, to reminder systems and to location systems to help families coordinate on routine days, and to function as a safety net, helping observe and prevent incidents where children are forgotten at their activities.
We intend this work to stimulate discussion around the broad applicability of routine as an enabling abstraction.
Considering our choice of exploration over optimization, a significant amount of the modeling space remains open to investigation.
Additionally, the use of routine in various application domains brings with it a series of questions.
Identifying appropriate ways to visually represent implicit information, or entire learned routines, presents challenges to the visualization community.
And ways to repair and amend incorrect implicit information presents challenges to the interaction techniques community.
Because routine as a computational abstraction is able to capture and model events that are meaningful but ephemeral, the algorithms developed in this work could be applied across other domains.
In the workplace, for example, best practices could be described as a form of routine.
Their modeling, visualization, and communication would represent another significant research opportunity.
In this paper, we demonstrated that dual-income family transportation routines could be sensed and modeled without any supervision using the GPS available on commodity mobile phones.
Towards that end, we gathered a large data set of family location, and of pick-ups and drop-offs.
Using simple heuristics and statistical models, we demonstrated that pick-ups and drop-offs can be sensed, and their drivers predicted.
We also demonstrated a model that can predict when parents are going to forget to pick-up their children at activities before these damaging events happen.
