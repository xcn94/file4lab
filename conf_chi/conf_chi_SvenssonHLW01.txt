Monetary Fund  who retrieve information concerning different countries and their economies.
He found that a piece of information might very well be valid and important, and still completely uninteresting since the people with power in the country are not reading and acting upon it.
Thus, it is the overall social texture of the information that determines its value.
A recent study by Soinen and Suikola shows that social aspects come into almost every step of an information retrieval process, ranging from the problem formulation to the evaluation of the retrieved items .
Even when we are not explicitly looking for information we use a wide range of cues, both from features of the environment and from the behaviour of other people, to manage our activities.
Unfortunately, in most computer applications, we cannot see others, there are no normative behaviours that we can watch and imitate.
We walk around in spaces that, for all we know, have not been visited by anyone else before us.
In an application we might be lost for hours with no guidance whatsoever.
On the web, there is no one else around to tell us how to find what we are looking for, or even where the search engine is.
It should be pointed out that there is a difference between concluding that social navigation happens in the world no matter what we do, and deciding that it is a good idea to design system from this perspective.
Social navigation is not a concept that can be unproblematically translated into ready-made algorithms and tools to be added on top of an existing space.
What we can do is to enable, make the world afford, social interactions and accumulate social trails.
Social navigation will often be a dynamic, changing, interaction between the users in the space, the items in the space  and the activities in the space.
All three are subject to change.
We have designed an on-line system that recommends food recipes using this social navigation design perspective.
We describe our design approach, the system, and a first user study of the system.
The term Social Navigation captures every-day behaviour used to find information, people, and places - namely through watching, following, and talking to people.
We discuss how to design information spaces to allow for social navigation.
We applied our ideas in a recipe recommendation system.
In a follow-up user study, subjects state that social navigation adds value to the service: it provides for social affordance, and it helps turning a space into a social place.
The study also reveals some unresolved design issues, such as the snowball effect where more and more users follow each other down the wrong path, and privacy issues.
How can we empower people to find, choose between, and make use of the multitude of computer-, net-based- and embedded services that surround us?
How can we turn human-computer interaction into a more social experience?
How can we design for dynamic change of system functionality based on how the systems are used?
These issues are fundamental to a newly emerging field named Social Navigation .
Researchers in the field are observing that much of the information seeking in everyday life is performed through watching, following, and talking to people.
When navigating cities people tend to ask other people for advice rather than study maps , when trying to find information about pharmaceuticals medical doctors tend to ask other doctors for advice .
Munro observed how people followed crowds or simply sat around at a venue when deciding which shows and street events to attend at the Edinburgh Arts Festival .
As shown by Harper , this even applies to what might be considered a prototypical information retrieval scenario.
Later, Dieberger widened the scope of social navigation .
He also saw more direct recommendations of e.g.
Since then the concept of social navigation has broadened to include a large family of methods, artefacts and techniques that capture some aspect of navigation.
Through the book "Social Navigation in Information Space" , the field was established.
The book brought together several different perspectives on social navigation - ranging from how it happens in the world today and how it can draw upon perspectives from urban planning, architecture, film studies, and other design disciplines, to how it could be applied in designing information services and virtual worlds.
A range of systems has been implemented that exhibit some of these properties.
The most well-known commercial example being the Amazon site recommending books: "others who bought this book also bought...".
Research laboratory work includes the Footprints system  that visualises history-enriched information.
It presents different visualisations of history information as maps, trails, and annotations allowing users to see where within a page activity had taken place.
Similar ideas are explored in IBM's WebPlaces .
It observes peoples' paths through the Web and looks for recurring paths.
Yet another is the history-enriched SWIKI-variant implemented by Dieberger .
This system keeps a record on how often pages on a collaborative Web server have been accessed and when they last got modified.
It then annotates links to these pages with markers indicating the amount of recent traffic on that page, whether the page has not been accessed for a long time, or if that page was recently modified.
What is missing in many recommendations or historyenriched systems is feedback on whether the item bought, read or visited in the end met the user's needs and whether she enjoyed it.
Reviews can provide some of this feedback, but reviews can vary widely in quality.
Another example is the Swedish site www.cint.se  that builds upon the idea that consumers should tell each other what they think about products and services that they use.
We differentiate between direct and indirect social navigation.
The first is where there is a dialogue between the navigator and the advice provider, as in chat systems.
In indirect social navigation we follow traces left by other users, either in real-time or as aggregated paths from previous usage.
In order to exclude items as, for example, maps as social navigation tools, two additional properties are needed to describe the phenomena we aim to capture: personalisation and dynamism.
Two examples illustrate their importance: Walking down a path in a forest is social navigation, but walking down a road in a city is not.
Talking to a person at the airport help desk that explains how to find the baggage claim is social navigation, but reading a sign with  the exact same message is not.
Both methods in these examples seem to convey the same navigational advice; the difference lies in how advice is given to the navigator.
In the first example, the navigator chooses to follow a path based on the fact that other people have walked it.
Conversely, walking down a street is not driven by the fact that other people have walked the same street.
The street is an intrinsic part of the space.
One way to think about this is that social navigation traces are not pre-planned aspects of a space, but rather are "grown" - or created dynamically - in a more organic or bottom-up fashion.
In this way, social navigation is a closer reflection of what people actually do than it is a result of what designers think people should be doing.
In the second example the navigator gets the impression that the navigational advice is personalised to her and the situation allows her to ask for additional information.
Also, the advice ceases to exist when the communication between the navigator and advice provider ends.
The person at the help desk may have to use different terms, or even speak a different language, to convey the same message to each particular customer.
The help-desk worker can also recognise a repeat visitor, and modify the presentation of information based on knowledge that a past attempt has failed.
Another key distinction between social navigation and general navigation is how navigational advice is mediated.
In social navigation there is a strong temporal and dynamic aspect.
A person chooses to follow a particular path in the forest because she makes the assumption that people have walked it earlier.
Forest paths are transient features in the environment; if they are not used they vanish.
A slightly modified version of the definition of social navigation given by Dourish and Chalmers is: Social navigation is navigation that is conceptually understood as driven by the actions from one or more advice providers.
An advice provider can be a person or artificial agent providing navigational advice to somebody trying to navigate a space.
Social translucence entails a balance of visibility, awareness of others, and accountability.
The designer of a social navigation system must find pedagogical means of conveying how actions are aggregated and displayed to others, as well as protecting the privacy of users.
How might the presence of social navigation capabilities affect user behaviour?
Since the field is new, very few user studies exists that attempt to address these issues, but the following effects are discussed : Filtering: A couple of user studies show that historyenriched environments and recommender systems might help filter out the most relevant information from a large information space .
Quality: Sometimes it is not enough that the information obtained is relevant, it must also possess qualities that can only be determined from how other users reacts to it .
Only when an expert verifies that a piece of information is valid, or when a piece of art is often referred to in the literature, will it be of high quality in the eyes of a navigator.
Social affordance: Visible actions of other users can inform us what is appropriate behaviour, what can or cannot be done.
At the same time, this awareness of others and their actions makes us feel that the space is alive and might make it more inviting.
Here the focus is not on whether users navigate more efficiently, or find exactly what they need more quickly; instead, the intent is to make them stay longer in the space, feel more relaxed, and perhaps be inspired to try out new functionality, to pick up new products and new information items, or to try out new services that they would not have considered otherwise.
Users can quickly pick up on the `norms' for how to behave when they see others behaviours.
Usage reshapes functionality and structure: Social navigation design may alter the organisation of the space.
In amazon.com, the structure of the space experienced by visitors is changed: one can follow the recommendations instead of navigating by the search-for-terms structure.
Social navigation thus could be a first step towards empowering users to, in a natural subtle way, make the functionality and structure `drift' and make our information spaces more `fluid'.
To arrive at systems that enables these properties the design must convey the meaning of the social layering to users, as well as how their individual actions in turn will influence the system.
By necessity, in most cases users will have to accept that their actions are `visible' to other users.
This may infringe on their privacy resulting in loss of trust in the system.
In order to implement a social navigation system, some basic software functionality is needed.
The Social Navigator  is a toolkit that provides simple primitives by which user behaviour can be modelled.
It centres around three concepts: places, people and movements.
Places can be defined in various ways: it might be a web page, a geographical place, or a database entry.
People are always attached to a location and movements between locations are automatically time-stamped and stored.
Flags can be attached to online users signalling, for example, their visibility or to what extent they can be trusted.
Flags do not have a predefined semantics but can be used to signal various aspects depending on the domain.
The Social Navigator is implemented as a Java servlet and accessed through a web server, which allows for net-based communication between a variety of different clients, ranging from browsers to stand-alone applications.
We decided to apply our ideas for social navigation to the domain of shopping food over the Internet.
In a typical online grocery store, there will be 10.000 different products to choose from.
Navigating such a space is not only timeconsuming but can also be boring and tedious.
As shown by Sjolinder and colleagues , some users will have more difficulties than others to efficiently make use of the existing online stores.
In a study on an existing hypertext based online store, they show that elderly users spent in average twice as much time finding items on a shopping list than did younger users.
In both age categories, users sometimes completely gave up when searching for certain items.
In average, users spent 12 minutes to find 10 ingredients.
According to Chau et al.
A recent study by Frostling-Henningsson  showed that on-line food shoppers do not gain any time from shopping food online, instead they appreciate flexibility in time and space.
Shoppers feel that they can avoid the tedious, boring, food stores, but they loose the sensuous pleasures of seeing, touching and smelling the products.
This is somewhat compensated by getting status among friends from being able to tell stories about how they shop food online.
The online store, EFOL's, interface.
Given the problems with navigation and the lack of social interaction and sensuous pleasures in the existing online grocery stores, the domain should be an excellent application example for social navigation techniques.
It is difficult to recommend food based on what other users have been shopping as the ingredients bought do not necessarily tell us what is going to be cooked.
It is on the level of courses somebody cooks that we would expect to be able to model users' food preferences.
Thus, we decided to recommend recipes to users.
Through which recipes we cook from we convey a lot about our personality, which culture we belong to, and our habits.
EFOL  allows users to shop food through selecting a set of recipes where the ingredients are added to their shopping lists.
Recipe selection allows for accumulation of user behaviour so that we understand which groups of users are most likely to choose which recipes.
Shopping from recipes also makes it easier for users to plan their meals ahead and shop all the ingredients needed without having to search for each one of them.
Through adding pictures of the courses the shopping also becomes more appealing to the eye.
Based on the user clusters, the recipes are in turn grouped into recipe collections.
Instead of making each recipe a `place' where users can meet, the recipe collections can be natural meeting points.
As the intent was to try various different forms of social navigation, we also wanted to populate the space - providing some form of direct social navigation.
The interface can be found in figure 1.
In short summary, the interface shows a recipe in the bottom-right window, and next to it the ranked list of recipes in the current recipe collection.
Above the recipe a chat window for the recipe collection is opened.
Finally, to the left, there is an overview map with all the recipe collections.
In it, currently logged on users are visualised using simple avatars.
Let us now discuss the design in more detail.
Recipes in the system are grouped into recipe collections.
A collection is a set of recipes with a special theme, for example `vegetarian food'.
They are also places where customers can meet, socialise and get recommendations about recipes.
Recipe collections are formed and given their names by their `editors'.
Users can move around between collections to get different recommendations.
Each collection contains a list of recipes that is ranked based on the usage pattern in that particular collection.
In a way this can be viewed as the system giving personalised advice to users based on what others like.
While in traditional informational retrieval systems the search is based on the words in the existing documents, recommender systems instead base their search on user behaviours .
One of the problems then becomes how to start, or bootstrap, such a system before any user behaviour has been collected.
This affects both the problem of items that have not been rated by users, as well as how to classify new users in the system.
One solution is to combine search based on the words in the recipes with collaborative filtering.
A common problem with existing recommender systems such as GroupLens  or Firefly , is that they give little or no feedback to a user on what user group she belongs to, or what user groups a recommendation is built upon.
The only feedback a user gets from the system is the recommend items, which is a poor way of reflecting a user's interests back to her.
One problem is the rather complex task of automating the "labelling" of user groups.
For instance, it would be extremely difficult for the Firefly system to automatically label a cluster of users as "reggae lovers with a flavour of ska".
Labelling of user groups not only tells the user something about which recipe collection she is at right now, but also gives information about other existing clusters of recipes and users.
This will allow a user not only to navigate the recommendations but also the user groups.
In this way, a user can try out selecting recipes from different groups, thus getting access to a more diverse collection of recipes.
Our solution to the labelling problem is to put an editor back into the loop.
There are two types of editors, the system editor and ordinary users.
The system editor looks at log data collected from the recommender system and cluster users based on which recipes they have chosen and `name' them with fuzzy names that convey somewhat of their content: "vegetarians", "light food eaters", or "spice lovers".
It should thus be relatively easy for an editor to find similarities between users or recipes, and get an intuitive impression of why they are similar.
Returning back to the definition of social navigation, one could view the system editor as upholding the dynamicity of the system, i.e.
The second type of editor is any user of the system who can at any time create a new recipe collection with a certain theme that she finds interesting, for instance, "Annika and her friends club".
These collections, obviously, do not have to reflect actual clusters of users as those found by the system editor.
However, if a group of users choose recipes from such a collection on a regular basis their user profiles will converge.
Again, this allows users themselves to shape and model the space they inhabit.
Visual recipe collections might provide the users with more insight into the social trails of their own actions as well as other users' actions that have lead to the recommendations they finally get.
In addition to the recommender functionality, users have a real-time presence in the store through icons  representing them in an overview map of the recipe collections.
As the user moves from one collection to another, the avatar will move in the overview map .
Our intention is to provide awareness of other online users.
Since the user can see which collections are currently visited by numerous logged in users, this will hopefully also influence their choice of recipe collection and recipes.
The system also provides chat functionality tied to each recipe collection.
Collections thus become `places' in the information space.
We could have chosen to make each recipe a place for chatting, but since the database contains three thousand recipes, each recipe would not become sufficiently inhabited.
The implementation allowed users to be invisible, but in the user study we decided to disable this functionality, so that the effects of awareness and privacy issues could be studied.
As discussed in the introduction, the social texture of a piece of information might be relevant.
This is probably true for recipes: it is the style of the recipe, the author, the kind of life style conveyed by the recipe, requirements on knowledge of cooking, that matters when we choose whether to cook from the recipe or not.
Through adding the name of the authors and making it possible to click on them to get a description, users get a richer context for evaluating and choosing among the recipes.
Each recipe also has a number denoting how many times it has been downloaded.
In a qualitative user study we tried to establish to what extent our social navigation design intentions succeeded.
We wanted to know whether the recipe collections aided users in filtering out good recipes, whether they were influenced by other users actions in the system , and whether they understood that the system changes with its usage.
We also wanted to check to what extent they experienced that their privacy was violated.
They were students from computer linguistics and computer science programme.
The two groups did not know one another before the study.
None of the subjects had any experience of online food shopping prior to the study.
The subjects used the system on two different occasions.
They were asked to choose five recipes each time.
Their actions were logged, and we provided them with a questionnaire on age, gender, education, and a set of openended questions on the functionality of the system.
They were given a food cheque of 300 SEK  and encouraged to buy the food needed for the recipes.
The division into the two groups is also in line with whether they would like to use the system again.
The ones who did not want to use it again were the ones who claimed not to be influenced by the actions of others.
Interestingly enough, more or less all participants found the system fun to use even the ones claiming they did not want to use it again.
When investigating subjects' answers to the open-ended questions, certain aspects of social trails in the interface do not seem intrusive at all, while others are more problematic to some users.
The fact that the recipes show how many times they have been downloaded is not a problem - it is not even mentioned.
Neither is the fact that choosing a recipe will affect the recommender system.
When asked whether they were bothered about being logged, one subject answered: "It does not bother me at all.
There are so many facts about me spread everywhere anyway, so what does it matter?
Besides, one gets logged in order for the recipe recommendations to get more individualised and that should lead to saving time."
This view keeps coming back: as long as there is a perceived benefit, and the name of the user can be faked, most users do not mind being logged.
The two users who disliked being logged answered: "Well, maybe.
I do not like being logged" and "It does bother me somewhat that others can see what I do, for example I did not jump as much to the other recipes collections but stayed in the `Personal Corner'  because of this.
But when it concerns something like a recipe I do not think that it matters that much whether I get logged or not.
One is relatively anonymous anyway since one does not log in with email address or any other personal information."
Thus, seeing the avatar moving between recipe collections is more intrusive than the fact the choosing a recipe affects the recommender system.
Otherwise, subjects did feel influenced by how the other users avatars moved between recipe collections: "If many stands in a collection one gets curious and wants to go there and check it out" or as another subject said: "I got somewhat distracted from seeing them jump around.
It was a little bit exciting when someone else entered the same collection ".
A worry we had as designers of the system was that users would feel that they were not rewarded when following other users.
Once a user has moved to a collection with many visitors, the only thing that changes is that she can chat with them.
She cannot see which recipes they are looking at nor which ones they have chosen from this collection so far.
The list of recipes in the collection are of course ordered by how popular they are, but this ordering is not only based on the actions of the concurrent users, but is also inferred from what other users, not currently logged into the system, have chosen in the past.
Finally, of course, the chatting is even more intrusive than the logging and avatar movements.
Overall, subjects made use of several of the social navigation indicators.
They chatted , they also looked at which recipe collections other users visited, and followed them around.
About half felt very influenced by what others did in the system.
Concerning the effects of adding pictures we found that half of the subjects got hungrier from using the system than they were before starting.
75% of the subjects were in the same or a better mood after using the system .
Privacy issues After using the system subjects answered the question "Do you think that it adds anything to see what others do in this kind of system?
What in such a case?
If not, what bothers you?"
One subject said: "It think it is positive.
One can see what others are doing and the chat functionality makes it more social.
One could get new ideas".
Not everyone was as positive: "No!
I cannot see the point of it, I have never been interested in chat-functions".
We looked closer at this difference and found that the subjects could be divided into two groups.
One group, consisting of 10 subjects, who felt influenced by others, and one minority group, consisting 2 subjects who claimed not to be.
The logs from their sessions with the system also backed up this difference: the first group chatted and moved between collections without hesitation.
In their comments, they also stated that visible activity in recipe collections influenced them: they were attracted to collections where there were other users and they became curious about what the other users were doing in those collections.
When asked about other services they would like, they were positive towards functions as sharing a recipe with a friend, more contact with the owner of the food store, and being able to comment on a recipe and see others comments.
The remaining two subjects were consistently negative towards social trails.
They did not like to chat, they disliked being logged, they did not want more social functions added to the system, and they could not see an added value in being able to see other users in the system.
Their claims were again backed up by log data: they did in fact not chat, and one subject did not even move between recipe collections.
But again, chatting was only intrusive to some.
Most  saw it as a positive addition.
In general, being logged does not bother users - they know that this happens all the time anyway, and they do not mind sharing their preferences for food.
It is when their actions are not anonymous and other users can `see them' that a minority of users react negatively.
Social affordance Through adding social trails to the interface we hoped that it would encourage users to explore the space, and perhaps guide them to a better understanding of the functionality, "the appropriate behaviour", in the space.
One subject said: "Yes, I found it interesting to be able to see what the others were doing.
The only thing that bothers  is if one sees them doing something and then one does not understand how to do the same thing.
Right at the beginning I did not understand how to switch recipe collection and then it was frustrating to see the others change collection all the time".
While this subject expresses frustration, she still captures our intention: to reveal system functionality through making other users' actions somewhat visible.
Social experience Adding social navigation to the design definitely made our subjects feel that it was a social experience: "The system became alive and more fun when one could see the other users".
Another user said: "I think it is good to introduce social contact.
In many systems on the net, several users may be logged in, but you cannot feel their presence".
One user said that the best part of the system was "To have a chat function so that one that not feel all alone in one's struggle against the system."
Users also asked for other forms of social functionality, such as being able to share a recipe with a friend, being able to chat with the owners of the store, getting in touch with professional chefs, or publishing a week menu for others to be inspired by.
Understanding recommender functionality Finally, despite the fact that these were students from a course on intelligent user interfaces, they did not have any clear picture of how the recommendations happened, or why there were recipe collections.
They hypothesised that the order of the recipes was affected by their choices, but they did not have any clear theories of why or how this happened or how it related to the recipe collections.
Even if our subjects did not fully understand the dynamicity of the recipe collections or the fact that they represented user groups, they got a better insight into the workings of the system than would have been possible if there had been no recipe collections at all.
One user said: "Yes, maybe a recipe that often get chosen is more representative of the recipe collection and can be recommended to others".
Strengths of the EFOL solution were that we did indeed create a social, pleasurable and entertaining system.
We also succeeded in turning the space of recipes and ingredients into a place.
Weaknesses that need to be carefully considered when designing for social navigation includes first of all ensuring for a stronger privacy protection for those users who wish to be anonymous.
Secondly, we need to watch out for the snowball effect where the social trails lead more and more users down a path they do not perceive valuable in the long run.
In this system, we lured users to move to recipe collections where there were many users.
The only gain they get from moving there is being able to chat to those users.
They cannot get any detailed information on exactly which recipes they are looking at.
Another problem is that at the time of choosing a recipe, a user has not yet cooked from it.
Thus it might be the wrong choice.
A third problem is how we convey the recommender system functionality.
First of all, a new design must allow users to be invisible if they want to.
This can easily be achieved with the Social Navigator toolkit through adding a flag to each user signalling their visibility status.
Secondly, users should be able to comment individual recipes, and also to come back and vote positively or negatively on a recipe that they have previously cooked from.
These votes should affect the recommender system, preventing the snowball effect.
An interesting extension to comments is to use `anchored conversations' .
A `sticky chat' started anywhere in a recipe, would then be stored with it.
These chats allow for both synchronous and asynchronous conversations which could convey a richer, social picture of the recipes and how to cook from them.
Through creating different visualisations of users, friends, chefs, and storeowners, users can choose whom to follow, rather than just blindly follow an anonymous crowd.
Users can then make a more informed choice, thereby reducing the snowball effects.
Concerning the third problem on how to convey the recommender system functionality, a possible solution would to show the contents of a user profile to the user.
Another approach is to avoid explaining the contents of a user profile altogether and instead provide information on which users that influenced a recommendation.
Through first defining and then applying a combination of social navigation design ideas and our tool, the Social Navigator, we have turned an online grocery store into a social place where shopping is done through picking recipes.
An initial qualitative user exploration study has shown that the subjects did indeed make use of the social aspects of the interface.
User Interface Design of Interactive Multimedia Services  Applications: An Empirical Evaluation, in Proceedings of the 3rd Pacific Workshop on Distributed Multimedia systems , 25-28.
Supporting Social Navigation on the World-Wide Web.
International Journal of HumanComputer Studies, special issue on innovative applications of the Web 46 , 805-825.
Where did all the people go?
A collaborative Web space with social navigation information, Poster at WWW9, The Hague, The Netherlands, .
Social Navigation: Techniques for building more usable systems, interactions, Nov-Dec issue, ACM, .
Dourish, P., and Chalmers, M. Running out of Space: Models of Information Navigation, in Proceedings of HCI'94 .
Erickson, T. and Kellogg, W. Social Translucence: An Approach to Designing Systems that Mesh with Social Processes.
To appear in Transactions on ComputerHuman Interaction.
Frostling-Henningsson, M. Dagligvaruhandel over natet... vad innebar det?
En kvalitativ studie av 22 svenska hushall 1998-1999, Licentiate Thesis, in Swedish, available from School of Business, Stockholm University, Sweden, .
