Jeremy P. Birnholtz1 Carl Gutwin2 Gonzalo Ramos3 Mark Watson4 1 Department of Communications, Faculty of Computing and Information Science Cornell University, 310 Kennedy Hall, Ithaca, NY 14853 2 Department of Computer Science, University of Saskatchewan 110 Science Place, Saskatoon, Saskatchewan, Canada S7N 5C9 3 Department of Computer Science, University of Toronto 10 King's College Road, Room 3302, Toronto, Ontario, Canada M5S 3G4 4 Institute Without Boundaries, 207 Adelaide Avenue, Toronto, Canada.
The initiation of interaction in face-to-face environments is a gradual process, and takes place in a rich information landscape of awareness, attention, and social signals.
One of the main benefits of this process is that people can be more sensitive to issues of privacy and interruption while they are moving towards interaction.
However, on-line communication tools do not provide this subtlety, and often lead to unwanted interruptions.
We have developed a prototype message system called OpenMessenger  that adds the idea of gradual initiation of interaction to online communication.
OpenMessenger provides multiple levels of awareness about people, and provides notification to those about whom information is being gathered.
OpenMessenger allows people to negotiate interaction in a richer fashion than is possible with any other current messaging system.
Preliminary evaluation data suggest the utility of the approach, but also shows that there are a number of issues yet to be resolved in this area.
In particular, people who work in face-to-face environments seem able to naturally manage the tension between awareness and privacy.
On the one hand, it is well known that informal interactions do not occur without awareness information about who is present and what they are doing .
On the other hand, people also need some privacy to work effectively - both in terms of protection from unwanted interruptions and in terms of the ability to keep certain activities and materials confidential .
One of the aims of CSCW research is to try and support the natural subtleties of face-to-face interaction in distributed environments.
Doing so while balancing privacy and awareness in online environments has proven problematic, however, as evidenced by early media space systems that were plagued by complaints about video cameras invading privacy and about the lack of subtlety in the way that conversations were initiated .
This was addressed to in the Piazza system  with a sequential negotiation of interaction, but the explicit steps in that system did not reflect the subtlety of real-world interaction that we will describe below.
Moreover, concerns about privacy raise the critical point that awareness information must also be useful in the service of facilitating interaction.
Too little information may mean that this constraint is not satisfied; too much information can mean privacy violations and unwanted distraction .
In this paper we introduce a prototype messaging system called OpenMessenger  that adds elements of this interactional richness and subtlety to on-line communication.
OM has two main design goals: * recreating the progressive disclosure of information that occurs in the real world - that is, the closer you move to someone, the more information you can gather about them; * explicitly showing people how others are gathering information about them, and tying visibility of others' actions to the amount of information being gathered.
To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee.
OM is rooted in a critical, but often overlooked, difference between face-to-face and distributed environments.
In faceto-face groups, the gathering and usage of awareness information are highly correlated - awareness information is gathered by looking around the room at others, and looking occurs when that information is being used .
Moreover, there is an additional correlation in face-to-face groups between physical proximity to somebody and the amount of information that can be gathered about them.
People routinely glance across the room to see if somebody is present or not , and might then move closer to that person to see how busy they are and maybe try to get their attention.
In this way, the obvious nature of attention in face-to-face environments mediates the tension between privacy and awareness .
People have fewer concerns about privacy because it is clear when others are looking at them, and awareness information is shared simply by virtue of being in the same space together.
These two key relationships break down in distributed groups, however.
Attention from others is non-obvious in that awareness tools  constantly gather and disseminate information about one's behavior, but provide few if any cues about when and how this information is being used.
This breakdown causes two critical problems in providing awareness information in distributed groups, both of which are addressed by OM.
First, the gradual process of initiating interaction is constrained by the lack of a natural progression from high-level awareness information to more detailed information and, possibly, interruption .
Second, privacy concerns arise in that the non-obvious nature of attention means that people do not know when others are paying attention to them and must therefore assume they are constantly being monitored.
Each person shown in an OM window is represented by a `ticket' consisting of a user-uploaded photo avatar, a user name, and a visual `handle' that can be pulled to get more information about that person .
Users can rotate their avatar to indicate how busy they are.
An avatar in full view indicates that the user is available, and the more the picture is turned away, the busier the user is .
This is intended to mimic the way in which people face their colleagues and attend to their surroundings differently depending on their workload.
Rotation also affects information gathering, as described below.
Our intent in the basic contact list representation is to make it easy to `look around the room' and see who is present and how busy they are, as people frequently do in real-world open offices.
While our current system requires people to explicitly rotate their photos, there are several automatic means of determining interruptability that could also be used .
There are several ways for users to gather more information about a colleague using OM.
In the descriptions below, we refer to the information gatherer as the observer and the person being observed as the target.
To see more information, the observer pulls down on the target's handle .
As the handle is pulled, the target's ticket expands in the observer's contact list, and more awareness information is revealed , in the following progression: Self-reported status .
A status message is set by users at the bottom of the OM window and allows people to convey more information than the photo rotation; for example, the message "working on CHI paper" might indicate to co-authors that they could interrupt, even though the target's avatar indicates that he or she is busy.
Window title of current application .
This level provides information about the target's activities, but without showing any detail about the contents of the activity.
It is often possible to infer from this basic information what the target is doing, such as reading email.
A blurred screen snapshot .
Due to privacy concerns, screen contents are revealed only with the permission of the target.
Again, the intent is to give a highlevel sense of what the target is working on.
The current version of OM resulted from a 12-month iterative design process involving three versions.
OpenMessenger is a Java-based instant messaging system that is designed for collaborative workgroups.
Each group runs its own server, and all participants using a particular server have the same people on their contact lists.
The general design approach behind OM is to provide an analog to working together in an open-plan office, an environment where interaction is frequent and where a wide variety of awareness information can be gathered .
People do not always admit to these glances, however , which is why we blur the snapshot and require the target's permission.
When the handle is dragged as far as it can go, two buttons appear in the expanded ticket that show interaction options.
One button  allows the observer to initiate a chat session with the target, and another  allows them to leave an email message instead of continuing towards a real-time interaction.
This choice of interaction styles is the analog of the real-world situation of walking closer to a person in the real world, and then either moving ahead with the interruption, or simply indicating that you will come back later.
In cases where the observer requests a conversation, the chat window opens only when the target accepts the request.
We also wanted to make it harder to interrupt people who were obviously busy.
We accomplish this by having a user's availability level  affect the amount of effort that the observer must expend to gather information.
When a target is fully available, their handle can be dragged quickly; when an avatar is less available, the handle must be pulled much further to get the same amount of information.
The metaphor is one of an elastic cord that pulls down on a handle which varies in friction.
Stage 3 : When an observer pulls far enough to request a screen snapshot, the system plays the piano tone several times in succession.
The observer's avatar continues to move, and an icon of a pair of eyeglasses appears in the observer's ticket.
If the target holds their cursor over the glasses icon, the observer is sent a blurred snapshot of the target's screen .
If the target does not give permission, the expanded ticket contracts back to its default size on the observer's screen.
If the observer requests a chat session by pressing the `call' button, the target's system plays a louder tone and displays a speech bubble icon in the observer's ticket.
If the target holds their cursor over this speech bubble, a chat window opens.
One of the goals of OM is to make information-gathering an obvious activity, just as it is in the real world.
In addition, we want the activity to become more visible as people gather more information.
This is also analogous to the real world, where real-world observers become more obvious the closer they approach.
In OM, as an observer progressively gathers information about a target, the target is notified using several auditory and visual cues .
Stage 1: When a handle is first pulled down, a soft piano tone is played by the target's OM system, and the observer's avatar moves slowly back and forth.
Both cues fade if there is no more observer activity - which could occur when the observer sees the target's status message, and decides not to go any further.
Another aspect of behavior in real-world open offices is that it is on public display for all in the office to see.
This serves two useful purposes that we wanted to replicate in OM.
First, the public nature of interruption and interaction in open offices makes overhearing the conversations of others a routine occurrence .
This is not always desirable and there are times where people in these environments seek out more privacy , but some overhearing can be useful for awareness.
OM makes interaction public by creating a new ticket in everyone's contact list for each in-progress chat session.
This ticket consists of the names of all people involved in the conversation; others can click to join the chat if they wish.
While the current version does not support more subtle ways of approaching these existing conversations, we plan to add this functionality in the future.
Second, the public nature of awareness gathering in open offices serves to moderate people's behavior, because everyone can see what everyone else is doing.
Those who deviate from norms can be seen doing so.
OM makes attention public by drawing lines between the tickets of users who are observing each other.
These lines make it possible to see if, for example, somebody is constantly observing somebody else.
It is our hope that making observation public will support the sort of social norm enforcement regarding privacy that occurs in the real world.
We conducted a small informal evaluation to gather first impressions about OpenMessenger in real use.
Eight people  at several institutions used the system for several trials over a two-week period, and shared their impressions via a free-response questionnaire.
Aside from a few technical problems, people were generally able to understand OM's design, and were quickly able to start using its novel features.
Participants were interested in the gradual-initiation mechanisms, and tried them often enough to get a reasonable impression of how they would work in realistic use.
Several people stated that they liked these features, and that they would use OM for workgroup awareness and communication.
There were a number of comments, however, indicating more work to be done in the details of supporting rich interaction and gradual initiation, along two dimensions.
The information presentation isn't quite right.
Our participants agreed that having multiple levels of awareness information and notification was useful.
However, they felt that OM did not always deliver information they wanted or in the way they wanted it.
Two said that the screen snapshot was too small to be useful, and another said that the status message was less useful because others rarely updated it.
On the notification side, all participants said that the notifications of observation were too distracting.
One wanted the indications to be much more subtle because she had already agreed to make her information public and didn't want to be bothered when others looked at it.
Another said that the sounds "demand a lot of attention," that the icon to approve the screen snapshot was not intuitive, and that approving the screenshot also required too much effort.
One suggestion was to show a `request pending' indicator that could be represented more subtly.
There were some privacy concerns.
Participants' first reactions indicate some privacy concerns, particularly with the screen-sharing feature.
While our participants were not averse to sharing this information, they did have concerns about exactly what others could see and for how long.
In the next version of the system, we will add an indicator to show when a screenshot is being sent, and how long and at what level of detail it can be seen by the other person.
It is also possible that moving to other sources of information  that are more useful and less intrusive than screen shots will eliminate this problem.
Another participant was uncomfortable with the system precisely because attention was public.
She said that when she realized others were hearing sounds when she pulled on their handles, she stopped gathering information, for fear of disturbing them.
It is likely that this problem would subside as norms developed around acceptable usage of the new tool, but this comment shows the extent to which public displays of information gathering activity can quickly change behavior.
As indicated by our preliminary study, the awareness cues and notification techniques require further design work, and this will continue as we produce further OM prototypes.
OpenMessenger provides us with a useful infrastructure for testing new representations and presentations for different forms of data  and notification methods .
We have planned a series of laboratory and field investigations to test these new designs.
One obvious limitation of this work is the lack of a rigorous field evaluation.
Therefore, we also plan to conduct a field test of a revised version of the software in a real distributed workgroup, to gain more design insights and a better understanding of how the issues described here can be supported in distributed groups.
