Department of Computer Science University of Toronto Toronto, Ontario Canada M5S 3G4 mjmcguff | ravin @cs.toronto.edu Abstract There exist several user interface widgets that dynamically grow in size in response to the user's focus of attention.
Some of these, such as icons in toolbars, expand to facilitate their selection - allowing for a reduced initial size in an attempt to optimize screen space use.
However, selection performance may be degraded by this decreased initial widget size.
We describe an experiment which explores the effects of varying parameters of expansion techniques in a selection task.
Our results suggest that Fitts' law can model and predict performance in such tasks.
They also indicate that performance is governed by the target's final size, not its initial one.
Further, performance is dependent on the target's final size even when the target only begins expanding as late as after 90% of the movement towards the target has already been completed.
These results indicate that expanding widgets can be used without sacrificing performance.
Keywords Expanding targets, Fitts' law, interaction design, empirical evaluation, interaction modeling INTRODUCTION In recent years, several promising interaction techniques have been described in the interface design literature  in which the size of the interface widget or viewing region dynamically changes to provide the user with a larger target area to interact with at their focus of attention.
Dynamically sized widgets can now also be found in a popular operating system  where the icons in the desktop toolbar expand when the cursor is over them.
Indeed, as software gets more complex with ever increasing numbers of commands and icons, an effective strategy may be to display icons at significantly reduced size by default and dynamically expand them to a usable size only when required.
This would allow for a larger amount of screen real estate to be devoted to the display of the underlying data, rather than to user interface widgets.
To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee.
Making these iconic targets small may, however, result in reducing users' ability to select them efficiently even if they subsequently expand to a larger size.
From Fitts' law , we know that as a target's width decreases, the time taken to select that target increases.
While Fitts' law has been empirically verified and shown to apply to numerous interaction scenarios , these have all been for situations where the size of the target is static.
It is unclear what happens when the target size changes after the user has already begun movement towards that target, as is the situation with dynamically expanding icons.
Is the selection time governed by the original size of the target when the user begins moving towards it?
Or is the final size of the target the determining factor?
Or is the answer dependent on when the target begins to expand and how fast it expands?
Further, is it possible to predict a priori what the selection time will be for such expanding targets?
Without knowing the answers to these questions, there is little scientific knowledge to guide the design of interfaces that incorporate dynamically sized widgets.
In particular, if selection time is determined by the initial target size, the use of dynamically sized widgets will essentially become a tradeoff between saving screen space and the ability of users to select these widgets quickly.
On the other hand, if the determining factor is the final target size, then all the advantages of dynamically size widgets can be realized without compromising performance.
If the answer lies between these two extremes but we can accurately predict the tradeoff, this knowledge will allow designers to make informed decisions about their designs.
In addition to the implications for interface design, these questions are also interesting from a human motor control standpoint since they address the fundamental issue of whether Fitts' law can even be used to model and predict movement times when the target size changes after the onset of movement.
In this paper, we present empirical work which investigates if performance when selecting such targets can be accurately modeled and predicted and what, if any, are the factors that influence that performance.
We explore the effect of varying the time at which the target begins to expand.
We also explore two different expansion strategies.
We determine if performance in such tasks is governed by the initial or final target size, or a combination of both.
Finally, we discuss how our work applies to the design of expanding widgets, and present some initial design ideas.
A  MT = a + b log 2  + 1 W  where a and b are empirically determined constants.
Note that the above formulation, known as the Shannon formulation, is the widely preferred alternative amongst several from both theoretical and practical perspectives .
The logarithmic term is called the index of difficulty  and is measured in "bits".
The reciprocal of b is the human rate of information processing for the task at hand and is often referred to as the index of performance  or bandwidth.
For the purposes of our current work, it is important to understand what exactly is modeled by Fitts' law.
One explanation, called the iterative corrections model , attributes the law entirely to closed-loop feedback control.
This model states that the whole movement consists of a series of discrete submovements, each of which takes the user closer to the target and is triggered by feedback indicating the target is not yet attained.
Another explanation, called the impulse variability model , attributes the law almost entirely to an initial impulse delivered by the muscles, flinging the limb towards the target.
The last part of the movement time consists of the limb merely coasting towards the target.
Neither of these two explanations, however, adequately accounts for all the effects shown in the large body of experimental data in the literature .
The most successful and complete explanation to date , called the optimized initial impulse model , is a hybrid of the iterative corrections model and the impulse variability model.
This suggests that the process modeled by Fitts' law is as follows : An initial movement is made towards the target.
If this movement hits the target, then the task is complete.
If, however, it lands outside the target, another movement is necessary.
This process continues until the target is reached.
Since the goal is to reach the target as quickly as possible, in an ideal case the subject should make a single high-velocity movement towards the target.
In reality, however, the spatial accuracy of such movements is highly inaccurate.
Thus, a movement with a long distance and short duration could be executed, but would result in a high standard deviation and therefore a low probability of actually hitting the target.
Conversely, a series of long duration and short distance movements could be executed, hitting the target with certainty, but the total movement time would be extremely long.
The solution, therefore, is to find the optimal balance of D's and T's that minimizes the total movement time .
In essence, this means that most aimed movements consist of an initial large and fast movement that gets the subject reasonably close to the target, followed by one or more shorter, and slower, corrective movements that are under closed-loop feedback control.
Possible sequence of submovements toward a target as described by the optimized initial impulse model .
Based on this explanation, in the situation where the target's width expands at some point during the movement, it can be expected that the first large and fast movement towards the target is planned and executed with the initial, unexpanded, target width as the input parameter to the subject's motor control system.
However, subsequent corrective submovements should, according to this model, be able to respond to changes in the target's size since these submovements are under closed-loop feedback control.
Thus, based on this explanation of Fitts' law, we hypothesize that in most cases target acquisition time should be dependent largely on the final target size and not the initial one at the onset of movement.
In the following experiment, we empirically verify this hypothesis.
However, there remains the question as to when the target should begin expanding.
A safe option would be to expand the target sometime during the execution of the initial movement, and have it completely expanded before the subject plans and executes the corrective submovement.
This would allow for the interface widgets to remain small and not obscure other more important elements of the display until absolutely needed.
At the same time we want to gain whatever advantage the expanded target size will have on target acquisition time.
Thus, it is critical to determine this crossover point at which the target must expand in order to realize the significant advantages of such expansion.
Can such a task be modeled by Fitts' law?
If it can indeed be modeled by Fitts' law, is it possible to predict performance in such tasks from a base set of data where no expansion takes place?
In other words, if we obtain a Fitts' law equation for the base case, can movement time for the expansion case be determined simply by substituting new values for target width W?
Is it true, as suggested by our analysis in the previous section, that movement time is dependent on the final target width and not the initial one at onset of movement?
At what point should the target begin expanding?
In the base case, the target had a width of W. In the expanded cases, the target began with a width W but expanded to Wexpanded when the cursor moved past a specified expansion point P. The amplitude A was measured from center of start position to center of target.
Pilot Study We first conducted a pilot study with three subjects in order to get a quick sense if all the experimental conditions we were considering would actually have significant effects on performance.
This would not only tell us if we were on the right track, but would possibly allow us to eliminate any extraneous conditions which would lengthen and complicate the final experiment without corresponding benefits.
Design There were three conditions which manipulated the target expansion parameter:
Apparatus The experiment was conducted on a graphics accelerated workstation running Linux, with a 21-inch, 1280x1024 resolution, color display.
A puck on a Wacom Intuos 12x18 inch digitizing tablet was used as the input device.
The puck was used to drive the system cursor, and worked in absolute mode on the tablet with a constant linear 1-1 control-display ratio.
Task and Stimuli A discrete target selection task was studied.
As shown in Figure 2, a small white colored outline box appeared on the left of the screen whose background was black.
Subjects were asked to move their cursor into this box.
Once the cursor had dwelled in the box for one second, a white colored rectangular target appeared on the right of the screen.
Subjects were instructed to move the cursor as quickly and accurately as possible into the target, and to indicate completion by clicking the puck button.
Timing began when the target appeared, and ended when the target was successfully selected.
We collected all movement data so that we could later identify reaction time, and the start of actual movement.
Also, while there were no "error" trials per se, the data allowed us to subsequently identify when subjects made mistakes and clicked outside the target.
This is a base case of a standard Fitts' law style aiming task which serves as a basis for comparison.
The target width grows from W to Wexpanded over a given expansion time period T. This is likely to be the preferred expansion strategy in real interface design.
Gradual expansion is chosen simply to avoid jarring visual popout effects that would occur if the target changed size instantly.
The target is expanded instantly at a given time in the motor domain but visually is faded in  gradually over time T. Here, the benefit of the larger target is available to the user instantly in the motor domain while the gradual visual fade in again prevents any jarring visual popout effects.
For the two expansion conditions, target expansion time T was set at 200msec which resulted in a smooth visual transition between target sizes For the two expansion conditions, we also had three different values for the point P at which the target began to expand: 1/4, 1/2, 3/4 of A measured from the starting point.
Thus, in summary, we had a total of seven conditions: base case, spatial expansion with P = 1/4, 1/2, and 3/4 respectively, and fading-in expansion with P = 1/4, 1/2, and 3/4 respectively.
For all the conditions, in units of 16 pixels, we used four target widths , fully crossed with four target amplitudes  resulting in sixteen A-W combinations with seven levels of task difficulty  ranging from 1.58 to 7.01 bits.
In all cases, the expanded target width Wexpanded was set to twice the initial target width W. While we conceivably could have varied this parameter as well, we felt that a 2x magnification was representative of what would be used in real interface widget design and was sufficient to address the main goals of the present study.
A repeated measures design was used for each of these conditions - subjects were presented with five blocks, each consisting of all sixteen A-W combinations appearing five times each in random order within the block.
Subjects were allowed to rest between blocks.
This was chosen as the preferred technique since, if used in real interfaces, it would avoid the visual interference of alpha blending two images as with the fading-in technique.
Thus, we have two main conditions, static and expanding.
Similarly, since our pilot results showed no effect on performance when expansion point P was changed, we only used a single value for P of 0.9.
With such a high P, we decided to reduce the expansion time T to 100msec.
This still results in smooth transition between target sizes but has the advantage of giving the user more time to react to, and advantageously utilize, the expanded target.
As in the pilot study, the expanded target width Wexpanded was set to twice the initial target width W. Since P = 0.9, having conditions where the target width is initially already more than 10% of the amplitude would mean that the user would already be in the unexpanded target before it begins to expand, thus gaining no advantage from the expansion.
Accordingly, for both expansion conditions, we eliminated the three easiest A-W conditions  from the original sixteen used in the pilot study.
The two conditions were counter balanced between the subjects: one group of six subjects did the static condition first followed by the expanding condition, while the other group of six subjects did the expanding condition followed by static condition.
The thirteen A-W conditions within each expansion condition were within-subjects.
A repeated measures within-subjects design was used for each condition - subjects were presented with five blocks, each consisting of all thirteen A-W combinations appearing in random five times each within the block.
Thus, the experiment consisted of 7800 trials in total, computed as follows: 12 subjects x 2 conditions x 13 A-W combinations x 5 trials per A-W combination x 5 blocks of trials = 7800 trials in total At the start of the experiment, for each of the two conditions, subjects were given a warmup block of trials consisting of a a single trial for each A-W condition, just to familiarize them with the task and conditions.
Data from these warmup trials was not used in our analysis.
The experiment was conducted in one sitting and lasted about 50 minutes per subject.
Subjects were allowed breaks between blocks of trials.
A repeated measures analysis of variance showed a significant main effect for the seven main conditions .
Pairwise means comparison tests showed that the base condition significantly differed from the others indicating that expanding targets resulted in better performance than the non-expanding ones.
This indicates that performance in the expanding target conditions is governed more by the final target width rather than its initial width.
There was no significant difference between the two different expansion strategies .
Varying the value of expansion point P also had no significant effect .
This is excellent news for interface widget design in that target expansion can occur as late as 3/4 of the way to the target and still result in performance that is as good as if the target had expanded much earlier.
In order to determine how far we could push the value of P, we performed a second pilot study with a single subject using a P value of 0.9.
At this value of P, performance was not significantly different from when P was 1/4, 1/2, or 3/4.
From a motor control standpoint, this indicates that the corrective submovements performed under closed-loop feedback control towards the end of movement can react quickly, accurately, and take advantage of last minute changes in target size.
The expanding condition will result in faster movement times than the static condition.
Performance in both conditions can be accounted for by Fitts' law.
Performance in the expanding condition is dependent largely on the target's final size, not its initial one.
Performance in the expanding condition can be predicted based on the Fitts' law equation generated in the base static condition.
Results and Discussion Repeated measures analysis of variance showed a significant main effect for condition .
The overall mean movement times were 1.335 seconds for the static condition and 1.178 seconds for the expanding condition.
These results clearly indicate that expanding targets can result in improved performance, thus confirming hypothesis H1.
This bound is plotted in Figure 4, and as can be seen by visual inspection, is close to the data measured for the expanding condition.
Although one might reasonably expect this for small values of P  in which case the user would have more time to take advantage of the expanded target, our data was collected with P = 0.9, suggesting that the user can gain the full advantage of a large target even if the target is small for most of the acquisition task.
Thus performance depends largely on the final target size, confirming hypothesis H3.
Linear regression analysis showed that the data for each of the two conditions fit a Fitts' law equation with r2 values above 0.97 .
Thus, hypothesis H2 is confirmed.
Given the a and b constants used to fit the data in the static condition, we can estimate a lower bound on movement time in the expanding condition.
To acquire an expanding target, the user should take at least as much time as they would to acquire a target that is always expanded:
It is plausible that for lower ID's, where the initial impulse movement dominates, the user is less able to react to and take advantage of an expanded target size.
If this is true, we should expect the performance for expanding targets to approach that of static targets at low ID's.
This possibility is sketched in Figure 5.
However, for the ID range examined in our study , performance with expanding targets approaches the theoretical bound, and therefore it is not surprising that the measured data can be fit to a straight line with r2 > 0.97.
Thus an interface with multiple expanding targets need not predict the pointer's trajectory to anticipate which widgets to expand.
Rather, simply expanding widgets that are near the pointer suffices to significantly facilitate selection.
This also means that the user is less likely to be distracted by multiple expanding targets on screen, since expansion need only occur in proximity to the cursor .
Simply expanding all nearby targets, however, may cause problems.
One solution is to expand an entire group of widgets around the group's center, avoiding occlusion.
For small groups of widgets, such as floating panels of a few tools, this might work well.
However, if the group is large, widgets on the group's periphery will be moved far from their original position during expansion, giving the user a moving target to aim for.
A second solution is to expand the nearest widgets, and to move adjacent widgets out the way.
This strategy is used in the desktop toolbar of , although not to facilitate selection: icons are expanded after the pointer has already moved over them.
We have built a prototype1 that uses this strategy to aid selection.
Figures 6a and 6b show the prototype's button strip before and after the pointer moves over a button.
Acquisition of targets is eased when the pointer approaches from above or below.
However, there are two problems with this design: first, although buttons appear to expand both horizontally and vertically, in the motor domain the advantage of this expansion is only realized in the vertical  direction.
In the horizontal  direction, the buttons only expand visually: in the motor domain the size remains unaltered.
Second, when approaching a target from the side, the expansion and contraction of neighboring icons creates a significant sideways motion, shifting the target's position and making it more difficult to acquire .
As a next step, we designed a new prototype with a focus on addressing the second problem.
Our second prototype reduces the sideways motion of adjacent buttons by allowing some occlusion .
Although occlusion may interfere with inspection and selection of some targets, we adopted two techniques to minimize the interference.
First, our design guarantees that no button is occluded more than a given percentage, the Max Occlusion factor, that can be tuned to adjust behavior.
Second, buttons that are occluded are always expanded at least enough so that their visible area is equal to their original unoccluded area.
This ensures a rough lower bound on how difficult they are to see or acquire at any given time.
Time MT to acquire a static target is MT = a+bID .
For targets that expand to twice their size, we can establish a lower bound of MT = a+b-1 .
For small ID's, where the initial impulse movement dominates, the actual movement time for expanding targets  and static targets should be close.
However, for higher ID's, closed-loop feedback control dominates, allowing the user to take advantage of the expanded target size and approach the lower bound.
Furthermore, given that the range of ID's in our study are representative of those encountered in common selection tasks, we believe therefore that the lower bound serves as a useful  estimate of performance with expanding targets.
Thus, Fitts' law can be used to roughly predict performance in the expanding case, confirming hypothesis H4.
The only other significant effect was a learning effect across the blocks of trials , which is typical in these sorts of experimental tasks.
Initial trials with our second design indicate that, with reasonable expansion factors , good values for the Max Occlusion factor fall between 20 and 50 %.
We believe that our second design is promising for onedimensional arrays of widgets in that it allows for an adjustable trade-off between excessive sideways motion and mutual occlusion between targets.
In future, we hope to explore improvements of our design, including addressing the lack of horizontal expansion in the motor domain and extending the design to 2-dimensional arrays of widgets.
CONCLUSIONS and FUTURE WORK We have presented experimental work that investigates factors that affect the acquisition of expanding targets.
Our results indicate that such tasks can indeed be accurately modeled by Fitts' law.
Also, the user performance is consistently aided by the target expansion, even when the target only expands after 90% of the distance towards the target has been traversed.
Furthermore, the improvement in performance is dependent on the final target size, not the initial one.
Performance in these expanding target tasks can be roughly predicted from a Fitts' law equation determined by a base set of data where no expansion takes place.
Most significantly, we have shown that targets that expand just as the user is about to reach them can be acquired approximately as fast as targets that are always in an expanded state.
We have also discussed the implications of these results for the design of user interface widgets that dynamically change in size to aid selection.
First prototype expanding widget design.
By the time the cursor reaches the desired button's location, the button has moved to the left and the user is now over a different button .
In the future, we intend to explore more robust techniques for predicting performance in the acquisition of expanding targets for a larger range of IDs.
We also want to explore the case where targets shrink rather than expand.
This case is less useful for interface design, but is nonetheless important to complete our understanding of the psychophysical underpinnings of such tasks.
From an interface design perspective, another important issue to explore is the possible detrimental effect of the distraction posed by having multiple expanding targets on screen.
We also intend to further develop our expanding widget designs to incorporate horizontal expansion in the motor domain.
