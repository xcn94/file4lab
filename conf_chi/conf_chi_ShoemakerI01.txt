L'auteur conserve la propriete du The author reiains ownership of the copyright in this thesis.
Neither the droit d'auteur qui protege cette these.
Single Display Groupware  research confronts the standard interaction model by examining how to best support groups of users interacting with a shared display.
One problem that arises with the use of SDG systems is that they often do not adequately support the display of private information.
Having the ability to keep information private can be usefui for addressing issues such as the "screen real-estate" problem, and problems associated with awareness overload.
With normal SDG systems, any information that is to be kept private by a user cannot be displayed on the shared display, as that display is visible to al1 users.
Some researchers have addresed the privacy issue by developing techniques that allow mal1 private displays to be networked with a large shared dispiay.
This technique is useful for many applications, but has limitations.
For example, private information cannot be shown within the context of related public information, and users are required to constantly shift attention from the p h t e display to the shared display.
This dissertation introduces Single Display Privacyware , a new interaction model that extends the SDG model to include the display of private information on a shared display.
Not only is public information shown on the shared display, but private information is also shown on the display, and is kept private by filtering the output of the diiplay.
This interaction model can be used to address the screen real-estate problem and the awarenm overload problem, and a h , unlike other solutions, allows private information to be shown within the public context of the shared diiplay.
A description of a prototype implementation of an SDP system is given, along with resuIts of a user study performed to investigate users interacting with the system.
The significance of SDP and conclusions regarding future research in the area are discussed.
As computers have evolved from special purpose computation devices to more general purpose tools, their role in society has also evolved to reflect their capabilities.
Desktop computers are now common in the workplace, schools, and homes.
Computer applications exist for word processing, music composition, mathematical computation, game playing, financial analysis, Barbie dressup, and numerous other tasks.
With computers solving many different problerns in many diferent domains, it has become apparent that traditional computer interaction paradigms are mot suitable for the completion of al1 tasks.
This work has already had an impact on the cornputer marketplace, with the surge in popularity of Palm Pilot style devices, console gaming systems, integrated cellphone/organizer devices, %rnart appliances," tablet computing devices, and other computing devices with novel interaction paradigms suitable to certain specific tasks.
This thesis will present a new interaction technique for computers that allows them to support smail group collaboration around a shared display while providing access to both private and public information.
Methods of interaction in the physical world, both between people in a group, and between people and objects, have been refined throughout the evolution of humankind.
People are very skilled at these types of interactions.
It is therefore desirable to enable people to employ these skills when interacting with cornputer systems.
Leveraging existing skills and skills of users can increase the ease of use of a computer system, as well as the power of that computer system.
Research that deals with groups of users working on shared displays, Single Display Groupware , attempts to leverage existing human skills that are weli-practised and effective because of every-day interactions in the physical world.
The primary motivation behind the use of shared displays is that people are skilled at working in the same physical location and on the same physical artifacts.
This is generally how collaborative work is performed in the physical world.
In this kind of situation collaborators can talk naturally back and forth, enhance their verbal communication with gestures, and can include the workspace in the discussion.
Working at a distance from collaborators may decrease the eficiency at which people work.
Similarly, working in close proximity of collaborators, but in different workspaces, can likewise decrease the eficiency at which people work.
Another trend in human-cornputer interaction research is to develop cornputer systems that augment human skills by providing extra functionality.
Computers have abilities that often contrast strongly with human abilities, and can be used to provide functionality that would not be available otherwise.
Beyond leveraging existing human abilities, these abilities can be augmented by additional and complementary abilities provided by the cornputer.
For exarnple, a portable cornputer could display the current time and position of the device to the user.
Tirne measurement and position measurement are two things that computer systems can do rnuch more accurately than humans.
Research in the area of augmented reality, portable computing, and wearable computers, is focussed on augmenting existing user skills.
In augmented reality, the computer superimposes images on the physical surroundings of a user in order to provide information that would not otherwise be available.
Augmented reality does not have any direct parallel in the-physical world; it does not leverage an existing human ability.
It i s stiU, however, a potentially useful technique for providing usable and useful computer interfaces.
The technique presented in this thesis, known as Single Display Privacyware , involves the ability to display private information on a shared display.
Users gathered around a shared computer display normally al1 see the same content on the display.
Our technique "augments" the shared display, making it possible to display specific private content to individual usen.
The technique can be used in several ways.
First, different users can see entirely different content on the shared display.
Second, "private areas" can be designated on the display.
Within these areas each user sees different content.
Third, public content and private content can arbitrarily be mixed on the display.
This rnakes it possible for private information to CO-existwithin the context of public information.
This dissertation is organized into five main chapters: Background Literature, Single D i s play Privacyware, Implementation, Expriment, and Condusions.
Chapter 2, Background Literature, discusses research in the areaof SDG that holds relevance to the issues discussed in this thesis.
Chapter 3, Single Display Privacyware, provides adiscussion of the motivation behind the creation of SDP as a concept, discusses problems that the interaction technique addresses, and provides example application domains that could benefit from the use oCSDP systems.
Chapter 4, Im plernentation, describes the hardware and software corn ponents of a prototype SDP system.
Chapter 5, Experiment, discumes a study that was performed using the prototype system with the goal of identifying advantages and disadvantages to using the system, as well as possible future research directions.
Finally, in Chapter 6, conclusions are drawn regarding the significance of SDP as a new area of research.
In this thesis we are interested in a broad range of issues related to supporting collaborative compter-supported work.
We are particularly interested in the use of different types of technology to address interface issues in different environments, especially that of Singie Display Groupware.
As such, we will analyze research related to different technologies that are used to support group interactions.
More fundamental, perhaps, than the technologies themselves, are the underlying issues that are targetted by the use of different technologies.
Research related to these issues, such as p h c y and awareness, will also be discucsed.
Research in the area of Single Display Groupware  examines how to best support the interactions of multiple users with a shared computer display.
While SDG applications have existed for some time, the concept of SDG as a class of computer applications was first introduced by Stewart , and later given a more formalized treatment, again by Stewart .
While research in the area of SDG is a relatively new phenomenon, there has been significant interest in recent years.
Researchers have been investigating SDG systems in different domains, such as education and business, and in relation to different categories of tasks, such as construction tasks and problem solving tasks.
Since the SDG mode1 does not dictate interaction styles, this is also of interest to researchers.
Different types of interaction styles, such as mouse, PDA , and tactile tabietop systems, are al1 being examined.
This section WUsummarize recent research in SDG, as categorized by interaction style.
Mouse based PC systems, usually consisting of a mouse, a keyboard, and a monitor, are the rnost widely used and recognized computer systems.
Not only are users accustomed to interactions with these systems, but software companies focus their development efforts towards these systems.
Mouse based PC systems are truly pervasive in our modern society, and thus are important platforms for SDG applications.
The development of toolkits is often necessary to facilitate experimental investigations into SDG and advance the state of technology.
These toolkits are often required in order to provide SDC functionality, such as supporting multiple simultaneous input devices, which does not generally e s s t in commercial computer systems.
Perhaps the earliest example of such a toolkit is MMM, developed by Bier and Freeman .
MMM was a desktop application frarnework in which multiple users could edit text documents and perform simple drawing tasks.
Issues raised by the use of MMM inciude that of screen real-estate, in which information widgets for different users interfere with one another because of limited screen space.
This issue has yet to be adequately addressed, and rernains an important topic of research.
COLT introduces the concept of Cooperatively Controlled Objects , objects that can be simultaneously manipulated by multiple users.
The COLT system and the accompanying concept of CCOs provides both a methodology and an architecture for the design and irnplementation of SDG systems.
In an SDG environment users are often forced to share resources.
For example, there may be only one mouse to use between two users, or users may be forced to share screen red-estate.
When this happens it is important to understand the interactions between the users, as well as between each individual user and the system.
Inkpen has investigated users in a variety of collaborative conditions.
One study  examined pain of children playing puzzle games in three conditions: solo play, parallel play , and integrated play .
This research revealed that children were sometimes more motivated and more successful when playing together on a single computer.
Additional researcli in this area found that providing pairs of users with two independent mice, as oppased to one mouse, significantly increased the level of user engagement .
Results such as these highlight the importance of understanding how new technology can impact inter-user interactions.
The idea of using Personal Digital Assistants  for interacting with a shared display in an SDG environment has become popular with researchers.
The use of PDAs is immediately attractive for several reasons.
First of dl, PDAs are flexible devices.
Custom software can be written so that the PDA can periorm a wide variety of functions, frorn cursor control to image manipulation.
Second, like mice, PDAs are inherently personal.
Thus, it is easy to imagine a scenario in which several users each use a PDA to interact with a larger shared screen.
In this scenario the PDAs act simultaneously as interaction devices and display devices.
This section discusses investigations into systems of this type.
This does not necessarily hold when users are manipulating devices such as mice and keyboards within a virtuaI environment.
Mice and keyboards are not direct manipulation devices.
The results of actions performed by users manifest themselves in locations removed from where the actions were performed, making it more difficult for individual members to associate actions with corresponding group members.
Rekimoto has addresseci the problem caused by the use of remote manipulation devices by developing a systern employing a novel pick-and-drop direct manipulation interaction rnetaphor applied to a system comprised of persona1 PDAs and a shared whiteboard .
The development of the system was prompted by the realization that manipulation techniques suited to single-user systems do not necessarily translate well into a multi-user whiteboard environment.
His "pick-and-drop" system lets users transfer information from a PDA to a shared screen by simply "pLkingn the information by tapping it with a special stylus and "dropping" it ont0 the shared screen with a similar tapping action.
The "pick-and-dropn metaphor closely models physical world interactions.
It is also desirable to be able to transfer information from this private space to the shared public display.
This separation of private frorn public is something that is easily supported by the use of private PDAs networked with a shared public screen.
Greenberg provides a discussion of a prototype system that was developed for use in a meeting environment.
While the results are preliminary, they serve to highlight a largely ignored facet of SDG research, that of privacy.
Research by Myers has been important in raising awareness to the possibilities of using PDAs in conjunction with shared displays.
Tabletops and whiteboards afford group interactions over a shared workspace.
It is very natural for a group of people to gather around a table to analyze flowcharts, CAD designs, or other information.
Indeed, many meeting rooms are equipped with both a large table around which to gather, and a whiteboard on which to present information.
It i s because of this that the use of digital tables and whiteboards has become a large area of investigation.
One major strategy employed by researchers to "augmentn the functionality of a whiteboard or tabletop is to project computer generated images directly on the physical surface of the device.
The functionality of the device is "augmented" by projecting content shown on the device.
This section describes several different approaches researchers have taken towards augmenting the abilities of tabletops and whiteboards.
Rekirnoto has contributed to SDG research by introducing his technique of augmenting normal surfaces with digital content .
His augmented tabletop and wall projection systern is built by virtually splicing together the displays of laptop computers that are placed on the surface of a table, as well as the area provided by an adjacent wall.
An overhead projector projects images that till in the gaps between the laptop displays, and another projector displays content on the wall.
The result is a physically seamless and continuous workspace over which windows, files, and cursors can be dragged.
When a new user arrives and places a laptop on the desk, the laptop is added to the surface of the augmented desktop.
This technique makes it simple for groups of computer users to network their laptops in an intuitive manner.
The physical surfaces of the desk and wall serve the same role in the virtual world as in the physical world, providing users with a medium in which information can be shared.
The system provides urban planners with a medium in which they can test the environmentai effects oldifferent building layouts.
The system is baseci on tangible media, all the tools used are physical objets which are placed or turned to yield desired results, just as in the physical world.
Picking up and moving e U as the position of structures produce red-time changes in a simulation of airuow, as w shadows and reflections.
A camera monitoes the positions of the buildings and tools and a computer calculates the changes in airflow and lighting.
The effects are visualized through images projected on the tabletop by a projector.
With this tool urban planners can easily experiment with different building arrangements.
This is another example of a system that uses augmentation of physical surfaces to provide a powerful computing systern suitable for groups of users.
Whiteboards can function similarly to tablotops, in that they are large workspaces that invite interactions by groups of workers.
The only diference is that, with a vertical rather than horizontal mounting, whiteboards provide a different kind of access to users.
These rooms, which often serve such things as electrical grids and industrial plants, are run by groups of worken who must pnicess huge arnounts of data being sent from different parts of the system being analyzed.
Typically, the labour is divided among worken in order to accomodate the large amounts of data.
Workers must stiU coordinate their work, however, and tKs is whece a Large shared screen disptaying an overview of the system i s useful.
Whiie the worken require an overview of the system,
In many systems, private monitors are used to show detailed information to specific workers.
A discussion of such a system is provided by Tani.
Among other things, Tani discusses the need to provide continuity between the private space of the small displays and the shared space of the large screen.
One issue that is prevalent in the area of distributed groupware and is also relevant to SDG research is the question of awareness.
Awarenecs, the understanding of what other users are doing, is important in distributed groupware because remotely located users have no direct contact with each other.
Users must be able to deduce the actions and intentions of others through awareness widgets displayed on the screen, or through other media such as audio or haptic feedback.
Awareness is also an issue in the design of SDG systems, although the problems are somewhat different.
In the case of SDG, every user is provided with an abundance of information concerning other users' actions, however, this information can easily become overwhelming and confusing to a user.
This problem can be addressed by limiting the awareness information available to any particular user.
The awareness problerns faced in SDG systems and distributed systems are different but related, and research in one area can easily be relevant to the other.
This section will focus on research on privacy and awareness in distributed groupware that is relevant to SDG research.
Distributed groupware awareness research has focused significant attention towards how to best display awareness information to users.
Much of this research deals with "awareness widgets," the name for onscreen components that convey awareness information.
A goad discussion of awareness widgets is offered by Gutwin and Greenberg , and Gutwin and Roseman.
Among the specific awareness widgets discussed in the papen are telepointers, which indicate mouse positions of remote users, and rnulti-user scrollbars, which indicate scroiling position of remote users.
Also diiussed are a variety of different workspace views, which help users understand what part of the workspace remote users are working in.
Other widget research that has been pecionned for single user systems can also have relevance for multi-user systems.
Harrison , all deal with transparency and how it can be used in conjunction with tools and display layen.
The use of transparency can have a deep impact on user awareness.
Other widget research to consider is that of Bedemn .
He investigated the concept of local tools, tools that can be picked up off the workspace, used directly, and then dropped again on the workspace.
These tools might have a role in increasing user awareness and limiting screen clutter.
In order for awareness information to be distributed among a group of users some mechanism of transport must be employed.
As discussed by Dourish and Belloti ,these mechanisms can fa11 under a number of broad categories.
First, an &informativen mechanism requires that users actively transmit awareness information to other users.
Second, a "role restrictive" mechanism requires that individual usen be categorized in some manner, and that specific awareness information be broadcast to users according to their categorization.
Dourish and Belloti argue that neither of these mechanisms is ideal.
They argue that a third mechanisms, the "shared feedbackn mechanism, i s superior.
This information is then displayed to al1 users as part of the workspace.
In essence, the power of individual users must be sacrificed for increased group awareness, or vice versa.
An example tradeoff given in the paper concerns workspace navigation, whether individual users are able to Freely explore the workspace, independent of ot her users.
Allowing this activity favours individual user control, while forcing usen to work in the same space favours group awarenesc.
Limited research has been conducted concerning the role of privacy and awareness in SDG systems.
As evidenced by Section 2.1, most SDG research has involved the development of new technologies, and the investigations into the implications of t hose technologies.
Analyses into the requirements for successful SDG systems have largely been neglected.
Nevertheless, several SDG research efforts have tangentially dealt with privacy issues.
Rekimoto's pick-and-drop implementation, already described in Section 2.1.2, is probably the m a t intriguing SDG system supporting privacy.
While intended to support intuitive physical manipulation of data by usen, a side effect of the implementation is that information moves naturally from private spaces to a shared public space.
Users carry private PDAs that hold their private information, while the shared display holds public information.
While this sepatation of public and private spaces can be valuable, it can also pose problems.
It makes it impossible, for example, for private information to be shown in the context of public information.
Showing private information in a public context can be useful if observing the two pieces of information in proximity results in a deeper understanding of t heir relationship.
Both support different degrees of privacy by displaying information on a PDA, Greenberg's system is specifically designed for privacy support, and aliows for a clear distinction between private and public.
Information can be transferred between public and private and can be displayed on the shared screen or private PDAs.
Myers' system is somewhat l e s targeted to the support of privacy.
It allows multiple users to perform simple control operations such as scrolling and link browsing on their private PDAs, while actions are carried out on the shared display.
The research presented in this dissertation addresses the problem of supporting private information on a shared display, while overcoming some of the problems that are inherent in solutions pmposed by other researchers.
The approach of this research, that of displaying private information within the public context of the shared display, has been briefly diicussed in a previous paper , with a more in-depth discussion provided by .
The motivation for the creation of Single Display Privacyware  as a research area is drawn directly from the motivation for Single Display Groupware  as a research area, and the problems associated with SDG systems.
As such, this section will first discuss the motivation behind SDG, and will then discuss the problems with SDG that can be addressed by SDP systems.
SDG encompasses computer systems that are meant to support groups of users collaborating on a single computer display.
It also couples navigation between users.
The result of this definition is that SDG provides users with private input channels and a shared public output channel .
The motivation behind SDG research and development is that such systems provide a richer and more natural environment in which to work, as compared to remote collaborative systems.
Due to their proximity, -users are able to interact with each other using verbal discussion and gestures.
Users are also helped by the use of a shared artifact .
When peopke work collaborativeiy in the physical world, shared artifacts are frequently used.
These skills can include the ability to d e velop a shared understanding of the task by the users, and the ability to coordinate actions performed by the users, While definitive proof of the advantages of using $DG systems is lacking, the proliferation of such systems in certain domains is an indication that they can be useful.
The screen real-estate problem is a serious problem that emerged early in the history of SDG research.
It concerns the use of limited display area that must be shared by several users.
Users of any computer system make use of a variety of on-screen input widgets to perform actions.
Feedback widgets provide users information specifying the outcornes of those actions.
In the case of groupware systems, awareness widgets inform users regarding the actions of other users in the system.
When multiple users work on a shared display, all of their widgets must be shown on that one display.
In many cases, the widgets require more space than the display has to offer.
Several methods of combatting the screen real-estate problem can be employed.
A simple strategy is to either shrink widgets or to reduce the number of them that are shown.
Eliminating unnecessary widgets can also work, but it is not always passible to remove widgets without compromising functionality of the system.
A more complex method of combatting the screen real-estate problem is to have users share widgets.
For example, users working in a paint application could al!
This method can be very succecsful in reducing the amount of required display space, but has problems of its own, primarily that sharing widgets, especially feedback widgets, can cause a lot of confusion for usen.
With different usen selecting different tools on a toolbar,
The awareness overload problem in SDG is closely related to the screen real-estate problem.
The awareness overload problem exists because of the fact that as more information is shown on the display it becornes more difficult for users to process the information and determine what information is relevant.
Each user has personal feedback widgets that provide information concerning that user's actions.
As they are visible to everyone, these widgets also provide awareness information to the other users.
SDG systems by default have a large amount of awareness information that can be overwhelming to users.
Information that is not desired as awareness information for the group can be shown on a private display so that it does not Up~lluten the shared display.
There is, of course, a judgement that must be made as to what information is useful as awareness information, and what information should be kept private.
While the use of PDAs serves its purpose, it rnakes it necessary for users to coordinate several displays, possibly creating significant cognitive overhead.
The value of information is often heightened if that information is shown within its context.
For example, a map of Alberta can be more valuable if it is shown with maps of surrounding Provinces and Territories.
Information can even be rendered useless if removed frorn its context.
A "you are here" arrow is useless if there is no context provided .
Figure 3.2: The "You are here" arrow is useless once rernoved frorn its context.
Existing SDG systems, even those with privacy support, are unable to show private information within a public context, as the context provided is on the shared display.
Showing private information in'its context would render that information public, while displaying the information on a private device removes it from its context.
There are many examples of information that a user rnight want to view in a public context while keeping that information private.
Cursors, for example, might be kept private to ceduce screen clutter, but must exist within a public context or be rendered useles.
Information used by workers in industrial control rooms is often specific to each worker, but can be more rneaningful when shown within the context of the general status of the system.
Essentially, any inter-related pieces of information, for example of a spatial or geographic nature, that users might access independently from one another could benefit from being displayed privately within a public context.
Single Display Privacyware is a class of collaborative cornputer systems that extends directly from SDG, and is meant to address demonstrated problems with SDG.
An SDP system is defined as being an SDG system that provides each user with a private output channel on the shared display, in addition to the public output channel shared by al1 users.
The private and public channels employ the sarne physical area on the display; any point on the display can be either public or private at any time.
This makes it possible for private information appropriate for each user to remain private while being shown in the context of the public display.
While traditional SDG systems provide private input channels for each user and one shared output channel for al1 users , SDP adds additional private output channels for each user .
This results in additional flexibility being added to the SDG model.
Most significantly, users need not share feedback.
While al1 users of SDG systems share feedback via the shared output channel, the private output channels of SDP systems can override the shared output channels.
A result of this, which also lomens the SDG definition, is that users of SDP systems are not restcicted to coupied navigation.
The private output channels make it possible for individual users to navigate independently of one another.
This would only happen, of course, if the navigation for al1 users was made private.
Keeping navigation public would force coupled navigation, which would preserve some hypothesized benefits of SDG systerns.
The SDP label does not imply any particuIar implementation of private and public channels.
The only requirement in terrns of hardware is that users have some means of private input, and that there be a display that is capable of showing an arbitrary mix of public information targeted to the group and private information targeted to specific users.
The means of achieving privacy is not specified.
Systems might employ technologies such as shutter glasses, polarization filten, head-mounted displays, or any other system that achieves the same effect.
One of the areas in which the implementation and adoption of SDP could have the deepest impact i s that of desktop applications.
Desktop PCs are pervasive in modern households and businesses, and any benefits that might be achieved by adopting SDP systerns would most readiiy be reaped in these environments.
Desktop applications are also of considerable interest because as a class they encompasses most of the systems that have been investigated by SDG researchers.
Privacy issues, such as screen reai-estate and awareness overload, that have been identified by this body of research, can therefore be directly addresseci by SDP.
Both Garth and Iliana see the wireframe of the bug, but privately they each see their own toolbar setup.
Iliana glances at the display.
Accustorned to her own personal toolbar setup, Iliana easily gets into the right mode, tweaking joints in individual keyframes of the animation.
Garth follows along, seeing the changes reflected both in the public image of the bug, and in his private animation timeline and feedback widgets.
Iliana finishes her changes, and Garth then continues along, making more changes to the animation.
Iliana comments on Garth's changes, and works aiongside him, guiding his actions.
Finally she is satisified with his approach, commenting Tes, that's it.
You're putting the keyframes at the right spots now."
Iliana leaves, and Garth continues with his work.
This scenario depicts a normal type of interaction that might occur at any workplace.
Different users of computer systems have different skills, and they often share these skills to help each other complete tasks.
What is unique about this scenario, however, is that the display the users work on is augmented with private information for each user.
The specific scenario given involves artists at an animation studio.
The private aspect of their computer system allows them to access their own private toolbar setups.
Informal discussions with artists at Electronic Arts revealed that rnany of them custornize the interfaces of their art packages, and become very efficient at operating those custornized interfaces.
Being forced to adapt to someone elses interface might slow a user down, or discourage them from getting involved in the first place.
This benefit of having privacy support is in addition to the benefits that might be gained by reducing screen clutter and removing unwanted awareness information.
Digitai whiteboards are of growing interest to SDG researchers, mostly because they naturaliy support group interactions.
Digital whiteboards are also of interest because their non-digital counterparts are dready widely used in meeting rooms and schools.
This scenario describes a potentiai application for SDP that involves a whiteboard being used in a business meeting much as it would be if it were a simple "ink and surfacen whiteboard, with added functionality provided by the digital nature and pnvacy support.
Scenario 2: Garth is an upcoming talent at a big architectural firm, and is making a presentation to some clients and partners in the firm .
They gather in the meeting room, where everyone sits down around the large meeting table.
He pulls up the latest draft of the office tower being designed for the clients.
As he talks, he uses his stylus to highlight and point out different features of the designs.
One of the clients is puzzled, he can't remember what one portion of the plans looked like before.
Not wanting to disrupt the meeting, he pulls up the previous version of the plans and displays them privately on the whiteboard.
He superimposes the old plans with the new ones, and observes the changes that have been made.
Meanwhile, another client remembers an idea he had concerning the office tower.
He pulls up his notebook privately on the display and Aip through it until he Ends the right page.
He then grabs the page contents and makes them public.
The clients and Garth discuss the idea, make annotations, and make changes to the plans.
This scenario depicts a system that combats many of the problems found in SDG systems.
First, one client is able to access contextually sensitive information  and superimpose them on the new plans.
Not only is he able to do this without bothering other meeting members, but he is able to look at the private information in the context of the information currently being discussed on the shared display.
Second, another client is able to browse his personal notebook, looking for the notes relevant to the discussion.
Further, when the meeting participants arrive at the annotation and editing stage of the meeting, the tools necessary for doing the annotations and editing are kept private to each user.
This reduces the number of widgets on the screen, as well as the amount of awareness feedback being shown to each user.
The result is a better ability to manage screen real-estate and a possible reduction in cognitive overhead for each participant.
While operators of control moms often share a large screen showing overall information of the system being controlled, detailed information or information relevant to a particular worker is usually shown on a private display.
This scenario gives an example of how SDP could be used to move some of that information from the personal display to the shared display.
The display h a s lights showing system status for different components of the plant.
As Garth and Homer lounge at their desks, one of the lights on the aisplay starts flashing red and a buzzer sounds.
Roused out of their reveries, Garth and Homer examine the large board and locate the red light, Garth, with his privacy glasses on sees much more than just the red Light.
He sees water flow idormation from node to node on the display.
From thii he is able to teii that the water fiow to the problem point is normaI.
Homer, with his privacy glasses, sees similar flow information, only for him it is heat flow information.
From the information on the display, he is able to determine that the heat flow from the problem node to a neighbouring node is abnormal.
At this point he accesses the private display at his desk to examine more detailed information on the two nodes affected by the problem.
Armed with this information, he performs the operations necessary to avoid a disaster.
Figure 3.5: Private and public information available to two operators of a control room.
This scenario depicts a hybrid system that can show information both on the shared display and on a private display.
In a control room situation, it is often necessary for workers to react very quickly to changes in status shown on the shared display.
It is desirable for information to be displayed in such a way that it is easy to comprehend for the workers.
In the scenario described, some private information was shown on the shared board.
Because the information was shown in its context, heat and water flow values adjacent to their corresponding nodes, the two workers may have undentood the situation more quickly than if d the private information was shown on private displays.
The extra step of correlating information on the shared display with information on the private display was skipped.
At a certain point, however, the worken switched from the shared diiplay to their private displays.
In recent yean, computer gaming has grown immensely in popularity all over the world.
Multiplayer garning i s one aspect of garnes, in particular, that has been focussed on recently by the industry.
Multiplayer gaming on the internet, over LANs, and on console systems are all extremely popular.
This ccenario considers a possible SDP system in use in a console gaming environment.
Scenario 4: Garth and Saddam are two feisty teenagers with a serious cornputer gaming rivalry.
One afternoon, Saddarn arrives at Garth's house, they plug their console gamesystem into the TV, put on their headsets, and insert their favourite Arnerican football game cactridge.
The game boots up, and they are shown the play selection screen.
Garth, on defence, is faced with a private screen showing an array of defensive play choices that only he can see.
He chooses the 4-3 safety blitz, knowing that Saddarn will not preaict the aggressive and sneaky play.
Saddam, shown a private set or offensive play choices, chooses a simple passing play.
Both Garth and Saddam see a puMic view of the playing fieid with the playen ready and lined up.
Saddam sees the public view augrnented with private arrows indicating the routes his receivers will run .
Arnong these, he sees the aggressive and risky path his safety will take, directly for Saddam's quarterback.
Garth instructs his safety to blast through Saddam's defensive Iine, leap through the air, and tackle Saddam's quarterback.
Gart h jumps in the air screaming, taunting Saddam in hii glorious moment of victory.
This scenario depicts two players in a very popular gaming environment, multiple players playing on a gaming consoIe on a shared diiplay.
Present day console systerns are typicai SDG systems.
They display aU information publicly to ali players.
This can have an adverse affect on gamepIay if there i s any dernent of subterfuge intended in the gameplay.
One picks a defensive play, the other picb an offensive play.
These picks are private, and knowledge of an opponent's pick would have a large eiect on sttategy.
The SDP system in the scenario makes the play seleetion phase of the game twly private.
Second, in the actual play portion of the scenario, relevant private information is visible to each player in the context of the public game ztion.
The scenarios presented previously describe SDP applications that could be implemented relatively easily using today's technology.
E t can also be useful, however, to consider more fancihl scenarios that might be implemented in the future when more advanced technologies and acwmpanying infrastructure are avaiiable.
Sesriario 6 : This scenario aisa involves Garth, who i s now a weary business travder on hii way from Vancouver to a meeting in Boston.
H e arrives at Vancouver International Airport and enters the terminal buMing.
Upon entering the building the first thing.he %ces ia the large display with uight information.
I n large letters, filling the entire screen, it says "HeUo Garth.
Yonr Pight leaves in 20 minutes from gate 23A.
In the meantime, they have chocolate cucumber muffins at the coffee shop to yout M."Garth i s now up to date on his light information, and i s on track to getting hi favourite snack, chocohte cucumber mdins.
He sees to h k left a CO& shop.
The sign indeed says "yes we have chamlate cncumber muffins."
Aftet enjoyuig his snack he buards the plane.
During the flight, the 2 metes HDTV mwie screea descencls fmm the ceiung at the front of the cabin and starts showing YSleepleas in Seattle."
He sees to his left a coffee shop.
The sign indeed says "yes we have chocolate cucumber muffins."
After enjoying his snack he boards the plane.
During the flight, the 2 meter HDTV movie screen descends from the ceiling at the front of the cabin and starts showing "Sleepless in Seattle."
Fighting a gag response, Garth pushes a button on his console and the movie switches to "Army of Darkness."
After his relaxing fiight Garth steps down from the plane and heads to the rental Company.
Upon arriving in the parking lot a series of projected arrows direct Garth to his car.
He drives off and arrives at hjs meeting safely.
This scenario described several futuristic SDP applications that hnction seamlessly within our intrepid adventurer's daily life.
The display screens in the airport are able to determine that Garth is in proximity, and display private information specific for him.
The system knows his Bight information and his eating tastes , and direct him accordingly.
Of course an airport i s often very busy, and the sarne displays must simultaneously show very different information for different observers.
On the plane, SDP makes another appearance with the in flight movie.
The SDP nature of the movie screen makes it possible for Garth to opt out of having to endure "Sleepless in Seattle," instead he enjoys a film more suited to his tastes.
Other passengers, of course, are able to watch their own favourite movies at the same time, on the same display.
Finally, another SDP system makes it possible for Garth to find his rental car quickly, quite possibly while other customers of the rental agency are being directed to their own cars, in different locations, What makes the examples in the scenario so interesting is that they highlight the us+ fulness of making private information contextually available in every aspect of our public world.
While ail the information in the scenario could be made available on a PDA, it would not have the same impact, and would not be as useful.
The arrows in the rental agency related directly to the geography of the parking lot.
The information about the chocolate cucumber mufin also contained irnplicit information detailing where the muffin could be obtained.
Finally, the movie was certainly more satisfying being displayed on a 2 meter HDTV screen, as opposed to a PDA.
Another advantage gained through the use of SDP systems was that information not relevant to Garth was hidden to him.
The definition of what constitutes "cognitive garbagen would, of course, need to be deterrnined s visibie and somehow, which raises questions OP how much control a person has over what i what is hidden.
While thii scenario possibly demonstrates the ultimate convergence of SDP with everyday Bfe, certainly faces many technicai olastacles.
The problem of providing privacy for an arbitrary nurnber of viewers on arbitrary displays in the natural surroundings i s huge, Displays capable of huge refresh rates, displays capable of directional beaming of light, occular implants, and universal person tracking are ail technologies that might play a role in a solution.
While such technologies are currently technologically infeasible as well as ethicaily questionable, it i s possible that solutions to these problerns will be arrived a t in the future.
The system supports two users who work cooperatively to build LEGO-like structures in a virtual environment.
The hardware for the system includes a standard Windows 98 based cornputer with monitor, two USB mice, and other customized hardware used to provide privacy.
The software for the system consists of an application that interfaces with the necwsary hardware and produces visual feedback on the display to the users.
The following sections describe the details of the hardware and software implementations.
The hardware components of the GLEGO system can be split into two subsystems, the input subsystem, and the output suhsystem.
The input subsystem consists of2 USB mice, a USB hub, and a USB input on the cornputer.
These are off t he shelf components.
The output subsystem consists of a standard monitor , a StereoGraphics synchdoubling emitter, two pairs of Stereographics wired CrystalEyes glasses, and an adapter to connect the two pairs of gIasses to the synch-doubling emitter.
4.11 The Input Subsystern The input subsystem of G-LEGO provides each of two users with a mouse to interact with the computer.
As with most Single Disptay Groupware, G-LEGO makes it possible for both users to interact simultaneously and independently with the system.
The USB bus coliects position displacement information from both rnice and passes it to the operating system.
The operating system typically coalesces these Deltas and sets the position of the hardware cursor .
G-LEGO does not use the hardware cursor, and instead polls the Delta information for each mouse directly from the operating system, through the DirectX/DirectInput API, and uses it to keep track of position information for each mouse.
GLEGO deactivates and hides the hardware cursor, and draws two software cucsors on the screen.
The positions of these cursors correspond to the positions calculated from the Delta information.
The method of interfacing with the hardware used to track multiple independent USB rnice only works with particular configurations of system software.
Microsoft Windows 98 is required, and DirectX 7.0a is suggested, although other versions of DirectX may work.
This section is a simple sumrnary of CRT mechanics.
The internals of a CRT  monitor include an electron "gunn and a surface coated with phosphor.
The gun is at the back of the CRT, and the phosphor surface is at the front, visible to the user .
The gun acceleratec electrons which are targeted at specific positions in the phosphor.
Each position in the phosphor is one pixel on the monitor.
The electron hitting the phosphor causes it to become excited, emitting light visible to the user.
The gun scans across the surface of the phosphor in horizontal scan lines, shooting electrons at each pixel in the phosphor.
When the gun has hit every pixel in every scan Iine, it returns to the first pixel in the first scan line and starts dl over.
Each of these scans of the monitor surface is one "screen refresh."
Each screen refresh of the monitor can be considered to be one '%amen in an animation.
Between screen refreshes the contents of the video memory can change.
The synch-doubling ernitter and accompanying dongle serve to regulate the operation of the rnonitor as well as the CrystalEyes glases.
The dongle attaches in series between the rnonitor's input cable and the video card of the computer, while the synch-doubling emitter sits on top of the monitor and is attached to the dongle {Figure 4.2.
When activateci, the synch-doubling emitter uses thedongle to access and alter the signal travelling to the monitor from the video card.
The signal is altered so that the refresh of the monitor is twice what it would normally be .
This results in several changes to the video output.
First, the vertical resolution of the display is halved.
While the dongle has caused the refresh rate to double, the rate at which lines are scanned by the monitor remains constant, thus halving the vertical resolution.
Second, the image shown on the display is "stretched" vertically by a factor of two.
The result of these effects i s that alternate refresh fiames show either the top or bottom hnlf of the original display image.
Two pairs of CrystaiEyes glasses are used in conjunction with the synch-doubling emitter.
Each pair of CrystaiEyes has liquid crystal lenses that can alternate between opaque and transparent states at a very high frequency.
When provided with a timing pulse through the wired inputs, the glasses synchronize the state change of the lenses with the pulse.
The timing pulse, which matches the refresh rate of the monitor, is provided by the synchdoubling emitter.
CrystalEyes glasses are not normaily used for displaying private information to two users.
The normal operation of the CrystalEyes glasses provides a stereographic view of an image, typically for a single user.
The glasses shutter such that at any moment in time one Iens i s opaque and the other is transparent .
Any one refresh frame i s viewed by either the Ieft eye or right eye of a user.
Consequently, each eye wilL see either every odd numbered refresh frame, or every even numbered refresh frame.
The G-LEGO prototype rnakes use of the shuttering capability of the CrystalEyes, but aiters the shuttering operation in order to provide privacy for multiple users, rather than stereographic viewing for one user.
Firct, two pairs of CrystalEyes were attacheri to the synch-doubling emitter, so that each of them receives the appropriate timing signal.
Then, each of the CrystalEyes glasses were altered so that the two lenses within each pair are always in the same state , but the two pairs are always in different states.
The lenses in one pair of glasses are transparent during even numbered refresh frames, and the lenses in the other pair are transparent during odd nurnbered refresh rames.
When two users Wear these two pairs of CrystalEyes, they will be looking at different refresh frames.
Images drawn on odd nurnbered refresh frames will be visible to one user, while images drawn on even numbered refresh frames will be visible to the other user .
Private information intended for only one of the users i s displayed on either even or odd numbered refresh frames, while public information intended for both users is displayed on al1 refresh frarnes.
The customization necessary to produce the desired shuttering behaviour in the CrystalEyes gIasses was achieved by making minor modifications to the circuit board controlling the glasses.
The circuit board is xcessed by removing the front plastic face of the Crys talEyes.
Upon opening the glasses, the circuit board is visible.
The two traces on the back of the board shown in the diagram are the two traces carrying the signal that causes the left and right lens to change state between opaque and transparent.
Cutting either trace and making a connection, as shown in Figure 4.5 , makes both lenses operate the same, both as a left lens or both as a right lensL.
So far, it has merely been said that the CrystalEyes glasses connect to, and receive a timing pulse from, the synch-doubling emitter.
Unfortunately, the synch-doubling emitter was designed to emit infrared timing puises to wireless CrystalEyes , and not to work in harmony with two pairs of wired CrystaiEyes glasses, Wireless CrystalEyes could not be used for the system because they are difficult to customize.
A solution was required that would allow the synchdoubling emitter to work with two pairs of wired CrystalEyes glasses.
What the synch-doubling emitter does ofFer to help support wired CrystaIEyes is a "feature connector" that outputs a variety of signals from the synch-doubling emitter .
These signais, dong with an external power source, are d that the wired CrystalEyes need as input .
The software side of the G-LEGO prototype system serves to both interface with the hardware, and provide an environment in which a pair of users can work.
The environment provided by G-LEGO is a collaborative LEGO-like construction environment in which the pair of users works together to build a series of predefined structures out of blocks.
Two collaborative versions, one supporting privacy, the other not, were built for use in a user study.
A third single-user version was created for training users.
The G-LEGO construction task and al1 related G-LEGO software was developed by the author as a part of this thesis.
LEGO is also an activity that i s well undentood by many people, suggesting that users might have an easier time learning a LEGO-themed game than a game using some lesser known theme.
The G-LEGO interface sptits the screen into three distinct areas .
The workspace, in the right portion of the screen, is the shared area in which usen build structures.
Both usen can place and remove blocks, and change the properties of blocks that have been placed or are about to be placed.
Changing properties of blocks is done with contextual menus that pop up ovet the block being edited.
The instructions area, in the left portion of the screen, displays the building instructions for the LEGO structures.
Each instruction sequence consists of six steps indicating how one structure is to be built.
Each step builds rom the previous step, showing the same structure as the previous step with a few changes.
The instructions area can only display the six steps for one instructions sequence at a time.
Different instruction sequences are viewed by clicking on one of the three appropriate buttons above the instructions area.
Clicking on one of these buttons removes the previous instruction sequence, and shows the new instruction sequence in its place.
The third area, at the bottom of the screen, holds control buttons.
The "blockwand "ditw buttons select the interaction mode for each user.
Block mode allows a user to place new blocks in the workspace, while edit mode allows users to edit blocks that have already been plilceci.
The rotate buttons allow users to rotate the workspace.
As the workspace is rotated, the instructions rotate as well so as to stay aligned.
The quit button is used to exit G-LEGO.
There are three components of the system that are kept private.
Each user can only see hii or her own cursor.
When users are placing blocks or rnoving blocks around, those blocks are viewable to both users, but the cunor performing the actions are private.
Secondly, contextua1 menus are private.
When one user pops up a menu over the workspace,
A result of this is that both the users must look at the same instruction sequence.
If one u e r changes which instruction sequence is shown, thii change i s retlected in the other user's view as well.
The practise version of the system was d to train users in the use of the GLEGO interface.
Clniilte the public version and private version, the practise version was meant to be used by oniy one user at a tirne.
The other main ciifference in the practise version is that it has oniy one instruction sequence.
If one user changes which instruction sequence is shown, thii change is reflected in the other user's view a s weU.
The practise version of the system was used to train users in the use of the G-LEGO interface.
Unlike the public version and private version, the practise version was meant to be used by only one user at a time.
The other main difference in the practise version is that it has only one instruction sequence.
If a user clicks on the buttons to select a different instruction sequence, the same instruction sequence is still shown.
This is because the version was meant as a training tool; the accomplishment of building structures is not the main focus.
Three text files are read by G-LEGO, each file specifying steps for one instruction sequence.
Each file contains information for each block in each step, specifying position, orientation, and colour, for each block.
Two different instruction sets of 3 input files were constructed for later use in a user study.
Each input file in each set contained the instruction sequence specifying how one structure was to be built.
A portion of an example input file is shown in Appendix A.1.
The private and public venions of G-LEGO also produce output files containing information outlining user behaviour.
Two output files are produced, one for each user.
Table 4.1: Description of data collected in log files.
Description of Data Value indicating from which of the two users this file originates.
1 Possible values are O and 1.
Values from left to right are: yean, months, days, hours, minutes, seconds.
The amount of time  the two users spent looking at the Synched same instruction sequence.
The amount of time  the two usen spent looking at Not Synched different instruction sets.
Instruction x time The amount of time the user spent looking at this particular instruction sequence.
Drop Block The number of times the user dropped a block in the workspace.
Red The number of times the user changed a block's colour to red Blue The number of times the user changed a block's colour to blue.
Purple The number of times the user changed a block's coiour to purple.
Rotate The number of times the user rotated a block.
Delete The number of times the user deleted a block that was already in the workspace.
Cancel The number of times the user cancelled a menu.
Edit Menu The number of times the user called up the edit menu.
Place Menu The number of times the user called UV the dace menu.
The G-LEGO prototype system was e ~ i u a t e d in an exploratory user study.
Two versions of the G-LEGO prototype system were uscd.
One version supported the display of private information, while the other did not.
With this study, we attempted to gain initial insights into the behaviour of users working with a Single Display Privacyware system.
We also attempted to discern any advantages and disadvantages to using SDP systems, as opposed to using a more typical Single Display Groupware system.
One main goal of the investigation was to determine possible future avenues of investigation into SDP.
Participants in the experiment filled out pre and post experirnent questionnaires, computer logs recorded user actions within the system, and videotapes were made of interactions between users.
Observationai and statistical results were obtained from the different data sources.
Sixteen ernployees of Electronic Arts Canada  were recruited by e-mail sent to al1 employees in the division.
EAC employees were chosen as participants for two reasons.
First, the research  was being performed at EAC, making it a convenient location for the expriment.
Two within-subjects variables, and one between-subjects variable, were identified for investigation in this experiment.
The within-subjects variables were the G-LEGO version presented and the instruction set attem pted.
Both of these variables were counterbalanced to reduce order and learning effects.
The between-subjects variable was gender.
One pair of users was used for each of these combinations, resulting in 8 pairs of participants .
Al1 participants had normal or corrected to normal vision and passed a colour blindness test.
They provided informed consent and were asked to receive consent from their superiors to participate in the study, as participation was not a normal part of their work duties.
As the G-LEGO prototype was u d as the investigation tool in the experiment, the experimental task was derived rom the functioning of that system.
The G-LEGO system gives pairs of usen the task of constructing three LEGO-Iike structures according to instructions shown on the screen.
The specific task of construction was used for the G-LEGO system for several reasons.
First, construction is a task that has an analog in the physical world.
People are skilled at using their hands in construction tasks, and can transfer this skill to the digital world.
A different task, such as a spreadsheet, would require domain-specific knowledge that not everyone would possess.
Second, a construction task is well-suited to a collaborative environment.
People often tackle construction tasks in groups, whereas it is more common to do such things as writing and mathematics independently.
Third, pairs of participants using the system can intuitiveIy implement either divide-and-conquer strategies or cooperative strategies, and can easily switch between these strategies during completion of the task, if that is desired.
It was thought that this capability would complement the abilities of the system to display private as well as public information.
The task given to the participants was to build the three structures given by the system as quickly and accurately as possible, with a time limit of ten minutes.
There was no feedback from the systern indicating success or fdure at any point during the experiment.
Participants had to judge for themselves whether or not they were placing blocks conectly.
Participants were told that they were to organize how they worked.
They could work coop eratively or independently as they desired.
The relativeiy unstructured task and unspecified work relationship was meant to encourage natural interactions between the two participants.
To determine advantages and disadvantages to the use of systems suppurting private information and public information as compareci to systems only supporting public information, the use of the two versions of the G-LEGO system was identified as a within-subjects variable.
This variable was counterbalanced between different su bject pairs in order to reduce the effects based on the order in which the versions were encountered.
Possible values: {private version, public version
Learning effects were minimized through the use of two different instruction sets, each set with three instruction sequences.
Each pair of users used a different instruction set with either of the two venions of the software.
This variable was also counterbalanced between different subject pairs.
Two instruction sets were created for the experiment, known as Instruction Set A and Instruction Set B.
Both instruction sets contained three instruction sequences.
An attempt was made to have corresponding structures rom each instruction set be of q u a i complexity of construction.
One method used to keep complexity of the different structures similar was to specify the number of blocks auded to the structure between each step of the sequence.
For example, the first step of the first instruction sequence in both instruction sets involves placing 4 blocks, while the second step involves placing another 4 blocks in addition to the previous 4.
The number of blocks placed between each corresponding step was the same for the iirst h e number of blocks two instruction cequences of both instruction sets .
T placed was greater for the third instruction sequence in each instruction set, but was still the same between instruction sets .
Table 5.1: Number of blocks added in each step for instruction sequence 1 and 2, for both instructions set A and B.
The third structure of each instruction set was meant to be more difficult to build than the first two.
Requiring that more blocks be placed was one way of achieving this.
Also, each of the third structures had a "trick" involved in completing the fifth step.
This trick required that some previously placed blocks be removed before a new block could be placed.
The third structure was made more difficult in order to challenge participants.
Providing chdenging instruction sets to users potentially results in more interesting observational results.
Several informat pilot studies were performed using volunteers.
This was done in order to determine if the instruction sets were suficiently challenging to complete.
The pilot studies also served to highlight interface issues with the G-LEGO system that needed to be addressed before running the study.
The experiment was conducted in a cubicle in the Tooh and Libraries department of EIectronic Arts Canada, in August 2000.
Normal work activities continued around the cubicle while the experiment was run, but the walls of the cubicle served to isolate participants from distractions.
The cornputer rnonitor was placed in the center of the desk, with the two mice pIaced directly in front of it, The CPU case and the keyboard were placed out of the way of the users.
Two chairs were placed in front of the desk so that each user would have qua1 access to the display.
The video camera was placed in front of, and to the left of, the users.
It was placed so as to capture their facial expressions and physical actions.
A capture of video data from the experiment is shown in Figure 5.2, and a diagram of the workspace is shown in Figure 5.3.
Prefetenoe waa measareci using pt-session questionnaires which wete administered atetboth trials.
O p i ~ o n s regarding the private and public versions of the software, a s w d as particdar featnres of the p h t e version, were collectai.
Preference was deterrnined by asking participants how much they uked a particnlar version or feature,
Users were also given space in which to state how they Felt about particular versions or features.
User comfort level was also gathered For the two versions by asking users to rate their comfort on a scale from 1  to 5 .
Collaborative St rategy Collaborative strategy, whether participants tended to collaborate or work independently, was measured by computer log.
The system kept track of how much time users were looking at the sarne instruction sequence, and how much time they were looking at different instruction sequences.
These logs, along with observations from the videotapes, were used to determine collaborative strategies.
Table 5.3: Example experimental scheduli Time  Item # Activity Participants Arrive 1.
Information and Consent Forms 3.
Colour Blindness Test Background Questionnaire 5.
Introduction to Training Condition 6.
Training Conditions  Introduction to First Experimental Condition 8.
First Experimental Condition Short Break 10.
Introduction to Second Experimental Condition Second Experimental Condition 12.
When asked to state a preference for either the public or private versions of the system, and describe why they liked that version, 7 participants stated they preferred the public condition, 6 participants stated they preferred the private condition, and 3 participants stated they had no preference.
It is interesting to note, however, that of the 7 participants who wrote that they preferred the public condition, 3 made specific staternents tbat they appreciated specific features of the private condition, such as:
The average score given by participants For the public version was 2.25, whiIe the average score given for the private version was 1.94 .
Thirteen participants rated the private version as better than neutral, while 9 participants rated the public version better than neutral.
The pst-sesion questionnaire also asked participants to rank different features of the private version on a scale of one to five .
The data was anaiyzed using a onesample Kolmogorov-Smirnov non-parametric test, and did not produce statistically significant resuIts for either private menus  or private cursors .
The responses concerning private instructions was marginally significant .
When rated on a scaie from 1 to 5, a s shown in Figure 5.5, participants appear to have had a fairly strong king towards instructions being private and menus being private.
The reaction towards private cumn was mixeci.
This was done by allowing users to look at different instruction sequences, which supports independent work, or the same instruction sequence, which supports collaborative work.
Log files recorded the amount of time participants spent in these two states, giving an indication of coliaborative strategies used in the trials.
The data rom the log files is summarized in Figure 5.6.
Analyzing the data in Figure 5.6 it becornes apparent that 4 pairs of users worked almost entirely collaboratively, spending between 98% and 100% of their time looking at the same instruction sequence.
These pairs spent approximately 18%and 39% of their time looking at the same instruction set.
Commentc from the post-session questionnaire serve to reveal some of the reasoning behind the use of hybrid strategies: "Even though we were working on diierent parts we could stiii proof the other guy's work easily and quickiy."
This section describes general results that were obtained through a combination of informal observations, analysis of the videotapes, and analysis of the logs and questionnaire results.
These results are mostly qualitative in nature.
The results are valuable, in that they provide early insights into users' interactions with a prototype SDP system.
Three aspects of the environment were kept private in the private condition: cursors, menus, and instructions.
While it may be assumed that users would either like al1 three aspects to be private, or al1 three aspects to be public, this was not always the case.
It was found that users often liked one aspect of the environment to be private, while they preferred other aspects to be public.
Observation and analysis of the videotape data revealed that participants wanted some aspects of the work environment to be private and others to be public.
For example, some of the participants made positive rernarks concerning private aspects of the software while they were working, such as ''This is great, our menus don't get in the way."
They, however, would then proceed and possibly express frustration at not being able to see their partner's cursor.
The source of the satisfaction and frustration was not predictable or consistent between pairs, but it was common that pairs would express satisfaction towards one private aspect while expressing frustration towards another.
The difference in preferences reiated to private functionality was also evident in participants' answers in the post-questionnaire.
When ranking their like or dislike of the three private aspects of the private venion, 6 out of 16 participants scored at least one aspect favourably, while scoring at le& one other aspect neutraily or disfavourably.
The other 10 participants were consistent in ranking al1 three aspects either favourably or neutrally/disfavourably.
Through observations gathered during trials and analysis of videotape data it was found that users were able to adapt well to the functionality of the private version of G-LEGO.
All users who were able to function properly in the public version were also able to function in the private version.
Individual membecs of two different pairs did have significant trouble working in the prime condition, but thii was because of a basic difficulty in operating the system, rather than confusion induced by the privacy functionality of the private version.
This was supported by the fact that the same participants aiso had difficulty functioning in the public venion.
While the participants were able to function in the private condition, there was often an adaptation period during which users gained an understanding of how the system operated.
Even though participants had received instruction on the functionality of the private version, they were still often surprised when actually faced with operating in the environment.
An example of this surprise would be one participant gesturing to their partner with a private cursor, saying "Here, look at this."
The other user, not seeing the gesturing motion of the private cursor, would get confused.
The actions and resulting confusion are natural, as two users working on a shared display expect to see exactly the same content.
The confusion, however, was typically short-lived, as participants developed an understanding of what was private and what was public.
It is aiso interesting to note that some of the participants complained of eye soreness after completing the trials.
This is most likely due to the shuttering operation of the glasses.
Act ivity hvels The ievel of user activity for each pair was found to be marginaliy significant between the two conditions.
A repeated measures analysis found that the number of actions performed by each pair  was found to be marginally significantly higher in the private version = 3.668,~= 0.097,r2 = 0.344, pmer = 0.380.
Each pair of participants performed an average of 147.0 actions in the public version, and an average of 223.5 actions in the private version.
The reason for the increased activity in the private condition could have been that participants were more efficient, but it could also have meant that they were making more errors, and correcting those errors.
In an attempt to rule out one of these possibilities the number of block placements, with the number of block deletions subtracted, was analyzed.
This value gives an indication of the number of blocks placed correctly by the pair.
The results of a repeated measures analysis show no significant difference between the private and public venions = 2.344, p = ns, rZ = 0.251, pozuer = 0.264, with participant pairs placing an average of 28 blocks in the private version and an average of 23 blocks in the public version.
The relatively large effect size but low power of both activity ievel results indicates that this evduation should be repeated with a larger sample size to fuUy explore the effects on activity level.
The results of the study indicate that the SDP system investigated was generally well understood and accepted by the participants.
Only one of the sixteen subjects indicated discomfort with the system, by scoting it as a 4 on a scale of 1 to 5 .
The conclusion that participants undentood and accepted the system is also validateci by the other resulis of the study.
The evidence presented in Section 5.3.3 compares the effectivenessof interaction of participants in both the private and public conditions.
It was found that in general participants were able to function effectively in both conditions.
This indicates that it is not daunting for users to adapt to a system that supports privacy on a shared display.
It is questionable, however, whether this result can be generahed to cover al1 potential users.
The participants in the experiment were, without exception, experienced computer users.
This experience may have made it easier for them to adapt to new interaction paradigms.
It would be desirable to perform a similar experiment with a more general participant base in order to determine how broadly these results can be applied.
The results concerning the variation in preferences, discussed in Section 5.3.3, also have interesting implications.
It was apparent that different users preferred that different cornponents be public or private.
This suggests that it would be useful for SDP systems to support customization of privacy support.
It might be useful for users to choose what information is private, and what is public.
Users could also switch information rom being public to being private, and vice versa.
Implementation of this, however, could exacerbate one problem that was identified, namely that users occasionally become confused as to what information is public and what is private.
To combat this problem, it would be desirable to tag information to indicate whether it is private or public.
The results regarding activity levels of participants, discussed in Section 5.3.3, are harder to analyze than the other results.
What can be stated is that activity levels reinforce the conclusion that users were able to interact with the private condition.
One possible explanation is that the less restrictive nature of the private system dowed users to work so that they did not obstruct each other, For example, if two users were working together on a structure and one user was not abIe to contribute adequately to the work,
The expecimental results were useful in identifying strengths and weaknesses of the two versions of the G-LEGO system.
It was found that the private version was useful in providing users with a flexible interface that supports different types of collaboration .
It was also found that the reduction in screen clutter provided by the private version was often appreciated.
Finally, concerns were raised regarding the need to distinguish private information from public information.
From these results, we were able to identify pmible directions for Future work.
These include the necessity to determine the generaiizeability of the results, the necessity to investigate customizeability of privacy, the necessity to investigate privacy tagging, and the necessity to investigate the differences in activity levels between private and public systems.
Previous research in Single Display Groupware suggests that shared screen systems provide a rich collaborative environment in which to work.
One of the ongoing issues with SDG systerns, however i s that they do not provide a mechanism for displaying private information.
We saw that existing approaches to allowing private information xcess with shared displays are effective, yet have drawbacks of their own.
This thesis presented a novel interaction model, Single Display Privacyware, that addresses the problerns of privacy support on shared e displays, without suffering from some of the drawbacks associateci with other solutions.
W have also presented a testbed SDP system that facilitates expioration of issues related to t his interaction model.
The experimental results showed that users were generally able to adapt to the use of an SDP system.
This result in itseif suggests that it rnay be valuable to provide users with an SDP alternative to traditional desktop or SDG systems.
Observing when users choose SDP systems over traditionai SDG systems will give further insight into the impact SDP systems can have in groupware environments.
Whiie the experimentai results were not conclusive in determining whether or not SDP offers significant advantages over SDG,the results do suggest that SDP could improve computer-supported collaboration.
We have identified important directions of future investigation into SDP which will provide vaiuabie insight into the rote that SDP can play.
The m a t significant concept we hope to have brought forward is the realiiation that, in shared display environments, it can be useful to display private information within the public context of the shared display.
The ability to show private information on a shared display lends flexibility to the interaction experience for al1 users of the display, making it possible to address a host of issues inherent in Single Display Groupware.
This realization concerning the role of private information leads dicectly to the definition of Single Display Privacyware as a valuable interaction mode1 for computer supported collaboration.
The recearch presented in this dissertation is the beginning of a long process of investigation required to fully understand SDP and its implications to the user experience.
Thus, one of the main goals was to identify topics of interest that could be investigated in future, more focussed, research.
The implementation produced a successful prototype, however some technical limitations were identified that must be addressed.
Also, the experiment with the prototype SDP system was useful in identifying interface issues that should be investigated in future research.
The main possible future investigations identified by the research are as follows:
Investigate the feasability of extending the current shutter glasses display technology to support more users or provide higher quality output.
Investigate new techniques/methods for implementation of SDP systems.
These technologies might include the use of polarized glasses, head-mounted displays, or other types of displays .
These technologies might be used to develop systems that support more than two userc, or systems that are less intrusive to the users.
Investigate the value of allowing users to choose what display components are private and what display components are public.
Also, it would be useful to determine differences in behaviour when users are able to customize their environment as opposed to when they are unable to customize their environment.
Determine when and why activity Ievels differ with Single Display Privacyware systems a s compared to Single Display Groupware systems.
Investigate Single Display Privacyware as applied to different tasks.
The construction task investigated in this thesis is only one of many possible.
Tasks such as mathematical coordination, text editing, or game playing rnight be investigated.
The efficiency and performance of user interactions with the SDP system was not studied in this thesis, It would be logical to perform a future study that focusses specifically on whether SDP systems support more or less efficient interactions, as compared to traditional SDG systems.
Computers as tools are capable of tackling a wide variety of problems in many different problem domains.
Ideally, tools that function on a particular problem in a specific domain are designeci so as to be used comfortably and efiiciently in that environment.
Computer systems are used in many different environments, and present different sets of design problems in each of these.
This research shows that Single Display Privacyware systerns can aileviate some of the problems with Single Display Groupware that have not been othenvise addressed by other systems.
This appendix shows the documentation accompanying the experiment.
It includes instruction and information sheets shown to participants, colour blindness cards used to test participants, and pre and post-session questionnaires used to measure participants' reactions to different aspects of the G-LEGO system.
Fbe i&mdbm On the kft p u s a riep-by-stcp insiniaions on how to build one o f ihe suuaiacs.
E a c t i of the stcps buildsoff of the lmstcp.
If p u clickone of t h ihnt bunons above h z instructions p u wiu sce a dincrcni inst~ction set for a diffemt maure .
AU ihiee stnic~uns an t o be h i i t in iht wotk area.
The Mt bu th^ Pressing t k "Edit" button puts you in editing rnodc.
In ihis mode you change the pmpertics olbbcks that have alrcady bccn placed, To do this place p u r cursor ovcr the point on the green surface above which the block you wish to cdit sits .
The block will bc highlighicd with white balls.
Right ciicking wul king up a menu with which you can deletc the block  or change it's colour.
Specifically, we have developed a display technique that allows private information to be shown to mly oae user, while hiding that infonnation from other users who are looking at the same computer display.
We are nmning a study to determine the usefulness of this display technique.
The results of this snidy will provide us with quantitative and qualitative information that may validate the technique a n d h provide us with a direction of investigation for future research.
In a user study that will take approximately 60 minutes to complete, you will be asked to use two different programs on a personal computer.
Each program presents a workspace in which Lego bricks can be placed in order to construct structures.
Your task wiU be to construct three separate structures in the workspace, as quickly and accurately as possible.
You will work with a partner on the construction task.
Both of you will work on the same computer, and will be aMe to interact with ihe computer with your own mouse and cursor.
Before and ailer the expriment, you will be asked to fiIl in a questionnaire.
The fint questionnaire will help us determine how familiar you are working with computers in different collaborative environments.
The second questionnaire will indicate your preference for either of the programs.
During the experiment, the computer will record your mouse actions, and a video carnera will record your physical actions and any verbai communication.
You are ailowed to withdrawaI your participation in the experiment at any time if you so desire.
Your participation in this study wiii help to contribute to the body of knowledge in this area of research, It is very important that we be able to justify new ideas in oraer to improve current human-computer interfaces, We h o p to obtain statisticaiiy significant data fiom this experhent that wiU lead us towards this goal.
A usabiity study of awareness widgets in a shared workspace groupware system.
Transparent layered user interfaces: An evaluati~nof a display design to enhance focused and divided attention.
Architecture and implementation of a Java package for multiple input devices .
Give and take: Children collaborating on one computer.
The effect of turn-taking protocols on children's learning in mouse-driven collaborative environments.
Cooperative learning in the classroom: The importance of a collaborative environment for cornputer-based education.
Technical Report TR-94-5, Department of Computing Science, University of British Columbia, 1994, 1181 Hiroslii lshii and Minoru Kobayashi.
Clearboard: A seamless medium for shared drawing and conversation with eye contact.
The use of hypermedia in group problem solving: An evaluation of the DOLPHIN electronic meeting room environment.
Hypermedia structures and division of labour in meeting room collaboration.
Two-handed input using a PDA and a mouse.
The Amulet environment: New models for effective user interface software development.
