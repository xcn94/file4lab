Exergame controllers are intended to add fun to monotonous exercise.
However, studies on exergame controllers mostly focus on designing new controllers and exploring specific application domains without analyzing human factors, such as performance, comfort, and effort.
In this paper, we examine the characteristics of a speed-based exergame controller that bear on human factors related to body movement and exercise.
Users performed tasks such as changing and maintaining exercise speed for avatar control while their performance was measured.
The exergame controller follows Fitts' law, but requires longer movement time than a gamepad and Wiimote.
As well, resistance force and target speed affect performance.
User experience data confirm that the comfort and mental effort are adequate as practical game controllers.
The paper concludes with discussion on applying our findings to practical exergame design.
Exergames - games involving physical activity - have shown potential to increase the enjoyment of repetitive exercise .
They usually involve new technology, such as an exergame controller that adds a gaming interface to exercise equipment.
The transformed device serves as a medium to introduce fun factors such as coordinated interactions and competition to repetitive solitary exercises.
The device also provides an opportunity for game developers to design interactive exergames similar to commonly enjoyed video games.
We envision that new exergame controllers will emerge featuring rich interactivity and immersive game play.
Academia and industry strive to develop new exergames and game controllers.
Yet, the design of an exergame is challenging.
The reason is simple: Exergames require and promote exercise, unlike traditional video games which primarily seek to entertain.
In contrast, designers of traditional games generally strive to minimize physical effort .
It is thus important to correctly understand exergames and to accumulate appropriate design knowledge - to guide designers.
Existing studies, however, are generally limited to exploring how exergame controllers influence the design of in-game content and user interaction.
A deeper understanding of controllers will help designers predict, organize, and evaluate exergame experiences.
As our research goal, we evaluate an exergame controller to help designers accommodate characteristics and limitations of input devices in exergame design.
We study human factors of speed-based exergame controllers  under two different types of tasks: a maintenance task  and a pointing task .
Also, we examine the user experience with a speed-based controller.
The following contributions emerge from our investigation with bike-based exergame controllers: * The performance of a steady-speed maintenance task is dependent on target speed and resistance force of an exercise device.
Sports are an entertaining and engaging part of many people's lives, enhancing both athletic performance and physical condition.
However, busy urban lifestyles make social sports difficult to participate in since they usually require a pre-determined schedule.
Solitary exercises such as stationary cycling or running on a treadmill are popular alternatives; however, the monotonous and repetitive nature of these exercises present challenges to increasing people's motivation to exercise.
Moreover, it may be hard to motivate people to exercise using rewards that are not immediately observable, such as better general health  and appearance.
Copyrights for components of this work owned by others than ACM must be honored.
Abstracting with credit is permitted.
To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee.
The performance rather abruptly drops when these values exceed certain thresholds, even though they fall into the recommended aerobic exercise ranges.
This finding implies that exergame designers should carefully select a proper speed range and consider a user's preferred resistance level to provide users with a consistent perception of controllability.
These results help game designers anticipate players' performance and user experiences.
We show how exergame designers can consider the findings, such as speed mapping, object placement/control, and difficulty setting.
Similarly, AutoDesk developed HighCycle, which allows users to explore a virtual landscape using an exercise bike.
Recent products include Cateye GameBike and PCGamerBike, which support the control of a variety of games  on Sony PlayStation and personal computers.
Fisher Price's Smart Cycle offers educational exergames for young children, with a control mechanism similar to the games shown in Figure 1a and 1d.
A large body of work focuses on developing new exergame controllers   or evaluating wellknown motion-based controllers such as Wiimote .
To our knowledge, a comprehensive study on fitness equipmentbased controllers has yet to be reported.
This study aims to bridge this gap and deliver practical game design implications.
Our work complements other exergames studies on context  and benefits .
Novel game controllers permit new ways of interacting in exergames.
A foot pad in Dance Dance Revolution by Konami  allows players to perform rhythmic stepping with music.
In Remote Impact  and LightSpace by Exergame Fitness Co. , players punch or touch a large contact-sensing smart wall.
Similarly, in Table Tennis for Three, users hit a virtual object on a smart wall with a ball .
Several exergames incorporate physiological sensors  ; for instance, remote joggers exchange heart rate information for a balanced running experience.
Motion-based game controllers have recently received a great deal of attention following the release of popular gaming consoles such as Sony EyeToy, Nintendo Wii, and Microsoft Kinect.
These devices can detect a player's body motion using cameras and motion sensors.
The popularity of these gaming consoles has motivated the design of exergames such as Wii Fit, Wii Sports, and Kinect Sports.
Researchers also designed and evaluated specialized exergames in particular contexts, such as rehabilitation  and social relationships .
Alternatively, exercise machines are widely used as exergame controllers.
Exercise bikes are popular due to their familiarity and accessibility .
This work focuses on fitness equipment with repetitive physical movements, such as treadmills, indoor cycles/rowers, and elliptical trainers.
Speed-based exergame controllers require continuous physical effort, a major departure from existing devices for games, such as a mouse or gamepad.
The intensity of exercise  is used to realize one-dimensional speed-based movement control.
On a stationary cycle, for instance, the angular speed  is mapped to the speed of an avatar.
Speed is altered by pedaling faster or slower .
Such speed-based movement control differs from existing distance-based movement control in traditional pointing devices  where linear movement of the device is directly mapped to an avatar's movement.
As such, using speed-based exergame controllers requires a fresh look at the characteristics of game play.
We compare and discuss the characteristics of traditional and speed-based controllers.
For simplicity, we focus on two major aspects of control: maintaining the current state and transitioning to a different state.
For a maintaining activity, the player's goal is to keep the current game state.
Are there specific factors that account for performance during speed maintenance?
As shown in Figure 2c, a certain amount of error persists even when a player's goal is to maintain a specified speed.
Here, a number of factors are at work, such as the limited precision of human motor output, the exercise intensity, and the mechanics of the exercise equipment.
It was reported that even if a player intends to pedal at a constant rpm, the instantaneous torque is not consistent but increases while the pedals are being pushed, and vice versa .
In-depth understanding of the error characteristics and the achievable precision is important in exergame design .
However, this was not seriously investigated thus far in the context of game controllers.
What are the differences and similarities for performance and comfort between speed-based controllers and traditional controllers?
Understanding the human factors of a new controller, such as performance and comfort, would assist in designing ingame challenges and in estimating the associated experiences .
Manipulating a speed-based controller requires a large displacement of limbs.
This may decrease the performance of controlling tasks in terms of accuracy and agility compared to pressing buttons a few millimeters deep.
Similarly, requiring the motion of massive body parts could quickly exhaust the users.
This might have an adverse effect on user-perceived comfort.
To evaluate the performance and comfort of a speed-based controller, we adopt a Fitts' law paradigm  to assess performance.
This test is widely used in analyzing inter-device differences , as well as in predicting user performance while manipulating devices .
We measure performance and comfort levels and compare with traditional controllers including a gamepad and a Wiimote.
While examining characteristics of speed-based controllers, we also focus on learning effects, considering inexperienced game players with speed-based controllers.
The results will be helpful for game designers to accommodate newcomers, for example, in providing a tutorial or incremental challenges .
For a transitioning activity, the player's goal is to change the game state, such as relocating an avatar to a different position or steering a vehicle to a new path.
Typical traditional controller designs, such as buttons or joysticks, are effective in identifying the player's intent for either maintenance or transition.
Examples include pushing a button  or not , or tilting a joystick  or holding it at a fixed position .
Figure 1f illustrates the process of relocating an avatar along the vertical axis and holding its position by a traditional controller.
In contrast, the original design goals of speed-based controllers do not consider whether the player's intention is maintenance or transition.
Instead, the goal is the precise and continuous measurement of the parameters representing a player's instantaneous exercising intensity.
A common practice in designing speed-based exergames is to leverage the value of a speed-equivalent parameter as a 1-dimensional controller input, and translate it into a unique game state.
An example is revolutions per minute  for a stationary cycle .
Figure 1e illustrates an example of translating cycling rpm into the avatar's vertical position.
In the cases above, the controller requires the player to maintain physical exertion throughout game play.
Even if the intention is maintenance, the player should continue pedaling at a consistent rpm.
This characteristic is different from discrete inputs such as pressing buttons.
Figure 2a depicts a time sequence of a player's intent while playing games from Figure 1: holding the avatar at position A, moving upward to position B, then holding at that position.
Figure 2b and Figure 2c show the player's behavior history and the avatar's actual trace in the game when using a game pad and a stationary cycle, respectively.
We built a prototype of a speed-based controller using an exercise bike.
Our prototype monitors angular rotation speed using an optical rotary encoder and a photo interrupter .
To smooth unwanted fluctuations in the detected signals, the sensor output is averaged over a sliding interval of 0.5 seconds.
This provides a good sense of responsiveness combined with a sufficient resolution.
Our first experiment evaluates players' performance for speed maintenance; that is, holding a target speed.
As stated earlier, speed-based controllers require players to maintain their speed to retain an in-game state.
Considering the operation of exercise equipment, we focus on two factors that may affect maintenance performance: target speed and resistance force of an exercise bike.
The dependent variables were offset error and root mean square  error, both with units rpm.
These errors capture the variation between participants' speed and the target speed.
In detail, the offset error is calculated for each subject by averaging the differences of all sampled speeds  from the target speed.
Similarly, we obtained the RMS error by calculating the root of the squared mean of the differences.
The results for offset error and RMS error are shown in Figure 5.
Note that the errors do not proportionally increase as the target speed increases.
The error rate abruptly jumps when the target speed exceeds a certain value.
The offset error is close to zero at 60 and 90 rpm, but is negative and relatively far from zero at 120 rpm, as shown in Figure 5a.
The error is more prominent as the resistance force becomes higher.
Input was via the exercise bike, which supports variable resistance in eight levels.
Prior to the experiment, we carefully measured the resistance force of the bike  and found that the force ranges from 4.89 kp to 35.32 kp, under a 0.5 meter flywheel circumference.1 Output was presented on a 24-inch display with a resolution of 1280 by 720 pixels.
The test software was developed in Microsoft XNA, a popular game development framework.
The display included a vertical speed gauge showing the current speed and target speed as well as the time remaining.
This range encompasses common pedaling rates in cycle training .
The target speed is indicated by an arrow on the left of the gauge.
The remaining time appears at the top-right corner.
Participants performed trials of a simple maintenance task.
3 They were instructed to manipulate the bike to maintain the gauge level as close as 0 possible to the target speed for 30 seconds.
A beep sounded at the end of each trial.
That is, if a player riding at 19.4 kp of resistance wants to use a range from 60 to 120 rpm, she may feel that controllability is not consistent throughout the range.
Under the lowest resistance force , a paired ttest indicated no statistically significant difference in the RMS error and the offset error.
We investigated the literature on exercise physiology to identify the major factors responsible for errors at higher target speed.
The literature indicates that pedaling torque is not consistent throughout a revolution, thereby causing variability on pedaling speed .
The causal relationship between the torque and speed could be significant when the resistance level is high .
We also found that the inertial load of the cycle crank and flywheel could affect the perceived difficulty in maintaining a target speed , and it is thus necessary to take into account these factors.
Thus, exergame designers should carefully select a speed range for game play in consideration of resistance force of the bike, to give users the perception of controllability over the range.
We thus set the resistance force as 9.2 kp for the next experiment to facilitate maintenance performance.
We also set the minimum target width of the pointing task to require a range larger than 8 rpm, based on the observation that the RMS error was lower than 4 rpm at this level of force.
The output was presented on a 24-inch display.
The distance between the display and eyes of a participant was fixed at 85 cm, with the height of the eyes fixed at the center of the display.
The height of the display was adjusted, as necessary, for each participant.
The display showed a crosshair-type cursor, centered horizontally.
For the exercise bike, the vertical position of the cursor was directly mapped to the speed of the exercise bike; that is, 50 rpm at the bottom and 130 rpm at the top; with 10 rpm increments mapped into 90 pixels .
For the gamepad, participants used the analog stick at the top-left corner.
We used only the vertical component of the analog stick data.
The analog stick can generate a continuous value from -1.0 to +1.0 via Microsoft XNA Input Device API, which is mapped to the tilted angle of the stick.
We then mapped the value to incrementally change the vertical position of the crosshair on the screen.
The maximum velocity of the cursor was 900 pixels/s when the stick was fully extended.
For the Wiimote, we utilized GlovePIE  software and a specialized script to convert the Wiimote data to mouse data.
We then mapped the vertical position of the data to the vertical position of the cursor.
For clicking, we used the customized push buttons for the exercise bike: `A' button for the gamepad and both `A' and `B' buttons for Wiimote.
We designed the second experiment to compare a speedbased controller with popular game controllers, namely, a gamepad and a Wiimote.
We anticipated that a speed-based controller may increase the difficulty of control or lead to inconsistent performance.
We adapted Natapov and MacKenzie's approach of testing a game controller with a pointing task and checking whether it follows Fitts' law , as with other non-keyboard input devices .
Here, Fitts' law gives the time to move to a target  as a function of the distance to the target  and the width  of the target :  =  +  log 2 ,
A vertical version of a one-directional pointing task was implemented  using Microsoft XNA.
A trial starts when a participant clicks on the green home square, and ends when the participant clicks on the red target square.
The time between these clicks is recorded as the movement time for a trial .
Participants were randomly assigned to one of three groups .
Each participant was tested with all three devices .
The order of testing was counterbalanced using a Latin square.
The total time for each participant ranged from 30 to 90 minutes per day for three days.
Before testing, the task was explained and demonstrated to participants.
Participants were instructed to perform the task as quickly as possible while trying to avoid mistakes.
They performed ten blocks of multiple combinations of target width and distance.
The participants took 5-minute breaks between blocks to avoid fatigue.
We analyzed Helmert contrasts by following a previously reported approach .
The results showed that the block effect was not significant after blocks three and four for the gamepad and Wiimote, respectively.
However, the speedbased controller showed significant differences as the number of blocks increases.
The movement time of the speed-based controller improved substantially - from an initial value of 3.54 s to a final value of 1.86 s. Thus, there was clearly a much greater improvement for the speed-based controller than with the other two input devices.
It is worth noting the details of the block effect for the speedbased game controller.
There were significant differences for movement time from blocks 1 to 6, but no significant differences from blocks 6 to 9.
Finally, block 10 showed statistical difference from the former four blocks.
Further studies on the learning effect will help identify whether the performance change in the last block occurred by chance.
Subsequent analyses were based on means from the last block only because including blocks 6 to 9 did not yield significant changes.
A within-subjects design was used with the following independent variables and levels: * Input Device {Wiimote, Gamepad, Exercise Bike} * Target Width {80 pixels, 120 pixels} * Target Distance {200 pixels, 300 pixels, 400 pixels} * Block {1 to 10} * Trial {1 to 10} Considering the maintenance performance of the exercise bike , we set the minimum width at 80 pixels, which represents about 9 rpm.
This is large enough to contain the maintenance variability.
The widths and distances yield Fitts' index of difficulty values from 1.42 to 2.58 bits.
A block consisted of 60 trials .
The trials were presented in random order.
A total of 600 trials were run  for each participant, and thereby the total number of trials was 600  15 = 9,000.
Dependent variables were movement time  for each trial and throughput .
Throughput is the rate of information transfer measured in bits per second  .
We also conducted an exit interview and administered a questionnaire to solicit participants' qualitative impressions and experiences with the test conditions.
To test whether the exercise bike follows Fitts' law, we separately examined the six combinations of target widths and distances and the five distinct values of index of difficulties .
This is shown in Table 1.
For each combination, we computed the error rate  and movement time .
Each dependent measure is based on 120 observations .
Figure 9 shows scatter plots and regression lines for the six MT-ID points for each input device.
As mentioned above, the speed-based controller offers a manipulation mechanism unfamiliar to many game players.
Thus, a learning effect was expected.
Figure 8 shows the results for movement time by input device and block.
The Wiimote was the fastest device, the bike the slowest.
R squared values are high for all three input devices, including the exercise bike.
The throughput  was 1.07 bps for the exercise bike, 1.94 bps for the Gamepad, and 2.57 bps for the Wiimote.
Note that our results for the Gamepad and Wiimote are comparable with previous results  of 1.48 bps and 2.59 bps, respectively.
The questionnaire was a modified version of the Device Assessment questionnaire .
There were 18 items on a wide range of human factors relating to effort, fatigue, and comfort.
Responses were on a 5-point Likert scale.
We used the questionnaire to guide the exit interviews while soliciting detailed explanations related to the participants' responses.
The means and standard deviations of the responses are presented in Table 2.
The differences favored the gamepad on the physical effort, accurate pointing, and overall usability, and the Wiimote on the smoothness and operation speed.
On the force required for actuation, the gamepad and Wiimote received the poorest ratings.
No significant differences were found on the other questions regarding mental effort, operation speed, and general comfort.
We did not find any statistically significant differences on comfort and mental workload, although it was noted that the speed-based controller was regarded as slightly less comfortable and required a greater mental workload than the Wiimote and the gamepad .
Overall, the reported levels of comfort and mental effort are adequate with respect to practical use as game controllers .
The participants generally agreed that they could confidently maneuver the device after training.
Overall, the participants believed that when compared with traditional controllers, the exercise bike has a moderate level of usability .
In the following, we report user comments from the interviews.
Consistent with the questionnaire results, many participants noted that the exercise bike required more physical effort to maintain speed than the gamepad or the Wiimote.
One participant reported that it even required more mental workload, commenting, "It was a bit hard to maintain a steady speed  and I had to pay significant attention."
Maintaining steady speed requires careful coordination of one's bodily movements.
One participant said, "When I feel acceleration, I take some rest .
It's a bit hard to control."
Another participant complained that the controller has less control power: "As it may be using body parts, the problem is not that I made any subtle mistakes but that acceleration control is hard to perform."
In addition, several participants commented on unfamiliarity: "At the beginning it was really hard to point at the target.
And it was difficult to figure out how to control the speed of the cycle."
These comments highlight the importance of training and tutorial sessions to help users become accustomed to the controller.
The participants felt that approaching the target area is easy, but accurate pointing takes time and effort.
One participant said, "It's difficult to enter the rectangular area as the cursor keeps moving up and down.
It is a bit hard to exactly point at the area."
The fluctuation in speed comes from a series of repeated acceleration and deceleration activities as the user aims to reach the target speed range.
Participants generally agreed that when compared with the gamepad and Wiimote, fine-grained movement control using the speed-based controller is more difficult, as one participant reported, "When I operate the controller, I have to make one small movement after another, and such fine-grained control was a bit hard to make."
In addition, participants commented about asymmetries in physical efforts when making transitions between speed levels: "There was no notable discomfort.
It was easy to go down, but it was difficult to go up .
It does not require a great effort, but it requires quite a lot of attention."
The importance of resistance level was pointed out by one of the participants who said, "The resistance level was good .
But if the level is higher than the current level, there will be a smaller degree of freedom for acceleration, and it will be difficult to perform the task."
These comments are consistent with our experimental results, and these aspects should be carefully reflected in the game design.
We collected several comments from the participants that the controllability could be influenced by individual fitness levels, particularly in terms of muscular endurance.
One participant commented: "In the final trial, I felt my legs a little bit tired, and I saw the cursor was sometimes not exactly moving as I intended."
Another participant said: "I think I could do better if I had better endurance for the entire session."
We anticipate that further studies with subjects of different fitness levels would reveal how individual muscular endurance or strength levels would result in a degradation of controllability as trials progress.
The key factors on level design include the properties of a planet  and the number of planets.
Planet location: A planet can move in a straight line.
We set the speed range to maneuver a spacecraft from 60 to 120 rpm, with the resistance force fixed at 9.2 kp.
According to our results, there was no significant maintenance variation under different speeds in the range .
This means that a planet's initial position can be randomly selected from the right side.
Planet size: When determining a planet's minimum size, the designer should carefully consider a controller's characteristics.
In particular, we showed that a player's speed tends to fluctuate when performing a maintenance task; nonetheless, for a given target speed, the RMS error is within 4 rpm.
This means that designers should configure the size of a planet by considering the range of RMS error, that is, 8 rpm; if the size is below this range, players may feel that the game lacks controllability.
Planet placement and speed setting.
Consider a scenario where there are two planets on the screen.
To allow a player to blast both planets, we should properly configure their placement and speed setting to allow sufficient time to destroy both planets.
In other words, after blasting one planet, the player should be able to steer the spacecraft to successfully shoot and destroy the other planet.
Our pointing task results show that the movement time approximately follows Fitts' law.
This empirical model can be used to find the minimum time required to reach the target speed .
For instance, changing from 60 rpm to 120 rpm takes about 4 seconds; thus, the designer can properly configure the planet placement and speed accordingly.
Player tutorial session: According to our results, the exercise bike requires some time for learning when compared with traditional pointing devices.
The designer may want to introduce a tutorial level; the goal is to allow users to maneuver the controller skillfully.
In addition, data from the tutorial can be used to understand a player's capabilities and provide for more personalized gameplay.
As shown in Figure 10a, the player's spacecraft moves vertically while planets attack from a horizontal direction.
The spacecraft continually shoots missiles with the player raining fire on a planet until it is destroyed; a larger planet takes more time to destroy.
Points are gained based on the size of the planet.
The player seeks to avert a plane crash and to earn as many points as possible to improve their ranking on the leader board.
For example, defeating a boss character in a game is supposed to be difficult.
To avoid fire attacks from the boss character, players might be required to pedal at 115 to 125 rpm with a high resistance level.
This challenge would be difficult for some players, as the average RMS error at 120 rpm was above 5 rpm.
Employing physical in-game challenges can be one unique characteristic of exergame design.
It is worth noting that the difficulty of challenges in traditional games is usually controlled by adjusting the complexity of mental tasks, e.g., to make players identify a specific hidden movement pattern of a boss character.
When considering a player's energy expenditure, the game designer should carefully design or adapt in-game challenges to avoid exhausting a player quickly or failing to achieve a sufficient amount of exercise .
For example in the shooter game, it would help to distribute initial positions of planets--the higher the speed , the higher the energy expenditure.
From the training viewpoint, a maintenance task can be employed in exergames to help exercisers learn an effective pedaling method.
It is known that maintaining a steady pedaling speed requires an even distribution of pedaling torque throughout a revolution , and this is regarded as an efficient pedaling technique .
We envision that more training methods can be adapted in speed-based exergames and thereby effectively provide exercisers with better ways to physically train.
We restricted our attention to an exercise bike.
In general, existing fitness devices for repetitive exercises  share similar properties, as mentioned in .
Our experiments can thus expand to other fitness regimes.
Further user studies are needed to generalize our findings to other devices.
We intentionally limited our discussion on game design to action games  as many existing exergames belong to this genre .
Given our understanding of an exergame controller, exploring alternative genres such as role-playing and simulation would be an interesting avenue for future work.
Furthermore, we employed a group of participants in their 20s to promote internal validity of the experiments.
Additional experiments with different age groups and physical capabilities are necessary to generalize the results.
We evaluated a speed-based exergame controller based on a stationary cycle with a maintenance task and a pointing task and derived the following results.
First, the performance of a maintenance task is largely dependent on the difficulty level , and maintenance error is approximately within a range of 10%.
