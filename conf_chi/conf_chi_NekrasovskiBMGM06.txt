We present a study that evaluates conventional Pan and Zoom Navigation and Rubber Sheet Navigation, a rectilinear Focus+Context technique.
Each of the two navigation techniques was evaluated both with and without an overview.
All interfaces guaranteed that regions of interest would remain visible, at least as a compressed landmark, independent of navigation actions.
Interfaces implementing these techniques were used by 40 subjects to perform a task that involved navigating a large hierarchical tree dataset and making topological comparisons between nodes in the tree.
Our results show that Pan and Zoom Navigation was significantly faster and required less mental effort than Rubber Sheet Navigation, independent of the presence or absence of an overview.
Also, overviews did not appear to improve performance, but were still perceived as beneficial by users.
We discuss the implications of our task and guaranteed visibility on the results and the limitations of our study, and we propose preliminary design guidelines and recommendations for future work.
Pan and Zoom Navigation , illustrated in Figure 1 , is easy to comprehend because it mimics the real-world semantics of moving one's head with respect to a piece of paper.
Although unconstrained PZN may suffice for small datasets, it has drawbacks that become apparent with increases in dataset size.
These include inefficient navigation patterns  and loss of orientation in sparse or empty regions of the dataset .
For this reason, PZN is often paired with an overview showing the entire dataset using the same visual representation as the detail view, which is represented in the overview as a movable field of view box .
Overviews have at least two costs: reducing the screen real estate available for the detail view and imposing the need to switch attention between multiple views.
As an alternative to PZN, the information visualization community has proposed a class of navigation techniques known as Focus+Context .
These techniques integrate focus and context regions into a single view, often using distortion-based methods and nonlinear magnification .
Distortion-based F+C interfaces impose the cost of tracking objects undergoing nonlinear transformations during interaction.
Both classes of techniques help users maintain a mental model of the dataset with an explicit visual representation of areas outside the focus: separate overviews for PZN, and compressed regions within the main view for F+C.
The question of which technique is most efficient remains controversial.
Although the often-stated intent of F+C approaches is to eliminate the need for an overview, we are not aware of any evaluation conducted to confirm or reject this hypothesis, and a recent study  suggests that it may be beneficial to combine F+C and overviews for certain tasks.
To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee.
The contributions and results of this work are as follows.
We performed the first evaluation in the literature of the effects of navigation technique and the presence or absence of an overview as orthogonal factors.
Our results indicate that subjects performed significantly faster using PZN navigation than RSN navigation regardless of whether an overview was present.
Additionally, users required fewer navigation interactions and reported a lower mental effort with PZN while completing the task.
We also performed the first evaluation of the use of an overview with F+C interfaces.
Our results indicate that overviews did not appear to improve performance, but were still perceived as beneficial.
Ensuring that regions of interest remain visible independent of navigation actions, possibly as compressed landmarks rather than being shown in full detail, is termed guaranteed visibility .
Guaranteed visibility has been implemented in conjunction with both PZN  and RSN .
Because it has been shown to be valuable with PZN interfaces , all interfaces in this study have the property of guaranteed visibility in order to study the bestin-class techniques.
In this paper we present a study that evaluates the effect of navigation technique  and presence or absence of an overview.
The specific F+C technique that we chose to evaluate is Rubber Sheet Navigation  , illustrated in Figure 1 .
RSN allows users to stretch or squish rectilinear focus areas as though the dataset was laid out on a rubber sheet with its borders nailed down.
We chose RSN as the most appropriate representative F+C technique for several reasons.
First, like many F+C techniques, RSN supports different levels of magnification, which enable users to explore areas of the dataset at multiple levels of detail.
Second, RSN is the only F+C technique to date that supports guaranteed visibility, and there is a publicly available implementation .
Last, RSN is inherently similar to conventional pan and zoom interaction.
With both techniques, the user manipulates a rectangular region of the dataset.
Many other F+C techniques, such as fisheye  or hyperbolic  transformations, are radial, affecting circular or spherical regions, and thus would not have made for an appropriate representative F+C technique in our evaluation.
The task used in our study is a topological navigation and comparison task motivated by the needs of evolutionary biologists, who require increasingly sophisticated visualization tools to support their work .
The literature comparing F+C and PZN interfaces reveals mixed results.
Distortion-based F+C approaches have been found beneficial compared to PZN interfaces for tasks such as steering navigation , hierarchical network navigation , web browsing , spatial collaboration , and calendar use .
However, other studies found that distortion can negatively impact performance for tasks such as interactive layout , location recall , and visual scanning .
Rubber sheet navigation  is representative of the subset of F+C techniques that integrate low and high resolution regions using dynamic distortions .
Other approaches that do not rely on distortion include aggregating context regions into glyphs  and showing contextual information through layers of lenses .
The majority of the literature comparing interfaces with and without overviews has reported overviews to be beneficial.
Studies have shown that navigation is faster with overviews since users are able to navigate in both the overview and the detail view .
The contextual information provided by the overview has been found to help users maintain orientation  and make decisions about future navigation actions .
One exception is the study performed by Hornbaek et al.
Most subjects preferred the interface with an overview, but the no-overview interface was as fast or faster.
The navigation technique used was semantic zooming, where the visual representation of an item adapts to the amount of screen real estate available, rather than the more conventional PZN evaluated in our study.
Guaranteed visibility is a relatively new concept in the information visualization literature, and as such has not been evaluated extensively.
Interfaces with guaranteed visibility were faster than the comparison interfaces for most tasks and were preferred by all subjects, a finding that motivated us to include this property in all our interfaces.
Recent work has explored the benefits and drawbacks of different techniques for visualizing tree structures.
Kobsa  performed a comparative experiment with five tree visualization interfaces using a large hierarchical tree dataset.
The results of this study revealed significant differences between the interfaces with respect to performance and user satisfaction.
This was attributed to inherent differences in data presentation and interaction in each interface.
Additionally, some interfaces were missing functionality required to complete the tasks.
SpaceTree  was evaluated in a controlled experiment against a hyperbolic tree browser and Windows Explorer, also using a large tree dataset.
The results of the study were mixed, revealing that SpaceTree performed significantly faster for some classes of topological tasks, but not for others.
A common limitation of both these studies is that the interfaces examined in them used widely different methods of data presentation and interaction, making their quantitative results difficult to interpret.
Our evaluation aims to overcome this issue by focusing on interfaces that share visual presentation and interaction methods and differ only in terms of navigation technique.
The pilot study results also showed significant learning effects affecting subjects' performance, even after training.
We therefore designed our study to ensure that performance with all interfaces would reach a plateau where no significant learning effects were present.
Additionally, pilot results were used to verify that task sets used in our experiment were isomorphic in difficulty and to address usability issues with the interfaces.
Our hypotheses were motivated by findings reported in the literature and the results of the pilot study.
First, we expected RSN to perform better than PZN because, as previously discussed, F+C approaches have been shown to perform better than PZN interfaces for a variety of navigation tasks.
Second, we did not expect an overview to significantly improve the performance of RSN, because F+C approaches by design attempt to provide the same contextual information as an overview, but in an integrated way.
Finally, we expected that an overview would significantly improve the performance of PZN because most previous studies have shown that overviews decrease navigation time and help the user maintain orientation within a dataset.
Our hypotheses were as follows: H1.
RSN interfaces perform better than PZN interfaces independently of the presence or absence of an overview.
For RSN, the presence of an overview does not result in better performance.
For PZN, the presence of an overview results in better performance.
All three hypotheses assume the presence of guaranteed visibility in the interfaces.
We conducted a controlled experiment in order to evaluate the performance of PZN and RSN with and without an overview.
Subjects used four different interfaces representing all combinations of navigation and presence of overview, all with guaranteed visibility, to solve a topological comparison task in a large tree dataset, as illustrated in Table 1.
Prior to the experiment, we conducted an extensive pilot study with 40 subjects to examine experimental parameters including task difficulty, relative proportion of focus and context regions, training, and interface usability.
The results of our pilot indicated that, without sufficient instruction, subjects developed a variety of strategies for each interface, leading to highly variable performance results.
Based on our observations of the most effective approaches used by the subjects to complete the task, we developed training protocols for each interface.
The purpose of the training protocols was to ensure that subjects would become proficient in the use of the interfaces by training them on the navigation strategies that resulted in the fastest performance in the pilot study.
Based on discussions with ten evolutionary biologists, we developed a set of ecologically valid topological tasks.
We then selected from this list a task that required subjects to perform multiple navigation actions in order to fully exercise the features of each interface.
Our task, as illustrated in Figure 2, was a generalized version of a comparison task that did not need specialized knowledge of evolutionary trees.
The task required subjects to locate colored nodes within a large tree, determine the topological distance between colored nodes, and finally compare the distances between colored nodes to determine which distance was smaller.
Topological distance is the number of hops between two nodes, and is not the same as geometric distance, which may change with navigation.
Our task was composed of several low-level tasks such as find, identify, and compare, as described in the visual task taxonomy of Wehrend and Lewis .
Task instances were assessed prior to the experiment to ensure that they were isomorphic in difficulty.
Also, colored nodes were not located in close proximity to each other in order to ensure that at least one interaction had to be performed to determine each topological distance.
The dataset used in the experiment was a binary tree consisting of 5,918 nodes.
The tree represents evolutionary relationships between species and is available from the Olduvai project website .
This dataset was chosen to allow for complex topological comparisons requiring a significant amount of navigation.
Node labels were removed from the dataset in order to enable the task to be performed by subjects without prior knowledge of evolutionary biology, as well as to avoid unnecessary node occlusion.
Moreover, our discussions with biologists confirmed that their typical use of evolutionary trees involved very little reading of node labels.
In the overview interfaces, the overview is given 15% of the pixels and the detail view has 85% of the total number of pixels available.
The proportion of context regions vs. focus regions was tuned to the requirements of the particular interface based on piloting.
Performance was robust across a wide range of parameters, and we chose the best for each interface.
The ratio between the overview and the detail views is roughly 1:5 at session start or reset, while the zoom factor during navigation can range from 1:50 to 1:1000 for the compound task instances used in the study.
There are three cases to consider when guaranteeing visibility of colored areas: the areas might be occluded by other objects, off-screen due to navigation actions, or too small to be seen at the given resolution.
We do not have to contend with occlusion problems because the spatial layout is 2D rather than 3D and there are no labels.
For the PZN interface, we encode the direction to and distance from off-screen items of interest using circular arcs around the periphery of a view, a technique inspired by Baudisch and Rosenholtz's Halo .
The RSN interfaces constrain navigation so that no items can be outside the field of view.
We also ensure that items of interest in all views are visibly marked even when they are compressed to sub-pixel size using PRISAD's capabilities .
For consistency in visual representation, drawing performance, and low-level interaction, all interfaces are implemented based on the TreeJuxtaposer application , using the new general purpose PRISAD infrastructure that provides support for RSN with guaranteed visibility .
We adapted that rendering infrastructure to allow both the RSN and PZN interfaces to always show marked regions as visible colored landmarks, rather than using a naive culling technique that would discard geometric objects smaller than one pixel in width or height.
Each interface includes the text of the task at the top and a list of available navigation controls along the left side .
All interaction happens through mouse drags, and in our subsequent analysis a discrete navigation action refers to a single mouse drag.
All transitions are smoothly animated across 20 frames.
This technique differs from conventional PZN in that navigation actions do not push context regions off-screen, but compress them in the periphery of the view, where they remain visually salient.
The focus region is always demarcated by a red box that fills 60% of the detail view area, a parameter determined by piloting.
The user selects a rectangular area of interest for zooming in by dragging out a box with the left mouse button.
The contents of the selected area then expand to fill the red focus area in a smooth transition.
An action analogous to panning adapted to RSN is accomplished via horizontal and vertical drag motions with the right mouse button, allowing users to fine-tune focus selections.
The user can zoom out by dragging out a rectangle larger than the red focus area, the contents of which are then compressed to fill the focus area.
Colored nodes are guaranteed to be visible at all times, even if they are compressed to sub-pixel size due to navigation actions.
Just as with I1, the user selects a rectangular area of interest for zooming in with a left mouse drag.
The result is an animated transition that completely fills the view with the selected area.
The user can fine-tune the focus selection by panning with horizontal and vertical right-mouse drags.
The user can also gradually zoom out with vertical middle-mouse drags.
For any colored region that is off-screen due to navigation actions, a colored Halolike arc appears at the border of the screen, indicating the direction and the distance to the colored region with location and arc curvature, respectively.
The arc is part of a circular ring centered on the off-screen colored region, and disappears once the colored region is visible on-screen.
I3: RSN+Overview: Shown in Figure 5, this interface uses the same navigation controls as I1..
It also has an overview showing the field of view box corresponding to the extent of the detail view, which updates dynamically as navigation takes place in the detail view.
The user can also perform RSN equivalents of panning and zooming as in I1 by dragging directly in the overview.
In the RSN+Overview and PZN+Overview interfaces, subjects were instructed how to use both the overview and detail views for navigation and counting nodes, but were not explicitly told to navigate in either view.
Following the discovery of one of the two topological distances, subjects were instructed to reset the interface to the starting position and continue using the same strategy to find the second distance.
This was motivated by results of the pilot study, where subjects often spent more time navigating between the two halves of the task than completing the task itself.
After being shown the strategies, subjects were given a training block of 5 trials.
For each of the first 2 trials, the experimenter demonstrated solving the question using the strategies and then asked the subject to repeat this solution.
For the last 3 trials of the session, the subject solved the questions on their own.
The experimenter reminded the subject of the training strategy if needed.
Only three of the subjects required such reminders, and all subjects who successfully completed the study were consistently proficient in the strategies after the completion of training.
The training lasted 10 to 15 minutes and was followed by a one minute break.
Upon completion of training, subjects were presented with 7 blocks, each containing 5 trials, for a total of 35 trials.
All subjects were presented with an identical set of questions; the grouping of questions to block was predetermined, but the order of blocks was randomly generated for each subject.
The blocks of questions were verified to be isomorphic in difficulty in the pilot study.
The number of blocks was chosen based on pilot results to ensure that performance would reach a plateau by the end of the experiment in all interfaces.
The experimenter continued to observe the subject throughout the study, but never intervened.
Subjects were given a one minute break between each block of questions.
At the end of the experiment, subjects completed a questionnaire, which was used to collect information about their demographics and computer usage.
The questionnaire also included the NASA-TLX scales , a standardized instrument for assessing various dimensions of workload.
Space was provided for subjects to comment on their experiences with the interfaces, and short interviews were conducted with some subjects based on their responses.
We conducted the study on two systems running Windows XP with Pentium 4 processors, 2.0 GB RAM, nVidia GeForce2 video cards, and 19 inch monitors configured at a resolution of 1280x1024 pixels.
The experimental software, including the interfaces, was fully automated and was coded in Java 1.4.2 and OpenGL, using the GL4Java bindings.
The evaluation used a 2  by 2  by 7  design, where each block contained 5 trials.
Subjects were randomly assigned to each of the four interfaces.
A between-subjects design was chosen due to the need for training in order for subjects to effectively use each interface.
The experiment was designed to fit into a single 90 minute session.
Subjects were first instructed on the use of the different navigation techniques afforded by the interface to which they had been randomly assigned.
The experimenter then demonstrated the effective strategies to solving the task derived from the pilot study, and asked the subject to repeat them.
The training protocol instructed subjects to start navigation by dragging out a long thin selection area along the horizontal path between the nodes in question.
For the RSN interfaces, selecting a long thin horizontal area had the effect of stretching the dataset along the vertical axis .
Subjects were then instructed to count nodes that became visually salient.
Following this step, long thin horizontal and vertical selection areas could be dragged out to expand other compressed regions along the path.
For the PZN interfaces, selecting a long thin horizontal area had the effect of zooming the contents of the focus box to fill the entire view.
Subjects were then instructed to count nodes that became visually salient.
Our performance measures were based on logged data and included task completion times, navigation actions , reset actions, and errors.
Selfreported measures were collected through the post-study questionnaire.
These included the NASA-TLX ratings as well as ratings of ease of use, ease of navigation, and enjoyment on 5-point Likert scales.
Outlier data lying more than 3 standard deviations from the means of each cell were removed from the analysis.
A series of ANOVAs was run to understand the effect of navigation and overview on the performance and selfreported measures.
The Greenhouse-Geisser adjustment was used for non-spherical data, and the Bonferroni adjustment for post-hoc comparisons.
Along with statistical significance, we report partial eta-squared , a measure of effect size, which is often more informative than statistical significance in applied human-computer interaction research .
The overall results for mean completion times per trial are illustrated in Figure 7.
Separate one-way repeated measures ANOVAs were run for each of the interfaces to determine performance plateaus.
Post-hoc pairwise comparisons showed no differences between blocks 5, 6, and 7 for any of the interfaces, indicating that performance had reached a plateau by the end of the experiment in all interfaces.
Thus, for the remaining performance analyses, we focus exclusively on blocks 1 and 7, which represent performance at the beginning and end of the experiment.
For these analyses, 2  by 2  by 2  ANOVAs were performed.
Although it was a compound task chosen to require significant navigation, further research is required to determine whether our results on exploring the topological structure of binary trees generalize to a wider range of tasks and datasets.
For example, it is possible that steering tasks such as the one examined by Gutwin and Skopik  would provide performance advantages for RSN.
Our study investigated how contextual information affects performance and preference, whether integrated into a single view as with F+C techniques such as RSN or separated between two views as with the overviews used with traditional PZN navigation.
We found that the presence or absence of an overview did not affect user performance for either PZN or RSN interfaces.
Much of the previous work has considered F+C techniques as an alternative to overviews, so confirmation of our hypothesis that adding an overview to the RSN F+C technique did not affect performance was not surprising.
However, the preference for overviews, even for a technique touted as eliminating the need for overviews, was an unexpected and interesting result.
The lack of performance effects when adding an overview to a PZN interface is contrary to most previous findings in the literature.
We further analyzed our data to investigate whether reasons other than guaranteed visibility, which are discussed below, might have led to this result.
We noted that both observational and log data showed that subjects tended to adopt one of two distinct patterns of overview use in the PZN+Overview interface - glancing or interacting.
Subjects also appeared to maintain their adopted patterns for the duration of the experiment.
While both types of overview use have a performance cost associated with them, we postulate that simply glancing at the overview for orientation is less costly than interacting with it.
However, grouping subject data based on patterns of overview use revealed no impact of pattern on performance.
A different task which requires heavier interaction with the overview  is likely to show a performance benefit with an overview.
The presence of guaranteed visibility in all interfaces used in our study may also explain the lack of effect of overview on our performance data.
We speculate that the guaranteed visibility of colored nodes in the detail view provided the kind of orientation information that users could otherwise only find through overview use.
This result is consistent with the findings of Hornbaek et al.
In that study, an interface with an overview was not significantly faster than one without an overview that used semantic zooming.
It then appears that both guaranteed visibility and semantic zooming are providing navigation cues similar to those provided by an overview.
We summarize our results according to the experimental hypotheses: R1.
PZN interfaces performed better than RSN interfaces in terms of completion times, navigation actions, and resets.
Mental demand was also reported as lower in PZN.
For RSN, having an overview made no significant difference in terms of completion times, navigation actions, or resets.
Having an overview was, however, reported to reduce physical demand.
Similarly, for PZN, having an overview made no significant difference in terms of completion times, navigation actions, or resets.
Having an overview was, however, reported to reduce physical demand.
Our work is an attempt to explore and validate approaches to visualization that fall inside a very large design space.
Although parts of this space have been thoroughly investigated, much of the space remains insufficiently characterized.
While we cannot yet offer a comprehensive set of design guidelines, we discuss several conjectures in the areas of task choice, showing contextual information, and navigation techniques.
Based on these conjectures, we make preliminary recommendations on technique and overview use.
The results of our study showed that PZN interfaces outperformed RSN interfaces and were rated by subjects as less mentally demanding and easier to navigate.
In the visualization literature, arguments are often made that novel techniques such as RSN perform poorly compared to traditional techniques such as PZN because they are unfamiliar to users.
Although learning effects were apparent in our pilot study, we confirmed that our final study design provided enough training and practice that performance plateaus were reached for all interfaces.
Moreover, the difference in performance between PZN and RSN did not decrease significantly as subjects became more adept in the use of the interfaces.
Thus, we do not believe that the performance difference can simply be ascribed to unfamiliarity.
Another source of possible difference lies in the user interface components and interaction model through which the user controlled the underlying visualization metaphor.
The benefits of different interfaces for panning and zooming have been extensively studied, and we followed the recommended best practices in designing our PZN interfaces.
In contrast, interface approaches for F+C techniques in general and RSN in particular are less well understood, so our RSN interfaces may have suffered from usability problems.
The size and location of the RSN focus areas was fixed in order to constrain the amount of screen real estate devoted to focus vs. context, whereas previous work used moveable and resizable focus areas .
Qualitative feedback from questionnaires and interviews revealed that the size and location constraints may have caused disorientation.
Our pilot study results showed that performance was robust with a broad range of focus to context ratios, so those constraints could safely be relaxed in future studies.
Moreover, zooming out in RSN by dragging a larger box than the focus view was somewhat more awkward than zooming out in PZN, by a vertical drag with middle button.
We also note that the RSN interfaces required significantly more reset actions, which our observation data showed to be a reliable indicator of loss of orientation.
Questions remain as to whether improving the usability of the specific RSN interface would change user performance, or whether disorientation is a more fundamental problem with the navigation technique.
Finally, the method of providing guaranteed visibility necessarily differed for the two navigation techniques.
The Halo-like arcs in PZN provided a more salient visual cue than the marked nodes in RSN.
We speculate that this difference between the interfaces may also have affected user performance.
We have presented the first evaluation comparing PZN and RSN navigation techniques with and without an overview.
Our results indicate that PZN was significantly faster than RSN, required fewer navigation actions, and demanded less mental effort to complete a topological comparison task in a large tree dataset.
We also found that presence or absence of an overview did not appear to affect performance for either navigation technique.
Nevertheless, interfaces with overviews were found to be less physically demanding and more enjoyable.
In future studies, we plan to extend our evaluation to different tasks, both topological and non-topological, in an effort to gain an improved understanding of the relative strengths and weaknesses of each navigation technique.
Additionally, the combined findings from our pilot and main experiment suggest that the strategy used to complete a task had an impact on user performance.
An obvious next step in our work is to conduct a systematic exploration of the strategies users naturally adopt on their own and how the navigation techniques might be tuned to better accommodate those strategies.
We also plan to explore the different methods of providing contextual information.
Overviews, semantic zooming, and guaranteed visibility all appear beneficial.
It would be useful to conduct a formal study comparing the relative impact of these techniques on both performance and user satisfaction.
We would like to investigate the various patterns of overview use more precisely through the support of eye tracking technology.
Eye tracking has already been used successfully to examine navigation patterns in F+C interfaces .
We would like to determine the extent to which users glance at an overview, and thereby clarify the benefits of overviews.
We thank David Hillis and members of his research group for productive discussions and the use of the experimental dataset, and James Slack for his help with the PRISAD infrastructure.
We also thank the anonymous reviewers for their insightful comments.
Finally, we would like to thank all the subjects who participated in our experiment.
