One of the fundamental operations in today's user interfaces is pointing to targets, such as menus, buttons, and text.
Making an error when selecting those targets in reallife user interfaces often results in some cost to the user.
However, the existing target-directed pointing models do not consider the cost of error when predicting task completion time.
In this paper, we present a model based on expected value theory that predicts the impact of the error cost on the user's completion time for target-directed pointing tasks.
We then present a target-directed pointing user study, which results show that time-based costs of error significantly impact the user's performance.
Our results also show that users perform according to an expected completion time utility function and that optimal performance computed using our model gives good prediction of the observed task completion times.
As the cost of error increases, psychology research  may indicate that the user will change their behavior in order to reduce the error rate.
The speed-accuracy tradeoff  suggests that in order to reduce the error rate, the user will have to move slower which will increase their task completion time.
Users will likely favor efficiency  and tend towards optimal speed-accuracy tradeoff which will minimize their task completion time.
However, although there is extensive research in speed-accuracy tradeoff , there is little research that explores how the cost of error impacts the user's behavior and performance in target-directed pointing tasks.
It is not clear how much slower or how much more accurately the user will perform the task as the cost of error increases, and whether the user will converge towards an optimal behavior.
In this paper, we present a model that predicts the impact that the cost of making an error will have on the user's target-directed pointing task completion time.
We base our model on the expected utility theory , where we assume that the user will favor those strategies which minimize the expected task completion time.
Similar to previous studies , in our model we abstract the cost of error as a timebased penalty, which represents the time required to recover from the error.
Our model is not intended to replace Fitts' law.
Instead, it builds on top of Fitts' law  in conjunction with Wobbrock et al.
After describing our model, we present a target-directed pointing user study, which shows that time-based penalties significantly impact the users' completion time , movement time , and error rate.
Furthermore, the results show that optimal performance computed using our model predicts the observed task completion and movement time well, but has room for improvement when predicting the error rate.
The results of our study indicate that our model can be used to predict the target-directed pointing task completion times in user interfaces for different time-based costs of error.
This will allow both researchers and designers to model the user performance with a given interface in practice.
We conclude with discussion of the implications of our findings on different parameters of the target-directed pointing task.
One of the fundamental operations in today's user interfaces is pointing to targets, such as menus, buttons, and text.
Fitts' law  is arguably one of the most influential quantitative methods that predict the time required to acquire such targets.
Traditionally, Fitts' law experiments studied target-directed pointing tasks without considering the effect of the cost of an error when the user misses the target.
In real-life, however, when the user makes a selection error there is often some cost associated with that error.
The user needs to recover from the error, which requires time, and then continue until she selects the target.
For example, if the user clicks on the wrong menu item in the application menu, the user has to undo the effects of the wrong command, but also has to navigate the menu again in order to select the correct menu item.
To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee.
Cognitive modeling methods  are often used to predict the time it takes to perform different tasks when interacting with user interfaces.
One way to predict the user's targetdirected pointing time in the user interface in those cognitive modeling methods is using the Fitts' law .
Although, Woodworth  is often credited as the first to propose a relationship between movement time, amplitude, and velocity in determining movement accuracy in targetdirected pointing tasks, it was Fitts  who first formalized the speed-accuracy tradeoff.
For the sake of brevity, we refer the reader to in-depth surveys for detailed review of research on speed-accuracy tradeoff .
The cognitive modeling methods mentioned above primarily focus on error-free performance.
As such, those methods do not predict the time it takes to correct an error; instead they use observed error recovery times for the particular task.
The error rates used to calculate the expected completion times in those models are often calculated as probability of unconscious or automatic errors , and not errors caused by the speed-accuracy tradeoff.
Existing target-directed pointing studies often do not consider the cost of error when predicting task completion time because those experiments focus on comparing throughput of different pointing devices , and use only error-free performance with the devices.
However, a task completion time model that considers the cost of error could better explain the impact that the cost could have on the user's behavior in practice.
Given a risk of making an error, users are likely to favor target-directed pointing microstrategies that allow for higher levels of accuracy .
Furthermore, Soukoreff and MacKenzie  argued that the users have freedom of choice over the characteristics of their movement, and also have a preference for efficiency.
In fact, past research  showed that users change their target-directed pointing behavior in response to even small time savings at the level of milliseconds.
Furthermore, Gray and Boehm-Davis  proposed that the choice of these microstrategies is non-deliberate.
These previous findings have not considered the cost of making an error during the pointing task, but do serve as motivation for our work.
Although some studies have explored target-directed movement at pace naturally selected by the user , most studies motivate their users in order to study the users' maximum capacities.
In studying speed-accuracy tradeoffs, past research primarily used explicit verbal instructions of how fast or how accurately participants should move , often including conditions at different levels of speed-accuracy tradeoff .
However, users rarely receive explicit instructions on how to manipulate their speed-accuracy tradeoff in real-life.
Often other factors such as incentives to complete the task faster, or penalties related to incorrectly selecting the target implicitly affect the user's speed-accuracy tradeoff.
Fitts and Radford  and Elliott et al.
Similarly, Al-Imam and Lank  showed that monetary incentive-based, as well as penaltybased approaches, could affect the user's speed-accuracy tradeoff.
We build on top of such research, but we specifically focus on how time-based penalties for inaccurate movements affect the user's speed-accuracy tradeoff.
We also extend those works by presenting a model that predicts the impact of time-based penalties on the user's task completion time.
Recent models for optimal movement planning  predict optimal movement endpoints based on the constraints of the task.
However, our model does not provide an a priori prediction of the completion time in target-directed pointing tasks.
Instead, our work extends the Fitts' law, as traditionally used in HCI research for empirical estimate of task completion times, to include the cost of error.
This is similar to models by Dean et al.
However, instead of imposing penalties on early or late selection times  or using explicit decay of an incentive to represent the cost of moving slow to select the target , we abstract the cost of error as a fixed amount of time that only occurs when the user misses the target.
Thus, we allow the user to decide their tradeoff between the timesaving when moving fast to select the target and the time it would take to recover from an error should the user miss the target.
Post hoc corrections  could be another way to relate user performance at different time-based penalty levels.
However, those corrections exist specifically to normalize the data between speed-minded and accuracyminded participants.
Although they allow for data aggregation, they do not explain why this difference exists, or why some users choose different strategies.
More importantly, they do not suggest how time penalty associated with making an error affects the motivated user.
Error models based on Fitts' law  allow for predicting error rates based on parameters of a Fitts' law task.
Making an error when selecting targets, such as menus, buttons, and text in actual user interfaces often results in some cost to the user.
In order to predict performance of an interface, a model needs to take into account the cost of error when the user misses the target.
Often this cost can be abstracted as time required to recover from the error .
A simple intuitive approach to model this behavior would be to collect the error-free task completion time in conditions without cost of error, and predict the completion time as the sum of error-free movement time and the cost of error weighted by some observed error rate .
However, such a simplification does not take into account that the user's error rate might be a function of the cost which that error incurs.
In this section, we explain in detail our model for task completion time , which takes into account the cost of making an error.
Our model is based on a simple assumption that users will change the characteristic of their performance in favor of strategies that maximize their expected utility.
In other words, given a penalty represented by a time-based cost of making an error, the users will change their speed and accuracy in order to minimize their task completion time.
Although the expected utility theory had a fair share of criticism , we assume that the simplicity of target-directed pointing tasks still allows the users to at least have a rough estimate of the optimal utility in such tasks.
Additionally, although the probability of an error is not fixed, users should be able to learn to optimize their accuracy , which should allow them to use this information in estimating the expected utility.
In order to predict the user's task completion time, we assume that the users will tend towards optimal performance, a hypothesis supported by prior research .
At optimal performance the user will be performing at a speed-accuracy tradeoff which minimizes the user's expected completion time.
Therefore, our proposed model for task completion time based on a cost of error C is calculated by minimizing the expected completion time : argmin 1   
However, if the user misses the target on the first attempt, the user often incurs some cost, C. This cost includes the time to recover from the error and to attempt to select the target again.
We define the completion time  as the time until the target is successfully selected, whereas movement time  is the time until the first target selection attempt.
As such, if the user is successful on their first attempt, CT will equal MT , and if the user makes an error CT will be the sum of MT and C .
For now we consider the time to reacquire the target successfully as part of the error cost C.
Our model  abstracts the cost of error as the time-based penalty after an error occurs .
This time, required for the user to recover from the error and complete the task, is task dependent.
Below we show how our model can be applied for a specific error cost.
To model this task, we split C into two components: the time to recover from the error , and the time to complete the task after the penalty .
The expected completion time then becomes: 1    Here, Cr would have some fixed value.
CTc is estimated using Fitts' law, where the width  and the position of the target remains the same, but the amplitude  changes.
We denote this amplitude after an error occurs as Aerr.
We estimate Aerr by finding the mean of selection endpoints that result in error, and computing the distance from that point to the center of the target .
Thus, this starting point is the point with probability equal to p/2, where z is the unit-normal deviate, or z-score , along the standard normal distribution of selection endpoints.
Figure 4 shows the optimal completion times for different A x W combinations, based on the time penalty Cr.
It can be seen that the optimal completion time curves level off quickly.
At first, this might seem surprising because intuitively the users should be performing much slower to avoid the very high penalties.
Therefore, the users can move at close to typical movement times even when the costs of errors are extremely high.
We believe this to be an interesting insight that results from our model, which we will test in our experiment.
We then calculate the expected completion time for the task after the error occurs recursively, using Equation 5.
In other words, we treat the task after an error occurs as a new target-directed pointing sub-task, where there is a probability that the user will again make an error given the user's effective movement time, and again incur the fixed cost of error Cr if the user misses the target.
With this cost function, we can now use the model to predict task completion times for different time-based costs.
Figure 3 shows the relationship between movement MT and E.
It can be seen that moving too quickly will cause E to be high, because of large error rates.
Moving too slowly will result in a suboptimal E, as in effect, the behavior overcompensates for the error cost, and results in an error rate that is lower than optimal.
The goal of this experiment was to explore whether timebased penalties affect the user performance, and to verify the validity of our cost of error model.
We investigate whether the optimal completion time, movement time and error rate computed using our model at different time-based penalties can be used to predict the user's observed performance.
The experiment used the task outlined in the above example.
That is, if the user made an error, the cursor would freeze for a fixed time-penalty, after which the user was required to successfully acquire the goal target.
The position of the next target was randomized.
After the first and second sections, the system enforced a 5minute mandatory rest for all participants.
At the beginning of the study, an investigator read instructions for the task to the participant, and instructed the participant that the only goal was to complete the entire study as fast as possible.
We allowed the participants to perform at error rates that they felt would allow them to accomplish this goal.
At the end of the study, the participants filled out a questionnaire asking about their demographics and their strategies for performing the task, to ensure they understood the task.
We conducted the experiment on a HP Intel Xeon desktop computer with 3.2GHz dual-processor and 12GB RAM, running Windows 7.
The machine was equipped with a 24inch monitor set to 1920x1200 resolution.
All participants used the same HP USB 2-button optical scroll mouse, with its speed set to 7/10 in the mouse control panel and acceleration turned off.
The experimental software was implemented using Java 6 SE.
The software ran in fullscreen mode, with all other nonessential services disabled.
We randomly assigned 18 participants into short time penalties group  and the other 18 into long time penalties group .
We did this instead of asking participants to experience all 5 delays to enable participants to complete more trials per time-based penalty without becoming fatigued.
The study consisted of 3 sections .
Each section consisted of 6 blocks of 15 trials for each of the 9 ID's.
We fully counterbalanced the order of the time-based penalties, and randomized the order of ID's within a block.
Trials with the same ID were grouped together within a block.
Each participant completed 2,430 trials in total.
In this section we present the results of our experiment.
Consistent with prior work , prior to data analysis, we removed spatial outliers from the data where the amplitude of movement was less than half the nominal movement amplitude, or where the selection endpoint was more than twice the target width from the target center.
In order to calculate the effective amplitude  and width  of the target, we calculated bivariate deviation of click points in 2 dimensions  as a spread of hits around the target centroid .
We analyzed data for short and long time delay groups separately.
We analyzed parametric participant data, such as movement time, with one-way repeated measure ANOVAs.
To ensure Sphericity of data, we performed Mauchly's tests, and used the Greenhouse-Geisser correction when Sphericity was violated.
We performed pair-wise comparison using paired t-tests with Bonferroni correction.
We analyzed non-parametric data, such as error rates, using Friedman tests and performed pair-wise comparison using Wilcoxon tests.
In order to complete a trial, the participants had to successfully click inside a goal target.
If they missed the target, they had to continue the trial from where they missed until they correctly selected the target.
In a 0 cost condition, users could continue immediately.
In the other conditions, the system removed the cursor, displayed a time delay message, and placed the cursor back at the exact same position after the penalty delay.
Additionally, the system displayed a reminder about the current time delay at all times in the bottom right corner of the screen.
At the beginning of each section, the system required the participant to experience the time-based penalty in a single warm-up trial.
In this warm-up trial, the participants had to click inside the first target that appeared on the screen, and then purposely click outside of the next target that appeared to experience what happens when they make an error.
In order to prevent the participants from guessing the next position of the target, and thus impacting their strategy, we used a modified 2-D Fitts' pointing task.
At any given time only one circular target was visible on the screen.
Figure 5 shows mean observed completion times for the two time penalties groups.
All were significantly different .
But our tests did not find significant difference between 10 and 20 seconds penalties .
This is consistent with our model that predicts that the cost of error will have less impact at higher cost values.
However, if the movement times, and thus error rates, were identical across different time-based costs, the completion times would show linear increase.
Instead, the completion time data appears to follow the curve estimated by our model.
The perfectly increasing order of movement time as cost increases also provides evidence that participants are responding to the level of cost, and not just its existence.
For each participant, we first applied Crossman's correction  in order to align the data across different time-based penalty groups.
We then computed the participant's effective movement time a and b values by fitting the observed movement time to the first target selection to the effective indexes of difficulty from our task.
However, the error model equation   requires a' and b' values different from the a and b values above.
Therefore, we calculated the a' and b' values for each participant by using their observed movement time and error rate.
We then derived the a' and b' values by minimizing the mean squared error between the observed and model predicted error rate.
Note that the predicted error rate computation requires an effective movement time term .
We computed this effective movement time using the fixed a and b values for each participant.
Figure 8 shows N=54 error rate points for each A x W x penalty group x time penalty plotted as  ordered pairs averaged over all participants.
Mean difference between the predicted and observed errors was 0.008.
Note, however, that although the linear fit has a nearzero intercept and near-unity slope, R2 is low.
One possible explanation is that the observed error rates in our experiment take values only between 0 and 0.05, but the original model was derived from observed error rates ranging from 0.0 to 0.7.
We first compare the optimal completion time calculated using our model and the observed completion time.
Figure 10 shows the data for N=54 points for each A x W x penalty group x time penalty plotted as  ordered pairs averaged over all participants.
The near-zero intercept and near-unity slope suggest that our completion time model predicts the observed completion time well.
The mean observed completion times averaged over all combinations of A x W were slower than optimal.
This indicates participants will approach, but not actually achieve the theoretically calculated optimal time.
The relationship between optimal and actual completion times can be described as:
In this section we verify our calculation of expected completion time .
We calculated the expected completion time using the observed MT from the participants .
The error rates were predicted by the error model  given the observed MT and a' and b' values we derived in the previous section.
Figure 9 shows N=54 completion time points for each A x W x penalty group x time penalty plotted as  ordered pairs averaged over all participants.
Mean difference between the predicted and observed completion times was 54.16 milliseconds.
The near-zero intercept and near-unity slope suggest that, given the participants'
Figure 11 left shows a comparison between the optimal movement time calculated using our completion time model and the observed movement time for N=54 points for each A x W x penalty group x time penalty plotted as  ordered pairs averaged over all participants.
Although the fit has a near-unity slope the intercept is very high.
Upon further investigation of the data we found that this was due to movement times in the 0 second condition being slower than the optimal movement time, by an average of 17.55%.
We then compared optimal movement time with the observed movement time for all time-based penalties except 0 second penalty  .
Therefore, in order to calculate the total completion time for a task where an error results in time-based penalty, a model such as ours is needed.
The results also show that the participants change their performance according to the expected completion time function .
We show that the expected completion times predict the observed completion times well given the user's movement time to first target selection.
In addition, we show that Wobbrock et al.
Our results show that optimal completion times, calculated using our model, predict the task completion times well.
Our model can then be used to interpolate task completion times for time-based penalties other than those tested.
In our work, parameters for the movement time function are derived based on Fitts Law, while parameters of the error rate function are derived based on Wobbrock et al.
These values were all derived independent to our model, and then the fit of our model, using these values, was tested.
Therefore, our model allows for predicting task completion times for tasks that involve the cost of making an error; something existing target-pointing models do not.
The model can additionally be used to predict other parameters of the task, such as the movement time to the first selection.
However, the model best predicts movement times for costs other than the 0 second cost.
This is due to the participants performing significantly slower than optimal in the 0 second condition.
One reason for this could be that the participants chose from many possible strategies .
For example, participants could have been too risk-averse  or they tended towards "satisfactory" rather than optimal performance .
It is also possible that participants considered energy expenditure  as well when optimizing their performance.
This energy expenditure dimension was probably most pronounced in the 0 second penalty conditions because participants were not able to offer constant performance at the optimal movement time.
The optimal error rates calculated using our model did not predict the observed error rates as well as the other task parameters.
This was especially true for the observed error rates in the 0 second condition.
This could also be due to the slower movement times in this condition.
However, even in conditions with time-based penalty greater than 0, the model does not provide a strong fit.
One possible explanation for this is that the spread of error rates for conditions with time-based penalty greater than 0 seconds we tested was too narrow .
Also, it is possible that the sample size  was not large enough to average out the noise in the error rate data.
Similarly, we compare the observed error rate with the predicted optimal error rate .
However, the slope in the equation indicates that the optimal error rate provides a poor prediction of the participants' observed error rate.
One possible explanation again is that the participants performed sub-optimally in the 0 second penalty condition and did not make nearly as many errors as it would be optimal.
Therefore, we compare the observed error rate with the optimal error rate for all except 0 second time penalty.
Although the intercept became closer to 0 and the slope came closer to unity, the R2 lowered.
Our results show that users change the characteristics of their target-directed pointing given different time-based penalties.
These changes are more pronounced for the smaller penalties  and have the most effect on the task completion time.
This is in line with the idealized curves generated using our model which suggest that differences in performances get smaller as time penalties increase.
As such, our model could use other targetdirected pointing movement time and error rate models to alleviate some of the limitations we discussed above.
For example, a time-accuracy model for movement time that accounts for the energy expenditure  could be used instead of the Shannon formulation of Fitts' law we used.
While some of the differences between completion times predicted by our model are fairly small, our model is the first to provide an explanation and prediction of changes in user behavior given the cost of error when the user misses the target.
Additionally, even such small timesavings can have an impact on the users' behavior .
Our model, therefore, could inform design decisions on whether reducing the cost of errors of different target-directed pointing tasks in a user interfaces will result in significant performance advantages.
The optimal performance calculated using our model has implications for other target-directed pointing tasks metrics.
For example, past research referred to the ideal target utilization as the utilization that corresponds to the 4% error rate .
However, our results show that the target utilization varies for different levels of time-based penalty.
What might be considered underutilization of a target for one time-based penalty might be considered ideal utilization or overutilization of the target for a higher time penalty.
Therefore, the ideal target utilization could be defined as the utilization that corresponds to optimal error rate for the given time penalty.
The error cost might have impact on other target-directed pointing metrics as well, such as throughput , which require further investigation.
Additionally, future work should explore the effects of cost of error on other common tasks the users perform in user interfaces.
One such task is the steering task where the impact of the cost of error might be even greater than in the pointing task.
Finally, our model abstracts the cost of error as the time required to recover from the error.
However, there are different types of costs that the user might incur when interacting with user interfaces.
The mental cost and the physical cost of making an error, i.e., the mental and physical demand required to recover from the error, are two such cost types that would be interesting to explore in future research.
In summary, we believe that taking into account the cost of errors during interactive tasks is an interesting and important area, and believe that our research can serve as groundwork for future investigations on this topic.
In this paper we presented our model which predicts the completion times for target-directed pointing tasks given the time-based cost of error.
We described an experiment in which we computed the task parameters for our model, including the parameters used to derive the pointing error model we use in our model.
The results showed that our model accurately predicts user performance in targetdirected pointing tasks that involve the cost of error when the user misses the target.
We then provided a discussion about some of the limitations of our model and how those limitations could be addressed in the future.
Additionally, our work opens up a number of interesting opportunities for future research.
We briefly discussed the impact our model could have on some metrics of target-directed pointing.
However, future work should perform a more thorough investigation of the effects that cost of errors has on other task metrics, such as for example throughput .
In our work we examined the effect of cost of error on a target-directed pointing task.
