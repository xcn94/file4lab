Figure 1: The steps of a pen-and-ink illustration with Vignette from scratch  Draw leaf strokes  and gesture   Texture created from gesture and strokes More textures  Draw scale strokes and gesture  Region filed with scales  Draw hatching strokes and gesture  Fill region with hatching  Final illustration created in minutes.
Vignette is an interactive system that facilitates texture creation in pen-and-ink illustrations.
Unlike existing systems, Vignette preserves illustrators' workflow and style: users draw a fraction of a texture and use gestures to automatically fill regions with the texture.
We currently support both 1D and 2D synthesis with stitching.
Our system also has interactive refinement and editing capabilities to provide a higher level texture control, which helps artists achieve their desired vision.
A user study with professional artists shows that Vignette makes the process of illustration more enjoyable and that first time users can create rich textures from scratch within minutes.
Pen and ink illustration is a popular artistic medium that can be seen in textbooks, repair manuals, advertisements, comics, and many other printed and digital media.
Illustrations typically incorporate a wealth of textures, tones and artistic styles.
These effects take significant amounts of skill, artistry, and patience to create.
Also, professional tools like Illustrator, Photoshop, Comic Studio and InkScape can synthesize customized textures.
These tools are powerful and widely used, but they fall short of preserving two key properties of traditional paper-based pen-and-ink illustrations.
The first key property is artists' rich personal style, as seen in Figure 2.
Arthur L. Guptill explains, "... the more conventional the art, the greater the opportunities for originality.
We might go so far as to say that there is perhaps no medium offering one a better chance for development of a personal technique than the pen, for pen drawing is akin to handwriting, and just as no two people write alike, so no two people draw alike..." .
Tools developed for pen-and-ink style renderings  require some kind of 3D models or 2D images to serve as the template for guiding the generation of textures.
To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee.
The second key property that existing tools fail to preserve is the workflow of pen and ink illustration.
Generating a drawing from 3D scenes or images destroys this workflow completely.
Texture generation tools do use artists' pen strokes, but much of the creation process with these tools is devoted to parameter tweaking.
These tools can produce diverse effects, but they are often difficult to learn, and tedious to apply.
A number of systems render illustrations in a pen-and-ink style.
The tones and textures in these systems are therefore guided by the underlying 3D geometry or 2D image.
Instead, we focus on workflows that allow illustrators to produce artworks from scratch, where no scene model or image exists.
Our system analyzes reference patterns and gestures drawn by artists to synthesize new patterns with similar perceptual properties.
We present Vignette, an interactive system for pen-and-ink illustrations that uses free-form gestures for texture design and manipulation.
Vignette provides tools to design, arrange, and manipulate pen-and-ink illustration textures through simple gestures.
Vignette preserves traditional penand-ink illustration workflow while accelerating the creation of textures from user defined example strokes.
We focus on drawing from scratch, using textures generated entirely from artists' hand-drawn strokes to preserve the original style and signature of individual artists.
Using Vignette, even first-time users can create complex and expressive illustrations within minutes.
This paper presents the following contributions:    An analysis of traditional pen-and-ink illustration workflow and artifacts that guides interface design.
The Vignette system, which facilitates texture creation while preserving this workflow.
An evaluation with four artists that shows how Vignette reduces the tedium of texture creation.
Applications like Adobe Photoshop, Adobe Illustrator, Comic Studio, Sketchbook Pro, InkScape, and CorelDRAW have become mainstays of digital artwork creation.
In pixel-based applications like Photoshop, duplicating an example patch in multiple layers or using pattern brushes can speed up some repetitive tasks that illustrators encounter .
With pixel-based approaches, however, it is hard to control density, add variation, or deform textures.
Vector graphics editors like Adobe Illustrator and Comic Studio are very powerful but awkward for illustration.
These tools allow artists to define custom textures that can be controlled by a set of parameters, but the resulting textures tend to lack the subtle variations found in traditional illustration.
Furthermore, tweaking the many parameters to get a desired texture is tedious and shifts attention away from the artwork itself.
These tools are oriented more toward graphic design than pen-and-ink illustration.
In recent years, researchers have explored digital art systems inspired by traditional artistic media and workflows.
SandCanvas, Project Gustav, Fluid Paint, Intu Paint and IO Brush all preserve traditional workflows while bridging the gap between physical and digital drawing artifacts.
With Vignette, we have explored natural sketch based interaction for texture design and manipulation that preserves illustrators' traditional workflow.
The idea of synthesizing textures, both for 2D images and 3D surfaces, has been extensively addressed in recent years .
However, the basic representations in most existing texture synthesis methods such as pixels , vertices , voxels  or parametric descriptors  cannot adequately represent individual or discrete elements with semantic meanings.
Moreover, subtle variation in the reproduced pattern is desirable for changing density and avoiding regularity.
It is difficult to achieve such variation with pixel-based texture synthesis.
The use of vector-based descriptions of an input pattern for synthesis is explored in .
These descriptions are more expressive and allow higher-level analysis than pixel-based approaches.
However,  do not reproduce the interrelation of strokes within a pattern, and are thus limited to hatching and 1D synthesis only.
Their examples are points, not strokes, which limits the user to synthesizing dot patterns.
This is an extension of texture synthesis techniques to vector-based patterns.
However, both Barla et al and Ijiri et al use triangulation to perform 2D synthesis.
This approach cannot handle elements with complex shapes that are closely correlated with spatial distributions.
Instead, we use a data-driven texture optimization method  for stroke synthesis.
Vignette provides a novel way to design and manipulate textures for pen-and-ink illustrations completely from scratch.
We integrated texture synthesis methods with freeform gestures to provide powerful texture tools that help artists create beautiful artworks.
Tone  refers to the density of strokes in a texture.
The tone is the ratio of black ink to white paper over a given region of the texture.
Figure 4-4 and 4-4 shows the variation of tones with the same texture to indicate the brightness of a surface.
Together, stroke, texture, and tone provide artists with a rich language for producing expressive illustrations with a variety of personal styles .
While the process of pen-and-ink illustration can vary from artist to artist or even between one artists' illustrations, the illustration process usually follows five steps : Step 1: create outlines of simple geometric shapes and regions of interest with a pencil.
The drawing at this step is typically light and erasable.
Step 2: pencil in details and shadows.
Iterate until the outline and any object highlights are well-defined.
Step 3: begin filling in the detailed textures, starting with small areas of example texture.
We call these small example textures patches.
Step 4: repeatedly apply patches to fill in the outlines.
Step 5: add or modify details to complete the illustration.
Steps 1 and 2 determine the high-level structure of the illustration with shape outlines, their spatial layout, and indicators of properties such as shadows and highlights.
Step 3 determines the detailed textures and tones of the shapes or regions determined in step 1 and 2.
Essentially, these three steps contain most of the essential elements to uniquely define the style and content of an illustration.
In step 4, the artist repeatedly applies the various textures and tones to all shapes and regions in the illustration.
This fourth step is the most tedious and contributes the least to the uniqueness of a pen-and-ink illustration.
However, the illustration cannot be completed without it.
In the last step, the artist touches up the illustration with final details and adjustments.
Note also that artists often iterate this process and jump between steps.
Analyzing this workflow, we found that a major component of an artist's personal drawing style lies in her procedure  memory of using the pen, which is reflected in her strokes .
Using a third party image or model cannot preserve this unique style.
If the artist were asked to produce the texture separately, saving it into an image before applying it to the drawing, it would break the creative flow of the drawing process.
Therefore, we believe it is important to allow the artist to define both the outline and example textures from scratch using her hands.
Finally, we note that step 4 in the traditional workflow is the most repetitive and time consuming.
Consequently, it is quite suitable for automation.
A small set of discrete strokes can often be used to fill up a region.
We identified this effect in 25 out of 56 illustrations.
In our analysis, this type of synthesis was more common than the other two .
6, and many other complex textures.
To inform the design of systems that automate step-4 of the traditional illustration workflow, we examined the kinds of textures that professional pen and ink illustrators use.
We analyzed 56 rich pen and ink illustrations by 32 artists, mostly taken from The Technical Pen  and Rendering with Pen and Ink .
After analyzing the textures in these illustrations, we classified them according to techniques artists could use to automate the filling-in process.
We identified three techniques: brushing, flood filling, and continuous hatching.
As we explained in Related Work, brushing and flood filling techniques exist in current graphical tools, but they are tedious, awkward, and do not preserve artists' style.
Continuous hatching cannot be found in these tools at all.
Vignette provides all three techniques, and it uses texture synthesis of vector geometry to produce pleasing results that preserve artists' style.
It should be noted that these techniques cannot reproduce all textures effectively.
Automation requires textures to be repetitive so that a computer can synthesize them from example patches.
Some textures have so much variation that they cannot be synthesized from patches.
In the following paragraphs, we describe these texture filling techniques along with applications and variations.
Continuous hatching is different from brushed hatching, because the synthesis is two dimensional, i.e.
Figure 6: Applications of texture automation techniques.
Our analysis of traditional pen-and-ink illustration processes and artifacts helped us to build Vignette, a texture synthesis system that is based on the traditional illustration workflow.
Here we present Vignette's user interface.
We begin with Vignette's toolbars and palettes, then describe our workflow, and close with interactive refinement tools.
As shown in Figure 7, Vignette has four toolbars located around a central drawing canvas.
The top left region of the drawing canvas is reserved for a palette of patches ; each patch is shown horizontally from left to right in small rectangles according to its creation order.
Patches are example texture patterns created using the Example Strokes tool .
There is also a larger rectangle on right that displays the currently selected patch .
The remaining area of the drawing canvas is for freeform pen-and-ink illustrations.
The following steps illustrate the typical drawing workflow in Vignette: Step 1: Users can draw a rough outline of the illustration using the Pencil tool.
Step 2: After the high level structure is defined, users can select the Pen tool to draw the detailed outlines.
Users can use the Mask tool to define a region to be filled with texture.
Step 3: The user can then draw part of the texture using the Example Strokes tool.
Step 4: The user then selects a texture filling tool  and gestures to specify how the texture should be filled in , 9 and 10.
The example strokes are automatically collected into a patch, while the direction and curvature of the gesture specify the reference orientation of this patch.
To understand how Vignette collects strokes into patches or fills in textures, refer to Generating Patches From Example Strokes and Texture Synthesis in our Implementation section.
Vignette's main toolbar supports the five steps of the traditional illustration workflow.
This category has the Pencil tool.
In traditional pen-and-ink illustration, a pencil is used in steps 1 and 2 to outline the high level structure of an illustration.
Similarly, strokes drawn with Vignette's Pencil tool are stored on a separate layer which can be easily removed after finishing the illustration.
This category has the Pen tool, which is used to draw detailed non-repetitive strokes and fine details of an illustration, such as a person's eye.
We created the Example Strokes tool to support the third step in the traditional workflow.
Strokes drawn with this tool are collected into patches and later applied to different regions.
Tools in this category support the fourth step in the traditional workflow: Mask, Brush, Continuous Hatching, and Flood Fill.
Mask defines a closed region to be filled up with the target texture.
The others will be covered in more detail later.
Textures can be refined interactively using the Flow Field, Perspective Tilt,
To edit a texture, it must first be selected using the Select tool in the main toolbar.
The corresponding patch appears as current patch in the top right of the canvas.
As the user edits the example patch, the system interactively changes the selected output texture to reflect the change in the example patch .
Users can edit the tone or density of a texture by manipulating a slider.
Since each of the elements is represented by single point in the texture, we simply scale the density of the positions of the elements and re-render the elements.
Variation of textures by tone editing is illustrated in Figures 8-11.
By default, textures are filled in uniformly as if on a flat surface.
Often, however, users may wish for textures to gradually change as they fill a region.
Vignette provides two tools for this: perspective tilting and flow fields.
Perspective tilting is a technique for depicting 3D surfaces in illustrations.
In perspective drawing, objects are drawn smaller  as their distance from the eye is increased.
In our system, user can manipulate the perspective view of a texture without any underlying 3D information by manipulating the eye position with gesture with respect to the texture.
Currently, our system supports one point perspective tilting .
To tilt a texture, the user selects the Perspective Tilt tool in the main toolbar and drags the pen.
The angle between the first point and the current point determines the direction of foreshortening, and the length determines the amount of foreshortening.
Flow fields allow users to specify the direction of the texture as it flows across a surface.
In Vignette, users can select a texture, and then use the Flow Field tool in the main toolbar to adjust the direction of this field.
Gesturing with the Flow Field tool tilts the field in the direction of the gesture, which orients the texture's strokes along the gesture.
This is shown in Figure 11.
Generating Patches From Example Strokes Figure 8: Brush operation and editing the curve of a texture.
The first step of our method is to generate a patch from the example strokes near a user gesture.
After the user draws example strokes , 9, 10 and gestures over them , 9, 10, example strokes near the gesture are gathered into a patch.
The system clusters strokes together into elements by merging the strokes with overlapping bounds.
Our intent was for an element to be a cluster of strokes that is perceived as a single feature by the user .
In the leaf figure above, the five strokes are combined into a single element.
Figure 9: Continuous hatching and perspective tilting of a texture.
The example patch provides a higher-level, perceptually meaningful description of example elements.
The next step is to create a larger texture by synthesis from the example patch.
Each of the individual strokes is represented with a set of 2D points.
An element is a group of strokes.
In the textures, we represent each element by a point sample, which is the centroid of the element.
During synthesis, we compute only the sample point without considering any other information of the original elements, like their geometry and appearance.
After synthesis, we replace the sample points with the output elements.
Now we will briefly describe the synthesis techniques of the three tools: brush, continuous hatching, and flood fill.
Continuous hatching synthesis is performed in three steps.
Search step: During the search step, for each output sample so, we find the input sample si with the most similar neighborhood, i.e.
This search is conducted by exhaustively examining every input sample for each output element.
In Vignette, we follow the EM methodology in  for texture synthesis because of its high quality and generality.
This method iteratively places and then adjusts element positions in the texture to minimize the objective function E. The objective function E is an evaluation criterion that quantitatively evaluates the arrangement of elements with respect to input example patch and performs heuristically chosen tests to try to reduce the energy.
The basic solver gradually improves the neighborhood similarity term by iterating the two steps: search and assignment .
We have used a vector field to represent the orientation.
In our system, user gestures determine the direction of this field at points within a pre-defined distance of the gesture.
Figure 11 shows a small number of red vectors that have been set by the gesture in Figure 11.
With an orientation field in hand, we then orient the elements in accordance to the vector field using property layers similar to modeling with rendering primitives .
Figure 13:  The input example patch.
In the search step for output element s0 , the algorithm finds the corresponding element si in the input patch  with most similar neighborhood.
Vignette has a unique approach to design and manipulation of textures in pen-and-ink illustrations.
It keeps the essential steps of the traditional pen-and-ink workflow while providing gesture controls for texture synthesis.
There are few existing research or professional tools designed for the same purpose, and none are directly comparable.
Adobe Illustrator may be the closest match in terms of texture creation and manipulation, but it is a general purpose graphical editing tool with an entirely different workflow and interaction style.
It also has many additional features/functions way beyond the need of penand-ink illustration.
Nevertheless, it is important to understand how professional artists feel about Vignette, and how it compares with the traditional pen-and-ink drawing experience and with existing digital tools such as Adobe Illustrator.
To do this, we invited four professional artists to use Vignette, while we sought to answer the following three questions.
How do artists generally feel about Vignette?
Does Vignette fit their needs?
Three participants specifically like the natural and hand drawn scribbling effect of the final artworks, as mentioned by P1, "it looks like I drew each and every stroke manually... and it is not obvious that the textures were created using a computer tool".
Four professional artists  participated in our evaluation.
P1 and P2 are accomplished expert artists.
They both work as pen-and-ink illustrators, animators, and directors with 15 or more years of experience.
P3 and P4 are intermediate level artists trained in design and illustration at universities.
Both have 4 or more years of experience in digital painting.
All participants are proficient with Flash, Photoshop, Illustrator and many other tools with 4 or more years of experience.
All evaluation sessions took place in a laboratory.
Vignette is built with Java and runs on a standard laptop.
All drawings were done on a Cintiq 12wx tablet.
Participants were able to create artworks with rich textures in a short time  after only 15 minutes of training .
All participants commented that it would be very tedious to produce drawings with similar quality either in traditional pen-and-ink style or using another digital tool.
Participants also commented that the advanced digital features make the illustration process enjoyable, which is traditionally very tedious to do.
According to them, Vignette is both effective and convenient, and preferable to manual illustrations and other professional tools for pen and ink illustrations.
The ability of users to create such a collection of artwork in a short time demonstrates the expressiveness and ease of use of Vignette.
The evaluation was conducted in the following three steps.
Training : Participants were first given a brief introduction to Vignette.
They then received a tutorial, which consisted of a printed sheet with seven practice drawings chosen to demonstrate the interface and features of the system.
Participants were asked to create and interactively refine these drawings to achieve the target result.
The facilitator did not intervene unless a participant had trouble creating a drawing.
Illustration : In this step, participants were asked to create pen-and-ink illustrations.
Some of these can be seen in Figures 15 and 16 .
We sought to answer our three questions primarily by observing participants and recording their spontaneous comments.
The following sections summarize our findings.
Participants commented that although Vignette has many advanced digital capabilities, but the fact that it is designed to follow the traditional pen-and-ink workflow makes the system feels natural to work with and easy to learn and use.
On the other hand, using Vignette significantly improved the productivity of drawing.
During the course of evaluation: for example, in Figure 15, the user drew a patch of three persons and later used subsequent brush tools for creating a crowd from the example patch.
Similar approach was used to draw fireworks.
This process follows the traditional pen-and-ink workflow, but is much accelerated.
However, the participants also mentioned that there are certain desirable properties of the traditional pen-and-ink illustrations currently lacking in Vignette, such as the variations of strokes produced by different types of pencils, pens and brushes.
Participants' overall reactions were very positive.
During the course of the evaluation, the participants created many illustrations with a wide variety of textures, such as textures for architectural drawings, landscapes, animals, crowds, fireworks, and abstract scenes.
Participants responded that Vignette was fairly easy to learn, all giving it a 4 on a scale of 1  to 5 .
Participants also expressed satisfaction with their artworks, with an average rating of 4.25 on a scale of 1  to 5 .
All commented that Vignette provides a pleasant drawing experience.
According to the participants, Adobe Illustrator is the closest tool they can think of to create and manipulate vector graphics textures.
All the participants mentioned that one major difference between Vignette and Illustrator lies in the interface and interaction style.
The design of Vignette allows creating illustrations quickly and easily.
As mentioned by P2: "I like the free-form gesture based interaction... it is easy to learn and use... With gestures, a few scratches in the canvas can create illustrations within a minute".
Compared to Vignette, although Illustrator has many builtin support features for texture and patterns , it is not optimized for pen-and-ink illustrations.
According to P1 - "Traditional tools have too many functions and options.
It is difficult for me to use,  are very often distracting for performing a certain painting".
Furthermore, participants noticed that Vignette provides additional useful capabilities not available in Illustrator.
For example, Illustrator does not provide support for continuous hatching quickly and easily like Vignette.
The flood fill effect of Illustrator is simple tiling, hence it can produce results like Figure 14.
But, iterative texture optimization reduces the energy function and produce visually better results , which is suitable for hand drawn textures, since hand drawn textures are not directly tillable most of the times.
Vignette worked well overall, but we saw several ways to improve it.
For certain kinds of textures, having long overlapping example strokes, the synthesis results sometimes look repetitive.
Also, like any stroke-based rendering system, Vignette's performance degrades as the number of strokes increases.
Our experience is that performance degrades with more than 1000 strokes.
Another limitation of Vignette is that leftward brush gestures appear to create different textures from rightward gestures, because leftward gestures vertically flip the texture.
This happened to P1 and P3 a total of 9 times.
One user suggested having a preview panel for testing the gesture effects before applying them in final drawings.
Our study users suggested two additional tools.
One suggested a gradient fill tool that would allow elements to vary in shape, color, and size across a region.
This is similar to our perspective tilting feature, but more general.
Another user wanted to save a separate version of a patch with a different scale, tone, and stroke width.
Vignette is a practical tool with a natural workflow for penand-ink illustrations.
Texture illustration is tedious, but current texture synthesis tools cannot easily capture illustrators' personal style.
Furthermore, these tools disrupt the traditional illustration workflow, because they are tedious and draw attention to dialog boxes and away from the illustration itself.
Vignette speeds up texture creation while preserving the traditional workflow capturing artists' personal style.
We analyzed the traditional illustration workflow and illustration artifacts to guide designers of illustration systems that preserve this traditional feel.
We then described the user interface and implementation of our Vignette system.
Finally, we presented an evaluation that shows how artists can use it to quickly create artworks in their own personal style.
Our exploration of natural workflow and gesture-based interaction was inspired by a traditional approach to creating illustrations.
We hope to inspire others to create digital art media that preserve the beauty of traditional media.
To understand the relative usage of features, we recorded the number of times each feature was used in the free task.
The four participants spent a total of 66 minutes on free tasks, during which we logged 215 feature usages .
Each user made moderate use of most features, though the use of brush to create textures stood out, accounting for 123  occurrences of all feature usages logged.
Two of the users made heavy use of brush .
One of these two users didn't use continuous hatching at all, while the other two users made heavy use of continuous hatching .
Flood fill was used by two users.
