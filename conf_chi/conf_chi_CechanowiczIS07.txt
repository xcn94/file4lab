In this paper we investigate the use of a uni-pressure and dual-pressure augmented mouse.
With a pressure augmented mouse users can simultaneously control cursor positions as well as multiple levels of discrete selection modes for common desktop application tasks.
Two or more independent pressure sensors can be mounted onto several locations on the body of the mouse.
To highlight the design potential of a pressure augmented mouse we conducted a multi-part study.
In the first part we identified the number of maximum discrete levels controllable with a uni-pressure augmented mouse, the most appropriate locations for installing pressure sensors on the mouse, and the design of new interaction techniques to support selection with pressure-based input.
In a follow-up design we introduced an additional sensor and two different types of selection techniques to control a larger number of discrete levels with two pressure sensors.
Our results show that users can comfortably control up to 64 modes with a dual-pressure augmented mouse.
We discuss the findings of our results in the context of several desktop interaction techniques and identify several design recommendations.
One possible reason is that there is not sufficient knowledge on the limitations and benefits of a pressure augmented input with a mouse.
Designers can naively augment a mouse by adding a pressure sensor to a fixed location on the mouse.
This approach, while providing an additional input dimension to most mouse-based interactions, can also be limiting.
The location of the sensor may not be appropriate for interacting with some of the major features of a mouse, such as clicking.
Additionally, a poorly augmented mouse would restrict users to a limited number of pressure levels .
Furthermore, selection mechanisms would be limited to the current methods for selecting pressure values, such as quick release or dwell .
Finally, a simple augmentation may not facilitate bi-directional pressure input .
Understanding the limitations and benefits of pressure based input with a mouse can allow designers to augment the mouse with pressure sensors  and utilize the augmented device in a variety of novel contexts.
To effectively harness the potential of a pressure augmented mouse designers need to know where to mount the pressure sensors on the mouse, create some mechanisms for controlling pressure input, and identify methods for selecting a pressure value.
What seems to be a natural addition to the next generation of mice is apparent in Apple's MightyMouseTM  in which two pressure buttons are available on each side of the mouse.
Although, pressure based input is featured in many digitizers and TabletPCs and has been widely studied , little is known about the limitations to pressure based input using a mouse.
To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee.
In this paper we investigate the design considerations of augmenting a mouse with one and two sensors through two experiments.
In the first study we investigated the ideal locations for affixing pressure sensors to a mouse, the methods for selecting continuous pressure values, and the number of pressure values that can be controlled with one sensor.
The results of the first study show that users can efficiently control pressure sensors with the thumb and middle-finger.
The results also agree with previously established norms that users can comfortably control only up to 6 pressure levels .
To extend the user's ability to control a larger number of pressure levels we designed two dual-pressure control techniques, switch and tap.
Switch and tap facilitate control of over 64 pressure levels and give users the ability to control pressure in two directions.
The results of a second study show that a technique such as tap allows users to control higher pressure levels and provide bi-directional pressure input.
The VideoMouse  augmented the mouse by adding a video camera as its input sensor.
In the VideoMouse a realtime vision algorithm determines the six degree-of-freedom mouse position, which consists of x-y motion, tilts in the forward/backward and left/right axes, rotation of the mouse around the z-axis and limited height sensing.
As a result the VideoMouse facilitates a number of 3D manipulation tasks.
The angular motion is computed based on simple calculations on the two sets of x-y displacement data.
This enhancement makes rotation tasks easier to perform.
With the FieldMouse, users can interact with virtual objects using any flat surface that is embedded with ID recognizers, such as a paper book.
Numerous studies have proposed novel interaction techniques or investigated different applications and offered guidelines for working with pressure based input.
They proposed a set of pressure widgets that operate based on the users' ability to effectively control a discrete set of pressure values.
However, their results are mainly applicable to the use of pressure based input on a stylus and they did not examine the design space resulting from more than one pressure sensor.
Their results show that continuous visual feedback is better than discrete visual feedback, users can better control forces that are smaller than 3N, and 5 to 7 levels of pressure are appropriate for accurate discrimination and control of input values.
Their results apply to pen based pressure and they do not investigate multi-pressure input.
Isometric input devices are common and use pressure based input to control the mouse cursor speed.
The pointing stick is a pressure sensitive nub used like a joystick on laptops.
Users decrease or increase the amount of force on the nub to control the velocity of the mouse cursor.
Similarly, the PalmMouseTM  allows users to control cursor speed by applying a slight amount of pressure to a navigation dome which is placed on the top of the mouse.
Both examples map pressure input to the speed of the cursor.
The traditional two-button mouse has been augmented in numerous ways such as by adding multiple buttons, by providing tactile feedback or by serving as a device with more than two degrees-of-freedom.
Manufacturers continue to add buttons to the mouse.
Multiple secondary buttons make certain tasks easier but they require that users remember the mappings between the button and its function and in some cases require repositioning the fingers to facilitate input.
The scroll wheel is a variation of a button that allows users to scroll vertically or horizontally in a window.
Studies show that the scroll wheel is particularly useful in navigating through long documents .
The tactile mouse  contains a small actuator that makes the mouse vibrate under certain conditions.
This form of feedback can inform the user when the cursor is moving into different areas of a window or when the user is crossing window boundaries.
Their results show that users complete selection tasks better with tactile feedback over visual and auditory conditions .
The Rockin'Mouse  augments the mouse with tilt sensors.
The Rockin'Mouse has a rounded bottom which allows users to tilt it and control objects in 3D.
Researchers studied pressure input in the context of multilevel interaction.
As a result, a number of techniques can take advantage of a soft-press and a hard-press on a pop-through button.
With glimpse users can preview the effects of their editing without executing any commands.
Multi-level input can facilitate navigation, editing or selection tasks but utilize pressure input in a limited way.
Touchpads that sense pressure are widespread input devices in notebooks or portable music players.
Blasko and Feiner  proposed multiple pressure-sensitive strips by segmenting a touchpad into different regions.
They show that pressure-sensitive strips do not require visual feedback and users can control a large number of widgets using their fingers.
Rekimoto and Schwesig  propose a touchpadbased pressure sensing device called PreSenseII that recognizes position, contact area and pressure of a user's finger.
PreSenseII eliminates the need for visual feedback by providing tactile feedback on the amount of pressure being applied.
Most studies have investigated the use of pressure based input on devices such as digitizers, pens or touchpads .
These devices are limited in terms of adding more sensors.
However, with respect to the physical design and common usage of a mouse, we can easily affix one  or two  sensors onto it so that users can control them simultaneously.
We propose that up to two sensors can be controlled simultaneously on a mouse, and controlling more than two sensors would strain the user.
Exerting force on a pressure sensor produces a raw stream of discrete numeric integer values.
The analog force exerted by the user gets converted to a digital data stream through a manufacturer specific Analog-to-Digital  converter.
As a result, manufacturers provide 256, 512 or 1024 discrete integer pressure values.
However, users cannot control effectively the raw discrete values.
As a result, applications further discretize the raw integer values by grouping near-by values into unique controllable pressure levels .
In stylus and pen based pressure input, studies have shown that users can comfortably control upto 61 discrete pressure levels .
Furthermore, users can better control forces that are less than 3N .
Since manufacturers apply different analog-to-digital converters there is no standard mechanism to discretize the number of pressure levels.
As a result, there are numerous methods and mappings for discretizing the number of controllable levels using a pressure based input .
We built a design framework to identify various factors that can influence performance with a pressure augmented mouse.
The framework uses six attributes to characterize the factors that can influence performance: sensor positions, number of sensors, discretization of raw pressure values, pressure control mechanism, selection technique and visual feedback.
Designers can add pressure sensors to a mouse in multiple different locations.
Ideally, pressure input should not require the user to interrupt a task or to reposition the hand to access a pressure button.
Additionally, pressure control is best at the fingertips .
Therefore to provide greater user control and better resolution of pressure levels, designers should position the sensors so that they can be accessed within the reach of the finger tips, such as on the rim instead of the surface of the mouse.
Several manufacturers such as Logitech or Apple's MightyMouseTM use this approach of adding buttons to the rim of the mouse and within the range of the finger tips.
The primary button on a mouse is typically controlled by the index finger unless the mappings of the button are modified.
As a result, unlike styluses or touchpads  with which pressure input is provided by the index finger, designers should not place on a mouse a pressure button in a location that interferes with the index finger.
In one reported case of pressure discretization, Ramos et al.
As a result there is a slow response at low pressure levels, linear behavior in the middle levels and slow response at the high levels of the pressure range .
A pressure control mechanism allows the user to iterate through a list of available pressure levels.
In most pressure based interactions, pressure input is usually better controlled in one direction, i.e.
As a result, in a uni-pressure augmented mouse, the pressure control mechanism is basic and simply consists of pressing down on one sensor to iterate through a limited number of pressure levels.
However, it would be beneficial to devise a pressure control mechanism that facilitates controlling input in both directions.
This mechanism can be provided by means of some specialized hardware  or by augmenting the mouse with more than one sensor.
Many types of interactions, such as mode switching and menu selection can benefit from a large number of pressure levels than what has been typically reported.
Increasing the number of accessible pressure levels may be possible with two sensors.
We propose that pressure control mechanisms with a dual-pressure augmented mouse consider the following design goals: the user should access a larger number of pressure values than with one pressure input; there should be minimal overhead when the user switches applying pressure between the different sensors; each pressure sensor should not extend beyond the comfortable control range available to the user; if possible dual-pressure mouse should provide pressure control in both directions.
The most common form of feedback is through a visual highlight over the active item that is selectable.
In the full visual feedback  condition all the potential targets are visible.
As the user applies pressure, the visual indicator  iterates through the list of selectable items.
In the partial feedback  condition only the selected target is visible.
In a similar setup, Mizobuchi et al.
In both the above described studies, users performed better with the continuous feedback condition.
Both our studies used an optical mouse with pressure sensors mounted on its rim .
The sensors  could measure a maximum pressure value of 1.5Ns.
Each sensor provided 1024 pressure levels.
The application was developed in C# and the sensor was controlled using the Phidgets library .
The experiments were conducted in full-screen mode at 1024x768 pixels on a P4 3.2 GHz Windows XP OS.
We first carried out a pilot study with three subjects to compare three different pressure discretization functions: a linear function, a quadratic function centered at the lowest pressure value and a quadratic function centered at the middle pressure value .
With the linear function we observed that users controlled less effectively the lower pressure values than the higher values.
We found that users were fastest with the quadratic function centered at the lowest pressure values.
In this discretization method, targets in the lower range contained more pressure units than those in the higher range.
A selection mechanism allows users to pick the required value after using the pressure control mechanism to hone into a pressure level.
QuickRelease operates by quickly lifting the stylus from the tablet's surface after reaching the appropriate pressure level.
Dwell triggers the selection after the user maintains the pressure control over a prescribed amount of time.
Stroke activates the selection mechanism after the user makes a quick spatial movement with the stylus.
Click selects a level by pressing the stylus' barrel button.
On a stylus, QuickRelease was shown to be the most effective selection technique .
However, it is not clear whether this method is appropriate for a uni-pressure and dual-pressure mouse.
Furthermore, it is possible that different selection mechanisms are required in a dual-pressure augmented mouse to allow the user to switch between sensors.
The experimental software recorded trial completion time, errors and number of crossings as dependent variables.
Trial completion time  is defined as the total time taken for the user to apply the appropriate amount of pressure and select the target.
The number of crossings  is defined as the number of times the cursor enters or leaves a target for a particular trial.
The software records an error  when the participant selects a location which is not a target.
The trial ended only when the user selected the right target, so multiple errors were possible for each trial.
Three selection mechanisms were tested for the unipressure augmented mouse: Quick Release , Dwell and Click.
Quick Release: This technique is similar to the one designed in .
In QR, once the user reaches the desired target they select it by quickly releasing the finger off the pressure sensor.
Dwell: This technique is similar to the one designed in .
In this method the user maintains the cursor within the target for a predetermined amount of time.
We use a delay period of 1 sec to trigger the selection.
Click: In this method the user iterates to the desired target and clicks on the left mouse button to select the item.
The goal of this experiment was to examine differences in performance with different sensor locations and different pressure selection mechanisms.
The experiment was also designed to examine differences in selection time and accuracy at different pressure levels.
We adapted the experimental design used in  to this study.
We used a serial target acquisition and selection task similar to the task in .
Participants controlled the movement of a red pointer along a vertical line through a sequential list of items using pressure input.
900 pressure values were discretized in a quadratic manner .
A set of consecutive rectangles were drawn along the line's length.
During each trial a target was colored in blue.
The user's task was to apply sufficient pressure to move the red pointer into the blue target.
We provided complete visual feedback to the user by highlighting the items in teal when the user iterates through them.
The user invokes a selection mechanism for choosing an item once the cursor is at the required pressure level.
The color of the target changed to yellow when the user selected it.
The system generated an audio sound to give feedback when the task was completed correctly.
Three sensor locations were tested in the experiment: top, left and right.
The top sensor can be easily acquired by the user's middle finger.
The left sensor is accessible by the user's thumb and the sensor in the right location is accessible with the ring or little finger.
We did not select a sensor location that requires using the index finger as it hampers the click selection technique.
The mouse was equipped with only one sensor and the experimenter changed the location to match the corresponding experimental condition.
The study used a 5x3x3x4 within-participants factorial design.
The order of presentation first controlled for sensor location and then for selection Mechanism.
Levels of the other two factors were presented randomly.
We explained the selection mechanisms and participants were given ample time to practice the techniques at the beginning of the experiment.
The experiment consisted of three blocks with each block comprising of two repetitions for each condition.
With 9 participants, 5 pressure levels, 3 selection mechanisms, 3 sensor locations, 4 distances, 3 blocks, and 2 trials, the system recorded a total of  9720 trials.
The experiment took approximately 60 minutes per participant.
We used the univariate ANOVA test and Tamhane post-hoc pair-wise tests  for all our analyses.
To make the data conform to the homogeneity requirements for ANOVA we used a natural-log transform on the completion time.
Post-hoc pair-wise comparisons of selection techniques yielded significant differences  in trial completion times for all pairs.
Participants were fastest with click, followed by dwell and QR.
Figure 4  shows the mean completion time of each technique per pressure level.
Post-hoc pair-wise comparisons of sensor location yielded significant differences  in trial completion times between right-and-top and right-and-left sensor pairs.
Participants were faster with the sensor in the top sensor location followed by left and then right.
Figure 4  shows the mean completion time for each sensor location across the different pressure levels.
Post-hoc pair-wise comparison of target distance yielded significant differences  in trial completion times for all pairs except targets at relative distance D1 and D2.
In the exit questionnaire we asked participants to rank the different selection techniques and sensor locations in terms of preference.
Most participants preferred click  followed by dwell  and quick-release .
Most participants preferred the left location for controlling the pressure sensor  followed by top  and then right .
We also asked participants to rank the different selection techniques for each sensor location.
The results were similar to the overall preference of the selection techniques.
The results of our study show that participants were fastest, had a higher level of control  and highly preferred the click selection technique.
This result is different from that reported by Ramos et al.
There are several possible reasons for this finding.
The proximity of the button to the pressure sensor and the resulting ergonomics made it easy for the participants to use their index-finger to click the left mouse button.
Additionally, users reported being more comfortable clicking to invoke a selection, as this is common with mouse input.
However, we also notice a large number of errors with click.
One possible explanation is that clicking on the mouse button requires support from the other fingers such as the thumb which can adversely affect the pressure input .
Our results indicate the dwell is a relatively good selection technique as seen by the significantly lower number of errors.
This is in-line with the results reported by Ramos et.
Users completed the task with higher accuracy in dwell than in click and quick-release.
One explanation for this is that with dwell users can ensure the correct object is selected by dwelling on it for a sufficiently long period of time.
However, with dwell, if users cannot reach the appropriate level a significant amount of adjustments are made.
This is noticeable in the higher number of crossings, particularly with the larger pressure values.
Additionally, in our study dwell triggers a selection after a 1 second delay.
It is possible that with a smaller delay users perform equally well with dwell as they do with click.
The average number of crossings per trial across all conditions was 1.3 .
Post-hoc pairwise comparisons of selection techniques yielded significant differences  in number of crossings for all pairs.
Click resulted in the least number of crossings, followed by dwell and QR.
Our tests did not show significant effect of sensor location on crossings.
Figure 5 shows the average crossings per pressure level for each technique  and sensor location .
Interestingly, unlike results from prior studies, quick release resulted with the poorest performance values for completion times and number of crossings.
One possible explanation is that unlike pen based interaction, lifting individual fingers off the mouse is not as natural or as easy as lifting a pen from a Tablet's surface.
Furthermore, there is only a limited range of movement for individual fingers and lifting them separately from the surface of the mouse requires considerable effort.
We found that participants were significantly slower with the right sensor location and preferred it the least of all the locations.
Our results do not favor the design choice of mounting pressure sensors to the right side of the mouse.
This finding counters the growing trend among commercial manufacturers  that mount sensors or buttons that are accessible with the ring or little finger.
Interestingly, the interaction effects between number of pressure levels and sensor location suggest that different sensor locations are better suited for controlling varying degrees of pressure levels.
For smaller pressure levels users committed a smaller number of errors with the top sensor  while at larger pressure-levels users committed fewer errors with the left sensor .
Switch-to-refine  allows users to switch between two sensors to control a large range of pressure values.
In switch-to-refine one sensor is considered as primary and the other as secondary.
The range of pressure values are divided such that users apply pressure on the primary sensor to access a coarse-level set of pressure values, each of which is interleaved by a range of fine-level pressure values .
In this pressure control mechanism the participant uses the primary sensor to coarsely jump through the coarse-level items and switches to the secondary sensor to control and navigate in a finer manner through the set of values between the coarse-level items.
To assist the user, the primary sensor does not respond while the user is refining their selection with the secondary sensor.
Once the user reaches the appropriate pressure level they click on the left mouse button to select the item.
If the total number of selectable items is 48, we can group the items into eight coarse-level values each containing six fine-level items .
To select the 15th item the users starts with the primary sensor and applies pressure to reach the 3rd coarse-level item .
This is followed by switching to the secondary sensor to navigate through each of the fine-level items in coarse-level item number 3.
As a result, the secondary sensor allows the user to navigate through each of the 6 items from item-13 to 18.
To select the 15th item the user applies 3 levels of pressure with the secondary sensor.
This technique allows users to select nxm levels where n and m are the maximum number of pressure values that users can control with the primary and secondary sensors, respectively.
Unfortunately, switching from one sensor to the next creates additional overhead in switch-torefine.
Furthermore, switch-to-refine does not facilitate bidirectional pressure input.
Results on speed, number of crossings and accuracy, indicate that performance degrades rapidly when the number of pressure-levels increases beyond 6.
This result is supported by prior studies on pen-based interfaces that suggest it is difficult to control more than 61 pressure levels .
In experiment 2, we extend the design of the uni-pressure augmented mouse by affixing an additional pressure sensor to determine if this limit can be extended.
Augmenting the mouse with one pressure sensor limits the number of accessible pressure levels.
Many applications such as zooming-in/out of a workspace, modifying the brush thickness in a drawing application or iterating through a long list of items can benefit from interacting with a large number of pressure levels.
Additionally, a unipressure augmented mouse does not facilitate bi-directional input.
In our context, bi-directional input refers to the user's ability to control, equally well, pressure input when pressing  and releasing  the sensor.
From our observations , continuous pressure input with one sensor affords a much higher degree of forward control over backward control.
These limitations led to the design of pressure control techniques, with two sensors.
Once the pressure cursor is at a given coarse-level, the user accesses the finer levels by pressing onto the same pressure sensor.
For example, to access the 15th item, the user taps 3 times.
On the third tap the user holds down on the primary sensor to iterate to the 15th item and then clicks on the mouse button to select it.
Interacting with each sensor allows the user to move through the items in one of two directions .
As a result of bidirectional control with tapping, users can easily adjust any overshoots that results from tapping too quickly.
The overall mean completion times across all conditions was 1.57s .
To make the data conform to the homogeneity requirements for ANOVA we used a natural-log transform on the completion time.
Post-hoc pair-wise comparisons of pressure-levels yielded significant differences  in trial completion times for all pairs except between pressure-levels 12 and 16.
Users were fastest when the pressure level was 4 followed by 12, 16 and 64.
Post-hoc pair-wise comparisons of control-mechanisms yielded significant differences  in trial completion times between Tap and Normal and Tap and Switch.
We did not find any significant difference between Normal and Switch-to-Refine techniques.
Users were fastest with Tap followed by Normal and Switch.
Figure 7 shows the mean completion time of each technique per pressure level.
Eight paid volunteers  between the ages of 21 and 26 participated in experiment 2.
All subjects had previous experience with graphical interfaces and used the mouse in their right hand.
The apparatus was similar to that of experiment 1 with the difference that we used a pressure augmented mouse with two sensors.
The experimental task and the performance measures collected were the same as for the previous experiment.
The study used a 4x3x4 within-participants factorial design.
All conditions were presented randomly.
Participants were explained how the selection techniques worked and were given ample time to practice the techniques at the beginning of the experiment.
The experiment consisted of three blocks each with five repetitions per condition.
Pilot trials showed that users were unable to control 64 levels with the Normal technique.
So we only tested it for pressure levels 4, 12 and 16.
With 8 participants, 4 pressure levels for switch and tap and 3 pressure levels for normal, 4 distances, 3 blocks, and 5 repetitions per block, the system recorded a total of 5280 trials per participant.
The experiment took approximately 60 minutes per participant.
The average number of crossings per trial across all conditions was 1.053 .
Post-hoc pairwise comparisons of control mechanisms showed that Tap had significantly  less number of crossings than all other techniques.
However, we found no significant difference in crossings between all the other levels.
Figure 8 shows the average crossings per pressure level for each.
The average number of errors across all conditions was 0.25 errors per trial .
With regard to control mechanisms tap and switch had 0.17 errors followed by Normal .
The results of the second experiment show that the mouse can be augmented with more than one pressure sensor to extend the user's pressure control range.
In the following sections we discuss the benefits and limitations of the various pressure control mechanisms we developed, application areas that can benefit from a pressure augmented mouse and summarize the main lessons for practitioners.
With dual-pressure strategies users were able to better control different pressure levels using tap-and-refine than switch-to-refine.
This was a result of the several factors.
With tap, users can control pressure levels bi-directionally.
As a result, overshoots can be easily corrected.
Additionally, since with tap users depend on tapping to get toward the vicinity of the target, users have a higher degree of control over the coarse-level items.
The fine-level items require further control which can easily be handled if the set of fine-level items contain less than six items.
Switch is partially restricted by the number of levels controllable with each sensor.
In our study we compared the two techniques at 64 discrete levels.
These were separated into 8x8 discrete levels.
As a result, adding more levels to any of the two sensors would show significant performance decreases with switch.
The tap in Tap-and-Refine may be replaced by a simple button.
The design would need two additional buttons  and one pressure sensor to work effectively.
However, using the standard right or left-click buttons would interfere with the click selection mechanism and other mouse functionalities.
Further, the context switch that would ensue switching between the button and the pressure sensor would further contribute to reduced performance of the technique.
Analysis of our log files suggest that typical tap times are about 50 to 80 ms which seems faster that the button click times reported in .
However, further research is needed to investigate alternatives to Tap-and-Refine.
The experimental software recorded continuous time and pressure values for each trial.
A typical trace of a user's selection task when using the click mechanism is shown in Figure 9.
Users' action can be characterized by two steps: first a coarse-grained pressure input to get closer to the target and then a fine-grained precision movement to select the target.
In the coarse-grained movement users apply instantly and rapidly a pressure amount to get in the range of the desired pressure value.
However, to select the appropriate target, users then control more carefully the pressure input up to the target.
A pressure augmented mouse can enhance interactivity in a number of different applications.
Integrated scaling and parameter manipulation.
In Zliding users control the scaling factor by applying pressure at the stylus' tip and delegate parameter manipulation to the stylus' x-y position.
Tap-and-refine can be modified to accommodate the design goals of an integrated scale and parameter manipulation technique.
In tap, the parameter manipulation would be assigned to the coarse-level movement of tapping onto the pressure button.
The scale factor would be relegated to the holding-down action in the tap.
Many applications require that users switch between modes rapidly .
In games for instance, it is critical that users switch modes quickly to access a weapon or some other tool.
In drawing applications, a significant amount of work takes place in small local regions of the workspace.
More precisely, we notice that once users get within the vicinity of the target they take approximately between 150 and 300 ms to refine their pressure movement to select the target.
This is often the time it takes the user to feel confident that they have the correct pressure value and momentarily switch their attention to the index finger for clicking the button.
Pressure buttons can allow users to select a mode without making significant displacements in the application.
Pressure menus could be designed in a similar manner to polygon marking menus .
On the spot, users can trigger and interact with a large menu.
Using tap users can iterate through an infinite amount of menu values and refine their selection as needed.
There are several lessons that designers can take from our experiments: * Place pressure buttons so that they are accessible by the middle-finger and the thumb.
Augmenting a mouse with pressure based input poses several design challenges, some of which we addressed in this paper.
Results of the first experiment show that pressure buttons are best controllable by the middle-finger and the thumb.
The first study also confirmed that users can comfortably control a limited number of pressure levels with one pressure button.
Additionally, the uni-pressure augmented mouse did not facilitate bi-directional pressure input.
The limitations of a uni-pressure augmented mouse led to the design of a dual-pressure augmented mouse along with two interactive mechanisms, tap-and-refine and switch-to-refine, to control pressure levels.
The results of the second study showed that with tap-and-refine users can comfortably control a large number of pressure levels.
Furthermore, with tap-and-refine users can provide pressure input in a bi-directional manner.
