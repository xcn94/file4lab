Most of those enhancements rely on the system knowledge of potential target positions.
Those techniques are theoretically appealing but difficult to fully evaluate.
The sole established experimental protocol shared by the HCI community is derived from Fitts' experimental paradigm.
As depicted in Figure 1, it consists in the presentation of 1D pointing tasks characterized by two parameters  and its target size .
This experimental paradigm is adapted to conduct controlled experimental studies because it introduces only two independent variables.
One limitation of such evaluations is obvious: they do not consider distractors.
As reported by Ahlstrom et al.
The solution adopted by most researchers to evaluate the impact of distractors on their interaction technique is to conduct a less formalized experiment based on a more realistic interaction scenario.
We will review some of those experiments in a later section.
Let us highlight some limitations of this common practice: * Since the design of experiments is geared towards mimicking the real world, too many independent variables are introduced and they can not be extensively explored.
The analysis and the interpretation of the results are thus difficult to conduct.
This leads to experiments which are not reproducible.
The evaluations are then not comparable.
Fitts' pointing paradigm is widely used to conduct controlled experiments and to evaluate new interaction techniques enhancing target acquisition.
Many of them change the behavior of the cursor according to various inputs, most notably the positions of potential targets.
We propose to extend Fitts' paradigm in order to challenge those techniques with distractors  in a controlled manner.
To reduce variability, we add a single new factor to the paradigm, the distractor density.
We specify a distractors distribution, fully determined by this factor together with those of Fitts' task, aimed at reducing bias toward a specific technique.
We also propose a preliminary extension of Fitts' law to take account of the sensitivity to the density of distractors as well as of the task difficulty.
In an experiment, we compare five existing pointing techniques, and show that this extended protocol enables contrasted comparisons between them.
Selecting a target by pointing is one of the most frequent tasks performed in graphical user interfaces .
This task is well modeled in the physical world by Fitts' law , which also holds in virtual worlds .
Many interaction techniques have been proposed to facilitate target acquisition in GUIs: Balakrishnan  offers a survey of such techniques proposed up to 2004, and new ways to enhance pointing are still regularly discovered.
This is the author's version of the work.
It is posted here by permission of ACM for your personal use.
The definitive version was published in Proceedings of the 2011 conference on Human factors in computing systems .
This illustrates that having the technique and the experimental protocol designed by the same person can introduce a bias , either against or in favor of the technique.
While being particularly fair, this methodology has a drawback: it tests the technique for a single configuration of distractors and thus does not provide insights on its sensitivity to the amount of distractors.
Finally, other authors tested their techniques with varying distributions of distractors.
The setup used to evaluate ninja cursor  is based on a "pseudo-random distribution" of distractors, presumably uniform, across the screen.
They tested their technique in the presence of 1, 100 and 400 targets.
This layout is not totally documented but its idea is to control the density of the distractors while distributing them pseudo-randomly on the path between the start of the movement toward the target and around the target itself.
In those papers, the sensitivity to distractors is evaluated using this density as a factor.
We also believe that the density of distractors is the relevant factor to consider when testing the sensitivity of interaction techniques to the presence of distractors.
We back up this claim in the next section.
Our main motivation in this paper is to propose a novel experimental paradigm to address the lack of an unified way to evaluate new pointing techniques.
This experimental setup could then be used as a benchmark to compare those techniques in presence of distractors.
We bootstrap the process by comparing various techniques from the literature.
We first review how pointing techniques have been evaluated regarding their sensitivity to distractors.
We then present the proposed experimental paradigm and how it has been designed.
We also propose an extension to Fitts' law that considers the influence of distractors on performance.
In the last section, this paradigm is used as a benchmark to compare different pointing techniques from the litterature.
As mentioned in the introduction, new interaction techniques enhancing target acquisition have been proposed for a while.
We focus only on a set of techniques that are representative of how distractors have been handled in the past.
First, it should be noted that some consequent efforts have already been invested to unify the evaluation methodology of pointing devices or techniques and to spread those best practices into the community .
We do not propose "yet another framework" to evaluate pointing techniques.
We propose a way to challenge techniques with distractors in a controlled manner, and this extension to the Fitts' pointing task can then be easily integrated into existing evaluation frameworks that do not currently handle the issue of distractors.
The results of the experiments conducted using this paradigm can of course be evaluated using established methodologies.
Some authors have simply ignored the problem of distractors and have stuck to the established Fitts' protocol to evaluate their techniques .
In this case, the technique is then evaluated in the optimal configuration: a single target known by the system.
In a first experiment, the object pointing technique  is also evaluated using Fitts' paradigm.
Since the cursor jumps to the closest target, it leads to a quasi-constant pointing time .
In a second experiment, the technique is evaluated in a more realistic 2D setup including distractors.
Its performance is then comparable with the performance of normal pointing.
Unfortunately, the 2D setup is weakly described and is impossible to reproduce.
Our goal is to provide a pointing task that will challenge pointing techniques with distractors in a less biased as possible manner, and in a way that allow reproducible experiments.
We want to characterize the distractors distribution by as few independent variables as possible, in order to ease the statistical analysis of the results.
In this section, we first formalize why the distractor density is the factor that should be added to the task parameterization and to the analysis of experimental results.
We then present the pointing task composed of a target and several distractors, give its parametrization, and provide its design rationale.
As seen in the Related Work section, researchers are aware that the presence of distractors impacts pointing techniques .
When they try to study this impact, there is a consensus among them to use the distractor density as the relevant factor to analyze how the performance is impacted by the presence of distractors.
This can be justified in an ad hoc manner for some techniques.
For the bubble cursor and object pointing, a density of 1  makes the techniques identical to a normal pointing.
On the other hand, a density tending towards 0  makes the target selection almost instantaneous regardless of the difficulty of the task.
On the other hand, a density of 0 should lead to the improvements reported by Blanch et al.
A careful analysis of other techniques should lead to similar conclusions.
A more general justification of the role that the distractor density plays can be suggested by analyzing the pointing task from an information theory point of view.
Finding a way 32x32 for not providing those  6 extra bits is roughly the goal of all recent pointing techniques.
The density of distractors  gives a measure of this mismatch:  = 0 means that only the target is present --the abstract task is then a 0 bit task and the mismatch is maximal; on the other hand,  = 1 means that the space is paved with targets --the abstract and actual tasks are reunited and there is no room left for improvement using only the knowledge of the potential target positions.
The de facto manner authors have expressed sensitivity to distractors, the quick analysis of particular techniques, and finally the thought experiment proposed above' lead to the same conclusion: the distractor density is a factor that should be used to test the efficiency of pointing techniques.
Guiard advocates for a parametrization of the task by its "form" and "scale", i.e., ID and A .
This parametrization is formally equivalent to the use of A and W because ID, A and W are linked by Equation .
We decided to use this parameterization of the target, but the distractor parameterization presented below still holds as soon as the target is specified by whichever means.
A pointing task consists in a target whose size and position make the task more or less difficult.
To add distractors to this task in a reproducible manner, their layout has to be specified as a function of the target geometry and of the distractor density.
We present our proposed distribution of the distractors, explain how it is parametrized, and document the choices made while designing it.
Fitts' experimental protocol parametrizes a pointing task with 2 independent variables.
The amplitude  of the task and its width   have long been used as factors.
However, performance in movement time  is always analyzed as function of the index of difficulty  using Fitts' law : MT = a + b x ID, 
A question remains: given a distractor density , how to choose the layout of the distractors, i.e., their position and size?
There are a lot of possible answers to this question.
Adding as few new factors as possible is a strong requirement: the more factors are used, the more experimental trials will be needed to cover the cross product of their variation ranges.
Our goal is to add the minimal number of factors that makes it possible to study the effect of distractors density.
Since  should at least be added, we propose to stick with this minimal addition.
We propose a 1D layout, and since Fitts' law 2D generalization  is often used to evaluate pointing techniques in GUIs, we also provide a 2D generalization of this layout.
The main characteristics of the distractors are: a uniform index of difficulty equal to the target ID ; and a uniform spatial distribution .
The actual 1D and 2D layout specifications are given in Appendixes.
Choosing a single kind of layout would certainly introduce a bias toward particular techniques.
Conversely, multiplying the situations to account for the diversity of reality would introduce too many variables that would make the results analysis harder.
The next question is should some kind of randomness be introduced in the layout?, like others have done .
The first problem with this approach is that real randomness leads to very disparate situations that can be properly compensated only by increasing the number of trials.
For this reason, authors are often tempted to "control" the randomness .
The goal behind the introduction of controlled randomness is often to recreate "realistic" layouts.
The produced layouts share their drawbacks .
They are likely to be difficult to reproduce because the way randomness is introduced and controlled is hard to document.
Our final choice for a uniform distribution of the distractors is mainly backed up by the drawbacks of the alternatives but also because it is fully determinist, thus easy to reproduce.
This distribution does not look "realistic" because it is very regular, but real settings often present regularities.
However, on both paths between the start of the task and the middle of the target, exactly two distractors are present.
On those paths, the proportion of space occupied by distractors is thus the same.
The difference with the nominal  is  +16.1% for the first task and  -11% for the second one.
It is likely that pointing techniques will mainly be sensitive to L rather than to  , and thus using  as a factor will probably lead to a substantial loss of statistical significance.
To confirm this hypothesis, we ran a pilot study in which a pointing technique presumably sensitive to  , namely semantic pointing , is tested using the constant size 1D layout.
Two subjects performed a total of 360 trials .
Figure 5 shows the movement time MT vs. the nominal density  on the left and vs. the local density L on the right.
The similarity between the MT vs.  plot  and the L vs.  plot  is not an accident.
Modeling MT by a linear combination of  and L confirms that the L parameter explains significantly the MT variations  whereas  is rejected as a significant parameter .
The most obvious way to distribute distractors uniformly is to use distractors having a constant size identical to the target and to choose a constant step in space to distribute them.
Figure 3 presents such layouts in 1D.
We have rejected this idea in favor of a constant ID identical to the target and a constant step in scale.
This choices emerged while trying to solve an issue of the constant size layout.
This pilot study shows that the naive constant size approach suffers from a serious drawback: the  factor does not match the parameter that explains the performance.
Analyzing the results would then require to transform the  factor into the L parameter using a non-trivial function which also depends on the ID.
This would result in the introduction of correlated factors, which is not desirable.
We have conducted this pilot study with a 1D layout, but the 2D version would probably lead to similar results since it is subject to a similar quantization at the origin.
Using the constant ID layout is a solution to this quantization artifact.
The drawback is that it theoretically introduces an infinity of distractors.
Stopping the construction when their size becomes smaller than 1 pixel  solves this issue in practice.
Other side effects of the self-similarity of the layout is that a task presents a single ID to the subject, and that distractor size distribution is not farther to the reality than the constant size layout .
Still, the main property of this distractor layout is the ability to accurately control the distractor density on the path of the pointing movement.
In this extended law, a low value for c means that the technique does not behave differently in the presence or in the absence of distractors  and then Equation  falls back to the standard Fitts' law given by Equation .
On the other hand, a value for c close to b means that the technique takes as much as possible advantage of the sparseness of the task and the law falls back to the limit case given in Equation .
Given the extended law formalized by Equation , pointing techniques could then be compared according the 2 parameters recommended by Zhai, together with a third parameter: * a, the intercept, that measures the non-informational part of the performance; * 1/b, the throughput, that measures its sensitivity to the form of the task characterized by its ID; and * c/b, the sensitivity to distractors, that measure its ability to make the most of the sparseness of the task, and to reduce ID by that proportion of IS.
We are aware that the extension of Fitts' law proposed in Equation  is only backed by reasoning and not by any actual fit of data.
We acknowledge that ID and IS do probably interact, and that distractors play a role more complex than simply perturbing the pointing techniques by also modifying the perception of the task by the user.
That is why we refer to Equation  as a first step towards an extension to Fitts' law, and leave further investigation in this direction for future works.
Once a new factor is added to the parametrization of the pointing task, one can wonder how it will affect the movement time and how to account for it in Fitts' law.
It obviously depends on how each specific pointing technique will take advantage of the sparseness of the task to ease the pointing but we can try some reasoning here.
As stated in the previous section, the density of distractors characterizes the mismatch between the abstract task --one icon among 32-- and the actual pointing task --one of the pixels of the icon among the whole screen.
Having a task that paves the space with distractors  leaves no room for improvement, but if the space was only half full , all potential targets could be made twice as big without overlapping.
Having defined a pointing task from the three factors: index of difficulty , task amplitude , and distractors density , we can use it to test the sensitivity of various techniques to those factors.
Here we compare five interaction techniques: the raw pointing  with a cursor, the semantic pointing  technique , the bubble cursor  technique , the DynaSpot  technique , and the rake cursor  technique .
This set of techniques is rather arbitrary, but our goal is to cover various strategies used to facilitate pointing: modifying the control-display ratio , using a supplemental input channel , or modifying the cursor activation area .
A criterion that also motivated our selection is that those techniques are described in their respective papers with enough details to allow their precise reproduction, which is unfortunately not as common as it should be.
Since the cursor can be outside the target that will be selected, some techniques also provide a highlight to make it observable to the user .
In our implementation, we added this highlight to every technique because we think that its presence can affect the performance of pointing.
The implementation we used to conduct our study is made available to the community4 and can either serve as a reference implementation, or it can be reused as is.
It includes the implementation of the techniques compared in the experiment, the implementation of the distractors layouts and the framework that drives the experiment.
Testing various pointing techniques made explicit the lack of definition of what is a pointing technique.
We propose the following one: a pointing technique consists of handling inputs, providing a picking function, and updating a feedback.
Receiving relative movements from the physical pointing device and transforming it to a cursor position is the minimal input handling.
It can involve more complex processing  to maintain an internal state used by the other parts of the pointing techniques.
The picking function uses this internal state to compute the pixel activated when the user depresses the button of the pointing device.
The picking function can be as simple as returning the cursor position .
It can also do more complex processing such as triggering a spatial search to find the target closest to the cursor and returning the coordinates of a pixel located inside .
The feedback usually serves the role of making the internal state of the technique and its picking function observable.
It should make its behavior predictable.
The minimal feedback consist of displaying a cursor arrow on the screen.
It can also display the cursor activation area  or several arrow cursors .
The participants had to perform successive 2D pointing tasks.
They had to move the standard cursor inside a start area , rest there for about 0.5 s. After this delay, a trial consisting of grey distractors and a red target  was presented and the participant had to click the target.
The direction of the movement was always from the left to the right, and the participants had to come back to the start area after each trial.
After each block, their error rates were displayed and they were encouraged to conform to a nominal 4% error rate by speeding up or slowing down.
The five techniques  were used by each participant one after another.
They always started with the raw pointing and the order of the four other techniques was balanced between the subjects using a latin square.
A randomized series of the 24 combinations was presented four times for each technique to each participant.
Those four series were preceded by 12 training trials during which they were familiarized with the techniques.
Each participant performed 540 pointing tasks, 480 of them being recorded.
Eight right handed unpaid adult volunteers  served in the experiment.
We used a Logitech MX 400 mouse as a pointing device, the system acceleration being discarded by reading the low level  motion events.
The control-display ratio was globally set to 2.
For SP, it was 1 outside the distractors and 4 inside.
The gaze position needed by the RC technique was acquired using a Tobii ET-17 eye tracker .
The same monitor was used for the other techniques.
The step of the RC cursor grid was fixed at 300 pixels so that the target would never be directly under a cursor at the start of a trial.
The interactions between the technique and each of the other factors also give significant effects.
Observing so many significant effects makes them difficult to interpret.
Comparing the means of the MT by technique gives two simple but interesting results: semantic pointing is significantly slower than any other technique, including raw pointing; and DS, RC and BC are not significantly different but all significantly faster than RP .
Looking at the rank of each technique per participant provides an interesting result: the pattern "SP slower than RP and RP slower than BC and DS" is mostly shared .
On the other hand, the rank of the rake cursor technique exhibits a lot of variability: for two of the participants, RC is slower than RP but faster than SP, and thus ranks second worst technique; for two other participants, RC ranks third ; while for the four remaining participants, RC ranks as the fastest technique, being even significantly faster than any other technique for three of them.
This analysis shows that the performance of rake cursor is strongly variable among participants.
The effects of the factors on the performances are explored by analyzing three dependent variables: error rate , reaction time  and movement time .
The total time  of the pointing --defined as the sum of RT and MT -- is also considered since for the RC technique RT is significantly different from the other ones .
Table 1 sums up the values5 of those variables for the five techniques considered.
The analysis of variance below use the participant as random factor and the technique, ID, A and IS as factors.
Means are compared using Tukey's HSD tests.
A total of 17 obvious outliers  caused by technical problems were removed before performing the statistics.
ER is 4.08% on average .
Comparing average ERs by techniques gives no statistically significant differences.
An interesting result is then that the distractor density by itself does not significantly impact the error rate.
RT being particularly high for RC, their authors also study the total time  to allow a more fair comparison of the techniques .
The only difference is the rank of RC: it performs significantly better than SP and RP but it is significantly slower than BC and DS .
Observing an effect of the technique on RT is not common in pointing experiments.
Since in this case this effect is rather strong, it needs to be explained.
Comparing the means of the RT by technique, confirms that rake cursor is significantly slower than any of the other techniques.
Table 2 summarizes the parameters obtained when fitting the MT  and T T  data with the extended Fitts' law  proposed in Equation .
The first column gives the intercept .
The second one gives the throughput a la Zhai  of the technique The third column gives the ratio c/b which quantifies the sensitivity to distractors, i.e., how the sparseness of the task is exploited to reduce its difficulty: c/b = 1 meaning that each bit of IS reduces ID by one bit; and c/b = 0 meaning that the density has no impact on the performance.
Those metrics both take into account the number of degrees of freedom of the models and thus allow comparisons with the standard Fitts' law .
In the future, we will focus our attention on the model itself.
Since the interaction of ID and IS is often significant, the model may have to consider this factor also.
But this interaction has to be understood first.
Regarding the protocol, two extensions are envisioned.
First, the distributions of distractors presented here is not incompatible with different experimental setups, like 1D reciprocal pointing or 2D multi-directional task following the ISO 9241-9 standard.
We would like to extend our experiment framework to support those task setups.
Then, providing a 3D generalization of distractors layout relying also on selfsimilarity and distractors density should also be doable.
This would allow to extend the benchmark to 3D interaction techniques, and to test the effect of distractors on the 3D generalization of Fitts' law .
And finally, we will add more implementation of techniques to our framework, so that it can serve as an educational resource, as well as a benchmark that allows to compare new techniques to a whole corpus of existing techniques.
Numbers in parens give the corresponding values for the standard Fitts' law.
It is interesting to note that EXT and STD are comparable for RP, DS and RC, the techniques that are the less sensitive to distractors .
Regarding the techniques, some observations can be made: as expected, SP is quite sensitive to IS, and so is BC.
This is not surprising since the bubble of BC uses the empty space surrounding the target to make it effectively larger.
DS is less sensitive to IS than BC which is also logical since the size of its activation area is bounded, and thus do not benefit of very sparse distractors distributions.
On the other hand, DS has a better throughput than BC, probably because its feedback is less disturbing.
So while the two techniques perform mostly the same on average, bubble cursor is better suited to low ID or low density tasks, while DynaSpot is better suited to high ID or high density tasks.
Overall, rake cursor has the best intercept and is the enhanced technique the least sensitive to IS, which makes it particularly adapted to dense tasks.
Having the distractors similar to the target  modulo a constant step of scale  means that their widths  and amplitudes  follow a geometric progression.
We have proposed an extension to Fitts' pointing paradigm that enables to quantify the sensitivity of pointing techniques to the presence of distractors.
This extension adds a single factor to the two specifying a pointing task: the target density, and derives the distractors location in 1D and 2D deterministically from those three parameters.
This makes possible the fair comparison of pointing techniques.
We have also proposed a first step toward an extension of Fitts' law by adding a term that accounts for the sensitivity the distractors density, namely the index of sparseness.
With those tools at hand, we have compared five pointing techniques and shown that the extended protocol and model allow more contrasted comparison of the techniques.
We believe that the use of this protocol will allow more fair comparisons of pointing techniques.
To encourage its use, we release to the community a reference implementation of the distractors layout generators, a reference implementation of the interaction techniques compared in this paper, and the framework used to conduct the experiment.
We hope that this repository will grow in the future, fed by the community.
To fully define the task using our parametrization , we need to express r using those factors.
If we consider the space separating the center of to successive tasks , we can compute a local distractor density  in this area by dividing the length covered by the distractors by the distance separating the distractors centers: Wi+1 /2 + Wi /2 i = Ai+1 - Ai Wi /2 r + 1 = x using Equation  Ai r-1 W /2 r + 1 = x using Equations .
