Peephole interaction occurs when a spatially aware display is moved and acts as a viewport to reveal different parts of the virtual space that cannot all fit within the display at once.
We investigate pointing within this peephole metaphor, where the targets may not be initially visible on the display, but are dynamically revealed by moving the display.
We develop and experimentally validate a quantitative model for peephole pointing.
Our results indicate that the model accurately accounts for peephole pointing for a variety of display sizes, both with and without users' having prior knowledge of the target location.
When the offscreen information's location is known - perhaps from previous visits or via techniques for visualizing off-screen targets such as Halo  - peephole navigation can be quick albeit by definition more demanding than when the information is already visible.
Even more demanding is the case when the information's location is unknown and an exhaustive search of the virtual space must be undertaken.
Either process is quite different from operating traditional interfaces where a larger proportion of the desired content is visible on-screen.
As peephole interaction becomes deployable, it is important to study and model user performance when using it, in order to provide insights for future designs.
In particular, existing models such as Fitts' law  have primarily been investigated in situations where the targets are always visible, and it is unclear if or how these models might apply to the peephole situation where targets have to first be revealed by spatial navigation before they can be acquired.
In this paper we study user performance in pointing tasks - a fundamental building block for higher-level interactions - where the display needs to be moved to reveal the target.
Based on theoretical analysis we propose a quantitative model for such "peephole pointing", and experimentally validate it.
Our work considers how user performance is affected by the size of the display and the presence or absence of prior knowledge of the target's location.
Although handheld computing devices are becoming ubiquitous and have significant computational power, they are inherently limited by their small screen size.
As such, interaction techniques are required to view and interact with information that cannot be simultaneously displayed on the small display.
Apart from virtually scrolling/panning the workspace on the display, researchers have investigated physically moving a spatially aware display that acts as a window to reveal different parts of the virtual space that is stationary relative to the physical world  .
Such a spatially aware display can be either a physical screen on the device , or a projection image created by a miniaturized projector embedded in the handheld .
Various terms, including "Peephole" , "Flashlight"  and "Spotlight"  have been used to describe this interaction style; in this paper, we will use "peephole" to refer to this concept in general.
To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee.
Several researchers have explored using a spatially aware display as a dynamic window for browsing and interacting with a larger workspace.
Early work includes the Chameleon  - a Wizard-of-Oz implementation using a handheld TV, and the activeLENS  - an armaturemounted screen tracked by the joint angles of the arm.
Similarly, the Boom Chameleon  uses an armaturemounted screen for viewing 3D scenes, augmented with a pen for pointing and annotation.
For desktop style applications, Yee presents Peephole Displays , a spatially tracked PDA operated by a stylus.
The virtual workspace is anchored to the user's physical reference frame.
Simultaneous navigation and manipulation are supported by moving the display and the pen at the same time using two hands.
Applications include drawing on a large canvas, viewing maps and browsing calendars.
Instead of using a device with an embedded display screen, Cao and Balakrishnan  and Rapp et al.
Multiple workspaces can coexist to cover the entire physical environment, and information can be overlaid onto physical objects to augment them.
A cursor that stays in the center of the projection image is used to interact with the workspace.
A few researchers have empirically studied navigation performance under the peephole metaphor.
Rohs and Essl  compared several existing information navigation techniques on a camera-tracked handheld display.
These studies differ from ours in that they focus on navigation tasks rather than pointing tasks.
In addition, they only compared performance between interaction metaphors or techniques, but did not attempt to build a quantitative model.
Researchers have investigated "target acquisition" performance in scrolling tasks, which is somewhat similar to the task we study, in the sense that the target is not visible initially.
Both studies used a single window or display size, while we manipulate display size in our experiments and include it in our model.
Fitts' law  is broadly accepted to model aimed pointing tasks in general.
The movement time T needed to point to a target of width W and at distance  A can be expressed as:
The logarithmic term log 2  is referred to as the Index of Difficulty   of the task.
Kabbash and Buxton  show that Fitts' law also applies to the case that the cursor is an area while the target is a point, with W set as the width of the area cursor.
Researchers have also expanded Fitts' law to model two- and threedimensional targets .
Although Fitts' law has been proved highly successful in modeling conventional pointing tasks, it is unclear whether it applies when the target may be outside the initial display region.
Furthermore, it is likely that the size of the display also influences the task performance.
We aim at developing a model for target acquisition performance in this peephole situation, which incorporates the display size S in addition to A and W.
Our present work is one step towards providing a theoretical foundation and empirical data that can guide the design of interfaces utilizing the peephole metaphor.
We sought to obtain an understanding of the factors that affect peephole pointing performance, and develop a quantitative model that characterizes such behavior.
For the sake of simplicity, in this research we choose to study a one-dimensional pointing task, with the constraint imposed by the target only in the direction collinear to the pointing motion.
This is an idealized representation of real world pointing tasks, and is also the behavior that Fitts' law originally models.
In practice, the targets are displayed as ribbons with infinite height .
The following terms are used throughout our paper: Workspace: the entire space in which the targets can reside.
Only a portion of the workspace is visible and accessible at any given time.
Display Window: a window that can be moved within the workspace.
The workspace region within the display window is visible and can be accessed by the user.
However, in our study, because the targets are 1D, we choose to make the display window 1D as well.
The display window has a finite size along the direction collinear to the pointing motion, but extends infinitely along the direction perpendicular to the pointing motion, just as the targets do.
By doing so, we maintain the 1D nature of the task.
Using a 2D display window may impose unintended 2D constraints on the movement, since only the region within the display window is accessible.
A typical pointing task in this scenario consists of first moving the display window to reveal the target , and then move the cursor to actually reach it.
Three parameters characterize such a task: A - distance between the initial cursor position and the center of the target.
W - width of the target.
S - size of the display window.
In the case of a 1D display window, S is defined as the width of the display window, collinear to the pointing motion.
We also consider a few other factors that may affect the user's performance: Prior knowledge of target location: when the target is not initially visible, whether the user has knowledge about the target location could affect the amount of effort required to search for the target, and in turn influence the task performance.
The prior knowledge may come from previous visits to the target, or from techniques supporting visualization of off-screen targets such as Halo .
Cursor control mechanism: researchers have explored two mechanisms to control cursor position in these situations: 1.
Coupled cursor: the cursor position is fixed with respect to the display window .
Moving the display window also moves the cursor in the workspace.
Thus the display also serves as a pointing device, and requires only one input to operate.
This mechanism is used by most handheld projector systems , where a dedicated pointing device is not available or preferable.
Decoupled cursor: the cursor position is controlled by a dedicated pointing device that is different from that controlling the display window's position.
One possible scenario is where the user moves the display window using the non-dominant hand, while controls the cursor using the dominant hand.
The cursor pointing device can move independently of the display window, but is sensed only when within it.
This mechanism has been utilized on PDAs and handheld screens, using a pen for pointing .
Building upon existing research, we perform a theoretical analysis of peephole pointing, and develop a tentative model for movement time that incorporates A, W and S. In general, a peephole pointing task consists of two stages: first Moving the Display window to reveal the target , and then Moving the Cursor to hit the target .
Note that this distinction is made more in terms of the cognitive process rather than necessarily the actual dynamics of the input device movements.
In the coupled cursor case, there is no physical distinction between moving the display window and moving the cursor.
In this case the cursor is roughly synchronized with the display window until the user sees the target and stops the display window.
The user will then adjust the cursor within the display window.
Cognitively, the stylus moves in the reference frame defined by the display window, rather than by the world.
On the other hand, MD and MC may in practice also overlap in time, and thus may not have a clear boundary.
Nevertheless, we feel this conceptual distinction is useful in framing our analysis.
Depending on whether the user has prior knowledge of the target location, the performance of MD and MC can differ:
When the user does not know the target location, MD requires searching for the hidden target with the display window .
Unfortunately, to the best of our knowledge, there is no existing model for this type of searching.
However, intuition and observations during our pilot studies suggest that the time required for MD  should increase as A increases, since a longer distance requires more time to search through.
TMD1 should also decrease as S increases because:  a larger display window reaches the target earlier, resulting in a shorter search distance;  a larger display window makes it easier to visually identify the target;  the user tends to move the display window faster when it is larger, with less concern of missing the target .
With these considerations, we posit that TMD1 plausibly follows a Fitts' law relationship with A and S:
Once the target is revealed, the user moves the cursor to reach the target  .
MC is a standard pointing task that can be modeled by Fitts' law, where the target width is W, and the effective target distance A' is the distance between the target and the current cursor position.
In the ideal situation, MC starts once the target is revealed in the display window, and the cursor is residing at the center of the display window at the time , then A' is between  / 2  and  / 2 , with an average of S/2.
However, in practice, due to limits of reaction time, the user will often overshoot the display window before MC starts.
Since in the MD stage the user tends to move faster with a larger display window, this overshoot is likely to be larger with a larger S. Further, in the decoupled cursor case the cursor may have a positive or negative offset  from the center of the display window, depending on the previous action, the way the pointing device is held etc.
Considering the somewhat unpredictable nature of these factors, we assume the mean value of the effective target distance as A  = k1 S , where k1 is some constant coefficient .
When the user already knows about the target location , MD is not truly a searching action, but a planned motion towards the target to cover it with the display window .
This is essentially the behavior of an area cursor, also modeled by Fitts' law as reported by Kabbash and Buxton , where W is set to be the width of the area cursor.
Although they used a point target in their experiment, the relationship should still hold when the target width is considerably smaller than the area cursor.
The only difference is that here the user does not see the target until it is revealed by the display window, and prior knowledge is used to guide the initial movement.
Several researchers  have investigated the spread of endpoints from such an action.
They showed that  the position of the endpoints X can be approximated by a normal distribution N , where the mean value X0 is the center of the target, and the standard deviation  = fA, f being an empirically determined constant.
However, it does not regress to Fitts' law when S. Eq.
Specifically, n describes the relative importance of S in terms of impact on movement time, compared to W. Given the similarity between Eq.
The entire screen represents the workspace, with only the region corresponding to the display window revealed, and the rest  masked in black.
A WacomTM Intuos2 tablet  is used for input.
Once the display window reaches the red X, it reverts to its normal appearance, and the first target is revealed.
The participants can then use the cursor to select it , and immediately starts to search for  the second target.
The position of the first target provides a cue as to which direction to search.
For example, if the first target lies in the left half of the screen, the second target will always be to its right , and vice versa.
After selecting the second target, the participant moves back to select the first one, and so forth.
Note that unlike a conventional reciprocal pointing task, where all trials in a sequence are essentially equivalent, in our task the first trial is fundamentally different from the others in the sequence.
This provides us a way to cover both conditions of prior knowledge of target location in a single sequence.
The participant must successfully select the target before s/he can proceed to the next trial.
Once the target is selected, its color turns from green to gray, and a short beep is played to indicate success.
Since we are only interested in the movement along the horizontal axis, we constrained the cursor to be always vertically centered on the screen.
The input area of the tablet is cropped to provide a 1:1 control-display gain.
All buttons on the puck and the stylus are disabled.
We measured the completion time , and the number of errors made in each trial.
Two techniques are investigated: Coupled cursor : a stylus is used to control the position of both the display window and the cursor when held over the tablet.
The cursor, displayed as a crosshair, always stays at the center of the display window.
Decoupled cursor : a WacomTM puck held in the non-dominant hand can be moved on the tablet to control the position of the display window.
The dominant hand holds the stylus used to control the cursor position, independent of the display window.
Although the user is free to move the cursor outside the display window and still able to see it, the system only responds to the stylus tap  when the cursor is inside.
To simulate the real world scenario of using a stylus on a moving PDA , a thin board is glued to the bottom of the puck and moves with it.
The user can tap the stylus on the board, and rest the stylus hand on it while moving the puck.
A reciprocal 1D pointing task is used, in which both the display window and the targets are one-dimensional, vertically extending to the border of the screen.
In each sequence of trials, the participant selects two equal-width targets back and forth in succession.
The distance between the targets is set according to the experiment condition, while the exact positions of them are randomized for each sequence, so as to prevent the participant from guessing the target position.
Within the same sequence the target positions remain unchanged across the trials.
At the beginning  of each sequence, the position of the first target is displayed as a red X, in order to guide the participant to move the display window toward it and reveals the first target.
However, before the display window actually moves over the red X, the display window is rendered only as a wireframe silhouette without revealing the content inside.
A fully crossed within-participant factorial design was used.
Each participant used both cursor control mechanisms, within which, three consecutive blocks were performed.
Within every block, each combination of A, W and S were tested for one sequence of trials.
The presentation order of these combinations was randomized within each block.
We evenly randomized the movement direction  in the first trial , in order to prevent the movement direction from compounding with the prior knowledge factor.
An input error was counted when the participant taps outside the target.
Participants were asked to keep the error rate under 4% during each block.
20 practice trials were performed before each cursor control condition started.
The participant used the stylus to control the cursor.
A similar experiment structure was used for the baseline task, keeping all factors but the display window size S. Each participant performed the peephole pointing task using two different cursor control mechanisms plus the baseline task, with the order of the three counterbalanced across participants.
In particular, S has a larger effect on T when there is no prior knowledge of the target location .
This can explained that without prior knowledge, MD is a pure searching task that relies heavily on the visual feedback in the display window, while with prior knowledge MD has a more ballistic nature, for which the display window plays a less important role.
However, the effect of prior knowledge decreases as S increases.
When S is small, only a small amount of information is revealed in the display window, so any prior knowledge of the target location would add considerable information and significantly benefit the task performance.
As S becomes larger, the additional information gained from prior knowledge becomes smaller, resulting in less performance gain.
Eventually when S approaches infinity, the task becomes a standard pointing action, and the effect of prior knowledge is eliminated, as shown by the lack of significant difference between trials in the baseline task.
For the peephole pointing task, the overall average movement time T is 2118 ms. T increases monotonically as A increases, and decreases monotonically as W or S increases, as suggested by our proposed model.
An analysis of variance showed that all these effects are statistically significant .
Pairwise means comparisons also showed that every condition of A, W, or S is significantly different from the others .
There was a significant main effect for cursor control mechanism , with mean times of 1884 ms for coupled cursor and 2351 ms for decoupled cursor.
Different cursor control mechanisms result in different behaviors, and in turn different performance.
However, the trend that coupled cursor performs faster than decoupled cursor should not be regarded as a general conclusion, since it may depend on the specific device used.
For example, we might expect coupled cursor to become slower if we used the non-dominant hand puck to control the cursor rather than the dominant hand stylus.
There was also a significant main effect for prior knowledge of target position ,with the first trial  of each sequence averaging 2562 ms, while the second trial  averaging 1674 ms. As a comparison, for the baseline task, there is no significant difference  between the two trials.
Therefore we conclude that the performance difference between the two trials in the peephole pointing task is indeed caused by the knowledge of target position, rather than a practice effect.
An error occurred when the user tapped outside the intended target.
The overall average error rate was 3.5%.
The factors that significantly affected the error rate include: cursor control mechanism  with 2.9% errors for coupled cursor and 4.1% errors for decoupled cursor, possibly caused by the coordination skills required for bimanual input; W , where the error rate increases as W decreases, because of the increased task difficulty; and S .
This is an interesting and somewhat counterintuitive phenomenon, which may be because users became over-careful with a tiny display window, and over-relaxed with a huge display window.
No significant interaction exists between any factors for error rate.
Since both cursor control mechanism and prior knowledge of target location affect T, we break down the data into four categories according to these two factors, and fit them separately.
Table 1 shows the parameter estimates and standard errors for those estimates.
The last column provides the R2 values for the regression.
Therefore our model pointing is best represented as: data in all 4 .
This further confirmed the advantage of our proposed model which yielded significantly better fits.
In particular, n describes the relative importance of display window size S in terms of impact on the movement time.
Compared to a and b, which reflect mainly the performance of the device or user group, n captures more of the essence of the task itself.
For both cursor control mechanisms, n is smaller when there is prior knowledge about the target location, indicating a lesser impact of S. This is validated by the data trend we analyzed in the previous section.
However, n is larger in the decoupled cursor condition than in the coupled cursor condition.
The fact that the stylus needs to be inside the display window to be responsive imposes an additional motor constraint related to S, while this constraint does not exist in the coupled cursor case.
This may explain the larger impact of S in the decoupled cursor condition.
When prior knowledge becomes available, the cognitive aspect of the task is reduced and the motor control aspect dominates, which is more vulnerable to influences of the control mechanism.
For example, enlarging S from 2A to 4A only results in IDS decreasing by 0.26n, versus 0.74n when S changes from A/4 to A/2.
This can also be observed from the trend in Figure 6: the relationship curve becomes flatter as S increases, and will eventually converge as S, at which point the action becomes a standard pointing task.
Our model suggests that the movement time follows Fitts' law as S, validated by the unsurprising good fit of the baseline task performance to Fitts' law .
One interesting observation about our model is its mathematical similarity to the very first model for 2D pointing tasks, suggested by Crossman : A A     T = a + b log 2  + 1 + c log 2  + 1 , which can be reformulated to resemble Eq.
This model suggests that W and H affect T independently.
However, better models for 2D pointing tasks have been developed later on , which more properly address the strong interaction found between W and H. In our task, the somewhat separable stages of MD and MC make it more appropriate to tackle S and W separately in the model, as supported by its good match with experimental data.
As we discussed, the parameter n captures in large the nature of a given peephole pointing task, and is less influenced by the device used.
Thus to analyze behavior under a particular setting, we may first acquire the n value , and make design decisions according to it.
In general, a larger n means we need to focus on increasing the display size ; while a smaller n suggests we should endeavor to enlarge the interface components .
In our experiment, we dealt with cases that the user has either no prior knowledge of the target location, or nearperfect knowledge of it .
However in practice there are many cases that lie between these two extremes.
For example, the user may obtain partial  knowledge through visualizations of off-screen targets.
We expect the resulting performance also lies somewhere between the two cases we studied.
How exactly the performance varies with the amount  of the information available is worth further investigation.
During the experiment we observed different strategies employed by participants to search for the targets.
Some people moved the display window at a more or less constant speed within each trial, until they saw the target and stopped the display window.
Some others first moved the display window in a quick movement, hoping to get a glance of the target, and then backtrack to it.
This strategy might provide some benefit with large display windows, but was not always successful when the display window was small.
In the latter case, the participant might have to revert to the first strategy after an initial failure to find the target, resulting in performance loss.
Analysis of the movement logs indicates 32.1% of the trials involved some amount of backtracking of the display window, including cases of either the intentional quick movement strategy, or an unintentional overshooting.
The number of backtrackings decreases as S becomes larger.
Regardless of the variety of the strategies, our model is general enough to account for the data.
However, it is worthwhile to consider how one might accommodate these strategies when designing peephole interfaces, for example making the interface components more "glanceable".
It is worthwhile to note that the decoupled cursor mechanism is a typical example of asymmetric bimanual action , where the non-dominant hand performs coarse movements and sets the reference frame, within which the dominant hand performs fine movements and operations.
Analysis of the movement logs revealed that the cursor resides inside the display window for 88.0% of the movement time on average.
The instant movement velocity of the cursor  has a mean of 65.7 pixels/sec versus 223.9 pixels/sec for the display window .
These both conform to the asymmetric work division pattern between the non-dominant and dominant hands.
We have presented an experimental study of pointing task where the targets are initially invisible and revealed by a moving display window .
Based on theoretical analysis, we proposed a model  for the movement time under such circumstances, taking into account the size of the display window :
Our model was validated by the experimental data under various settings including different cursor control mechanisms, and both with and without prior knowledge of the target location.
We also analyzed the effects of these settings on the movement time, and discussed implications of our research.
To the best of our knowledge, our work is the first attempt in modeling user performance in peephole pointing.
We hope it inspires more research in this direction.
Our current research focuses on the movement time, and only touches the surface of error analysis.
Using our current research framework, we are also interested in studying other generic tasks such as crossing , steering  or pointing at 2D targets with a 2D display window.
Finally, our evaluation used simulated apparatus with high quality tracking and display in order to ensure reliable data.
It is worth testing our model using a spatially aware handheld device or projector, which would give a sense of how the model generalizes to different physical movement styles and tracking noise associated with such devices.
