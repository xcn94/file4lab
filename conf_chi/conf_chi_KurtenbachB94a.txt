ABSTRACT A marking menu is designed to allow a user to perform a menu selection by either popping-up a radial  menu, or by making a straight mark in the direction of the desired Previous menu item without popping-up the menu.
This paper reports on a case study of user behavior with marking menus in a real work situation.
The study demonstrates the following: First, marking menus are used as designed.
When users become expert with the menus, marks are used extensively.
However, the transition to using marks is not one way.
Expert users still switch back to menus to refresh their memory of menu layout.
Second, marking is an extremely efficient interaction technique.
Using a mark on average was 3.5 times faster than selection using the menu.
Finally, design principles can be followed that make menu item/mark associations easier to learn, and interaction efficient.
KEYWORDS: Marking menus, pie menus, gestures, pen based input, accelerators, input devices, multimedia INTRODUCTION Menus are used extensively in human computer interfaces.
They provide critical information on what commands are available and a way to invoke commands.
Some menus require substantial computing before display and this delays the user.
Also, menus appearing and disappearing on the screen can be visually disruptive--a menu may obscure objects on the screen that are the focus of attention.
For example, in some systems, a user selects from a menu using the mouse but by-passes the menu using an "'accelerator key'" on the keyboard.
The problem is that one has to learn two different Also, accelerator keys are not possible in protocols.
Marking menus are designed to overcome these problems.
Using a marking menu with a pen based computer works as follows.
A user presses down on the screen with the pen and waits approximately 1/3 second .
A radial menu   then appears directly under the tip of the pen.
A user then highlights an item by keeping the pen pressed and making a stroke towards the desired item .
The alternate way of selecting an item is by drawing a mark.
This relies on the user recalling the location of the item in the menu.
A mark is drawn by pressing the pen down and immediately moving in the direction of the desired menu item .
Drawing a mark avoids the problems with menus and accelerator keys described earlier.
A user is not delayed by the display of the menu, and a mark obscures very little of the screen.
Selection using the menu tind using the mark Me very similar protocols.
Unlike linear There are other advantages to this approach, menus, marking menus can be operated "eyes free" because selection is based on direction of movement, not position.
Hence, they are especially suited to tasks that require attention on other matters .
In this study we wanted to gain experience and insights in how to design interfaces with marking menus and to determine if marking menus are used as designed in a real work setting.
Our design is based on the user requirements that motivate the use of menus and menu accelerators methods.
Specifically, the design features of marking menus are aimed at following user requirements: Requirement: Novices need to find out what commands are available and how to invoke the commands.
As the video plays, the supplication moves a horizontal bar across the window to indicate the current location in the conversation.
If the bar moves past the right side of the display, the application automatically scrolls to the next section of conversation.
Typically, a user sits in front of the Macintosh and video monitor, watching the video and editing events in real-time.
Such things as coughs and extraneous noises need to be deleted from the data.
Other pieces of conversation, such as laughter, must be tagged for later analysis, Very often events must be added or extended because the automated speaker tracking system was not accurate enough.
A marking menu was used in ConEd for the six most frequent commands on events: laugh, delete, add, fill-in, ignore, and extend.
The menu can be popped up by pressing-and-waiting in the "piano roll" window .
Alternatively, a mark can be drawn to select a command.
See Figures 3 through 8 for a description of how these commands work.
Discussion of design Based on our earlier experiments  and experience designing ConEd, we discovered several valuable design principles for placing marking menus in an interface.
These can be summarized as follows: Restrict menus to even numbers of items, up to twelve.
Switching between the two can be accomplished in the same interaction by pressing-and-waiting or not waiting.
Our model of user behavior with marking menus is that users start off using menus but with practice gravitate towards using marks and using a mark is significantly faster than using a menu.
Furthermore, even users that are expert  will occasionally return to using the menu to remind themselves of the available commands or menu item/mark associations.
In order to test this model of user behavior and verify that marking menus are used in a real work setting as designed, we collected data on the use of a marking menu in an application being used for a real task.
Our analysis of the data answers the following questions: Do users, with experience, go from using menus to using marks'?
Do users ever go back to using menus'?
Are marks faster than menus and if so by how much?
It is important to note that ConEd was an ordinary application for doing real work, not a concocted test vehicle for marking menus.
By digitizing audio from a conversation among four people, data was collected to index who was speaking and when.
The conversation analysis/editor program was then used to display this data in a "piano roll" like representation.
The program runs on a Macintosh computer.
Figure 2 shows a typical display of the data window.
The y-axis represents the four participants in the conversation, and the x-axis represents time.
A black rectangle indicates that a particular person is speaking for a duration of time .
The window can be scrolled to reveal different moments in the conversation.
Spatial commonalties between the represent~tion being edited and the direction of menu items can be used to determine the assignment of directions to commands.
The add and extend commands are examples of this .
Both these commands require a vertical time location value.
A common way to indicate location along the horizontal is by a vertical "tick".
This serves as a mnemonic for the marks associated with these commands.
If possible, once a function in a menu is invoked, it is For replaced by the corresponding inverse function.
This allows extra functions to be associated with a menu without increasing the number of items in a menu .
Furthermore, it provides a mnemonic to help recall the association between mark and function .
The basic idea of these design principles is to make menu item/mark associations easier to learn, and interaction We recommend following these principles when efficient.
ANALYSIS OF USE The behavior of two users using ConEd over an extended period of time was studied.
We focused on only two users because our previous studies of marking menus focused on many users over a short period of time  in laboratory experiments.
In this study we wanted to carefully examine individual behavior over much longer periods of time .
Even with only two users the data analysis was substantial.
The results of this small study can be used to direct future studies with larger numbers of users.
Both users in our study were employed to edit conversation data.
The edited data was used in a research project that was independent of marking menu research.
Therefore, a user's main motivation was not to use marking menus, but to complete the task of editing and coding the huge amounts data as quickly as possible.
The first user  was an experienced Macintosh user who was also familiar with video equipment and conversation analysis but unfamiliar with marking menus.
The second user  was a Macintosh novice.
User B had to learn how marking menus worked, the many details of the Macintosh interface, and the correct way to edit the conversation data.
Users had the interface to ConEd explained to them and some example edits were performed for their benefit.
In particular, the commands in the marking menu were carefully explained and demonstrated.
Data on user behavior was gathered by recording information about a marking menu selection every time a selection was performed.
A user only needed to register his or her name at the start of an editing session.
The rest of the trace data was accumulated transparently.
The intention of the survey was to reveal users' perception of marking menus and gauge their level of satisfaction.
Hypotheses We formed the following hypotheses with the marking menu in ConEd: Marks wilf dominate: user's behavior at first.
Thus, there was no logical way to merge the users' trace data.
Finally, our two users were very different in attitude and expertise, and therefore combining the trace data would have been inappropriate.
Menu versus mark usage was shown to be The hypothesis "Marks will dominate" true.
Figure 9 shows the percentage of times a mark was used to make a selection  versus the total number of selections performed.
Over time, marking dominated as the preferred mode of selection.
For user B, out of a total of used the menu.
There are several interesting observations concerning the First, when users returned to usage of marks over time.
Figure 9 shows that several long lay-offs Note the from ConEd occurred during the study.
This indicates that mark/command associations were forgotten when not practiced.
However, the amount of fading reduced with the amount of experience .
Second, note how user B`s mark usage rises dramatically at approximately 650 selections.
We believe the reason this happened was because user B was a very cautious and inexperienced user.
User B commented that it took her several hours to get comfortable with the video machine and the Macintosh interface before she could begin to think about using marks.
Results User A edited for a total of 8.55 hours over approximately six days.
User B edited for 10.1 hours over a 29 day period.
Most editing sessions lasted one to two hours.
The amount of coding and editing required was extremely high.
Over 18 hours of operation, the two users performed 5,237 selections.
We analyzed the data from the two users separately for several reasons.
First, we were concerned with individual differences and combining the data would have masked these differences.
Second, this study was not a controlled experiment.
9: With e.rperience, marking becomes the dominate method for selecting a command.
Usage of CotlEd spanned many days ~ith "lay-offs" between sessions.
This hypothesis is shown to be true by a strong correlation between the frequency at which a command was used, and the frequency at which that was invoked by a mark .
Selection time and length of mark Selection time is defined as the time elapsed from the moment the mouse button is pressed down to invoke a marking menu, to the moment the button is released, completing the selection from the menu.
This measurement applies both to using the menu and drawing a mark.
Selection time, for both users, was substantially faster when drawing a mark than when using the menu.
Figure 10 shows these differences.
For user A, a mark was seven times faster than using the menu.
For user B, a mark was four times faster.
Thus hypothesis "Marks faster than menu" is shown to be true.
Even though using the menu and drawing a mark require the same type of movement, using the menu is slower than drawing the mark.
There are several reasons why.
First, a user must press-and-wait to pop up the menu.
This delay was set to 0.33 seconds.
However, as the fourth column in Figure 10 shows, even with this delay subtracted from the menu selection time, a mark is still much faster , What is the source of this difference'?
The user most likely waits for the menu to appear on the screen.
Displaying the menu takes the system about 0.15 seconds.
The user must then react to the display of the menu .
However, when making a mark, the user does not have to wait for a menu to display and react to its display.
In view of the very fast times for marking performance, this is good news, since this means that, even early in practice, novice performance was very similar to expert performance.
The decrease in selection time was less than O.I seconds.
For this tinalysis we used the Power Law of Practice .
The average length of a mark decreased slightly with practice for user B, but not for uwr A  = 10.82, pcO.01.
The average length of u mark was approximately one inch.
Given these results the hypothesis "Marks get shorter and faster with time" only holds for user B.
User A's mark time decreases with practice, but length of m~rk did not.
Further studies with more subjects are required to sort out individual differences concerning this hypothesis.
ACKNOWLEDGMENTS We thank University design thank drafts Dynamic Toronto, acknowledge and Equipment Karen of the members of Toronto of the Input who provided Moran work laboratory are support Council PARC Xerox of this project.
