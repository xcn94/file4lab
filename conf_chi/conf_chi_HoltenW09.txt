Furthermore, since the arrowheads often have approximately the same size and aspect ratio as the dots  that depict graph vertices, the graph as a whole might be perceived as cluttered with detail to the point of being distracting.
Certain types of edge clutter can be remedied by means of user interaction, e.g., using the EdgeLens approach by Wong et al.
However, we contend that the static depiction of a graph should be visually optimized as well as possible before resorting to user interaction techniques to solve a problem that is, in essence, more related to visualization than to user interaction.
It is possible to develop alternative depictions of directed edges that do not suffer from the aforementioned problems.
Representations in which hue or luminance vary along the length of an edge or representations in which width varies along the length of an edge are examples of such alternative representations based on color and shape.
Furthermore, it is possible to combine representations, e.g., a combination of varying hue, intensity, and width along the length of an edge.
We were also interested in examining if such multicue representations, i.e., those based on multiple visual cues, perform better than single-cue representations in terms of speed and accuracy when performing certain tasks.
To determine the performance of the different representations, we first performed an experiment involving six singlecue directed-edge representations.
Response times and accuracy were measured and analyzed using one-way ANOVA  and Tukey's HSD  post-hoc test to determine whether or not there were significant differences between the six single-cue directed-edge representations.
We performed a follow-up experiment involving four multicue directed-edge representations.
These were developed using all possible combinations of three single-cue directededge representations that emerged from the first user experiment as viable candidates.
Subjects performed the same tasks mentioned above using randomly generated directed graphs.
Response times and accuracy were again analyzed using one-way ANOVA and Tukey's HSD post-hoc test.
Graphs are often visualized using node-link representations: vertices are depicted as dots, edges are depicted as lines connecting two vertices.
A directed edge running from vertex A to B is generally visualized using an arrow representation: a line with a triangular arrowhead at vertex B.
Although this representation is intuitive, it is not guaranteed that a user is able to determine edge direction as quickly and unambiguously as possible; alternative representations that exhibit less occlusion and visual clutter might be better suited.
To investigate this, we developed five additional directed-edge representations using combinations of shape and color.
We performed a user study in which subjects performed different tasks on a collection of graphs using these representations and combinations thereof to investigate which representation is best in terms of speed and accuracy.
We present our initial hypotheses, the outcome of the user studies, and recommendations regarding directed-edge visualization.
When visualizing graphs using a node-link representation, directed edges are often shown using simple straight lines or polylines with triangular arrowheads at one or both ends.
Although such a standard arrow representation is intuitive to most people, it can lead to problems in case of high-degree graph vertices, i.e., vertices that have many incoming and/or outgoing edges.
For instance, it might be hard to determine to which edge a specific arrowhead belongs because of occlusion problems and visual clutter in case of a high number of arrowheads that are drawn around a high-degree vertex.
To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee.
Graph visualization as a whole is a well-studied field that generally focuses on methods for the generation of graph layouts.
However, techniques that specifically deal with the visualization of directed edges within a node-link-based graph layout are less well-studied.
Examples of such techniques are the following.
A half-line from vertex A to vertex B is a straight-line connection between these vertices in which only the first half of the line is drawn, starting at vertex A. Fekete et al.
The edges  are drawn as a quadrilateral B ezier curve where the curvature indicates the direction of the link.
The text label pertaining to an edge  is visualized in such a way that the text itself forms a curved, tapered edge between two vertices, removing the necessity to explicitly visualize the edge using a line-based representation.
A color-coded representation is used by Holten  to indicate edge direction.
Direction is indicated as running from vertex A to vertex B by gradually changing the color from green  to red  along the length of the edge.
To our knowledge, almost no user studies have been performed to quantify how the techniques mentioned above actually perform.
An exception is the user experiment performed by Wong et al.
However, their focus was on how to balance the appearance of both a graph and its labels, not on determining how well their approach works as a general technique for depicting directed edges in comparison to other directed-edge representations.
The use of user studies in visualization should therefore be encouraged, something which is also noted by North , who states that there are too many  usability studies that only indicate whether or not users liked a certain visualization technique.
Visualization evaluation should therefore seek to quantifiably determine how well visualizations perform, and one way of doing this for detailed design choices is to perform controlled user experiments.
We therefore performed a controlled user study to quantify how the different directed-edge representations perform with respect to each other in terms of speed and accuracy.
For our user experiments we needed a large collection of graphs with uniform characteristics that could be randomly generated on demand.
The concept of a random graph is defined by Erd os et al.
Instead, we use the model by Ware et al.
Their graphs were generated using the following algorithm: "For each node in the graph, form a directed link to either 1 or 2 other nodes, randomly selected, with a generator biased so that a single directed connection occurs p% of the time and two directed connections occur  of the time."
The value of p can be adjusted to generate graphs with varying edge densities.
We settled on a value of p = 50%, which generates graphs that can have an adequate number of vertices without causing a large amount of visual clutter caused by an excessively high edge density.
Since we also wanted to test the effect of the layout of a graph on the directed-edge representations, we chose to use two classes of layouts: a random layout and a force-directed layout.
A force-directed layout algorithm treats a graph as a mechanical system with attracting spring forces between edges and repelling electrostatic forces between nodes.
This whole system is iteratively simulated, which is repeated until the node positions stabilize.
The random layout was created by randomly placing the graph vertices in a circular container, whereas the forcedirected layout was generated by using the NEATO program that is part of AT&T's Graphviz  library.
Since the random layout generates edges that are longer on average, the visual edge density is higher in these graphs.
To balance the visual edge density between both classes of graphs, we settled on generating the graphs that were laid out by NEATO's force-directed algorithm using 140 vertices, while the graphs that use a random layout were generated using 50 vertices .
Due to the high sensitivity of the human visual system to changes in intensity, an obvious candidate is a line that varies from opaque/dark  to neartransparent/light  or vice-versa .
The aforementioned green-to-red representation used by Holten  also belongs to the class of color-varying lines and was therefore added as well .
The curved links by Fekete et al.
Furthermore, the idea of using clockwise curvature to depict direction has also been used in other types of visualizations than graphs drawn as node-link diagrams .
We therefore added a clockwise-curvature representation .
The final representation was created by simply generalizing the notion of the intuitive arrowhead by gradually varying the width of the line - wide at the start and narrow at the end - along its length .
To keep the visual density  as constant as possible for each of the representations, we slightly varied the amount of alpha-blending for each of the six representations as well as possible without visually compromising the representation.
Alpha-blending pertains to the combination of two or more colors to allow for transparency effects.
We chose the intuitive and well-known black, straight-line arrow on a white background as the base case for the singlecue representations .
All of the visualizations were shown on a 22" Dell UltraSharp 2208WFP screen at a resolution of 1680x1050 with 8x anti-aliasing .
This setup was used throughout the user experiments.
Based on these observations, we expected the "green-to-red"-representation to have average performance; probably better than "curved", roughly the same as "light-to-dark" and "dark-to-light", and probably worse than "arrow" and "tapered".
We expected "curved" to have the worst performance, mainly because we noticed that we got confused quite easily while informally working with our testing program.
Determining the direction of an edge by forcing ourselves to "read" the edge in a clockwise fashion seemed to require quite some mental effort.
Finally, the "tapered"-representation appeared to have the benefit of the "arrow"-representation  while possibly having none of the aforementioned occlusion and visual-clutter problems of this representation.
We therefore expected "tapered" to perform best, but possibly only slightly better than the "arrow"representation.
Our initial hypotheses with regard to the representations mentioned above were as follows.
We expected the "arrow"-representation to perform fairly well since this representation is quite intuitive and wellknown to most users.
However, due to the use of a triangular arrowhead at the end of each edge it might sometimes be hard to determine to which edge a specific arrowhead belongs because of occlusion problems and visual clutter in case of a high number of arrowheads that are drawn around a high-degree vertex.
This might consequently diminish performance.
We were furthermore unsure whether the "light-to-dark"- or the "dark-to-light"-representation would be more intuitive to users.
This is because a black line that varies in intensity  along its length could intuitively be viewed as either a comet leaving a trail or as a needle pointing in a specific direction .
The comet-interpretation would be correct for the "light-to-dark"-representation while the needle-interpretation would be correct for the "dark-tolight"-representation.
It was unclear to us in advance which of these interpretations - comet or needle - would be more intuitive to users.
Subjects performed two tasks in our first experiment.
In task 1 they had to determine whether or not there was a singlestep directed connection from vertex A to B .
In task 2 they had to determine whether or not there was a two-step directed connection from vertex A to B, i.e., if vertex B could be reached from vertex A by visiting exactly one in-between vertex .
The pixel-based line in  can be interpreted as  a comet leaving a trail, in which case the line is viewed as running from left to right, while it might also be interpreted as  a needle pointing in a specific direction, in which case the line is viewed as running from right to left.
Regarding "green-to-red" we speculated that it might benefit from an intuitive mnemonic device because red and green might readily be associated with "stop" and "go", respectively.
However, we also took into account that variation in hue might be less salient than variation in intensity from a perceptual point of view.
Furthermore, the red-green color axis is notorious as far as color blindness is concerned,
Tasks during first user experiment.
For each trial, the response time and correctness were registered.
The testing program automatically halted between edge representations to give subjects the ability to have a short pause; subjects could resume the test by pressing the space bar.
Test subjects were presented with a new graph at each trial and vertices A and B were chosen such that there was a 50% chance that a directed connection was indeed present.
Furthermore, in case of the force-directed layouts, vertices A and B were chosen such that vertices near the central region of the graph were preferred.
This was done to ensure the selection of vertex pairs from the more crowded parts of the graph, since problems related to visual clutter and occlusion occur more often in the central regions of force-directed graph layouts.
All graphs were randomly generated, visually checked, and stored before the experiment.
This was done to ensure that the graphs that were presented to the test subjects did not contain errors as the result of a degenerate layout produced by the NEATO layout algorithm .
It furthermore allowed us to present the same collection of graphs to each test subject.
This amounted to 48 trials per representation x 6 representations = 288 trials per test instance.
Completing a test instance took subjects on average around 20 minutes.
A typical random test instance as described above might look as follows: Task 1 - Single-Step Repr.
Thirty test subjects with normal or corrected-to-normal vision participated in the first user experiment.
Twenty of them were graduate students at our university; ten were part of the scientific staff.
They were not paid for participating in the experiment.
In order to familiarize themselves with the tasks and program controls, subjects were given a couple of practice trials before commencing with the actual test instance.
We continued with this until we felt certain that each subject fully understood the task and program controls.
Individual trials were presented to a subject as follows.
The question presented to a subject for each trial remained constant within tasks.
For task 1, the question was "Is it possible to go FROM A TO B in EXACTLY 1 step?
Press `+' for `yes', `-' for `no'"; for task 2, the question was "Is it possible to go FROM A TO B in EXACTLY 2 steps?
Each trial was presented to a subject in three stages.
Stage 1 displayed an empty white screen to the subject for 400ms.
Stage 2 subsequently displayed two randomly chosen vertices A  and B  to the subject for 600ms.
This stage was introduced to ensure that subjects did not have to spend time on finding the two vertices.
Finally, stage 3 displayed the complete graph on the screen as well and timing for the trial was started.
Furthermore, a legend describing how to interpret the current edge representation was displayed in the lower-left corner during each trial.
The response times and error measurements collected during the first user experiment were analyzed using one-way ANOVA and Tukey's HSD post-hoc test.
Before discussing the outcome of these tests, we first take a look at the overall results depicted in Figure 6.
This figure shows both the average response time as well as the response error per directededge representation; results are grouped by layout and task.
If we take a look at the influence of task and layout on response time and error, it can be seen that task 2 was clearly more difficult for subjects than task 1.
Switching from task 1 to task 2 increases response time and error by a factor of 3.32 and 5.59, respectively, while switching from a force-directed to a random layout only increases response time and error by a factor of 1.18 and 1.19, respectively.
This shows that the influence of the task was much higher than the influence of the layout.
A random layout appeared to be only slightly harder to interpret here than a force-directed layout.
However, we had adjusted the number of nodes, so this is not directly comparable.
We can furthermore observe that response error appears to follow response time quite well.
We can quantify this by calculating the correlation coefficient between response time and error as the average of the correlation coefficient for the single-step tasks and the correlation coefficient for the double-step tasks, which is 0.72.
When calculated for all four tasks at once, the correlation coefficient is even higher: 0.96.
However, this high value is mainly due to the widely differing values of response time and error between the single- and double-step tasks.
The screen contents as presented to a subject during a trial.
The task-relevant question is displayed in the upper-left corner, a legend describing how to interpret the current edge representation is displayed in the lower-left corner, and the graph for the current trial is displayed in the center, including the highlighted vertices A  and B .
Based on these observations, we can facilitate analysis by only analyzing response time using one-way ANOVA and Tukey's HSD post-hoc test, since the results for response error follow a similar pattern.
Furthermore, we can perform the analysis on the combined result of all tasks and layouts instead of a separate analysis for each of the four combinations of task and layout because of the presence of the aforementioned overall pattern.
The combined results are shown in Figure 7.
Graphical depiction of performing Tukey's HSD test on the combination of all tasks and layouts.
An edge is present for each statistically significant difference in Figure 8.
Edge direction indicates that the origin representation performs significantly better than the destination representation.
We performed a one-way ANOVA analysis with response time as the single factor and the six single-cue directed-edge representations as the groups for which we have multiple observations.
The ANOVA analysis indicated that the differences in response time between the six representations are statistically significant  = 25.54, p < 0.05.
However, it does not show us between which representations the differences in response time are significant.
We used Tukey's HSD post-hoc test to perform a pairwise comparison to see where the actual significant differences reside.
The result of this is shown in Figure 8.
To facilitate interpretation of the results in Figure 8, a graphical depiction is shown in Figure 9 .
The result shows that "curved" significantly differs from all other representations; "curved" is clearly worst as far as performance is concerned.
Overall, "tapered" can be regarded as the best representation in terms of performance.
The following holds with regard to our initial hypotheses.
The intuitive "arrow" representation performed a lot worse than we expected; although we indeed expected "tapered" to perform better than "arrow", we did not expect this to be true for the color-/intensity-based representations as well.
The use of an arrowhead might indeed have caused the aforementioned occlusion problems and visual clutter, which consequently led to a decrease in performance.
Although additional, more specific tests are needed to ensure that the poor performance can indeed be attributed to the presence of the arrowheads, various subjects did state that they experienced the arrowheads as somewhat distracting.
As far as "dark-to-light" and "light-to-dark" are concerned, subjects had a  preference for the former, indicating that the needle-interpretation seems to be more intuitive.
This is in line with the fact that the needle-interpretation is visually more compatible with an arrow pointing in a specific direction, especially if a generalized arrow representation, such as "tapered", is considered.
The "green-to-red"- and "curvature"-representation indeed performed as we hypothesized.
Finally, "tapered" performed clearly better than "arrow"; not - as we noted before - just slightly better.
For the follow-up user experiment we needed to limit the possible combinations of representations as much as possible, since testing would otherwise become infeasible.
We therefore selected a subset of the six single-cue representations from the first user experiment and subsequently constructed multi-cue representations by taking all possible combinations of the representations within this subset.
We did this by observing that the color-/intensity-based representations could be grouped together and that subjects had a slight preferences for the "dark-to-light"-representation.
We therefore chose "dark-to-light" as being representative for this group of representations.
We furthermore kept the "tapered"- and "curvature"-representation because we wanted to see what influence the presence of the best and worst representation during combining would be.
Finally, the "arrow"-representation was omitted since we had already seen that its performance was quite low, we were mainly interested in the alternative representations, and because the "arrow"-representation would increase the number of possible combinations from 4 to 11.
This resulted in a subset of three representations - "intensity", "tapered", and "curved" - based on which we created the four combinations depicted in Figure 10, i.e., "TI" , "TC" , "IC" , and "TIC" .
Based on our own experience with the four multi-cue representations while informally working with the testing program, we expected the second option to be the most feasible, i.e., combining would probably lead to increased performance due to the presence of multiple visual cues that would positively reinforce each other.
We already saw that there was a clear overall pattern for the response times across all four combinations of task and layout in the first user experiment.
We therefore decided to only perform one task consisting of single-step connection trials on force-directed layouts during the follow-up experiment.
Subjects performed this task on each of the four multi-cue directed-edge representations.
The order in which the representations were presented was again randomized for each subject.
This amounted to 20 trials per representation x 4 representations = 80 trials per test instance.
Individual trials were presented to a subject in the same way as during the first user experiment and the choice of vertex pairs during each individual trial was performed in the same way as well.
Fifteen test subjects with normal or corrected-to-normal vision participated in the follow-up user experiment.
Twelve of them were graduate students at our university; three were part of the scientific staff.
They were not paid for participating in the experiment.
It is indeed the case that "ti"  performs better than "tapered"  and "dark-to-light"  separately, but the improvement is small when compared to the best of its comprising representations .
The same holds for "ic" , which performs better than "dark-to-light"  and "curved"  separately, but the improvement is again small when compared to the best of its comprising representations .
We performed a one-way ANOVA analysis with response time as the single factor and the four multi-cue directed-edge representations as the groups for which we have multiple observations.
The ANOVA analysis indicated that the differences in response times between the four representations are statistically significant  = 4.25, p < 0.05.
Based on the results in Sections 4.4 and 5.4, our recommendations regarding the visualization of directed edges within node-link-based graph layouts are the following: * A standard arrow representation should be avoided whenever possible.
Although this representation is straightforward and intuitive to most users, the performance of this popular representation is quite low, which is probably due to the use of arrowheads that cause occlusion problems and visual clutter; * A tapered representation in which the width of an edge is gradually varied along its length - wide at the start and narrow at the end - proved to be the best representation in terms of performance.
We therefore recommend the use of this representation to visualize directed edges; * If an intensity-based representation is chosen to visualize directed edges  then a dark-to-light representation has a performance advantage over a light-to-dark representation.
This hints at a preference of users for the aforementioned needle-interpretation with respect to intensity-based directed-edge representations; * There does not seem to be a clear performance benefit associated with the multi-cue directed-edge representations that we tested.
We therefore recommend the use of singlecue directed-edge representations instead.
Because the single-cue and multi-cue representations cannot be compared directly and since only fifteen instead of thirty subjects participated in the second experiment, we did not perform a statistical analysis to compare the results of the first experiment to those of the second experiment.
We have presented six single-cue and four multi-cue directededge representations as alternatives to the standard arrow representation for the visualization of directed edges in graphs drawn as node-link diagrams.
To investigate whether or not these alternative representations suffered less from problems related to occlusion and visual clutter, we performed two user studies in which subjects performed different tasks on two classes of node-link-based graph layouts.
We provided initial hypotheses regarding the performance, i.e., speed and accuracy, of each of the representations and compared these to the outcome of the user studies.
Based on the analysis of both user studies we provided recommendations for the representation of directed edges in the context of graphs drawn as node-link diagrams.
Based on the experience gathered while informally working with our testing tool and while performing the user studies, our recommendations for possible future work are as follows: * Additional single-cue directed-edge representations  could be tested to determine whether a certain type of representation might perform better than the ones that we have already tested.
For instance, animated representations might be worth investigating as well; * Alternative tasks relevant to graph exploration could be tested instead of single- and double-step connection trials to determine whether the relative performance of directededge representations within the context of graph exploration is task-dependent or not.
An example of such an alternative task is the determination of the fan-in  and/or fan-out  of a vertex; * As mentioned before, the way in which visual cues interact in the context of multi-cue directed-edge representations is more complex than being a clear case of averaging, positive reinforcement, or negative interference.
To be able to create a generic model of the way in which representations interact , additional multicue directed-edge representations need to be tested to collect more information on the effects of combining representations.
