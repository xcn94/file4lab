Thus, more lightweight methods for generating ideas with users are needed.
To help address this need, we have developed a new design method, which we call "DesignLibs."
DesignLibs helps designers generate new ideas rapidly and easily while still involving users.
It combines the storytelling aspects of scenarios with user involvement by leaving aspects of the scenario to be filled in by the user.
To maximize the types of ideas generated by users, we developed three different formats for DesignLibs .
The first was inspired by the children's game of Mad LibsTM , which asks players to provide words of a certain type, such as actions, mood words, or people's names, and then inserts those into a story.
The randomness of the words provided makes for humorous and often absurd scenarios.
The second format of DesignLibs involves having users directly fill in blanks with the context of the story revealed at the time of the word generation.
The third format has users answer a series of questions, and then inserts those responses into a story.
The result of each format is a design scenario, which users are then asked to react to and on which to provide feedback.
To understand how DesignLibs performs as a design method, we deployed the three different formats as interactive surveys with 240 users through Mechanical Turk .
We then had a team of 6 designers rate the responses for feasibility, creativity, and usefulness.
We found that all three methods were quick, enjoyable for users to complete, and generated unique design concepts that enabled designers to think of new and interesting approaches.
We envision DesignLibs as a part of a designer's toolbox of methods to try to inspire new ideas, such as those in IDEO's Method Cards , which includes methods such as scenarios , bodystorming , and experience prototyping .
The spontaneity of ideas generated from this process is in spirit of the spontaneity that can be achieved through randomly drawing cards to choose different methods .
Generating potential design ideas through ideation often benefits from the spontaneity of random ideas.
Having potential users participate in this process can be beneficial, but is often difficult to implement.
We present a new method for generating design ideas with potential users.
The method uses scenarios with missing words, which potential users fill in to generate ideas for features and attributes of new technology designs, similar to the children's game of Mad Libs.
We found that DesignLibs generated a number of new ideas, with the Fill-in-theBlanks method providing the highest ratings for usefulness, feasibility, and diversity of answers.
All three formats provided equal ratings for creativity.
When designing a new technology, it can be a challenge to generate ideas that are both feasible and novel.
A commonly held belief among designers is that quality ideas often come from having a large quantity, and that generating wild and diverse ideas can spark creativity and innovation .
In fact, many designers adopt Linus Pauling's mantra  of, "the best way to have a good idea is to have a lot of ideas, and throw away the bad ones."
The process of idea generation, or ideation, is typically accomplished through activities such as brainstorming, sketching, or storytelling, which are driven by the designers.
To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee.
Mad Libs: The first variation of DesignLibs was our original idea inspired by the children's game of Mad Libs.
In this format, users are presented with blanks asking them for words such as "a person's name," "a technology device," "a mood word," or "an action word."
They are then prompted to enter these into blanks without being given the context for which they would be used.
The goal is that by not being given the context, many of the ideas generated may not make sense, but could be considered "wild" enough to spark a new idea in either the user or the design team.
Fill-in-the-Blanks: Although we believed that the Mad Libs scenario might generate wild ideas, we were curious what types of ideas might result from the user knowing the actual context of the scenario.
In this situation, the format would be similar to the person who is asking the questions of another person in Mad Libs, where they can view the scenario with the words missing.
Essentially, the users are being asked to fill in the blanks in the scenario.
Q&A: In the third variation, we wanted to explore whether users would find the task more engaging if we made the blanks more relevant to a scenario in their life.
Thus, this approach asks participants to respond to a series of questions that are more like a traditional survey.
This would preserve the spontaneity of the Mad Libs format, but makes the responses more specific and personal.
This could result in more meaningful technology designs for the users.
Final Questions: After each method, users are provided the final completed scenario  based on the words they entered.
Afterwards, they are asked a series of open-ended questions to reflect upon the design scenario presented and provide feedback.
This type of questioning was intended to be similar to what one might ask about a designer-generated scenario.
We implemented DesignLibs using simple PHP scripts in an online survey format.
The script randomly directed participants recruited via Amazon's Mechanical Turk to one of the three variations described above or a fourth control condition, which was a pre-completed scenario we designed.
All four conditions resulted in the same base scenario and were followed by the three final questions described above.
The text of the scenarios used for the experiment is shown in Figure 1 and was based on a real technology application for using mood sensing our research team was interested in designing.
The blanks included the technology platform, the sensing type, moods people might want to have detected, and appropriate actions the technology might make.
After completing the DesignLibs task, we also asked a set of questions to understand the participant experience of completing the task.
This included six Likert scale questions on a five-point scale, ranging from 1=Strongly Disagree to 5=Strongly Agree.
We included one final open-ended question for comments and questions on demographics.
We paid participants $.10-$.20 USD for the completion of the survey, which took about 3-5 minutes to complete.
We used Mechanical Turk's internal filters to limit participants to only those from the United States with a prior task completion approval rating greater than 95%.
The demographics of the participants were diverse, but were skewed slightly toward younger, more educated, and more technologically-adept males.
Based on the Likert responses , users rated all four task types to be equally engaging and easy, as well as the technology designed to be not boring, interesting, and unique.
The only significant difference we found between conditions was in the "Not realistic" question =16.9, p<0.01, where users found the Mad Libs scenarios to be less realistic than the other two categories, which makes sense given that they had no context on which to base their responses.
However, it is surprising that Q&A method was not significantly worse than the Fill-in-the-Blanks method considering that users also could not see the context of their answers.
Within the "Not realistic" responses, our pairwise analysis showed significant results in the Mad Libs vs. Fillin-the-Blanks  and the Mad Libs vs. Q&A comparisons , but no other results were significant.
To evaluate the usefulness of the ideas generated from Phase 1, we had six members of our research lab rate the scenarios generated.
Each of the six raters had experience in technology design and ideation, but they were not involved in data collection for DesignLibs.
We divided Phase 1 survey responses into four sets of 46 scenarios, consisting of 15 scenarios from the three DesignLibs variations and the 1 control scenario in random order.
Participants read through all 46 scenarios before they began coding.
Do you think people might want to actually use it?
Raters received a $20 Amazon.com gift card for each set rated, with 5 people rating 1 set each and 1 person coding 3 sets.
Coding took between 60 and 90 minutes per set, with each set being rated by 2 researchers.
We also identified which method had the most "high quality" ideas as calculated by a "total quality score," which summed the ratings for each scenario across both raters, for a maximum score of 30.
Among the top 25 ranked scenarios, Fill-in-the-Blanks overwhelmingly had the highest number of quality ideas , followed by Q&A , and none from Mad Libs.
The highest total quality score for Mad Libs was 18, Fill-in-the-Blanks was 25, Q&A was 20, and the control scenario was 27.
The raters also provided qualitative comments on each scenario.
While a number of ideas were identified as problematic, they did find many ideas interesting, creative, and inspiring from all three methods, including the Mad Libs condition, which often sparked new ideas.
For Mad Libs, some reviewer comments included: "A little odd but makes me think of building just an avatar that responds to emotions relatively passively through body language," "While not useful, or really just a very bad idea, the idea of something that responds to sadness by fighting is compelling," and "Having something cook when you're glum would be lovely!"
Interesting comments on Fill-in-the-Blanks scenarios included: "I wouldn't want to wear a head-laser, but I kind of like the simplicity here: if you're stressed, the device lets you know" and "Interesting ambient-ish feedback that seems like a sympathetic computerized response."
What else can you do with that?"
Not useful as specified but opens up other interesting ideas."
Despite the nonsensical nature of many responses, there were still a number of ideas and interesting avenues to explore that were raised in all three conditions.
PHP coding, one could imagine that a simple DesignLibs Builder application could be created for design teams without this expertise.
In future work, we hope to investigate alternate ways of generating DesignLibs surveys.
We also plan to conduct study that more directly compares DesignLibs to other ideation methods.
We also hope to identify when each condition is most effective for various stakeholders.
Our findings suggest that DesignLibs is a useful method for generating a large number of ideas with minimal effort on the part of the designer.
The Fill-in-the-Blanks method allowed participant to see the text of the question, making it unsurprising that it had the highest ratings for usefulness and feasibility.
However, it is interesting that Q&A was rated as significantly more useful and feasible than Mad Libs, despite similarities between the two methods.
The significance of this result suggests that by relying on the participants' experience when responding, the Q&A method can produce sound ideas without being mired by preconceived notions of how technology should be used.
Therefore, the Q&A method could be a useful way to spur creativity by encouraging participants to reflect on their real behavior uncoupled from a technological context.
While the majority of the scenarios were absurd or nonsensical they were still able to spark ideas within the raters, as illustrated by the comments.
We view this method as being complimentary to existing forms of ideation and methods for engaging user.
DesignLibs builds on traditional ideation methods and complements them in a number of ways.
For example, it is similar in purpose to brainstorming  and storytelling , but unlike these methods, DesignLibs creates an opportunity for designers to gain user insights quickly and easily.
Other, less traditional ideation methods include bodystorming, futures and alternative nows, and science fiction prototyping.
Bodystorming combines brainstorming with physical movement to generate ideas and quickly envision scenarios, such as arranging seats within an airline to accommodate sleeping .
Futures and Alternative Nows  is a method of thinking about how different values change our world and lead to very different and perhaps absurd design ideas, which may morph into more realistic design ideas.
Science fiction prototyping  aims to use science fiction writing as a way of inspiring futuristic ideas.
These methods often require the designers to generate the ideas and present them to users for feedback, and thus DesignLibs makes a unique contribution by enabling potential endusers to easily generate and contribute design ideas.
Another method, future workshops and metaphorical designs , engages users to think of innovative designs, but require more effort and engagement than DesignLibs.
We believe DesignLibs would be easy for design teams to execute.
We developed DesignLibs as a tool for enabling ideation with remote users, so designers can gain insight and inspiration early in the design process.
We found that the Fill-inthe-Blanks format performed the best overall in terms of usefulness and feasibility scores, but there was not a significant difference in the creativity score across the three conditions.
All three conditions led the designers who rated them to think of new ideas that had not already been considered.
We envision DesignLibs as being an option in the designers' toolbox of methods that can be tried to stimulate creativity, along with other ideation methods such as bodystorming, brainstorming, or sketching.
The method is quick and easy to develop and deploy, and it can engage target users in the design process in a way that may require less training and time commitment than other techniques.
Buxton, B. Sketching user experiences: getting the design right and the right design.
Morgan Kaufmann, 2007. Cooper, A., Reimann, R., and Cronin, D. About Face 3: The Essentials of Interaction Design.
IDEO Method Cards: 51 Ways to Inspire Design.
Science Fiction Prototyping: Designing the Future with Science Fiction.
Generating visions: Future workshops and metaphorical design.
Design at Work: Cooperative Design of Computer Systems.
Lameijer, E.-W. How to get one thousand ideas - or, the Pauling Principle.
The Science Talent Project, nature.com, 2011.
Oulasvirta, A., Kurvinen, E., and Kankainen, T. Understanding contexts by being there: case studies in bodystorming.
