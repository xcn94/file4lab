Many approaches have been proposed for the visualization of multiple time series.
Two prominent approaches are reduced line charts , which display small multiples for time series, and the more recent horizon graphs .
We propose to unify RLC and HG using a new technique--interactive horizon graphs -- which uses pan and zoom interaction to increase the number of time series that can be analysed in parallel.
In a user study we compared RLC, HG, and IHG across several tasks and numbers of time series, focusing on datasets with both large scale and small scale variations.
Our results show that IHG outperform the other two techniques in complex comparison and matching tasks where the number of charts is large.
In the hardest task IHG have a significantly higher number of good answers  than HG  and RLC  and a lower error magnitude than HG  and RLC .
We introduce Interactive Horizon Graphs , an interactive technique for visualizing multiple time series.
IHG are inspired by pan and zoom techniques and unify Reduced Line Charts  and Horizon Graphs , two of the most effective techniques for visualizing multiple time series.
We designed IHG to increase the number of time series one can monitor and explore efficiently.
Datasets involving large numbers of time series such as stocks or medical monitoring are frequent and important .
We evaluate the benefits of our contribution for standard tasks on time series visualizations.
While the related work has used generated time series with clear landmarks for evaluation, we used a non-synthetic dataset with both large scale and small scale variations  adapted to multi-resolution visualization techniques.
Under these conditions, we obtained results that are different from those in previous work   and found that IHG outperform both RLC and HG for large numbers of time series.
This paper first reviews related work on time series visualization techniques and then describes the two techniques that we rely on  in detail.
Next, it presents IHG and our variant of pan and zoom.
We then describe a controlled experiment that shows how IHG handles up to 32 time series in parallel.
We discuss the results of the experiment and how our technique can be combined with others to support comparison tasks in an effective way.
Time series--sets of quantitative values changing over time-- are predominant in a wide range of domains such as finance  and sciences .
Line charts are one of the simplest ways to represent time series, and one of the most frequently used statistical data graphics .
However, using line charts to visualize multiple time series can be difficult because the limited vertical screen resolution can result in high visual clutter.
Since line charts have become widespread , visualization of time series has been an active research topic, moving from paper-based representations to interactive visualizations.
Many design considerations exist for displaying data in the form of charts  and for the comparison of graphical visualization techniques .
To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee.
Visualizing multiple time series in a small space  has led to techniques that use space-filling  and multi-resolution representations .
Two time series visualized in parallel using Reduced Line Charts , Horizon Graphs  and Interactive Horizon Graphs .
The construction of a Horizon Graph with 3 bands, adapted from .
Next, the line chart is horizontally split into uniformly-sized bands and their saturation is adjusted based on each band's proximity to the baseline .
The bands below the baseline are then reflected above the baseline , so that the height of the chart becomes half of what it was originally.
Finally, the different bands are layered on top of one another , reducing the final chart height to h/, where h is the original height of the chart and b is the number of bands.
Using HG, data values are represented not only by their vertical height, but also by their color saturation and hue.
For instance, the global maximum of a time series is the highest of the darkest red values.
Figure 1 illustrates two HG in parallel.
They provide some recommendations, such as the optimal chart height and the number of bands which should be used.
They limited their study to two simultaneous time series and the number of bands to four.
They limited the HG parameters to those recommended by Heer et al.
In particular, they did not find critical differences between RLC and HG.
However, they found that the number of time series seriously impacted the visual clutter and played a very important role in the performance of the visualization techniques.
In their experiments, both pieces of prior work used synthetic data that included clear landmarks, which may have aided visual search tasks.
As HG is a multiresolution visualization technique, we can expect different results for the more difficult LSV datasets.
In splitspace techniques, the space is divided  by the number of time series and each one occupies its own reduced space .
Shared-space techniques can support only a limited number of time series .
Because we focus on large numbers of time series, we only consider split-space techniques.
Also, while most of prior techniques are static, we focus on evaluating the benefits of adding interaction.
HG is a recent split-space technique intended to display a large number of time series.
It was originally introduced under the name "two-tone pseudo-coloring"  and was later developed by the company Panopticon under the name "horizon graph" .
This technique uses two parameters: the number of bands b and the value of the baseline yb separating the chart horizontally into positive and negative values.
Figure 2 illustrates the construction of HG from a line chart centered around a baseline.
First, the values are colored ac-
Techniques such as stack zooming  and dual-scale data charts  use focus+context  techniques to visualize time series data containing regions with high variations.
These techniques magnify and increase the readability of regions of interest by modifying the x axis , but not the y axis .
We only found one article  that explored LSV datasets exhibiting both large and small variations visible at low and high resolutions.
However, time series with these properties are common--for example, one may observe the temperature of a city along one year according to different variation scales: large , medium , small .
While several tasks can be accomplished on time series where each chart has its own y axis , related work  suggests that the best configuration for multiple time series consists of sharing the same y axis, i. e., using the same scale of values and baseline.
We believe that these results were also due to the synthetic dataset they used and we expect different results from a more difficult dataset.
In conclusion, previous studies on multiple time series had two main limitations: they only studied small numbers of time series , when much larger numbers are available in popular datasets, and used synthetic datasets, with features simpler than those typically found in these popular datasets.
Time series visualization techniques have been studied extensively and prior work has evaluated their use for a variety of different tasks.
According to Andrienko et al.
For each type, the tasks can be direct/inverse comparison tasks or relation-seeking tasks.
The closest study to our work, that inspired us , evaluated RLC and HG considering three tasks: Maximum, Discriminate and Slope.
Find the Maximum  Max is an elementary task for direct comparison.
It consists of determining which of several time series has the highest  value at a shared marked point .
Their study revealed that RLC were faster than HG but they did not find any significant result for Correctness.
Interactive Horizon Graphs  unify RLC and HG by introducing interactive techniques to control the baseline position and the zoom factor applied to values.
Interaction is meant to allow HG to remain effective even while exploring larger numbers of time series.
Baseline panning and value zooming can be seen as variants of the commonly used pan and zoom interaction techniques --the baseline is controlled through a variant of panning and the number of bands through a variant of zooming.
Thus, the pan and zoom interaction techniques are related to the y axis of the visualization instead of the x axis as described in .
We detail our interaction techniques in the following subsections.
Max is, for instance, executed to find the hottest city in a country for a given date.
This task can be very easy to achieve if there are clear differences between the cities but becomes difficult when both the differences and the vertical resolution are small.
Figures 1 and 1 illustrate Max using RLC and HG, respectively.
This example highlights the difficulty of such a simple task using LSV datasets.
Discriminate  Disc is an elementary task for relation-seeking, similar to Max.
However, instead of having to find the highest value at a marked point t shared by all the time series, each time series has its own marked point.
Disc is more difficult than Max  and HG has been evaluated for this task in two recent studies:
Baseline panning allows users to interactively move the baseline along the y axis--in our implementation, this is achieved by dragging the mouse up/down with the right button pressed.
Note that baseline panning does not change the positions on the x axis at all, unlike regular panning, and it does not change the height of the chart.
The user's interaction with a single chart simultaneously changes the baselines on all small multiples.
Because the baseline is always at the bottom of the chart, it does not move in response to the interaction.
Rather, the series appear to shift up or down as the baseline changes and colors change as points in the series move from one band to the next .
Interactively changing the baseline overcomes a limitation of the fixed baseline used in traditional HG--because preattentive color perception  is only effective for values around the baseline, points far from the baseline are more difficult to discriminate.
Baseline panning allows a user to make transitions around a value of interest more salient.
This can be particularly valuable if one is interested in identifying deviations from a specific baseline-- for comparing the in body temperature for a patient against the patient's expected value.
Meanwhile, finding a maximum value becomes a comparison of intensity of red plus height  estimation .
For RLC, HG, and IHG, all the charts have the same range of values for the y axis: , with ym and yM being the minimum and the maximum values in the visualized dataset.
The three techniques have different values for the baseline yb : ybRLC = ym , ym ybHG = yM - , and ybIHG   .
They found that time and error increased with the number of bands.
However, these results were obtained for value estimation tasks and they aptly noticed that these increases were due to the mental math implied.
For their Disc task, Javed et al.
They did not find any significant difference in terms of Correctness or Time between RLC and HG for Disc.
Baseline panning: The bottom charts represent the view of the time series using IHG for 4 different values of yb overlaying the original line chart .
Dragging upwards the mouse with the right button pressed increases the value of yb  and values going under yb become blue.
The original line chart is presented above each step for better understanding.
Value zooming:  From a standard mirrored line chart, the zoom value z is progressively increased by dragging upwards the mouse with ym the left button pressed :  z = 1.0,  z = 1.35,  z = 1.70.
Values reaching the top of the y axis appear at 2 the bottom of the chart, with a more saturated hue.
The original chart  is overlaid for each step, for better understanding.
Value zooming allows users to specify the zoom factor using a continuous interaction--in our case, dragging the mouse up/down with the left button pressed.
Note that value zooming does not change the scale of the x axis, unlike regular zooming, and it does not change the height the of chart, since the values will wrap around the lower border of the chart.
HG use a discrete number of bands, so changing from 2 to 3 bands triggers a sudden transition.
The continuous interaction we propose prevents this abrupt change, resulting in a smooth and continuous zoom, as seen in the three zoom levels shown in Figure 4.
The chart can be seen as if drawn on a tall sheet of paper which is wrapped around its baseline according to the zoom factor: when the shape of the chart reaches the top of the y axis, it is cut and appears at the bottom of the y axis, with a more saturated hue.
The appropriate zoom factor depends on the scale of the variations one wants to analyze: observing small variations will result in a high zoom value and large variations in a low zoom value.
We were interested in observing how users would adapt and understand this unusual metaphor.
We believe that this interactive virtual resolution control provided by our zoom can be easily understood thanks to the paper-wrapping metaphor, and that this interaction can lead to substantially higher numbers of bands than the recommended two.
However, increasing the number of bands makes it more difficult for users to discriminate the different color intensities.
This trade off rests in the user's hands, according to the task and/or the data.
While standard zooming techniques consist of focusing on a specific area and losing context information, our zooming implementation for IHG preserves both the visibility of the context and the details of small variations around the baseline.
The technique we provide never leads to loss of information thanks to the HG properties.
Moreover, for both our pan and zoom interaction techniques, the visual feedback is different from a standard pan and zoom along the x axis and results in user-controlled transitions instead of sudden changes.
To illustrate the effectiveness of our technique, let's consider the basic task of finding the global maximum over multiple time series.
This task is accomplished in two steps: first, the baseline is set at yM so that all the values are colored blue.
Then, the value of the baseline is progressively decreased by the user until red values appear in one or several charts.
The global maximum belongs to one of these charts.
If two or more time series turn red for the same value of the baseline, the user will zoom in to enlarge these areas and the differences in magnitude will be visible.
Another typical use of our technique consists of locking the pan to a reference value of interest and zooming to highlight the differences with the other values.
This case is illustrated in Figure 5: let's consider a time series with small variations around a specific value except during a period of time containing higher values, resulting in a high bump .
With a well-chosen value for yb  one can focus on the value of interest.
Still, the differences between values are difficult to estimate.
Furthermore, Figure 1 illustrates how Max can be easily accomplished using IHG in comparison to RLC and HG.
These examples illustrate the importance of properly setting the number of bands and the value of the baseline.
Those settings need to be interactively set because they depend on which part of the chart and on which type of variations  one is interested in.
Finally, we designed our pan and zoom interaction techniques keeping real-world scenarios in mind.
For instance, baseline panning would let a doctor specify the base value for the body temperature of patients according to their health.The continuous zoom provides an effective way of exploring the temperatures of a city during one year; according to the zoom factor, seasonal, daily, or hourly variations may be observed.
Across all three visualization conditions , each of the charts was given the same height and all charts shared the same value range and the same baseline value.
Based on previous work, we chose a constant height of 24 pixels for the charts, regardless of the number of displayed time series.
We also made several specific choices in the design of each condition: RLC: for consistency with HG and IHG, the charts were filled in with the color corresponding to values above the baseline.
HG: we reversed the meaning of red/blue in our color map because, during the experiment design and pilots, we tested datasets with temperatures that are usually encoded using blue for cold and red for warm.
This flipping of colors does not bias the experiment since the coding is consistent over the three ym techniques.
We used the recommended values yb = yM - 2 and b = 2.
IHG: to facilitate learning, we chose the value of the baseline and the zoom factor at the initial stage to be the same as the ones for RLC, i. e., ym and 1.0, respectively.
The color coding was identical to the one used for HG.
During the experiment, the value of the baseline and zoom factor were displayed.
We designed an experiment to determine the usefulness of adding interactivity to HG.
In the study we asked users to examine LSV datasets and perform three kinds of tasks using RLC, HG, and IHG.
To quantify the impact of each approach, we measured the Time, Correctness, and Error magnitude for each visualization technique.
We used several datasets, including unemployment rates and temperatures, during our pilot studies.
However, for the main experiment we chose real-world data from Google Finance .
We used the stock market history during February 2012 from 182 banks with no missing data for that period.
We chose these datasets because they are LSV time series that evolve in a close range, making it necessary to use a common scale for all visualized charts.
Because LSV time series have different levels of detail, we expected that HG would outperform RLC and that we would be able to differentiate HG and IHG, since both are multi-resolution visualization techniques.
The related work on graphical perception of multiple time series often considered only two time series at a time .
More recently, Javed et al.
We considered sets of N=2 and N=8 time series so that we could compare our results against prior work.
In addition, because one of our goals was to deal with larger numbers of time series and test the scalability of split-space techniques, we also considered sets of N=32 series.
This hypothesis is based on the intuition that the task becomes more difficult with larger numbers of time series but that interaction will help deal with the increasing scale.
To test this hypothesis, we designed variants of the task using 2, 8, and 32 time series.
We also predicted that the greater the number of time series, the less efficient RLC will be.
H2 IHG will be faster for all the tasks.
Based on the task taxonomy for time series developed by Andrienko et al.
The Find the same  task is a variant of the Andrienko et al.
Users are asked to select the time series that is exactly the same as a specified reference time series.
We chose this alternative because of the very high difficulty in discerning the slope of time series using RLC with LSV datasets.
Our selection of this particular set of tasks was motivated by our pilot studies and was designed to allow us to compare our results against prior work.
We also discarded several other tasks from our experiment based on the results of pilot studies.
Furthermore, automatic techniques would outperform any interactive technique for this kind of basic task.
Find the Maximum : We chose to have more control on the task than previous experiments to adapt it to LSV time series.
A reference time series is randomly picked from the dataset and assigned a random position in the display order.
The other time series are then selected in the dataset if they satisfy the following condition: being vt the value of each additional time series at t, the time series is said to be comparable with the reference if:
The order of technique and task was counterbalanced using a Latin square to minimize learning effects.
Because the difficulty of the task is highly correlated with the number of time series , the order of N was gradually increased instead of being randomized .
In summary, the design included  x  x  x  = 108 trials per participant.
For each, the time series were randomly selected in the dataset.
The experimental session lasted about 45 minutes in total.
Participants finished the trials for a particular technique, separated into task blocks, before moving on to another one.
Each time a new task began , participants went through a short training for that block.
This training consisted in a reminder of the task and four training trials, not limited in time to let participants establish their strategy for the task.
During the training as well as the actual trials, participants received feedback as to whether their answer was correct or not.
There were told that the Correctness of the answer was more important than the Time.
For HG and IHG, the difference in pixels is proportional to the virtual resolution , i. e., the number of bands.
Discriminate : The time series are selected in the same way as in Max but each has its own random time-point t. Find the Same : There is one more time series displayed for this task than for the two others .
Because we are focused on assessing visual perception of time series, we did not include additional features such as sorting or highlighting maximum values that might help users perform operations like Max and Disc.
As in Javed et al.
Participants were only able to analyze the shape and colors of the time series.
Note that these tasks are very difficult to perform if the differences in magnitude between the values are small, which is the case for LSV datasets.
Nine participants  were recruited from our research institute.
Participants ranged from 23-36 years in age , had normal or corrected-tonormal vision and were not color blind.
Participants were all volunteers and were not paid for their participation in the experiment.
All the participants  had a background in computer science and good chart reading skills.
Six participants had already heard of RLC and only one knew HG.
The dependent variables we measured are Time  and Correctness .
Because Correctness does not capture the error's magnitude, for Max and Disc we also measured xe the Error , which is defined as  is the absolute error measured, and eM and em are the maximum and minimum possible errors.
Error expresses the difference in percentage between the correct maximum value and the value chosen by the user.
For Same, this additional measure has no meaning unless we subjectively define a similarity measure.
Therefore, we only recorded the Correctness of the answer in Same.
For IHG, we also measured how long each participant took to perform the pan and the zoom interactions, as well as their values at the end of each trial.
Each participant performed four trials per technique x task x N combination.
The participants watched a short introductory video explaining the RLC and HG techniques and illustrating the possibility of modifying the baseline to separate the values below and above it by coloring a standard line graph.
They sat in front of a 19 inch LCD monitor  at a distance of approximately 50 cm and used only the mouse during the experiment.
To select an answer time series, they had to double-click on it.
To avoid accidental clicks, after having selected the time series, a dialog asked them to confirm their choice while the time kept running.
This interaction was the only one available for RLC and HG.
For IHG, pan and zoom were provided using the mouse by dragging vertically anywhere on the screen with one of the two mouse buttons pressed.
The left button triggered the zoom and the right button the pan.
Participants were able to practice until they understood the interface well.
After each task and for each visualization technique, participants were asked to give a score for difficulty and describe the strategy they used.
All data were analyzed using repeated ANOVA measures.
We applied a log transform to the measures of Time to obtain a quasi-normal distribution.
Pairwise t-tests were done with the Bonferroni adjustments.
Effect sizes were computed using the unbiased estimate of Cohen's d , with the pooled standard deviation.
We only report on significant effects that are summarized in Table 1, along with their effect size.
Table 2 presents participants' use of pan and zoom for IHG.
For N=2, half the participants did not use any interaction at all.
The harder the task, the more interaction was used.
We also observed that for all N , few participants used only pan or only zoom--both seem useful to most participants.
We also recorded the values of the baseline and the zoom factor at the end of each trial for IHG  and  and the percentage of total time participants used pan and zoom  using our kinematic logs.
The end values are important measures because they correspond to the number of bands and the value of the baseline the participants estimated to be the best for each trial.
In this subsection we detail the statistically significant differences between RLC, HG, and IHG for each N , and provide recommendations for the use of each technique.
For N=2: For Same, HG are faster than both RLC and IHG.
This improvement is likely due to the fact that HG use colors that allow pre-attentive perception and recognition of key features.
With IHG, participants lost time using the interactions, looking for recognizable shapes using pan and zoom.
For Max and Disc, both RLC and HG are faster than IHG: participants had been told that Correctness was more important than Time and we observed that they double-checked their answers using pan and zoom whenever they were in doubt.
For N=32, both IHG and HG have higher Correctness and lower Error than RLC for all tasks except for Same where there is no difference in Correctness between HG and RLC.
RLC are clearly limiting for large numbers of time series, regardless of the task.
Interestingly, for Disc, IHG have higher Correctness and lower Error than HG.
For this task--which is the hardest, involving visually browsing the charts vertically and horizontally--IHG exhibit better results than HG.
Not only are there significant differences between the techniques, but the effect size indicates that these differences are substantial.
The Error measure also shows substantial differences: for Max, the Error for IHG is 9.6 times less than for RLC and 1.3 times less than for HG.
For Disc, Error for IHG is 7.5 times less than RLC and 2.7 times less than for HG.
This confirms that IHG leads to more correct answers and that, even when an answer is wrong, the Error is lesser than when using RLC and HG.
In , the grey horizontal line at 0.5 indicates the value of the baseline using HG .
In , the grey horizontal lines at z = 2 and z = 4 are the recommended and the maximum values of b.
For Time, there is no significant difference between IHG and HG regardless of the task.
This is in contrast to the results for smaller N , where IHG were usually slower than the other techniques.
Here, the overhead of interaction with the charts was less than that of visual search.
We strongly recommend using IHG for large numbers of time series and avoiding RLC.
We also found that for large and medium numbers of time series, HG are more efficient than RLC, in contrast to previously published studies.
Our work is the first to reveal these advantages of HG.
Figure 9 illustrates this observation--even for N=2, the use of pan and zoom represents up to 50% of the trials' time.
Because there is no difference in Correctness or Error for N=2, we recommend using HG for N=8 or fewer.
RLC can be used for elementary comparison and relation-seeking tasks such as Max and Disc.
However, we do not recommend IHG for such small numbers of series because the interaction technique distracts users and does not bring any benefit.
For N=8: For both Max and Disc, HG are faster than IHG.
The rationale is likely the same as for N=2--participants lost time using the interactions.
Moreover, since the initial state of IHG was identical to RLC , participants had to interact to obtain a visualization similar to HG, while for HG the default configuration was readily available.
The remarkable distinction between N=2 and N=8 is that, in the latter, there are significant differences in Correctness and Error.
For Max, IHG have higher Correctness than RLC because the zoom allows users to discern fine differences between charts.
Since IHG and HG amplify the small variations, both techniques induce lower Error than RLC.
For Disc, IHG have higher Correctness and lower Error than RLC for the same reasons.
In summary, IHG are 1.2 and 1.02 times more correct than RLC and HG for Same and 1.2 and 1.06 times more correct than RLC and HG for Disc.
All participants completed the tasks with no error using IHG.
We recommend using IHG or HG and avoiding RLC for medium numbers of time series when performing elementary comparison and relation-seeking tasks.
The Time to perform Max and Disc is similar for all three techniques for N=32  but the Correctness for RLC decreases severely between N=8 and N=32 .
Participants answered as quickly as in HG and IHG, but with very low Correctness.
Participants' answers to our questionnaire explain this effect--for the RLC technique, their strategy was to quickly identify potential answers and to pick one randomly, without being sure of the answer.
Clearly, regardless of how much time users take with RLC for N=32, they cannot perform Max and Disc correctly.
We observed the same effect for HG, to a lower extent, but not for IHG.
Figure 7 illustrates the scalability of each technique as a function of N , showing a clear advantage for IHG.
This shows a different trend than for Correctness--the Time for IHG and HG increases similarly with larger N , whereas the increase for RLC is much greater.
These results are in agreement with Javed et al.
However, our results do not show that HG are slower than RLC for Max, probably due to our use of LSV datasets.
We confirm H1 : N=32 is the only value of N that showed clear differences between the three techniques.
IHG have the highest Correctness and the lowest Error, followed by HG, while RLC was much worse.
HG also have significantly better scores than RLC for both Correctness and Error.
This difference had not been highlighted in previous studies and is explained by our use of LSV data--suggesting a need for multi-resolution techniques.
We reject H2 : our results show that at least for task Same, IHG are significantly faster than RLC, but there is no significant difference with HG.
This is due to the fact that, unlike HG, IHG require users to interact with the chart to obtain a useful configuration, which takes additional time.
We partially confirm H3 : the Correctness for HG decreases when N increases and is lower than when using IHG.
We did not find any significant difference between HG and IHG for Max, but IHG have substantially higher Correctness and less Error than HG for Disc.
We were however surprised to see how robust HG are with respect to the number of time series; we did not expect such good results for this technique.
The differences between our study and the previous ones can be attributed to three factors: the use of interaction in IHG, the use of LSV datasets, and the use of the Same task instead of Slope.
For N=8, contrary to previous studies , HG are significantly more efficient than RLC, likely because we used LSV datasets.
Previous studies never tried N=32 when all tasks become very difficult and interaction helps immensely.
As for the choice of tasks, we have not compared IHG with the other techniques for Slope since this task was too hard to perform on LSV datasets, especially for RLC; the benefit of IHG on more uniform datasets remains to be studied.
We are not sure value extraction would be accurate on LSV datasets, even with few bands.
We used LSV datasets which are usually more challenging than the synthetic datasets used in previous studies, and also ecologically more valid.
Our results show that more varied datasets should be used for future experiments to obtain more generalizable results.
Finally, we believe that IHG can decrease the learning curve of HG because they start with the familiar RLC representation and, with continuous interactions using the pan and zoom, show novice users how HG are constructed.
Our results highlight the fact that adding interaction to existing techniques can notably improve their performance as well as their usability.
End-values: Contrary to , the most useful zoom level can be well above 2.
This can be seen in Figure 8, which shows z at the end of each trial.
We interpret the final value as being the most comfortable zoom level for answering the task.
For Max and Disc users' final zoom value is frequently the maximum zoom we allowed--10 bands.
The recommended number of bands was rarely the one chosen for N=8 and N=32.
Conversely, the use of lower zoom values when completing Same can be explained by the strategy the participants adopted.
Most participants modified the value of yb until a specific composition of color and shape appeared in the reference time series.
Then they visually browsed all the time series to search this feature.
The baseline end value  was rarely at the classic value of the baseline .
This result is certainly due to the datasets, but confirms that if users have the possibility of modifying the baseline, they will choose a value which can be in a continuous range and will not limit their choice to a single value.
Rather, it is about the same for both N=8 and N=32--around 50% of the total time.
This confirms that IHG are more useful for large numbers of time series but are distracting for N=2.
Our recommendations for design are valid under some conditions that we detail below.
Participants: Our participants were students and researchers from HCI and Infovis and additional studies are required to evaluate IHG for novice users.
N: We constrained the number of time series to the height of a standard screen without having to scroll and more than 32 time series would require a larger screen.
Datasets: Our results are valid for LSV datasets, for which HG and IHG perform well.
Having shown that IHG are efficient for at least one category of datasets, in future work we plan to investigate a deeper range of datasets.
Tasks: We did not consider value estimation tasks, since it requires users to perform a considerable amount of mental math using HG and IHG.
However, alternative interaction techniques can be designed specifically to support value reading and extraction.
We have presented Interactive Horizon Graphs , an efficient interactive technique for exploring multiple time series which unifies two split-space visualization techniques: Reduced Line Charts  and Horizon Graphs .
We have shown that IHG outperforms RLC and HG for several tasks in the most difficult conditions, thanks to interactive control of its two parameters: the baseline value and the zoom factor.
Both relate to the number of bands traditionally used by HG.
We also found that HG perform better than RLC for our datasets.
We conclude that systems visualizing time series using small multiples should provide our interaction techniques as a default.
Our techniques generally improve performance on visual exploration tasks, except during the learning phase or for very small sets where interactions can be distracting.
Our contributions are:  the unification of RLC and HG by using interactive pan and zoom,  a demonstration that IHG can scale up to 32 time series, and  an evaluation using real LSV datasets rather than synthetic datasets with clear landmarks that help visual search tasks.
In the future we plan to investigate displays with more than 32 time series using larger screens and specialized hardware such as wall-sized displays.
We are also interested in evaluating the benefits of our pan and zoom techniques individually.
This work has shown that our simple interactions can unify two visualization techniques and substantially improve their efficiency.
We hope it will be adopted to limit the proliferation of slightly different visualization techniques currently provided to explore multiple time series.
