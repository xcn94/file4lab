ABSTRACT If Computer-Supported Cooperative Work  systems are to be successful over time, it will be necessary to promote ongoing and continuing activity, not just initial adoption.
In this paper, we consider what technical and social affordances are required to encourage the continued use of a CSCW system.
To explore these issues, we examine a chat-like system, the Zephyr Help Instance, which is used extensively at MIT.
The Help Instance facilitates users asking questions of one another, and is an example of a distributed help and problem-solving system.
We provide an overview of the systemOs use as well as those mechanisms, both technical and social, that facilitate continuing its use over time.
KEYWORDS : computer-supported cooperative work, CSCW, help, computer-mediated communications, CMC, norms, organizational interfaces, social maintenance, electronic social spaces.
INTRODUCTION Worlds are socially constructed and socially maintained.
Their continuing reality... depends on specific social processes, namely those processes that ongoingly reconstruct and maintain the particular worlds in question.
Even once a CSCW system gets past the critical mass problem, users must continue to find it not only useful, but usable.
Only some CSCW systems will provide the social and technical affordances necessary to promote the social maintenance required for continued use.
We examine this issue through the study of a particular system, the Zephyr Help Instance, at MIT.
The Zephyr Help Instance is a chat-like system that allows users to ask questions and other users to answer.
The Zephyr Help Instance serves as an interesting field study site for several reasons: t Zephyr is a successful CSCW system in production use.
At CSCW'94, a call was made to find "real" CSCW systems in wide-scale use.
The Zephyr Help Instance has been in heavy use for 7 years .
In its organizational setting, this computermediated communication  system is not monitored or maintained by any authority; its existence is sustained and organized solely by its users.
Because its use is discretionary, it serves as an excellent opportunity to study how users might organize their electronic social space.
It does this by allowing users to help one another.
Relatively little is known about how people can best assist one another in a computationally distributed environment.
With the Zephyr Help Instance, users help one another in a cooperative environment to continue their work tasks.
There have been many times, some highlighted below, where no single person could answer the question posed, but a group of people could.
Of course, this type of help would be of little value if the system were not an ongoing source of answers.
Zephyr has a simple user interface, making it easier to determine the interaction of system affordances and social maintenance.
Zephyr is a bit of a paradox.
The standard interface is rudimentary, consisting of either a text-based, tty interface or a simple X-based interface.
Yet, the system is used extensively for technical problem-solving, as well as other types of work and social communication.
The simplicity of the user interface allows us to more easily see the social affordances.
It is our contention that the system allows participants to invoke a rich set of social behaviors and adaptations.
Not only do these interactions allow them to problem-solve, it also allows them to maintain and organize their electronic social space.
This usability capability is partially dependent on the user interface, as normally construed, and partially on the organizational or external interface .
Therefore, this system provides an interesting and important study.
Simply put, the Zephyr Help Instance highlights some critical CSCW requirements -requirements that have enabled it to be a success within its environment of use over time.
We begin the paper with a brief examination of the CSCW literature concerning continued use over time.
Following this, we describe Zephyr in general and the Help Instance in particular.
With a firm base in the use of the system, we then analyze why the Zephyr Help Instance has continued to be used.
CSCW SYSTEMS AND ONGOING ACTIVITY Numerous CSCW and information technology studies have examined the adoption of group and organizational systems .
The social impacts of computational systems have also been heavily studied .
Determining the conditions of success and continuation has been much less clear.
One strand of research argues that within many organizations, where use may be mandated, continued use is dependent primarily on either coercion or user satisfaction.
The studies assume that with high user satisfaction, systems will be effectively used.
Many user involvement and participatory design studies fall within this research stream.
Another line of argument assumes that fit to the social situation provides for system success  over the long run.
In her study of Lotus Notes, Orlikowski  claimed that the system assumptions cannot be contrary to the reward schemes and mental maps of the organization or of key groups.
Bowers  came to similar conclusions in his study of a British government office.
Both Orlikowski and Bowers acknowledge the necessity of organizational fit, but also paint a considerably more complex picture that requires a consideration of individualsO goals, shared understandings, and system affordances.
Unfortunately, both studied implementations that were failures at the time of study, swaying their conclusions.
While there are few field-based studies of continuing use of computational systems, to our knowledge, there are no studies examining how CMC-based help systems maintain themselves over time.
Help has been extensively studied: There is a plethora of studies of technical systems , help information design , and face-to-face interactions between users and expert consultants .
Nonetheless, while CMCs have considerable potential for providing access to distributed colleagues for help and problem solving, there is mostly anecdotal evidence for this capability.
Sproull and Kiesler do report on a number of CMC uses, including the norms of use, in .
Similarly, Finholt reported on the use of distribution lists and their archives in .
Outside of these studies, little attention has been paid to how groups using CMCs  organize themselves to maintain their social spaces.
ZEPHYR MESSAGE SYSTEM AT MIT The Zephyr system is a synchronous chat facility supported on MIT/Project Athena workstations .
In Athena, users can use any public-access workstation in any location.
Zephyr provides a synchronous method of both communicating and finding other people in a geographically and computationally distributed environment.
Zephyr messages can be sent to a channel, called an "instance", to which multiple people are subscribed.
Messages can also be sent to individuals or groups of individuals.
Sending a message to an instance is the equivalent of participating in a chat channel; the message is sent to all the people who are subscribing to the instance at that time.
Methods and data The analysis presented here was largely based on a qualitative examination of the publicly-available message log for one semester, Autumn, 1993.
The log consists of 30,052 messages, providing data for 93 days of the 105-day semester.
There are gaps of 9 days and of 4 days because of failures in the logging mechanism.
There are also some days with only partial data, although it is often difficult to determine when Zephyr was inactive, the logging application was broken, or the Athena system was down.
In addition to our analysis of the message log, the first author has been a participant-observer on the system for approximately three years .
We have also interviewed the people that started the Help Instance, and interviewed a small number of heavy and light users.
We conducted 19 interviews in total.
We have used this additional data to corroborate and inform our analysis.
The analysis followed qualitative techniques standardly used to examine small-scale interactions .
We were careful to triangulate among our data.
Users Help Instance users are entirely MIT affiliates, mostly undergraduates, since they are the typical Athena user.
This does provide a different type of user population than in many organizations.
For example, undergraduates have more time and more willingness to engage new technologies.
Additionally, MIT has a distinct technical culture.
On the other hand, MIT undergraduates have a wide diversity of technical competence and interest.
In general, we believe that the Zephyr users are typical of many technical users, but we will discuss the impact of MIT as an organizational culture below.
Usage followed the familiar exponential curve of CMCs .
It is important to note that there were a number of user groups.
Based on our analyses of the message log, it is clear that there was a core group of OregularsO on the Help Instance .
One user had nearly 2400 messages on the Help Instance alone.
There was also an intermediate group of intermittent users , who participated over the extent of the quarter but at a lower level.
Some appeared to stay subscribed to the Help Instance but participated at a lower level; others may have subscribed when they wanted to ask a question or had the time to answer.
There were a large number of users  who sent four or fewer messages.
Our interview data suggest that the tire-kickers  subscribed only when they wanted to ask a question.
Although we have interview and observation evidence that person-to-person exchanges are more common than broadcasting to public instances, we are emphasizing one particular chat channel, the Help Instance, in this paper.
It should be noted that the Help Instance is only one channel on the system.
Still, the Help Instance was enormously popular and useful.
Zephyr in use The following sections show how Zephyr is used.
Before discussing the technical and social mechanisms by which the Help Instance continues over time as a social space, we need to ground that discussion by describing what occurs on the system.
In the following two message exchange, the user named azir asks a question, and clee answers it.
Third, there is some identifying information in addition to the message itself.
The timestamp, originating machine, and user id are provided by the system and guaranteed to be correct.
The signature on the From line, however, is set by the user.
These signatures, or "zsigs", are extremely interesting in their own right.
Unfortunately, the zsigs have been shortened here because of space constraints.
Finally, the messages are simple in format and flexible in structure.
As can be noted from the first From line, there are markup codes for fonts, font styles, and color.
There are no other embellishments to the messages.
As mentioned, the user interface for Zephyr is rudimentary.
Incoming messages pop up on the user's X screen or scroll by in a tty window; outgoing messages are written with a line-oriented editor.
More sophisticated interfaces exist, but are seldom used.
Distributed use of the Help Instance Many exchanges are like the one presented above -- a single question followed by a single answer.
However, one of the advantages of distributed problem solving is that a community of people is involved and many people can attend to each question.
Some of the most interesting interactions on the Help Instance capitalize on its distributed nature; these interactions occur when an answer could not be readily provided, and it takes several people multiple iterations to arrive at a solution.
Below is an exchange where one person adds to the answer of another:
The rapidity and burstiness of interaction are impossible to duplicate in print, but long lulls are punctuated with frantic bursts of activity.
That these messages are only 42 seconds apart is normal.
This pacing gives the system a flavor very different from net news or e-mail.
The pace of query and response is an extremely important feature of the system.
If they are not answered within a few minutes, it is likely that they never will be.
In general, users ignore any older messages; the system is effectively memoryless.
Several additional things about the messages should be noted.
First, the example messages above are unusually short, but the available editors as well as the rapidity of the exchanges tend to keep messages below 10 lines long.
All of the lines arrive together.
Second, the user must keep track of the conversational threads to know how a message fits into potentially many simultaneous exchanges.
In this situation, chatter has asked a question about getting files from another site.
After the time for a conversational turn for chatter has elapsed, phopkins decides to add more information that elaborates on rangerOs answer and provides more help for a noviceOs use of ftp.
Finally, chatter thanks everyone for the help.
The CMC nature of the Help Instance also allows corrections and modifications where necessary.
In the following exchange, rpt corrects the initial response.
Because participation is always discretionary, users can answer, modify answers, or correct mistakes as they wish.
Furthermore, many users can simultaneously participate to solve complex problems.
The pace of the system provides immediate feedback and response.
The system capabilities must be augmented by social mechanisms for the system to actually work.
For example, the synchroneity of Zephyr promotes use when urgency matters, but a human consultant is not available.
However, there must also be enough people on the system to hear the request.
The next section examines the social conditions of use.
WHY ZEPHYR CONTINUES TO WORK Technically, Zephyr and its Help Instance are relatively simple.
What makes the Help Instance interesting is not its technical capabilities, but that it works so successfully.
Its viability is partially dependent on its technical affordances for social use and partially on the social mechanisms in place for maintaining the sociality.
We will discuss those social mechanisms in the following sections.
A shared understanding of the purpose The Help Instance was begun purposefully as a forum for user questions.
It was begun in 1988 by a small group of technically expert undergraduates who were willing to answer questions, and it has maintained the same basic format since.
The Help Instance is now a well-known and well-defined place to ask questions and provide answers within the MIT community.
The regularity of activity reinforces that same activity .
On the Help Instance, asking questions and finding answers reinforces the actorsO providing questions and answers in the same location.
Indeed, the actors would be disconcerted if they came to the Help Instance, and it did not contain questions and answers.
Social policing removes wildly deviant behavior on the Help Instance.
This is made possible by a system affordance.
Because Zephyr has a number of channelsN and even more can be created dynamically by any userNit is easy to take an exchange off the Help Instance and continue to exchange Zephyr messages elsewhere.
In fact, the Help.d Instance provides an established forum for discussing opinions, analyzing previous help responses, or flaming.
Users often tell people to take a dialog to the discussion channel:
In this example, user felly posted a question; kat gave a partial response.
Another user dan gave a different partial response, perhaps in an effort to disambiguate katOs.
Yet another user, huey , gave the final correct answer which disambiguated the previous partial responses.
While kat made the initial effort to help felly, both dan and huey joined the conversation in an attempt to make the answer as precise and helpful as possible.
This example is one kind of collaborative interaction that illustrates the distributed problem-solving that takes place on the Help Instance.
More complex problem-solving also takes place, with extensive iteration and negotiation among users to understand and define the problem.
Finally, many questions get posted that never receive an answer, while others receive responses from many people at once.
While this appears to be a failure of the system, it is expected by users.
Realizing that one might not get an answer is actually very important to the sustained functioning of the system.
Additionally, some questions get a single response referring to a place where a "stock" answer or other information resources can be found.
To summarize, the Zephyr Help Instance provides a mechanism by which users can answer one anotherOs questions.
This process of reinforcement is key to the systemOs success.
However, system affordances make the reinforcements visible and possible.
In the following two sections, we discuss these roles, their norms, and the resulting reinforcements.
We will then be able to discuss the system affordances that enable these social mechanisms.
Reducing burden: the role of asker The information seeker creates a tension within the Help Instance.
The purpose of the Help Instance is to provide answers; however, this will be continued only if any burden on the answerers is minimal.
Since reciprocality  cannot always be met, this need often gets expressed through demands that the asker take the proper actions to seek out the answer through other means:
Like all the norms discussed here, the playing out of this norm is dependent on the situational context and on the players involved .
Flames and opinions do exist; users complain about print quotas, compilers, and their workloads.
Still, the content of the Help Instance is remarkably consistent.
There is a Ocommon-enoughO understanding of the spaceOs purpose.
Roles of asker and answerer The Help Instance, as a sociality, must reinforce the desire of people to ask questions and for people to answer.
While there are many potential questioners, users will not come to the Help Instance unless they can expect their questions to be answered in a manner that is not psychologically or socially problematic.
Likewise, potential answerers must find it socially or psychologically beneficial to expend the time and effort to answer questions.
If the system use is to be stable, the creation of potential benefits and the removal of potential liabilities for both questioners and answerers must be institutionalized through some norms and roles.
In this, we follow Strauss that these roles will not be extensively and consciously elaborated, and they are partially dependent on the specifics of the participants .
For the Help Instance participants, there appear to be two active roles, that of asker and that of answerer.
The role of asker is more elaborated in that there is a recognition that users progress from OfroshO  to more expert users, and this progression should be accounted for in potential answers.
These two roles are heavily intertwined with the attribute of OcluefulnessO, where people range along a continuum of OcluelessO  to OcluefulO or OcluedO .
This attribute of OcluefulnessO is deeply rooted in the MIT culture, but is often found in technical organizations.
It is most often associated with a level of technical expertise and understanding, but it also connotes an internalization of specific institutional and professional norms such as deference to expert authority.
We will remark on those aspects OcluefulnessO that are important to Zephyr use in our discussion below.
Socially, these two roles -- asker and answerer -- reinforce each other.
Indeed, it is important to remember that participants move fluidly between the two.
Knowing to first search the system and external sources of information is part of being OcluefulO, and therefore part of what distinguishes people capable of answering from those who are OcluelessO.
In the following message, bsutton, one of the more prolific providers of information, admonishes one of his colleagues who did not first search the Unix help pages:
This requirement to exhaust other information sources before coming to the Help Instance is not always invoked.
It is not invoked for OregularsO of the system, perhaps because they have been presumed to have searched or because they will reciprocally provide other information.
Even when this norm is invoked, it is most often invoked gently.
The following exchange provides an example.
A freshman, diamond, wants to know how to use uuencode, a program that produces ascii output from binary data.
This program is a fairly common application, and on-line help exists in several forms.
Two users, arno and chang, tell him to consult external sources.
Shortly afterwards, however, chang also gives him the answer.
Users must also learn how to answer appropriately for the social space.
The responses are expected to be nuanced according to the askerOs capabilities and to be polite.
In the following example, taken from a longer exchange, hasan has asked how to change permissions on a subdirectory so that other users can access it.
This is an arcane task in the Athena environment because of its complex access control.
The entire exchange takes 41 minutes  and has 9 participants.
At one point, sirius tries to be helpful and provides some elementary information.
The  indicates that several extraneous messages were omitted between hasan Os message and sirius O s response.
Another part of being OcluefulO is knowing how to phrase a question satisfactorily.
This is something that users have to learn, since Zephyr messages are relatively short.
In an exchange too long to reproduce here, a freshman regarded publicly as a Oclueless froshO has been told to seek out one of the experts for a face-to-face tutorial.
He asks whether it is really necessary, given the lateness of the hour.
The true answer is typically "It is not a particular word, but how the word is related to the concepts under discussion".
But almost always the person on the receiving end of this doesn't have the tolerance to formulate such a formal answer.
Of course, the role of the information seeker requires the complementary role of information provider.
We next turn to this role.
The role of provider Concurrently with the need to reduce potential burden on the answerers, the askers need to know that they can ask their questions without psychological or social cost.
To effectively continue the Help Instance as a sociality, then, the answerers must not belittle or berate the askers.
We should note that the Help Instance is Opolite enough.O There are no doubt users who find the tone dismissive, difficult, or problematic.
Nonetheless, we have noted a usual tone of politeness in the Zephyr exchanges.
Askers often send an extra message of thanks, and the answerers seldom are dismissive.
The visibility of expertise The two roles of asker and answerer get played out in a very publicly visible environment.
ZephyrOs user interface requires messages to be highly public and visible, which adds to the systemOs social reinforcement.
Answering questions correctly is extremely self-reinforcing in the MIT culture.
With the cultureOs anchor in technical expertise , one can gain the admiration of colleagues for showing proficiency.
Said one interviewee, OI answer partially to be helpful, and I answer partially to show off.O OneOs performance on the Help Instance is public -- and visible to anyone subscribing.
If one is capable of correct answers, then the Help Instance is a good forum for garnering the attention most prized by the organizational culture.
For undergraduates, who form the major population of Help Instance users, this visibility and public performance have extra force.
As Davis found with his student nurses , students must articulate and rehearse their future professional roles to be successful within school and later in their careers.
Successful students come to understand this need, and quickly begin to practice what Davis terms Orole simulationsO of Ovalued performancesO.
The public performance of oneOs Help Instance activity also diminishes the number of incorrect answers.
Since OcluefulnessO or technical expertise is enacted , providing incorrect answers detracts from oneOs preferred persona.
Information providers seldom answer when they are uncertain, and if they do  will mark uncertain answers appropriately.
The public performance, combined with the ease of response, also results in recruitment of new members.
The Help Instance OregularsO provide a stable collectivity which a new recruit may gradually join.
Seeing oneOs questions answered makes it more likely that one will ask questions.
Opportunities to correct or elaborate on anotherOs answers provide a forum for slowly increasing oneOs answering without discomfort.
In a situation where no one is compelled to answer, the opportunity to correct or supplement another  is of high motivation.
New members, then, are gradually recruited.
Background attending and lightweightness While the roles and norms are elaborated to reduce psychological cost for users, participation might still be onerous or problematic without the ability to ignore the Help Instance while attending to oneOs work.
As mentioned, for people to ask questions, they must feel that they will find an answer.
In order for the Help Instance to support collaborative problem solving for its users, it must be attended by many users with various areas of expertise.
However, requiring that any given individual provide answers could be onerous, especially if that individual were a volunteer as in the case of the Help Instance.
Furthermore, answering or even attending could interfere with oneOs work performance, thus reducing the likelihood of participation.
Because the interactions are rapid, conversation topics change quickly, allowing users to phase in and out of attending without substantial loss.
The amount of work and time required of users to help other users is dictated only by the helper himor herself.
It appears to be socially permissible to not answer a question, even if questions from other people are being answered.
We saw no evidence that this was problematic.
If someone doesnOt know the answer to question, it is rarely said; the question simply goes unanswered.
These same guidelines enable others to not answer a question even if they might know the answer.
For this reason, answering a question is seen as a voluntary gesture, and users asking questions should not expect help.
In the following exchange, loy is told that he should be patient with not getting a response:
Background attending of a large silent audience also works as a check on the quality of answers given by individuals.
As an earlier example showed, users will correct answers, and the large attendant audience serves as a safety net for people who ask questions.
Accordingly, there may be less fear of asking questions or of misinforming others.
The system capability for this lightweight attending assists in sustaining the Help Instance.
Interestingly, the technical features that afford lightweight attending include the limited display options.
The teletype window option lets the Help Instance messages scroll by.
The scrolling action allows the user to be conversationally current only on the messages that are still displayed on the screen, reducing the burden on the user to immerse him or herself in a longerterm context.
When Zephyr messages are displayed using pop-up windows, each message has its own window.
When someone chooses not to attend, the windows pile up on one another, with the most recent Zephyr message on top.
Users can then attend to only the most recent message which appears on top.
The system is largely memoryless.
This lack of memory and the possibility of background attending provide for lightweight help; users need answer only as they wish.
CONCLUSIONS The Zephyr Help Instance is a place where users can ask questions and get expert, but polite answers.
To continue providing help, the Help Instance requires, like any sociality, a common-enough understanding of the spaceOs purpose, a shared understanding of the key roles , some norms about acceptable and preferred behavior, and a positive adaptation to the organizational culture.
In other words, in order to continue as a social place, there must be a negotiated order of some sort.
The Zephyr Help Instance is a simple example of this, but one that is effective and successful.
These social mechanisms rely on several system features.
But, we have discussed the usefulness found in its capabilities for new instances , the system speed , the public messages , as well as, paradoxically, the lack of memory and the poor display options .
Most importantly, the generality of messaging allows users to negotiate their status and roles on the system.
Perhaps because the system is so simple, the users are able to effectively negotiate their roles and statuses through the system.
Some of the particular social mechanisms described here are specific to MIT or similar organizations.
We would not expect to find OcluelessnessO per se in many other organizations .
Thus, these system affordances do not necessarily enable the social mechanisms.
Instead, we note that the users have made creative use of system affordances to organize and regulate their electronic social space.
Users were able to seize upon the system features for their own social purposes.
The system affordances became resources in the usersO world , allowing the users to create and maintain a socially useful and usable system over time.
Indeed, it is likely that other successful CSCW systems will have similar adaptations.
Acknowledgments This work continues the Answer Garden project.
This began when the first author was at Project Athena, and the authors are indebted to Wendy Mackay, Beth Anderson, and the many users and originators of the Help Instance.
Wayne Lutters provided the usage statistics.
Bob Halperin, Lisa Covi, Christine Halverson, David Redmiles, and Jonathan Grudin provided additional help with this paper.
The MIT Center for Coordination Science provided continued assistance for this study.
This research was supported by grants from NASA  and the UCI Committee on Research.
The second author was supported through an NSF graduate fellowship.
Aaronson, A. and J. M. Carroll.
Intelligent Help in a One-Shot Dialog: A Protocol Study.
Berger, P. L. The Sacred Canopy.
The Work to Make a Network Work: Studying CSCW in Action.
Campagnoni, F. R. and K. Ehrlich.
Information Retrieval Using a Hypertext-Based Help System.
Davis, F. Professional Socialization as Subjective Experience.
Institutions and the Person: Papers Presented to Everett C. Hughes.
Outsiders on the Inside: Sharing Information through a Computer Archive.
Garfinkel, H. Studies in Ethnomethodology.
Grudin, J. and L. Palen.
Groupware Success Factors: A Study of Meeting Scheduling.
Proceedings of European CSCW Conference, 1995: forthcoming.
Hutchins, E. and L. Palen.
Constructing Meaning from Space, Gesture and Talk.
Proceedings of NATO Workshop on Discourse, Tools and Reasoning , 1993.
Kearsley, G. Online Help Systems : Design and Implementation.
Malone, T. W. Designing Organizational Interfaces.
Learning from Notes: Organizational Issues in Groupware Implementation.
Sociology, CSCW, and working with customers.
The Social and Interactional Dimensions of HumanComputer Interaction.
Sproull, L. and S. Kiesler.
