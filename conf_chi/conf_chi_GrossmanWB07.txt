Volumetric displays, which provide a 360 view of imagery illuminated in true 3D space, are a promising platform for interactive 3D applications.
However, presenting text in volumetric displays can be a challenge, as the text may not be oriented towards the user.
This is especially problematic with multiple viewers, as the text could, for example, appear forwards to one user, and backwards to another.
In a first experiment we determined the effects of 3D rotations on text readability.
Based on the results, we developed and evaluated a new technique which optimizes text orientation for multiple viewers.
This technique provided 33% faster group reading times in a collaborative experimental task.
Before developing applications for volumetric displays, it is desirable to first obtain a thorough understanding of some underlying issues associated with this new platform.
In the present work, we concentrate on reading text in volumetric displays.
While it is unlikely that volumetric displays will be used for extensive 2D text editing tasks, it is reasonable to expect that textual labels will be used.
For example, one could imagine a team of architects viewing and labelling a marked-up 3D model of a new building.
With this and other similar scenarios in mind, it is crucial that we be able to display text effectively on volumetric displays.
A difficulty with presenting text in 3D environments is that it may not be oriented towards the viewer, resulting in suboptimal performance .
This problem is intensified when withinworld textual layouts are used, or when multiple users are viewing the 3D imagery from their own unique viewpoints.
In this paper, we first present an experiment aimed at quantifying the readability penalty that is incurred when text rendered in a 3D volumetric display is rotated - by a variety of angles about the pitch and yaw axes - such that it is not oriented facing the user.
Based on the data from this experiment, we develop a technique for more optimally displaying text on volumetric displays.
This technique is validated in a second experiment, where groups of three users simultaneously read text rendered on the volumetric display.
Results show that our new technique decreases reading times for groups of three viewers by an average of 33%, making it a useful text rendering technique that could be adopted by designers of volumetric display applications.
Volumetric displays , which project imagery in true three-dimensional  space, present exciting new opportunities for interacting with 3D data.
Users do not have to wear any supplementary hardware, and the 360o viewing angle allows multiple users to view the displayed imagery from anywhere around the display.
These affordances, and recent empirical research showing benefits over existing 3D display technologies  potentially make volumetric displays well suited for collaborative 3D applications.
However, perhaps because the technology is still fairly new, few interactive applications  have been developed for them.
In particular, the intriguing scenario where multiple users collaboratively interact with the 3D volume  has yet to be explored.
To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee.
To aid our discussion of 3D rotation of text, it is useful to first define some terminology.
Throughout this paper, we will refer to the rotation of text as roll, pitch, or yaw, with rotation angles specified in degrees.
Roll is the rotation of text about the axis perpendicular to the face of the text, with a positive angle representing a counter clockwise rotation .
Pitch is the rotation of text about the axis that runs horizontal across the text's face, with a positive pitch meaning the top of the text is rotated forwards .
Yaw is the rotation of text about the axis that runs vertical across its face, with a positive yaw being a rotation with the left side of the text rotating forward .
Wigdor and Balakrishnan  explore the use of orientation on tabletop systems, and experimentally evaluate how text orientation impacts reading speed on tabletop displays.
Although informative, their work is limited in its application to 2D environments, since they limit their examination to the effects of roll.
In the present work, we are concerned with the effects of text orientation in a shared, true 3D display environment.
As such, an examination of the effect of pitch and yaw on reading speed is essential.
They found that reading speed was consistent with yaw of up to 55o, but that orientations beyond this had a significant effect.
They also found that the effect was asymmetric: renderings where the first letter appeared smaller than the rest of the text tended to be read slightly slower than those where it was larger.
The present work varies from, and builds upon, Larson et al.
The volumetric display, in contrast, will render text in true 3D space, allowing viewers to change their viewpoint of the displayed imagery by moving their heads.
Second, because they were concerned only with scenarios likely to occur on 2D displays, the rotations were limited to 70o.
The present work demonstrates the effect of rotation about the full compass, necessary since users of volumetric displays can stand anywhere around the display.
Third, their study was limited to examining the effect of rotation about the vertical axis , while the present work examines text rotated about both the vertical  and horizontal  axes.
Finally, we will also explore the use of multiple reading aids, and develop a technique for optimizing text orientations for multiple viewers on a volumetric display.
Unfortunately, their designs are limited to a single user.
With a heads-up display metaphor, text is rendered within the view plane, and thus is never pitched or yawed.
In their within-world display metaphor, text is projected onto faces of objects in a 3D scene, thus undergoing pitch, yaw, and roll transformations.
An alternative they discuss but do not implement is displaying text within-world but to dynamically rotate it to always face the user.
Their experiments found the static within-world display to be detrimental to reading, supporting the hypothesis that the 3D rotation of text will increase reading time.
Precisely quantifying the effects of these rotations is the goal of our first experiment.
Although a number of systems have explored both single and multi-user interaction with shared 3D environments , very little work has been done to explore interaction issues unique to volumetric displays.
Although they did not explore text display per se, they did discuss strategies for displaying widgets for multiple viewpoints, such as rotating them towards the user, or displaying multiple copies for various viewpoints.
A recent research prototype showed users directly interacting with volumetric displays using hand and finger gestures on and above the display surface .
While this work demonstrates a viable single user interaction scenario for volumetric displays, there has, to date, not been any exploration of the issues surrounding collaborative usage scenarios with volumetric displays.
When text is rendered on a 2D display, roll is typically the only orientation variable of interest.
Although there are some cases where a single user application may elect to render text rolled away from a traditional 0o orientation , it is primarily within the domain of co-located collaborative systems that orientation of on-screen objects is especially important.
When multiple users share a display, as in the present work, the orientation of information is slightly different for each user, as no two users are seated at precisely the same viewing angle to the display.
In volumetric display applications, when text is displayed using a within-world layout, or when multiple viewers are present, text may not be oriented towards a user.
Under most usage scenarios, it is unreasonable to expect a user to walk around the display just to read a textual label.
While one alternative is to present textual labels using a heads-up display metaphor, this would require the designer to clutter up the display space with multiple labels for each individual user.
Thus, it is valuable to consider the scenario where a user is required to read text under a 3D rotation.
An impediment to recognizing words under such a condition is the introduction of visual ambiguities.
As we see in Figure 3a, rotational transformations of the text result in ambiguity to not only the word, but also the individual characters.
While surrounding asymmetric letters could disambiguate rotated text, our preliminary observations showed that the ambiguities can still cause confusion and frustration for the reader.
To address this, we experimented with the following techniques to allow the reader to correctly interpret the text.
This experiment will be similar in design to the study performed by Wigdor and Balakrishnan , which tested the effect of text orientation on tabletop displays.
However, since the text on such displays is inherently 2D, only the effect of roll was examined.
In this experiment, we will evaluate the effect of pitch and yaw on reading times.
We can easily predict some results, such as higher reading times when text is upside down or backwards, as well as a significant spike in the reading times at orientations in which the text is parallel to the viewer's line of sight.
Less predictable, however, is at what point, how quickly, and how significantly reading times will increase to these maximal peaks.
As for our two disambiguation techniques, we expect that both techniques will decrease reading times in some cases, but we wish to determine under which orientations these techniques are most beneficial, and what the relative efficacy of the two techniques are.
While the underline disambiguation technique indicates the rotation of the entire word, we also wished to seek out a strategy which could disambiguate individual characters.
To do so, we required a typeface in which characters were not ambiguous under rotations.
Upper case letters were chosen as a suitable candidate , for which the only possibly ambiguity would be `M' and `W'.
While displaying text in uppercase can reduce reading speeds , we expect the effect to be minimal when reading short textual labels.
Furthermore, this technique for reducing character ambiguities is simple and easily implemented.
If successful, more subtle approaches to reducing character ambiguities could be developed, such as custom fonts.
We used a 3D volumetric display developed by Actuality Systems , which generates a 10" spherical 3D volumetric image by sweeping a semitransparent 2D image plane around the Z  axis.
A total of 198 2D images  of 768x768 pixels each are displayed uniformly around the Z-axis.
The display's refresh rate is 24Hz.
Words were rendered using the default OpenGL Utility Toolkit mono-spaced font.
A standard QWERTY keyboard, which was placed directly in front of the participant, was used for text entry.
To maximize the image quality of the volumetric display, the room lights were turned off, and a small light was used to illuminate the keyboard.
Participants sat in a fixed location chair whose height was adjusted so that all participants viewed the imagery from the same viewpoint regardless of the individual's height.
We used a Vicon motion tracking system  to track the positions of the viewers' heads.
Three passive reflective markers were placed on a hat which participants wore.
Six Vicon cameras tracked the 3D location of these markers, and the data was streamed into our experiment application at 120Hz.
The application ran on a Pentium 4 PC running at 2 GHz, with imperceptible latency.
Figure 4 illustrates the apparatus.
To maximize the general applicability of our results, we abstracted the primary task of interest, reading and comprehending text in a volumetric display, and conducted a basic speed-of-reading test.
Participants were presented with a series of common five-letter words which they were asked to read and type into the system.
This design was similar to that described in Wigdor and Balakrishnan .
To begin a trial, participants pressed "enter", and the word was presented.
We wished to measure the time participants took to read the word before beginning to type.
They were, instructed to press "enter" as soon as they recognised the word, which would then disappear, ensuring that they were no longer reading the text.
A text box was then displayed, into which they would type the word and then press "enter" to finish the trial.
If they typed an incorrect word, a tone would sound and the trial word would appear again, with the trial counted as an error.
If, after beginning to enter their response, the participant wished to review the word, they could press "escape" to return to viewing the word - all such trials were also counted as errors.
Lastly, if the participant failed to enter the correct word after 30 seconds, the trial would end and be counted as an error.
Because volumetric displays are still in their infancy, their quality is relatively low in comparison to 2D displays.
Grossman and Balakrishnan  provide a detailed description of how certain locations are difficult to see.
To ensure this did not affect reading times, we chose a stable and visible location to display the word throughout the experiment.
The word was rotated with either a pitch or a yaw.
To keep the size of the experiment manageable, we did not vary both pitch and yaw in the same condition.
At the start of the experiment, a short calibration program was used to control participants' viewpoints.
This was done by adjusting the chair height, and using the motion tracking system to ensure that viewpoints were aligned with the predefined location of the text in the volumetric display.
Furthermore, to start any trial, the participant's viewpoint first had to be horizontally and vertically aligned with the center of the text location, with a 1 error allowance.
Once the trial began, users were free to move their heads and stand up, as long as their feet did not move.
The experiment lasted about 90 minutes, and was divided into 4 sessions.
Each session consisted of all trials for 1 of the 4 values of DT.
Each session was divided into 3 blocks, within which the 48 text orientations appeared 2 times each in random order.
This resulted in 1152 trials per participant.
The five-letter words were chosen from among the most frequent five-letter words appearing in the British National Corpus, with the relative frequency of the set of words chosen for each condition balanced within each participant.
To familiarize participants with the task and disambiguation techniques, four warm-up trials were given.
Presentation orders of the disambiguation techniques were counterbalanced using a 4x4 balanced Latin square design.
Participants were randomly divided into one of four groups, with each group being assigned one of the four orderings.
Reading time is the primary dependent measure, defined as the time between the word appearing and the user pressing "enter" before beginning typing.
Recall that once users did this, the text disappeared, ensuring that users had finished reading at this point.
In our analysis of reading time, we discarded trials in which errors occurred , and removed outliers that were more than 3 standard deviations from the group mean .
Text with pitch rotations were more difficult to read, with reading times of 1.96s for RT = pitch, and 1.23s for RT = yaw.
A repeated measures within-participant design was used.
The values for DT were none, underline, uppercase, and both .
The rotation type was either pitch or yaw.
The angle of either the pitch or yaw, , took on the 24 values between -180 to 165 in increments of 15, resulting in 48 text orientations.
Post hoc multiple means comparison tests showed that none, underline, and uppercase were all significantly different , while uppercase and both were not.
The same significant effects were seen for the conditions where RT = pitch, however for the conditions where RT = yaw, there was no significant difference between none and underline, or between both and uppercase .
In other words, the effect of the underline disambiguation technique was only significant when the text was pitched, and had no significant effect when the words were already being presented in uppercase.
Figure 6 shows the reading times for RT = pitch.
Although reading times seem to increase at pitches of 60 and -60, post hoc analysis shows that for all values of DT, none of the reading times within the  interval are significantly different , showing that pitching the text within this interval has negligible effects.
Once outside this interval, the data clearly spikes when the text is close to being parallel with the user's line of sight .
Past this point, reading times drop back down, but since the text remains upside down, reading times are slower than they were within the  interval.
However, the condition DT = uppercase reduced reading times for all   90 and all   -105.
DT = both produced reading times which were lower than DT = uppercase outside the interval , but this difference was not significant.
Interestingly, this graph is not completely symmetrical.
Notably, with DT = none, pitches of 90 and 105 caused higher reading times than pitches of -90 and -105.
This is likely because it is easier for users to raise than to lower their viewpoint when seated.
With-90 and -105 pitches, raising the viewpoint results in seeing the text right-side-up and forwards, while for pitches of 90 and 105, raising the viewpoint results in backwards and upside-down text.
The reading times for RT = yaw are shown in Figure 7.
Post hoc analysis shows that no data points are significantly different when  is within the interval of .
Note that this interval is slightly larger than the interval for which pitch was not significant.
As with the yaw rotations, the reading times spike for  = -90 and 90, where the text is parallel to the user's line of sight, and physical movement is required in order to see the text at all.
Past this point, the data drops back down but remains slower than within the  interval as the text appears backwards.
As for the disambiguation techniques, underline only significantly reduced times at  = 135.
Uppercase reduced times significantly for all values of  outside the interval , except for -150.
As with the pitch data, DT = both provided no further advantage over DT = uppercase.
Unlike the pitch data, which showed some positive-negative asymmetry in the significant differences, the yaw data is completely symmetric with respect to statistical significance, showing that a yaw rotation has equivalent effects in either direction.
We do not claim that this result contradicts earlier results  since our participants could move their heads to improve their viewpoints.
We believe that, unlike with pitch, the effect was symmetrical because users could just as easily move their heads left as right.
Our results from Experiment 1 show that even with an unambiguous font, there are still readability problems for text which is rotated in 3D space.
Although within-world layouts - where text is rendered on faces of objects in the 3D space - have desirable properties, these results tell us that designers should not use a naive within-world layout for displaying text within the volumetric display.
We now discuss an orientation optimization strategy, which maintains the beneficial properties of within-world layouts, while optimizing reading times for multiple viewers.
The goal for the technique is to present text at the best possible orientation for all users, while still allowing some rotation for within-world display of information.
The algorithm searches through possible text orientations, and for each one, estimates reading times based on the orientation of the text relative to each user's viewpoint.
The algorithm then chooses the text orientation which minimizes the average estimated reading times across all viewers.
It is important to note that this technique does not require our estimated reading times to be precise.
Our algorithm only requires the estimates to be positively correlated to actual reading times.
A necessary tool for this technique is a function which, given the position of a user's eye and the relative orientation of text, would provide an estimate of the time required for that user to read the text.
The return values for the Pitch and Yaw functions are calculated by interpolating over the data points obtained in Experiment 1 .
Return values for the Roll function are calculated by interpolating over the data points reported in Wigdor and Balakrishnan .
If the text's orientation relative to that user's line of sight contained only one of these three rotation types, we could simply use the corresponding function and we would be done.
However, the reading time estimation is more complex, because we now need to consider the case where multiple such rotations exist.
For example, if text had 180 rotations of both pitch and roll, the text would not be upside down.
It would be incorrect to use the data we obtained in Experiment 1 for pitch = 180, because those reading times were based on upside down text.
Our method is to define viewer axes , and text axes .
The viewer axes are defined as the vector through which the user is looking , the up vector perpendicular to this , and the cross product of these two vectors .
The text axes are defined as the vector in which the text runs , the normal vector of the plane on which the text is placed , and the cross product of these two vectors  .
If the text is perfectly oriented to the user, then these three axes would all be the same, so we consider the divergence between these three pairs of axes.
The angle  is due to a combination of only yaw and roll rotations, as a pitch rotation would not affect VX or TX.
To estimate the amount of  which is due to yaw rotation we take the length of the projection of TX onto VY  and for Roll we take the length of the projection of TX onto VZ .
We then take the following weighted average of our reading time functions, Yaw and Roll:
However, even with the maximum divergence defined, we still allow our algorithm to flip the text by 180 along any axis, since the text will continue to be rendered on the same plane, retaining its essential "within world" quality.
The running time of this brute force algorithm is thus based on the granularity of the search and the maximum allowed divergence.
With sufficiently coarse granularity of the search, this approach runs in real time.
To evaluate the effectiveness of our orientation optimization technique, we conducted a second experiment.
Along with testing this new technique, we will make two adjustments to the experimental procedure.
First, since we are testing a technique to aid reading times when multiple viewers are present, we will perform the study with groups of three participants, all reading the same word at the same time.
Previous work  has claimed that a volumetric display's 360 viewing angle provide the potential for collaborative use.
This study provides an opportunity to validate this claim, with the implementation of an actual collaborative usage scenario.
This differs from our own Experiment 1, along with the previous work evaluating text orientations on tabletop displays , which were both conducted with a single participant at a time.
Second, we will run the experiment in a more realistic usage scenario, by projecting the words onto faces of a cube.
This is an abstraction of a task in which multiple users are viewing a 3D model which is labelled with textual information, using a within-world layout.
In such a scenario, the textual labels will rotate in 3D space with the model.
As we know from Experiment 1, this will cause reading difficulties at some orientations, justifying the need for our orientation optimization technique.
We then repeat this calculation for the TY - VY divergence and TZ - VZ divergence.
Our final estimation is the average of these three calculated reading times.
By taking this average, the reading times for some orientations may be underestimated.
Despite this, we expect the estimates to correlate with actual reading times, and therefore serve its purpose in the algorithm.
The same apparatus from Experiment 1 was used.
The three users were seated at 120 from each other around the display.
Three keyboards were used, one in front of each user, which allowed for text input by all users concurrently.
A small flashlight was positioned above each of the keyboards to illuminate them.
Figure 9 illustrates the setup.
We determine the optimal orientation by searching through all combinations of pitch, yaw, and roll of the text to find the minimum estimated average reading time across all viewers.
To allow for consideration of within-world layouts, the algorithm takes an additional parameter, which is the maximum allowed divergence in degrees from the original orientation in any of these axes of rotation.
The procedure was similar to that of Experiment 1, with the primary difference being that three participants completed the experiment simultaneously.
To begin a trial each user pressed "enter".
Again, we measured the amount of time it took users to read a five-letter English word before typing it into the system.
Once the user had read the word, they would press "enter" again.
Unlike in the first experiment, the word did not disappear at this point, since the other two participants may have still been reading it.
Instead, a dense grid was displayed between the participant and the word to indicate that they should no longer read the text.
Because it is impossible to render opaque imagery on the current generation of volumetric displays, it was still possible for the participant to "cheat" and read the text.
However, participants were under observation, ensuring that they would not do so.
When participants pressed "enter", a text box appeared for them to enter the word.
To ensure that participants were not reading from one another's text boxes, answers were "password hidden", with characters rendered as `*'.
Once finished typing, they pressed "enter" again to submit their response.
If the input was incorrect, an audio cue would prompt the participant to try again.
The trial ended when all three participants submitted the correct response.
If a participant had not finished the trial after 20 seconds, the trial would end, being counted as an error for that participant.
Users were seated in three height adjustable chairs directly in front of the volumetric display.
The height of each participant's viewpoint was set to be equal with the center of the volumetric display.
Once a trial began, users were allowed the same head movements as in Experiment 1.
A wireframe cube was rendered in the center of the volumetric display.
The cube took on various pitch and yaw rotations, and for each trial, one face of the cube was labelled with text.
For each cube orientation, there were six trials, one for each face of the cube.
Words were displayed in uppercase, as this was the most effective technique in Experiment 1.
The underline cue was not used as it provided no effect when words were already uppercase.
The layout of the text was either a naive within-world projection onto the cube face, or optimized using our orientation optimization algorithm.
Although we were capturing the head positions of each user in real time, the three viewpoints used in the algorithm were constant throughout the experiment, based on the location of their chairs, with the height set to the centre of the volumetric display.
This allowed us to pre-compute the optimal orientation to a high degree of precision  using our orientation optimization technique.
A maximum divergence of 15 was used for the algorithm, which would give it enough freedom to avoid the major spikes seen in Figure 6 Figure 7.
The algorithm used the data from Experiment 1 for DT = uppercase, since all words were displayed in uppercase for this experiment.
Unlike Experiment 1, it was impossible to design an acceptable experiment in which all three participants were always viewing the text in an ideal area of the volumetric display.
As such, we expected to see higher than expected reading times for some trials.
While this would have been inappropriate for our first experiment, it was acceptable for the purposes of this experiment, since the goal was no longer to determine average reading times for various orientations, but to test our orientation optimization technique in a real usage scenario.
A repeated measures within-participant design was used.
The naive layout of the text on each face was determined in a manner such that we obtained a good range of text orientations throughout the experiment.
Figure 10 shows the naive text layout and the four possible orientations which the cube took on.
The labels in the optimized condition diverged from the illustrated naive layout by a maximum of 15, as determined by our optimization algorithm.
The USER variable indicates which user the cube orientation was relative to.
When USER = 1, the cube orientations seen in Figure 10 were seen by viewer 1.
By dint of their seating positions, for USER = 2, the cube yaw was increased by 120, and when USER = 3, the cube yaw was increased by 240.
This design ensured that by the end of the experiment, all users had seen exactly the same set of cube and text orientations.
This design resulted in 12 possible cube orientations .
The experiment lasted approximately 70 minutes, and was divided into two sessions.
Each session consisted of all trials for one of the two values of LAYOUT.
In each session the 12 possible cube orientations appeared 4 times in random order.
This design resulted in 576 trials per subject.
The same five-letter words which were used in Experiment 1 were used in this experiment, with each group receiving the words in a different order.
As in the first experiment, the words were distributed between the 2 sessions such that the average frequency of the words within each session had a similar average frequency in the British National Corpus.
To familiarize participants with the task, six warm-up trials were given before the session began.
Ordering of the layouts was counterbalanced across the four groups.
Each of these orientations were repeated for the 3 values of USER.
As with individual reading times, USER did not significantly effect average reading times, as this only signified which user the orientation was relative to.
Figure 11 shows the average reading times for each of the 24 possible orientations.
The reading times were faster for the optimized layout, in all of the 24 conditions, and significantly so in 10 of the conditions .
We again define reading time as the time to press "enter" before entering the text.
Because text did not disappear in this experiment, we removed outliers of typing time .
We also discarded trials in which errors occurred , and reading time outliers .
There was no effect for USER since this variable only indicated to which user the cube orientation was relative, so for each value of USER the exact same text orientations were seen.
There was no significant effect for YAW since this variable only defined the cube orientation relative to the target user, and not the orientation of the text.
The most important effect seen here is that the layout had a strong and significant effect.
With the naive layout, reading times averaged 2.13s, and with the optimized layout, reading times averaged 1.42s, a 33% improvement.
If we combine the variables PITCH, YAW, FACE, and USER, we get 72 unique text orientations which each participant saw throughout the experiment.
When we look at each of these 72 orientations, in 55 of them the average reading time was lower with the optimized layout.
Of the remaining 17, only 3 orientations had significantly slower reading times .
Before concluding that our algorithm failed in these 3 of 72 conditions, we must recall how it worked.
The algorithm was designed to optimize the average reading time for all viewers for any given trial.
So in some cases, the algorithm may increase an individual's reading time, in order to reduce the other two viewers' reading times, to obtain the best average reading time for the group.
This was indeed the case for the orientations where the optimized layout was significantly slower.
This result shows that our optimization algorithm performed as intended, reducing average reading times over the entire group.
Figure 11 also includes the estimated average reading times which our algorithm used to optimize the text orientation.
By definition, the estimated times with the optimized layout are always lower than that of the naive layout.
As expected, the algorithm underestimated the reading times, however, there is still a visible correlation between the estimated and observed times.
As in Experiment 1, we measured the participant's head movement while they were reading text, defined as the length of the path which the head took during the reading phase of the trial.
This is an important result, as the optimization algorithm reduced the need for head movements.
The head movements seen in this experiment were also higher than what was observed in Experiment 1.
This explains the higher reading times of similar orientations between the experiments, as the poor quality forced users to move their head to obtain a better viewpoint.
Similarly, in a virtual reality environment, it is much more difficult to navigate to a suitable viewing position .
It was interesting to observe in Experiment 2 that the head movements of the users did not interfere with each other.
The 120 spacing was enough for the users to move freely as required.
However, if there were more users, or the users were closer together, it would again become critical for required head movements to be limited, as the users' head movements could physically interfere with one another.
Another contribution of our work was the first implementation of collaborative interaction on a volumetric display.
Even though the interface and task were very simple, there were some interesting issues we encountered which will be relevant to future groupware applications developed for volumetric displays.
Firstly, because all viewers see the same volume, it is impossible to present data to one user without other users seeing it.
This raises privacy issues, especially if one user is viewing sensitive information.
One solution which we implemented was to password encode users' answers in the experiment.
We also enhanced the system with audio feedback, since visual feedback could be distracting for users for which the feedback did not apply.
Although all users heard the same set of sounds, users knew when the sounds were directed to them since it was synchronized with their keystrokes .
Similar observations and solutions have been seen in the tabletop domain .
We have presented two experiments exploring the effects of 3D rotations on text readability in true 3D volumetric displays.
Our motivation was a scenario in which the user is required to read text that may not be oriented towards them.
This can occur either with the presence of multiple users, or with a desire to maintain a within-world layout.
Additionally, we discussed potential issues which could increase reading times, and suggested two disambiguation techniques to aid reading, both of which were shown to be beneficial in an initial experiment.
Based on the results of that experiment, we developed a new technique to optimize text orientation for multiple viewers.
In Experiment 2, we validated this new technique within a collaborative experimental task.
Our findings are consistent with, and extend, the literature.
First, we found that text not oriented towards the user can increase reading times .
Similar to the findings in Larson et al.
In contrast to this previous work, we found that in an environment allowing head movement, the effect of yaw on reading speed was symmetrical.
We believe that this is because, with head movement, users reduce the distortion of the text, and so the effect of first-letter dominance is mitigated.
One of the main contributions of this paper is the orientation optimization algorithm which we proposed and validated.
The algorithm optimizes orientations for any number of viewers, regardless of their relative viewpoints.
We conducted an experiment and found that it reduced reading times for 3 viewers by 33%, despite a number of simplifications.
Firstly, although the effects of pitch, yaw and roll are likely dependent, we used only independent data for the effects of these rotations in the design of our algorithm.
Even so, our algorithm was successful, and produced estimated reading times which had a positive correlation to actual reading times.
Another simplification was that the algorithm estimated the viewpoints of the users based on their seating positions.
Although using real time head position data may have further improved results, we have shown that our algorithm can be implemented without the need for head tracking technology.
Another advantage of the optimization algorithm was that it significantly reduced participants' head movements.
This could be especially important for scenarios in which head movements are inadequate for reducing the orientation of text.
In this paper, we have gained an understanding of how text orientation affects readability in both single and multiple user volumetric display applications.
We have also developed an effective technique for optimizing text orientation to improve reading times for multiple users.
However, there are still a number of directions that can be pursued to extend our work.
Firstly, because our implementation of the search phase of our algorithm used a brute-force technique, applications requiring real-time performance would be forced to limit the granularity of the search, reducing the precision of the results.
In our experiment, the angles of the text were precomputed, but an actual implementation would likely require a more efficient real-time algorithm.
It is important to note, though, that even if such an algorithm were employed, our experience suggests that the orientation of text should not be updated every time a user's head position changes, but rather only after large viewpoint changes, in order to limit text movement in the display.
As such, the value of a real-time implementation may be limited.
Second, there are some interesting extensions to our orientation optimization which could be implemented.
In our implementation, the algorithm optimized the average reading time of all viewers.
In some cases, this caused individual reading times to actually increase.
Another idea is to optimize a weighted average of the individual reading times.
For example, if text were specifically important for two users, the algorithm could assign extra weight to the reading times for those two users.
Furthermore, the divergence from the original plane could be weighted in the average, with more divergence increasing the average.
In our implementation, a set maximum divergence was defined.
If the divergence were incorporated into a weighted average, then the divergence could exceed such a maximum value in situations where this would drastically reduce reading times.
Our work compliments the work of Bell et al.
An obvious extension would be to combine both algorithms, such that the position and orientation of text were optimized for multiple viewers.
This would be especially helpful for volumetric displays, since the results of Experiment 2 suggest that the location of text affects the amount of head movement required to read it clearly.
Another direction is to look at alternative methods for presenting text to multiple viewers.
For example, multiple copies of text could be provided when appropriate, so each user has a heads-up view, similar to that in Feiner et al.
Another idea is to curve the text in 3D space.
Finally, although uppercase letters worked well, and did not reduce reading speeds when the text was not rotated, new fonts could be developed that allow for both upper and lowercase letters while still reducing character ambiguities and improving reading times when viewed from any orientation.
In summary, we have provided important data on the effects of orientation on text readability for the collaborative use of 3D volumetric displays.
Based on this data, we have presented a technique to optimize text orientations, which was shown to significantly reduce reading times.
These contributions will be valuable for future designers of collaborative applications for volumetric displays.
