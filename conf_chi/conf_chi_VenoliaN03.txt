Typical chat clients, typical email clients in normal operation, the interface proposed by Rohall et al.
Netscan  offers an interesting design point, being chronological by day but mixed within a day.
Lotus Notes in its "Thread View", ConverSpace , Threaded Chat  and typical Usenet newsgroup browsers use a schematic tree view where replies to a message are sorted chronologically; such a tree view can answer some of the above questions some of the time but cannot be relied upon to answer all of the questions all of the time.
Conversation Map  does not represent the chronological sequence of messages.
The mismatch between the user interfaces for email clients and user needs for handling email has been documented numerous times .
This disparity has stimulated proposals for a plethora of client user interface design changes.
One recurrent theme is that messages should be viewed as elements of a conversation rather than as independent elements .
A conversation, also known as a thread, is typically defined as the tree of messages that grows with the reply operation.
One of plausible benefits of viewing messages as conversations is that the related messages will provide better local context, which can help one better understand the meaning of the message.
Although this context is preserved to a limited extent by current email programs when they automatically include the text of the original message when replying, this method breaks down when a message receives multiple replies, creating a complex, branching reply tree.
Subsequent replies provide additional context but these are not captured by quoting.
A visualization supporting the sequential model can answer certain questions about a conversation: A.
Which of these two messages was sent first?
Which messages were sent before this one?
C. Which messages were sent after this one?
An interface supports the sequential model to the extent that it can answer these questions at a glance.
Note that displaying the message "sent date" on a non-chronological list of messages does not satisfy the "at a glance" requirement as reading and comparing dates is substantial cognitive act.
An interface supports the tree model to the extent that it can answer these questions at a glance.
Lotus Notes in its "Thread View," ConverSpace and Threaded Chat show the messages in a tree view, and thus strongly support the tree model.
Netscan, Conversation Map, the work of Rohall et al., the Loom thread view and typical Usenet newsgroup browsers each shows a schematic tree that reflects the selection of a single message to be viewed, but cannot answer questions E or G at a glance; all these interfaces would typically be used with quoting, so question E would be answered by the message content, leaving G unanswered.
Typical email clients rely only on quoting, thus they answer only questions D and E and support the tree model weakly.
Coterie and typical chat and IM clients do not support the tree model at all.
Indentation alone didn't convey the message-to-reply relationship, so we knew that some mechanism needed to represent the branching of the conversation tree.
The visualization that resulted from our design process is shown in Figure 2, callout .
The messages are in chronological order, root at the top and newest at the bottom.
The root message is at the leftmost indentation level.
Its first reply  is at the same indentation level, connected with a heavy vertical line.
The first  reply to the second message  is again at the outer-most indentation level, connected with a vertical line.
The second reply to the root message is indented.
A heavy horizontal line along the bottom of the root message curves into a heavy vertical line down to its second reply.
This line passes beneath the intervening message.
Heavy circles provide visual connections between the heavy lines and the message bodies.
We believed that this visualization effectively answered all seven questions at a glance, meaning that it supported both the sequential and tree models.
This was verified during a usability study, described later.
Two things had to be done to make the message data presentable in the visualization.
First, quoting actually worked against the visualization by introducing redundant content and inflating message length.
Our implementation strips quoting when it is judged to not have changed.
Second, messages sometimes appear to be younger than their children.
This can happen when system clocks are out of sync.
Our implementation repairs any out-of-order times.
In preparation for designing a mixed-model conversation visualization that fully supports both the sequential and tree models, we gathered our design requirements.
To begin with, it had to answer all seven questions above at a glance.
The "at a glance" requirement ruled out dependence on interaction, e.g.
That same requirement also ruled out a separate message viewing pane: the message content had to be present in the visualization.
From examining many conversation trees, we were aware that they tend to be narrow rather than bushy - that is to say that a message is much more likely to get one reply than two or more - so chains of replies-to-replies should be visualized cleanly.
We chose to list the messages in a chronological, vertical list for three reasons.
First, a chronological list of messages supports the sequential model trivially.
Second, the messages could be reflowed to fit the available width.
Third, scrolling  would be in one dimension only.
We chose to list the messages from old  to new  so it could be read like a script.
But what about supporting the tree model of conversations?
The root is always the first chronologically, so Question D is answered, leaving Questions E, F and G open.
Specifically we had to design a visualization that showed the reply relationships.
We suspected that indenting would be a crucial part of the layout.
Knowing the frequency of reply-to-reply chains, we knew that the first reply to a message would have to be at the same indentation level.
It wasn't too difficult to surmise from there that the successive children would be indented successively.
The mixed-model conversation visualization is an important part of a user interface to support a conversationoriented email client user interface .
Additional parts of the client UI  are described in this section.
We designed the visualization to fit within a user-controlled window width, and to scroll vertically as needed.
There are several established ways of helping users keep context while scrolling .
We chose to use an "overview+detail" approach, using the schematic as an overview  in Figure 2 to the detailed conversation visualization .
The schematic is laid out the same as the detailed visualization, but without the message bodies.
A gray band indicates the area of the overview that's currently visible in the detailed view .
It may be that the schematic is useful even when scrolling is not necessary.
As mentioned earlier, their visualization doesn't answer Questions E and G at a glance.
Another way that large conversations are accommodated is by automatically reducing the scale of the schematic and the indent of the detailed conversation visualization.
Because there are numerous menu commands that pertain to a particular message, we needed to introduce the ability to select messages in the conversation.
This gave us the opportunity to identify the messages that relate to the selected message.
The selected message is highlighted in blue, the selected message's parent and children are highlighted in a lighter blue and the ancestors and descendents are highlighted more lightly still.
The lines connecting the message to its children and through its ancestors to the root are made heavier and blue, both in the schematic  and the detailed visualization .
Selection can be then used to help focus on particular branches of a conversation tree.
We normally show a minimal message header  - little more than the sender's name and an "unread" flag.
The header can be expanded to show all message fields.
An area of the screen  is devoted to summary information about the conversation.
The first three fields show the name of the person who sent the first message in the conversation , other people who have sent messages in the conversation  and people and groups who have received but not sent messages .
Other fields show the labels that have been applied to the conversation, the date range spanned by the conversation and the subject of the first message.
The three panes described above, ,  and , provide different views of a particular conversation.
The conversation that is being viewed is the selected member of the conversation list .
The entries in the conversation list show a thumbnail-sized schematic, the name of the conversation originator, the subject of the first message in the conversation, and an indication of each unread message in the conversation.
We recruited 6 participants for our study, 3 females and 3 males.
All participants had intermediate to advanced experience with Microsoft Outlook 2000 or XP, and had some experience working with threaded email conversations, e.g.
Participants were also all considered to be knowledge workers from a variety of occupations, and had normal or corrected eyesight.
Only one participant was not familiar with the concept of thread trees prior to the study.
During the study, participants used the conversation visualization within an email client designed to support conversations .
The client was populated with a set of email conversations generated specifically for the user study.
Participants did not have the ability to reply to or send emails within client.
Participants were first given the opportunity to explore the email client and build an initial conceptual model.
This usually lasted between 5 and 10 minutes.
Once the participant felt they had enough initial exploration, they performed a series of seven on-screen tasks with the client.
Each task required the participant to find a particular conversation or email within a conversation and then answer questions about the found item.
Questions included general usability questions as well as specific instances of Questions A-G.
Following these tasks, participants completed a post-test questionnaire where they rated how easy they felt it was to answer each of the conversation model questions using the visualization.
Next, participants received a short training session where the conversation visualization was explained, and in most cases, this turned out to merely be validation of the participant's conceptual model.
This segment normally lasted only a few minutes.
Last, participants were shown two paper screenshots of the conversation visualization, each containing a different email thread.
The message contents were replaced with nonsense text and selection highlighting was eliminated, so participants relied only the visualization itself.
For each screenshot, participants were asked specific instances of Questions A-G twice, with the exception of D, which was only asked once.
We measured our design's ability to represent the sequential model by three means: observational, subjective and objective.
By observing each participant and the answers given during each task, it was evident that by the third task all participants understood that emails were sorted chronologically within the visualization and thus they had a solid grasp on the sequential model.
When asked in the post-test questionnaire to rate from 1  to 5  how easy it was to answer Questions A, B and C, the median response was 4.5 , indicating that subjects' subjective perception was that the sequence was easily read.
When reading the screenshots, the combined participant accuracy for Questions A, B and C was 90% .
The same three measures were used to assess the effectiveness of the visualization's representation of the reply tree.
We observed that by the seventh task, four of the six participants were able to understand the visual cues used to depict reply relationships between messages.
The fifth participant was able to understand the tree model during the training session.
The sixth participant still did not have a solid grasp of the tree model at the completion of the study; this participant is the one who had not been familiar with the concept of thread trees prior to the study.
When asked in the post-test questionnaire to rate how easy it was to answer Questions D-G on the same scale as before, the median response was 5.0 , indicating that subjects' subjective perception was that the reply tree was very easily read.
When reading the screenshots, the cumulative accuracy for these questions was 96% .
All participants except the one not previously familiar with thread trees were able to respond to the questions about the screenshots within one to two seconds, thus supporting the "at a glance" claim for the tree model.
Taken together, the three complementary measures of the mixed-model visualization's effectiveness show that participants found it easy to answer questions about both conversation models.
Making conversations prominent in the user interface is not a panacea for all the ills of today's email clients.
Much work remains to be done to make an email client that truly addresses user needs.
We have discussed two models of conversation that are embodied to varying extents in a variety of systems that support turn-based, tree-structured conversation.
We have proposed a visualization that strongly supports both models, and have presented evidence that supports this assertion.
We presented a user interface that puts the visualization in context as a part of an email client.
A robust conversation visualization like the one described here is an important building block of a modern email client.
There are at least two ways that we would like to improve the mixed-model visualization.
First, it could be more compact.
When a conversation consists of a sequence of brief messages, the actual message content is small compared with the surrounding graphics.
A more compact visualization would allow more relationships to be visible at a glance.
Second, the visualization is overkill for simple conversations.
We know that the majority of conversations are one or two messages long .
Our casual observations indicate that simple, non-branching structures are common even among larger conversations.
In these cases the "cost" of the visualization doesn't impart any immediate benefit.
