Tasks that involve large information spaces overwhelm workspaces that do not support efiicient use of space and time.
For example, case studies indicate that information often contains linear components, which can result in 2D layouts with wide, inefficient aspect ratios.
This paper describes a technique called the Perspective W'aU for visualizing linear information by smoothly integrating detailed and contextual views.
It uses hardware support for 3D interactive animation to fold wide 2D layouts into intuitive 3D visualizations that have a center panel for detail and two perspective panels for context.
The resulting visualization supports efficient use of space and time.
Tasks that involve large information spaces require workspaces based on explicit techniques for handling the volume of information.
There exist two basic strategies for developing such techniques: a space strategy uses layout and graphic design to pack appropriate information in one view, while a time strut egy uses view transitions to spread information over multiple views.
Although the space-time distinction is useful, large information spaces often require simultaneous use of both strategies, which can involve interactions among the techniques.
For example, case studies indicate that tasks often involve spanning properties  that structure the information linearly.
This linear structure results in 2D layouts with wide aspect rz ties that are difficult to accommodate in a single view.
Current computer screens are quite small compared to "real-world" workspaces, such as dining room tables.
Furthermore, all workspaces are limited by human size and perception in the amount of information they can make visible in a single view.
Layouts with wide aspect ratios must be reduced in scale to fit in a single view, which causes very small details.
When a time strategy is used to enlarge details by only viewing part of the layout, the view may omit contextual information that is needed to work on a task or navigate to another part of the information space.
Reintroducing the necessary contextual information interacts with the space strategy by reducing the area available for viewing details.
Resnikoff observes that the human eye and other bi~ logical systems process the vast amounts of information available in the real world by smoothly integrating a focused view for the detail with a general view for the context .
In particular, the retina of the human eye is hierarchically decomposed into a foveal region that perceives details and a surrounding low resolution region for daylight color vision and nighttime monochrome vision.
Furthermore, other biological information processing systems, including bat echo-location, have similar decompositions.
He argues that tkis architecture is a result of general information processing principles such as selective omission of information and aggregation into more abstract forms.
This paper describes a technique called the Perspective Wall that integrates detailed and contextual views to support the visualization of linearly structured in-
Companion papers describe our related visualization for hierarchically structured information spaces and our general approach for developing a system that supports general information visualization.
In this paper, we begin by showing that work practice often causes information to have a linear temporal structure.
Such structures result in 2D layouts with wide aspect ratios that are not adequately handled by existing techniques.
The Perspective Wall technique takes advantage of hardware support for 3D interactive animation to imitate the architecture of the eye system.
It folds a 2D layout into a 3D wall that smoothly integrates a region for viewing details with perspective regions for viewing context.
This intuitive distortion of the layout provides efficient space utilization and allows smooth transitions of views.
Analysis of the Perspective Wall technique indicates a threefold improvement over simple 2D visualizations.
The Information Visualizer also includes support for multiple asynchronous agents and smooth interactive animation, 3D navigation and object manipulation.
The Perspective Wall has been used to visualize various types of temporally structured information, including a file system and corporate memoranda.
Althouch the set of documents in each of these cases was not large , they were extensive enough that the users expressed frustration at the effort required to manage them and find information in them for their work.
As a way of analyzing the collection, the documents were grouped into categories .
The resulting categories suggest that the documents have a simple overall structure reflecting processes that naturally develop through time.
In the forensic architecture cases, there are two main task cycles:  construction of the building and  litIn the committee work case, igation over its defects.
Figure 2 contains two plots that show the number of documents  m a function of time for construction litigation and committee work.
These plots reveal further time-based texture in the document collections.
The upper plot shows the documents of both forensic architecture cases plotted together, one in light bars and the other in dark bars.
The construction and litigation cycles are clearly evident.
The upper plot also indicates that information can have a layered structure caused by simultaneous tasks.
The two litigation cycles were completely overlapped, and the original build cycles were partially over-
Work practice often causes information spaces to be linearly structured by some metric, for example: project records  or directories .
The location of an item along this metric can be an excellent retrieval cue, either directly or in relation to "landmark" items whose location may already be known.
For example, an architect whose office files we were studying observed that the titles of documents in his office were not good retrieval cues, but that creation time was.. We thus need to be able to display linear structures in computational visualizations.
To better understand this linear structuring, we examined the documents from three actual projects.
Two of these cases, Case 3-1075 and Case 3-1078, were from the files of the architect above, who se~ves as an expert witness for litigation concerning building construction.
The file=a are mmprieed of carmtruetian and litigation documents for construction projects.
The third case, Case P70/PPM, consisted of documents produced by a National Research Council committee in a study of human performance models suitable for computer-aided engineering of cockpit design.
They include administrative, informational, and draft documents generated in service of producing a committee report.
This case was chosen sa a contrast to the architectural cases.
We will show that the Perspective Wall can be used to visualize this layering of information in addition to its linear structure.
The lower plot clearly shows the pulsing effect of the study committee meetings.
Each meeting generated a flurry of preparatory documents as participants were forced to get their work done before the meeting deadline, to arrange agendas, and to prepare the meeting minutes.
These case studies suggest that spanning properties, such as time, often reveal some of the structure in an underlying document collection.
The visualization of the document collection in terms of these properties can reveal subtle textures reflecting the underlying processes that generated the documents.
These textures could be useful to the participants attempting to retrieve the documents because they could use their contextual knowledge of the underlying work process to Linear visualizations based on time aid the search.
Window systems provide some support for processing large amounts of information.
For example, windows can be used as a space technique to group related information and as a time technique for switching among views .
Window systems can also provide some contextual information through the proximity of windows on the display.
However, virtual desktops quickly become cluttered and unusable during work with large amounts of information.
The Rooms window manager is a time technique that increases the effective working size of a window system by allowing users to switch among window "working sets" s-s they switch tasks.
Rooms also supports navigation with various techniques including an "Overview Room" that allows users to see and work with the entire workspace.
However, Rooms does not address the problem of developing visualizations for tasks involving large information spaces .
A common technique for integrating detail and context is to have two simultaneous views: an overview with a scale-reduced version of a workspace, and a detailed view into the workspace where work can be The overview typically conaccomplished .
However, a uniform scale reduction of the workspace causes it to appear very small.
Furthermore, important contextual information, such as the neighborhood of the viewing region, is just as small as unimportant details.
Finally, if the display space for the overview is increased to make the workspace appear larger, the space for the working view becomes too small.
Rather than a uniform overview of a workspace, an effective strategy is to distort the view so that details and context are integrated.
Furnas developed a general framework called Fisheye views for generating distorted views.
Fisheye views are generated by Degree of Interest functions that are thresholded to determine the contents of the display.
However, thresholding causes the visualization to have gaps that might be confusing or difficult to repair.
Furthermore, gaps can make it difficult to change the view.
The desired destination might be in one of the gaps, or the transition from one view to another might be confusing as familiar parts of the visualization suddenly disappear into gaps.
Spence and Apperley developed an early system called the Bifocal Display that integrates detail and context through another distorted view.
This 2D design is a conceptual ancestor of the Perspective Wall system described in this paper.
The Bifocal Display was designed for professional offices that contain information subdivided into a hierarchy of journals, volumes, issues and articles.
Abstractly, the workspace consists of information items positioned in a horizontal strip.
The display is a combination of a detailed view of the strip and two distorted views, where items on either side of the detailed view are distorted horizontally into narrow vertical strips.
For example, the detailed view might contain a page from a journal and the distorted view might contain the years for various issues of the journal.
Because Bifocal Displays are two dimensional, they do not integrate detail and context completely smoothly or intuitively.
Two versions of an item are required, one for the detailed view and one for the distorted view.
The relationship between these versions may not be obvious.
As the focus moves, items suddenly expand or shrink, which may be confusing.
Furthermore, the distorted view treats all contextual items identically, even those near the detailed view.
The wall has a panel in the center for viewing details and two perspective panels on either side for viewing context .
The perspective panels are also shaded to enhance the perception of 3D.
This intuitive visualization provides efficient space utilization for 2D layouts with wide aspect ratios.
In addition, the vertical dimension of the wall can be used to visualize layering in an information space.
The Perspective Wall in Mackinlay Plate 1 holds cards that represent files in a computer system that are structured by modification date  and file type .
The perspective view has the further advantage that it makes the neighborhood of the detailed view larger than more distant parts of the contextual view.
Smooth transitions among views is accomplished by allowing the user to adjust the wall as if it were a sheet in a player piano moving selected notes to the center of view.
Mackinlay Plate 2 shows the visualization after the user has selected a card in the left perspective view of Mackinlay Plate 1.
The space utilization of a Perspective Wall can be analyzed by comparing it with the corresponding unfolded wall, which can be placed in the field of view to simulate a 2D visualization of the 2D layout.
Figure 3 shows a top view of two different placements of the flat wall:  the flat wall completely in the field of view with small details, and  the flat wall at the same distance as the Perspective Wall detail panel with much of the layout outside the field of view.
The analysis uses the following parameters: the angle $j, which is the amount of folding of the perspective panels, the width w, which is the size of a perspective panel , and the angle Oe, which is half of the visual angle of the field of view.
When the flat wall is placed completely in the field of view, the details are much smaller than the details on the Perspective Wall.
The relative sizes of the details can be determined by comparing their distances to the eye .
The distance to the center panel of the Perspective Wall is  cos - w sin, which comes to 5.2.
Therefore, for typical values of the parameters, the details on the center panel are at least three times larger than the details on a flat wall that fits in the field of view.
When the flat wall is placed at the same distance as the Perspective Wall center panel, much of this closer flat wall is outside the field of view .
The Perspective Wall technique uses recent advances in hardware support for interactive 3D animation to address the integration problems of the Bifocal Display.
A physical metaphor of folding is used to distort an arbitrary 2D layout into a 3D visualization , while automatically retaining any 2D task-specific features.
Visualizer, a system that as part of the Information uses 3D visualizations and interactive animation to work with large information spaces, especially when the structure of the information can be exploited .
A 3D version of Rooms is used to support task switching.
An animation loop is used to support view transitions.
The Perspective Wall works with any 2D layout that has been described as a list of 2D vectors and 2D positioned text.
On each animation cycle, three passes are made over this list to generate the three panels of the Perspective Wall.
The placement of the 2D layout on the panels is determined by a single parameter that specifies what part of the layout should be in the center of the detail panel.
The wall scrolls when this parameter is set to a new value, for example, when a card is selected.
A governor is used to monitor the animation rate and adjust this parameter to create smooth scrolling.
The Perspective Wall has been used to visualize various types of information.
The Mackinlay Plates represent files in a file system that are classified by their modification date and file type.
Vacations and other work patterns are clearly visible.
The technique haa also been used for corporate memoranda and reports, which also have a useful linear structure.
The technique is particularly effective when combined with a retrieval technique that allows the user to select an item and find similar related items.
The Perspective Wall makes it easy to visualize the results of such retrievals because it shows all similar items simultaneously and in context.
Figure 3: A top view of the Perspective Wall  and two flat walls  positioned in the field of view .
The "distant" flat wall is placed to the right to fit in the field of view and the "detailed flat wall is placed at the same distance as the Perspective Wall detail panel.
The distant flat wall is analyzed in the top half of the diagram and the detailed flat wall in the bottom half.
Therefore, for typical values of the parameters, the Perspective Wall makes three times as much information visible as a flat wall that has details of the same size.
A major advantage of the Perspective Wall is that its intuitive 3D metaphor for distorting 2D layouts allows smooth transit ions among views.
When the user selects an item, the wall moves that item to the center panel with a smooth animation.
This animation helps the user perceive object constancy, which shifts to the perceptual system work that would otherwise have been required of the cognitive system to reassimilate the view after it had changed .
Furthermore, the relationship between the items in the detail and context is obvious.
Items even bend around the corner.
The Perspective Wall has the additional feature that it is easy to allow the user to adjust the ratio of detail and context.
This is quite important when the detailed view contains a lot of information.
The metaphor is to stretch the wall like a sheet of rubber as shown in Mackinlay Place 3, which corresponds to the wall in Mackinlay Plate 2.
The Perspective Wall technique uses hardware support for 3D interactive animation to turn these 2D layouts into 3D visualizations that imitate the human eye and smoothly integrate detail and context.
The technique uses space efficiently and allows the view to be adjusted smoothly and intuitively, The 3D metaphor also allows the ratio of detail and context to be smoothly adjusted.
Our approach is to exploit human experiences and cw pabilities by using emerging technologies for 3D visualization and interactive animation to develop highly interactive user interfaces.
Our experience so far suggests that it is possible to create effective space and time techniques that improve management and access of such information spaces.
Interactive animation, in part icu-
We have been able to use these techniques to visualize the structures of information spaces, such as entire file systems, that have never been seen before.
Our initial prototypes suggest that highly interactive user interfaces are likely to support large scale cognition and thus deserve further research activity.
References  Card, S. K., Robertson, G. G., & Mackinlay, J. D. The Information Visualizer: An Information Workspace.
K. M., Poltrock, S. E. & Furnas, G.  Fairchild, W. SemNet: Three-dimensional graphic representation of large knowledge bases.
C'ognit ive Science and its Application for Human- Computer Interface R. Guindon .
The cognitive coprocessor architecture for interactive user interfaces.
Proceedings of the ACM SIGGRAPH Symposium on User Interface Soflware and Technology, , November 1989, 10-18.
