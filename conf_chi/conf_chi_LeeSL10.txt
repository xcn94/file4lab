We designed an algorithm to build a speed-call list adaptively based on mobile phone call logs.
Call logs provide the time-dependent calling patterns of mobile phone users, and therefore a speed-call list based on them will be more successful in recommending a desired number than a speed-call list based on recent calls only.
This paper presents the design process of our algorithm for an adaptive speed-call list, its verification result with recorded call logs, and in-situ evaluation results of the algorithm using an Experience Sampling Method  system.
These methods require typing a word for searching, typing a partial number or a partial name, or repeated button clicks for selecting in a long contact list.
Some researches tried to improve this process by reorganizing a phonebook considering the total calling time or the number of calls .
The total calling time and the number of calls in fact are only a part of information that call logs can provide.
There are some researches to utilize contextual information which can be gathered by mobile phones.
Bridle and McCreath  investigated methods for inducing shortcuts for outgoing communications.
Phithakkitnukoon and Dantu  predicted incoming calls and Vetek et al  suggested adaptive menu shortcuts based on context recognition.
There were some computerized ESM tools to evaluate mobile applications, and Momento  is one of them which support in situ remote monitoring with server/client architecture.
Since a mobile phone is usually a single-user device, we can collect personal context information from phone usage logs.
For instance, call logs reveal how often and who a user calls in different contexts.
Such context information may enable a mobile phone to intelligently predict and recommend a number to call to a user in a certain context.
In this research, we designed a method to generate an adaptive speed-call list that can enable faster calling than a recent-call list or a phonebook.
We could verify the effectiveness of our method using "unseen" call logs.
Also, we implemented our method on a mobile phone, and conducted a field study, where we used an ESM system to collect in-situ user feedback and comments about the usage of the adaptive speed-call list.
We conducted an online survey with 75 participants  to study mobile phone usage patterns.
More than 90% of participants have been using their mobile phones more than 5 years.
One of the survey results showed that searching with a name in a phonebook menu and selecting from a recent-call list comprise 72% and 64% of all responses among various calling methods.
How do you make a phone call?
To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee.
We also analyzed the call logs of 20 participants  for recent 3 months to see whether there is any periodical pattern.
Figure 1 shows `call maps' which visualize all the outgoing calls on a graph with a time-ofday axis and a date axis.
We could see that call maps do not only show calling patterns but also represent daily life patterns effectively.
Calls in the left call map  are distributed widely while calls in right call map  are concentrated between 9 am to 9 pm and that on his wife.
The visualization of the call map confirmed that we can recommend a number to call based on calling pattern of the user - the most recommendable number for person `A' in the morning is `Home', and the most recommendable number for person `B' at any time is his wife.
A call recommendation algorithm selects numbers for an adaptive speed-call list based on the outgoing call logs.
We chose 5 independent variables that can be a reason of recommendation: day of week, weekend/weekday spans, time of day, dayparts of a day, and 1-hour slots of a day as shown in Table 2.
The algorithm calculates the probabilities of Bernoulli trials for each independent variable for each person in a phonebook and uses them to recommend numbers to dial.
The probability  here means that the user will make about 5 calls to person  at this time of day  for coming 100 days.
Because 5 independent variables have different time scales from 1 to 24 hours, we normalized   into probability in unit time .
Then, the highest probability    for each person in the phonebook were gathered and sorted.
The algorithm then determines phone numbers with 5 highest probabilities and recommends them to a user with a reason  , for instance, "Because you called him/her most often at this time of day".
Table 4 shows two algorithm outputs generated at two different contexts for the person `A' .
The algorithm generates different recommendations for the two different cases and explains the reason of difference.
On Sunday evening, phone numbers of family members and food deliveries were recommended based on time of day.
In the second example, the phone numbers of chicken delivery appears on the list because of his past orders around this time of day .
To verify the effectiveness of the algorithm, we checked its recommendation outputs using "unseen" call logs.
For instance, we asked it to predict callees for each call in the call logs of June using call logs from March to May.
The algorithm could predict a correct callee and include it in the speed-call list.
The usefulness of the recommendation was measured by the rank of the correct callee in the list.
First, we compared the results with that of `Searching' and `Recent call list ', which were shown to be two most popular call methods in our online survey with 75 users.
In the latter case, a user was allowed to switch to a search page if there is no target in the list with 5 recent calls.
The average number of click for searching was approximately determined by observing search process from 7 people using different phones.
The average number of button clicks to make a call was 6.20, 4.33, and 3.80 for searching, using a RL, and using our speed-call list, respectively.
3.80 clicks here mean an average recommendation rank of 2.80 .
Among 5 variables, `1-hour slots' and `Time of day' were highly used for the recommendations.
Considering commercial products which can sort phone numbers with call frequency like BlackBerry, `Frequencybased list ' was added to the reference points in the 2nd stage of comparison.
The average number of button clicks to make a call with call frequency based recommendation was 3.90 clicks.
Also, first page hit ratios and top rank hit ratios were additionally compared because absence of a desired number on the first page makes us search the phone book, and the first item in the list can be dialed directly by two successive clicks of SEND button.
We implemented our method on a mobile phone , and conducted a field study for discovering any unexpected problems and verifying the acceptance of the algorithm in the real situations with 10 participants for about 3 months.
Our ESM system has an architecture similar to Momento, and supports a real-time addition/modification of questions, an easy self report with a screenshot, and application logging for evaluating recommendation performance.
Because we thought that the performance of our algorithm was verified in previous step, we used the ESM system to collect in-situ user feedback and experience about the usage of the adaptive speed-call list, and did not attempted to use it to compare recommendation algorithms.
The usual recent-call list page was replaced by our speed-call list page with 5 recommendable numbers to call as shown at right in Figure 3.
If the adaptive speed-call list failed at recommendation, the user could change the list to the usual recent-call list, and opening the phonebook for search from the list page was also possible.
427 attempts to make a call using the speed-call list were recorded as success by the ESM system.
The average rank of the callee in the list in the whole cases was 2.35.
The speed-call list failed to recommend a right callee in 161 cases, and in 101 cases of them the callee was not in recent call logs.
We also calculated the expected recommendation rank of the callees for the outgoing calls that were made without using a speed-call list.
The expected average rank of the callee was 9.27  except newly dialed phone number during 3 months.
Right after every call made by a speed-call list, the ESM system presented a window to ask user feedback.
Some examples of subjective feedback were shown in Table 5.
A qualitative survey was done after the field study.
Among the 10 participants, 8 reported that the call recommendation was helpful.
All of them reported that the speed-call list was helpful because of adequate candidates on the list, and half of them reported that they liked it because they did not need to type.
All the average differences were statistically significant, and we also examined individual differences.
Each line in Figure 2 shows individual means for the 3 calling methods.
We could classify 20 users into 3 groups based on recommendation suitability.
Recommendation algorithms including ours appear to be most applicable to group A shown with solid lines.
Was call recommendation helpful in finding the person to call?
I tried to call my boyfriend, and he was on the top of the list.
The person I want to call was the 1st.
It always shows a similar list, but is quite helpful.
I could see "home" when I was about to call home I called someone many times recently, and the list helped me.
I called him after a long pause, and the list was not useful.
I looked up the number to call from phonebook.
3 callees comprise less than 20% and 40% of the entire calls, while other people  made nearly 70% of calls to top 3 callees.
Recommendations based on `1-hour slots' variable that reflects call frequency were reduced for group A as shown in the lower right pie chart in Figure 4.
We expected that selecting different independent variables for the two different groups can shorten calculation time and produce better results.
Then, the flow of our adaptive speed-call list algorithm would become like the flow chart in Figure 5.
Nine participants mentioned that a speed-call list at one-click of `SEND' button would have been even better.
Many complained of the time delay due to calculating a speed-call list.
The calculation process begins right after the user clicks the `call log' button.
If more optimized calculation starts in the idle time right after the phone is opened, this inconvenience would be reduced.
We asked the participants about the requirements for this adaptive speed-call list.
In our implementation, recent call list was provided beside our speed-call list as shown in Figure 3 and users could make a fast transition to each other with left and right arrow keys while up and down keys were used to select items on the list.
Contrary to our expectation, accuracy was ranked at 3rd.
The speed-call list seemed to be considered as a supplemental tool, and an occasional failure did not seem to be very critical.
We could see that the calling patterns of users were very different.
Some people concentrate their phone calls to a lover or a family member, while others distribute over different callees.
We studied mobile phone users' calling patterns, designed a call recommendation algorithm for an adaptive speed-call list, and evaluated it with an ESM system.
Our method was shown to be effective in terms of the number of button clicks to call, hit ratio for first page and top rank item in the call list compared with other common methods.
In-situ responses through our ESM system helped us confirm that the speed-call list was helpful and also pointed out many problems to improve.
Among others, an adaptive selection of independent variables considering individual differences in calling patterns is expected to improve the accuracy of call recommendation.
