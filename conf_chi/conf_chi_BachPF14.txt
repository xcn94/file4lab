This manual is a short introduction on How to Explore Dynamic Networks with Cubix.
Contact benjamin.bach@inria.fr in case of any problems or ambiguities.
Please note, that all material in this manual is published material and should not circulate.
If you got a copy, be happy and keep it.
Cubix is a visualization interface for the exploration of dynamic networks with changing edge weights.
The central visualization is the Matrix Cube, a space-time cube resulting from stacking adjacency matrices, one for each time step, in the order of time.
Figure 1 shows how a matrix cube is created from the adjacency matrices.
Figure 1: Contruction of the Matrix Cube.
Red edges of the cube hold vertices and correspond to the rows and columns of the constituent adjacency matrices; blue edges of the cube hold time steps.
Visualization an exploration of three-dimensional models on the screen is difficult.
With Cubix, we provide transformation and decomposition operations which yield better readable 2D representations of the information contained in the cube.
This manual explains what operations and visualizations Cubix supports and how they are employed.
Throughout this manual, we use the following terminology:
A time slice shows the network's topology at one time step.
It resembles a table where a vertex's neighbors are shown in rows and time steps are columns .
A vertex slice shows the evolution of a vertex's neighborhood over time .
A cell in a vertex slice indicates a connection between the vertex of the slice and the vertex in a row, at the time indicated by the column.
Time vectors  show the evolution of connectivity between a node pair, while neigborhood vectors  show the neighborhood of one vertex at one time.
Figure 3: Cubix user interface with the Matrix Cube in the center, the Cubelet widget at the bottom left, and the control panel on the right.
A histogram indicates distribution of edge weight.
The interface of Cubix is show in Figure 3.
Persons  are shown along the the vertical and horizontal red axes.
Time is shown along the blue axes.
Connections between vertices are encoded as three-dimensinal cells inside the cube.
Network statistics are shown on the top left and the Cubelet Widget allows to switch between views on the cube .
The remaining interface components are explained briefly in Figure 3 and explained in detail in the corresponding sections of this manual.
Cells in Cubix can vary in two ways, shape and color.
Both can be set by the radio buttons on the right side of the interface.
Cubix provides three ways to encode information in the size of cells .
Larger cells indicate higher edge weight, smaller cells indicate lower edge weight.
In our example, edge weight refers to the number of co-publications per year.
For coloring cells, three modes exist .
Weight encoding makes heavy edges  stick out.
Weight encoding is the default setting in Cubix.
This mapping is particulary useful for data sets where edge weights can be negative.
The color scale ranges from blue , via purple and indigo  to orange .
For example, an edge with weight -2 is as large as a cell with weight 2.
This function should be used together with Edge Weight Diverging Cell Coloring.
Various views can be derived from the matrix cube by applying a combination of natural operations to it: rotation, projection, slicing, filtering, layout and flip-through.
On how to quickly switch between views using the Cubelet Widget, see Section 4.
Figure 7 summarizes the different views currently implemented in Cubix.
Large cells indicate high edge weight.
Dark cells, due to super imposition, indicate frequent connections.
Topological clusters emerge from reordering rows and columns.
Illustrated in Figure 8, Luise and Lucas collaborate frequently, while Nathan and Lucas collaborated in a few years only, but on many articles.
Using time encoding, clusters and connections can be roughly situated in time, e.g.
Lucas' individual publications  are much older than his collaborations.
When rotating the cube to its left side face, a projection as shown in Figure 8 is obtained.
Rows still show vertices, but columns represent time, one column per time step.
Time runs from left to right.
Cells in this view summarize all connections of a vertex over time steps.
To individually observe slices, when in Front or Side view, you can rotate individual time slices  or vertex slices .
To rotate a slice, right click on the corresponding label.
Rotating a slice can be compared to rotating a single book on a book shelf; after rotation, the slice can be observed individually while context of the current view is preserved.
This view is useful when an interesting pattern in the front or side view has been found and one particular slice requires particular investigation.
Note that you can rotate as many slices as you want.
Figure 9 shows the rotation of a time slice from the view in Figure 8.
Slices can be rotated back to its initial position by right-clicking on the label again.
A common technique to show spatio-temporal data is to use small pictures side by side, one for every time step.
Since time in the matrix cube is discrete, decomposition is straightforward.
In Cubix, time slices  can be juxtaposed, allowing for pairwise comparison and individual analysis .
Hovering a cell highlights all connections between the same node pair over time.
When in this view, use the arrow keys for panning.
Figure 11 shows all vertex-slices laid out side by side.
In this example, cell color was already mapped to cell size to allow for better cross-slice comparison.
Each vertex-slice shows the dynamic egonetwork for each vertex, enabling the comparison of individual connection patterns across vertices of the network.
Note that pan and zoom is enabled in both side-by-side representations.
Yet another way to explore individual slices is to present them one at a time, such as in a flip-book or a slide show.
From the 3D view, users can select any single vertex or time slice, consequently hiding all other slices.
Users can then switch to the front or side view and obtain a projection that shows only the selected slice .
For quick changes between the previously explained views, Cubix privides number shortcuts , indicated alongside with the Cubelet on the screen, or alternatively the Cubelet widget shown in Figure 13.
The cubelet is a stylized representation of a Matrix Cube with sensitive surfaces.
Surfaces can be clicked in order to switch to the associated view.
The Cubelet indicates the current view, by shading the corresponding face.
Number shortcuts and interaction with the Cubelet are as follows: 1.
3D View -- Click on top face of the cubelet.
The entire Cubelet becomes gray to indicate that all faces are visible.
Front View -- Click on right side of cubelet.
The front face becomes gray to indicate the front projection.
Side View -- Click on left side of cubelet.
The side face gets gray to indicate the side projection.
Time Side-by-Side -- Drag mouse on right side of cubelet as to pull it apart.
Results in the image show in in Figure 13.
Vertices Side-by-Side -- Drag on left side of cubelet as to pull it apart.
Results in the image show in in Figure 13.
All view switches are indicated through animated transitions.
Animated transitions can be shortened by holding shift, and fastened with the alt key.
Increasing the value of the 'F' side allows to explore the cube, while not completely removing all filtered cells.
A histogram above the slider indicates the distribution of edge weights across the scale.
When the ADAPT WEIGHT-button is active, the remaining cubes are scaled so that their size varies according to the currently visible wight range.
This means that cells at the lower range of visible weight are very small, while cells on the higher end have maximal size.
Non-selected slices are rendered translucent, according to the 'F'-value of the opacity slider.
The examples in Figure 15 have been created using vertex filtering  and show the evolution of weight of two edges over time.
All filtering mechanisms are independent from each other.
Cells can be selected to better see their context.
When a cell in the 3D view is clicked once, only the three slices , which the cell is the intersection of, remain visible .
The front and side views show only the time and vertex slice respectively, allowing to investigate the cell's context.
The order or rows and columns in the cube is determined by an algorithm that optimizes patterns in the matrices.
Across all matrices in the cube, there is only one ordering of rows and columns  possible.
Hence, the more time slices exist and the more they differ, the less efficient an optimization can be.
To optimize reordering for one time slice or a subset of time slices you can select individual time slices, e.g.
The ordering takes only the currently visible cells into account.
To facilitate the look-up for vertex names, Cubix provides the N AME -O RDERING-button which orders vertices in an alphanumerical way.
Ordering remains consistent across view changes.
When in Time Side-by-side or Vertex Side-by-side view, used to pan.
When in Time Side-byside or Vertex Side-by-side view, used to pan.
When in Time Side-byside or Vertex Side-by-side view, used to pan.
When in Time Side-by-side or Vertex Side-by-side view, used to pan.
