Third, the use of common devices like the mouse, trackballs and touchpads seems to be the preferred choice of individuals with mild motor impairments .
We would like to direct our efforts toward improving and developing assistive technologies that help individuals with disabilities use the devices they have come to associate with the norm.
Of particular interest to us is the population of individuals with fine motor skills impairments.
Motor impairments, such as those associated with Parkinson's disease, Cerebral Palsy and Carpal Tunnel Syndrome among others, can have a negative effect in the ability to engage in daily activities.
For individuals with fine motor skills impairments, the performance of complex simultaneous and sequential movements is much more affected than the performance of simple movements .
This translates to difficulties performing pointing tasks on the computer.
Individuals with motor impairments provide a spectrum of difficulties that will make the effort of improving and adapting existing assistive technologies exceptionally challenging.
Thus, our main goal is to help individuals with fine motor skills impairments improve their pointing tasks on the computer.
We achieved our main goal by extending PointAssist to help individuals with motor impairments while performing pointing tasks on the screen.
PointAssist is software designed to help people who have difficulty using pointing devices .
To assist in pointing, it detects the type of motion that occurs when users have difficulty pointing at a target, and modifies the speed of the cursor to provide help in those cases.
We designed, implemented and tested a personalization heuristic that helps PointAssist adapt to the variability in performance that each of the participants exhibited.
We considered a group of individuals with a wide range of abilities.
Our methods allow PointAssist to provide help in a personalized manner for each individual.
PointAssist runs as a backgroud process and is virtually imperceptible from the user's point of view.
Thus it requires little adaptation from the user's perspective.
Since it was adapted to each individual's need, we have effectively created an assistance that shares the burden of adaptation with the user.
We have also implemented a method of remote testing that eases the recruitment process and helps extend geographic boundaries.
We tested PointAssist, software that assists in pointing tasks by detecting difficulty through a sub-movement analysis and triggering help, with adjustments proposed to personalize the assistance provided to individuals with motor impairments.
A within-subjects study with sixteen individuals with fine motor skills impairments resulted in statistically significant effects on accuracy using Friedman's test with  = 6.4, p = .011 in favor of personalized PointAssist compared to no assistance.
Pointing tasks have become ubiquitous in any computing environment and can be a source of frustration to many users if they do not perform these in an accurate and timely manner.
In a survey on the use of assistive technologies in everyday living , about 10% of the participants said that they would be "pleased to use electronic technologies.
One participant mentioned that such an improvement could be "something to steady the mouse".
Thus, the problem of improving the user's ability to point when using an indirect pointing device such as the mouse becomes an issue of utmost importance since frustration may come from interacting with a system that is not specifically designed for individuals with impairments.
The use of specialized input devices makes sense in cases of severely disabled individuals.
For others, it makes sense to insist in the use of the mouse instead of alternative input devices.
First, the mouse is one of the most common forms of indirect input.
To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee.
In recent paper titled "Personalized Dynamic Accessibility" , four pillars for the future of personalized dynamic accessibility design and developments are proposed.
The four pillars were identified to be the following: Adaptation sharing, Personalization, Dynamic Adaptation and Scalability.
The article also emphasizes the importance of remote testing and of validating results in real-words contexts.
Our present research not only goes hand in hand with the pillars of personalized dynamic accessibility, but also puts us at the verge of the most current innovations in the design of assistive technologies for individuals with motor impairments.
Interestingly, it is one of two target agnostic method that we have encountered.
In contexts where there are many targets on the screen, having the program be aware of all the objects on the screen can hinder system performance.
This can make a target-agnostic method a more feasible and adoptable method of assistance that automatically works with all software.
Other methods to help with pointing tasks include proxy targets , semantic pointing , object pointing  and the bubble cursor , though these were not developed specifically for individuals with motor impairments in mind.
We proposed exploring and expanding PointAssist, a pointing assistance method that has been proven with groups of individuals that require some level of assistance but that do not necessarily have motor impairments.
Analysis of pointing tasks is often conducted in the literature with an empirical approach that relies on Fitts' law .
Fitts' law uses the relationship between the movement distance to a target and and the target's size, and it determines the time needed to complete the task.
Fitts' law provides tools for determining the index of difficulty of a task and the index of performance of the individual performing the task.
However, to analyze tasks in more detail and to be able to personalize the assistance provided to each individual, we looked at the sub-movement level of the pointing tasks.
Deterministic models that assume sub-movement parsing of an overall aimed movement have been proven to yield approximately the same movement times as Fitts' law .
Several strategies have been proposed and studied to help individuals with motor impairments.
For example some of the movement difficulties including slipping of the target, accidental clicks far from the target and accidental button presses other than the left button, have been addressed successfully with methods such as Steady Clicks .
Steady Clicks freezes the cursor upon pressing the button and works under the assumption that that users would prefer not to concentrate on clicking.
Significant advances have been made in the area of generating interfaces for individuals with motor impairments.
These can be generated automatically based on an individual's abilities which may or may not include the ability to point efficiently.
Ability-based interface generators have been studied and found to provide significant improvements in speed and error prevention in GUI iteractions amongst individuals with motor impairments .
Studies that aim at automatically detecting pointing performance of individuals have yielded positive results as well.
An example of an alternative to clicking, specifically designed for people with motor impairments is goal crossings , with results that significantly favor goal crossing over pointing.
PointAssist works by slowing the speed of the cursor depending on the real-time analysis of the sub-movements of a task.
A sub-movement is a smaller component of a complete rapid aimed movement from one point to another.
PointAssist has been shown to help young children  and able-bodied older adults  with difficulties associated with target acquisition in terms of movement times and accuracy.
One of the features that PointAssist implements is providing help to users only when they need it.
PointAssist requires the user to make an effort before receiving help.
PointAssist does not change the appearance of objects on the screen and thus has no negative impact on the user's overall perceptual experience.
PointAssist does not require any special hardware, there is no learning curve, it runs in the background independently of other software, and it is target-agnostic.
We argue that all of these characteristics make PointAssist a desirable and easily adoptable method of assistance.
When PointAssist detects two consecutive difficult submovements, it triggers help via a speed reduction mechanism that we refer to as precision-mode.
When precisionmode is activated after observing two consecutive difficult sub-movements, the mouse speed is reduced in half.
The settings for the mouse speed were the same as in .
A submovement is defined as being difficult if it satisfies two properties: a maximum speed, and a maximum distance.
In previous studies with PointAssist a top speed of 0.08 pixels/sec and a maximum sub-movement length of 24 pixels were considered to account for a difficult sub-movement.
We wish to test the effectiveness of PointAssist in detecting target acquisition difficulties amongst individuals with motor impairments and the effectiveness in providing help for these individuals with the mouse speed reduction mechanism that PointAssist implements.
A previous case study with two individuals with Parkinson's disease  informed us of the necessity of personalizing the helping strategy provided by PointAssist.
This necessity arises from our expectation of a high variability in performance from all individuals due to their differences in motor control as a result of their fine motor skills impairments.
In other words, it is hard to make generalizations on such a diverse population of individuals with a wide spectrum of conditions and disabilities that affect their pointing performance.
A similar study with Parkinson's disease patients concluded that "Important differences in behaviour with respect to established models of movement indicate that new models are required when considering users with physical impairments."
The variability in performance of each participant prompted us to analyze the characteristics of the movements and sub-movements which eventually led to a heuristic to personalize the assistance provided by PointAssist for each individual.
Because we want to identify when an individual with motor impairments is having difficulty near a target, we need to redefine the parameters that trigger precision-mode for that individual.
Thus, we customized the definition of what a difficult sub-movement is for each participant and we describe the procedures used to personalized the assistance provided by PointAssist in the results section.
Figure 1 shows how the basic demographic information was collected for all participants.
Once the participants completed the questionnaire the test would begin.
Participants had to move the mouse cursor from the center of a green square and attempt to click in the red dot .
Figure 2 shows a sample trial in the north-west direction.
Participants received instant feedback during the test via sound, once a task was completed, and via the progress bar on the left.
A successful click would be recorded next to the progress bar as a green dot and a missed click as a red dot.
We had three independent variables: direction, target size and PointAssist on or off.
A task direction was selected out of eight directions from north, south, east, west, north-east, north-west, south-east and south-west.
We selected two target sizes, an 8 pixel and a 16 pixel target.
Our control variable was the task distance to the target which was set at 512 pixels for all tasks.
The experiment consisted of two data collection rounds.
In both rounds all participants performed a total of 69 tasks .
The first round had PointAssist turned off for all tasks.
This data served as baseline to be analyzed using the personalization heuristic which we will describe later.
The test relied on exactly the same sub-movement parsing algorithm used in other studies with PointAssist .
We collected information remotely by deploying the software to individuals, who were in different geographical locations, to install it in their personal computers.
Worth noting is the Input Observer for remote data gathering .
The study presented in this paper predates the Input Observer archival publication.
Our approach is different since we asked participants to complete Fitts law style tasks and we manipulated pointing settings, while Input Observer logs regular computer use.
One of the major challenges faced was finding participants for the study.
We partially addressed this issue by adopting an experiment that remotely tests the participants and that sends us the results automatically via the Internet.
The main purpose of this approach was to partially test validity of the software in real-wold interactions by considering the actual setup that each individual had on their personal computers.
We had no control over the overall settings on a hardware level.
Even though the hardware setups were different, the test was generalized for all of the individuals studied.
In the next section we will describe the participants' demographic data and the information collected regarding each individual's setup.
This selection was made to compare customized PointAssist to no help.
The randomization procedure was to generate all tasks with the three independent variables in question equally distributed amongst the two PointAssist conditions on/off.
The dependent variables were click accuracy, press accuracy, release accuracy, movement time, target reentry, and number of sub-movements.
For a more detailed description of the participants recruited refer to Table 1.
Few of the participants were specific about their particular hardware setups and how their disabilities affected their computer use performance.
We describe the ones we could gather to gain insight from the strategies employed and from the effect their respective disabilities had on their computer use skills.
One participant reported using a modified mouse with a piece of paper that would prevent accidentally clicking the right button which he reported was a result of his tremors.
Another participant reported having issues of a delayed response in releasing the mouse button.
Having multiple buttons caused a confusion in the hand coordination that resulted in either an accidental right click while the left click was pressed, or a delay in the release of the left click.
The participant reported being frustrated because the delay resulting from the confusion often caused slips and misses on the targets on the screen.
This was all reported prior to the experiment, thus our suggestion was to simplify the tasks by removing the confusion of the multiple mouse buttons using a single button mouse that we provided to the participant.
In a personal visit to some of the participants, we informally interviewed participants 4, 7 and 8 regarding their computer use strategies and were able to assess in greater detail how their respective disabilities affected their computer use abilities.
Participant 4 has Cerebral Palsy that affects her movements on her right hand side.
She did not require special accommodations but she did complain that the test was too long.
Participant 7, being bound to a wheelchair, required a physical setting that was lower than normal so that he could reach the mouse.
The major effect his disability had on his performance was his constant tiredness felt on his arms, slight pain if tasks were long and a minor loss of sensibility on his arms which we attribute to the abnormal position with his arms raised to reach the mouse.
Participant 8 is deaf and had cognitive disabilities so we were unable to interview him di-
The population of participants needed for the study is a very limited one.
Though we did not require participants to be avid computer users, they should at least be knowledgeable enough to download and install the testing software.
If not, they needed the assistance of a third party to help them setup their test.
This was the case with 4 of the 16 participants recruited for this study.
All other participants were able to follow the required steps in the testing process.
The majority of the participants had computer knowledge beyond the novice level.
The reported average number of hours of computer use per week by all participants was 13.56.
An Internet connection was necessary so that the results could be automatically sent at the end of each testing round.
We recruited 16 participants from different geographical locations and informed consents were obtained during two recruiting rounds in a span of a little over a year.
We recruited 3 Parkinson's disease  patients; 3 Cerebral Palsy patients; 3 Carpal Tunnel Syndrome patients ; 1 Stroke patient; 1 individual with Developmental Deficiencies; 1 participant with damage to the central nervous system; 1 case of Multiple Sclerosis; 1 individual with Spina Bifida; 2 other individuals were recruited but decided not to disclose their physical disabilities.
The majority of the participants reported running the software on Windows 7 machines.
Though the hardware specifics were not known to us we collected information on the input devices used and found that 14 out of 16 of the participants  reported using a mouse, and the remaining two used a trackpad.
Recall that the first round of data collection consisted of data that did not provide any help to the participants since PointAssist was turned off.
This data served to model the participants and customize their settings.
Phase I of the customization helped select parameters that determine difficult submovements.
Phase I of the personalization heuristic looks at length and speed distributions of all sub-movements near and away from the target.
When we look at sub-movement characteristic distributions near a target we refer to the characteristics of the submovements that took place in a radius of 30 pixels from the target center.
Similarly, a sub-movement away from the target will be a sub-movement that is more than 60 pixels from the center of the target.
These definitions of near and away from target are common-sense given the typical sizes of targets on desktop systems.
Parameter value choices and definitions are based on previous PointAssist research that provided advantages to both children and older adults.
If precision-mode triggers away from the target, we consider it a false positive.
By selecting sub-movement length and sub-movement speed values that would account for a large number of potentially difficult sub-movements near target we would be reducing the number of false positives.
Phase II simulated the tasks from the first round of data to see if they would have triggered precision mode given the customizations from Phase I.
The simulations used the parsing algorithm that determines when precision-mode would be triggered.
During Phase II we looked at the difficult tasks and determined which tasks triggered help and which tasks did not trigger help near the target.
Difficult tasks near the target were identified as either being tasks where the click was inaccurate, tasks with target re-entry instances, and tasks with more than 2 sub-movements near the target.
We repeated Phase I and II as needed to increase true positives and reduce false negatives and positives in the simulation.
Through our two phases of sub-movement parameter analysis we achieve a naive suboptimal method of personalization.
From this method we can learn about strategies that may later be automated and optimized to personalize detection and help.
Participant 1 went through five iterations of Phase II; participants 4, 7, 8 and 9 took three iterations, and the rest of the participants only took one iteration before we found values that would maximize the number of difficult tasks near target that would trigger precision-mode.
In particular, Participants 10 and 15, underwent one iteration using Phase I since they only had one adjustment.
The remaining 14 participants underwent both phases of personalization.
Figure 3 shows the results of the initial iteration of Phase II.
Figure 4 shows the difference after at most 5 iterations of Phase II.
The parameters of personalization that will help us identify difficult sub-movements for each participant and that were the result of Phase II of the analysis are summarized in Table 2.
In previous studies with children and older adults, the definition of a difficult sub-movement used and shown to work considered sub-movements with a top speed of 0.08 px/ms and length under 24 pxls.
As you can see in Table 2 all participants required a modification in one or both of the parameters.
Below, we analyze the results from the second round of testing, in which half the tasks were conducted with a personalized version of PointAssist enabled.
As far as we know, participants did not notice that PointAssist was enabled in some tasks.
The data obtained was analyzed using PASW Statistics 18.0.
We used Friedman's test for accuracy measures and repeated measures ANOVAs for the normally distributed data.
We see from figure 5 that 9 out of 16 participants improved with PointAssist, that is 56% of the participants improved.
6 out of 16 participants did not show any improvement, while one participant did better without assistance.
This is a very important indication that the personalization heuristic works.
Participant 10 was the only participant that did not improve which we attribute to the fact that he only underwent one iteration of the personalization heuristic.
We calculated the effect size using Cohen's d value which we found to be d=.78.
This indicates a large effect size of help vs. no help using PointAssist.
Cohen's d shows how big is the difference between the two means compared to the variability in the sample which we infer is high since participants have a wide range of disabilities and conditions that affect their pointing performance.
Figure 6 shows the click accuracy distribution for all tasks of the 16 participants.
Click accuracy results are further confirmed by a significant effect on press accuracy as well as on release accuracy from Friedman's test with 2 = 8.0, df=1, p=.005 and 2 = 4.45, df=1, p=.035 respectively.
We found Cohen's d=.70 for press accuracy and Cohen's d=.71 for release accuracy.
We found that half of the participants had better press accuracy with PointAssist than without PointAssist .
Nine participants had better release accuracy, 5 had no release accuracy change and two actually had some problems slipping away from the target with PointAssist on .
This means that we are helping individuals be more accurate on the initial clicking response.
Release accuracy was down in the case of no help indicating that PointAssist was indeed helping reduce the number of slips off the target, and we found this difference to be statistically significant in favor of PointAssist with p=.035.
This is an important result since slipping off target is a difficulty that most individuals with motor impairments encounter .
Participants were more accurate using PointAssist in tasks moving in the north direction and moving in the south direction.
We found a marginally significant effect of 2 = 3.6, df=1, p=.058 on accuracy in favor of PointAssist in both north-bound tasks an south-bound tasks.
We also found a significant effect in accuracy in favor of PointAssist with targets that measured 16 pixels, with 2 = 5.0, df=1, p=.025, and a marginal significance of 2 = 3.58, df=1, p=.059 in favor of PointAssist in the south direction with 8 pixel targets.
We found marginally significant differences of F  = 3.44, p = .083 on the effect that target size and PointAssist had on the average number of sub-movements.
This means that the effect of help on the number of sub-movements, changes depending on the target size.
This may be indicative of a pattern of different strategic approaches to pointing tasks due to perceptual feedback that the different target sizes provide.
It would be logical to think that a participant would feel more confident to reach a larger target thus prompting him or her to perform less sub-movements.
More tests need to be done to reach this conclusion but at least we see from the results that some pattern arises which is worth investigating.
A stronger indicator of a similar pattern is given when we look at the combined effect of target, direction and PointAssist on the average number of sub-movements per task.
We compare participants 11 and 20 to see differences between two different motor impairing conditions.
From these comparisons we see a trend indicating how direction plays an important role in differentiating when an individual is having difficulties.
Performance comparisons between two participants with Cerebral Palsy can be seen on Figure 11.
Participant 9 shows distinct patterns in different directions struggling in all directions but the south-bound direction.
Participant 4 has a more consistent pattern and no particular direction seems to be more affected than any other.
Figure 12 shows comparisons between two individuals with Carpal Tunnel Syndrome.
Participant 13 shows a pattern of movement slightly skewed to the right, while participant 14 has movements slightly skewed to the left.
Figures 9 and 10 show path plots from all participants in all directions for the cases with PointAssist on and PointAssist off.
Paths are in red in figures 9 and 10 when PointAssist's precision-mode activated.
As desired, the concentration of red is at the center of the images, coinciding with the location of the target.
Thus, in general, PointAssist behaves as expected.
From a qualitative perspective, performance with 8 pixel targets seems to be improved with PointAssist enabled as it appears there was less activity near the target.
Below, we compare participants for the purpose of providing qualitative examples of their performance.
Though many choices could be made we decided to compare select participants to illustrate main performance differences without being redundant.
Participants 4 and 9 have Cerebral Palsy, and Participants 13 and 14 have Carpal Tunnel Syndrome.
Differences in difficulty can also be seen in different directions.
For example, participant 13 had more difficulty initiating movement from starting points in the corners where participant 14 showed more difficulties initiating movement on the east and west bound directions.
Another sample comparison between individuals with distinct impairments is shown on figure 13.
Participant 11 being a stroke patient and participant 20 having Multiple Sclerosis are undoubtedly in distinct categories of performance difficulties that may very well be products of the same motor impairing condition.
Ataxia , which is found on both individuals with Multiple Sclerosis and individuals that suffered a Stroke, may be the cause of the fluctuating and erratic motion we see from both participants in different degrees.
However, participant 20 has a distinct repetitive pattern behavior which points more towards Myoclonus  than Ataxia.
Participant 11 would be the more likely case of Ataxis since this individual has an extremely erratic yet fluctuating behavior giving rise to the spiral looking picture in figure 13.
We consider sub-movements to be away from the target if they happen more than 60 pixels away from the target center.
It is possible that PointAssist may trigger precision-mode away from the target and we would consider those instances as false positive results.
The point of Phase I of the personalization process was to try to improve on the false positives by trying to predict their occurrence making a parameter selection that would effectively identify more sub-movements as difficult near the target than away from the target.
To show that Phase I worked as intended we should expect a low false positive rate.
There were a total of 553 tasks with PointAssist enabled and only 43 out of those triggered precision-mode more than 60 pixels away from the target center.
This yields a 7.6% false positive rate.
This rate is .7% lower than the false positive rate reported for young children  and 2.4% lower than the rate reported for older able-body adults , in previous PointAssist studies.
This shows that Phase I of the personalization heuristic yielded positive results and it suggests a future re-evaluation of the parameters used to identify difficulties for young children and older adults that may take into account similar personalization mechanisms.
Phase II of the personalization heuristic was in place to reduce the number of tasks we identified as being difficult near the target that did not trigger precision-mode.
Thus, false negatives are tasks that are difficult near target but do not trigger precision-mode.
Previous studies with PointAssist  identified tasks as difficult if there was target re-entry.
We found 212 such tasks.
Out of these tasks we found 5 where participants did not click successfully and precisionmode did not trigger less than 60 pixels from the target center.
This gives us a false negative rate of 2.4%.
With the same criteria for difficult tasks used in previous studies we found that from 212 tasks, PointAssist triggered precision-mode in 148 of them within 60 pixels of the target for a 69.8% true positive rate.
However, considering that during Phase II we also considered difficult tasks that had more than two sub-movements within 30 pixels of the target center, we also calculated the tasks that triggered precision-mode within 30 pixels.
Surprisingly, even though the range was reduced to less than half the distance to trigger precision-mode, we found that 144 tasks triggered precision-mode within 30 pixels of the target for a rate of 67.9% for true positives.
Considering how diverse the 16 participants are in terms of their motor impairments and how the results obtained for false negatives and true positives compare to what was found in previous studies of PointAssist, we can confidently conclude that Phase II effectively worked and that the personalization heuristic yielded satisfactory results.
Proposing a technique that can handle all possible interactions in a graphical user interface may be impossible but we can make a list of desirable properties that would at least avoid some of the pitfalls that prevent most of the techniques from being universally adopted or underused.
These characteristics would also comply with the fours pillars of personalized dynamic accessibility proposed by Gajos et.
There are many possible strategies that can be used for making software more accessible.
Our preferred strategy is to not count on having target information because it can be difficult to obtain it, and it often means that user interfaces need to be reconfigured, potentially bringing about additional challenges both for developers and users.
In some cases, it could be very difficult to define what is a target or to make it bigger.
Think about the spaces between letters in a word processing document.
At the same time, we recognize that it is difficult to get all users to high accuracy rates solely using target agnostic techniques.
Therefore, we see value in both approaches.
That said, we propose that an ideal assistive software technology should have the following properties: 1.
Should not interfere with the arrangement of objects on the screen.
Should not interfere with regular operation of the operating system and should not require any specialized drivers or hardware.
Should not help continously but only provide help when needed.
Should not require training to use.
Should help a wide variety of users with ample range of motor abilities.
Should automatically adapt to every user.
Apart from item 7, all other properties are satisfied by the current implementation of PointAssist.
Adaptation to every user is partially addressed by the research done here.
An automatic implementation of the personalization procedure that was manually implemented here could prove to be a solution in a future development.
As we look into future research we want to look at an automatic implementation of the procedure for personalizing the assistance provided by PointAssist.
Individuals with motor impairments that vary over time would greatly benefit from a system that can adapt to their changing and/or variable range in performance.
Instead of manual adjustments to the assistance, we will further explore implementing an automatic engine that would take care of periodically and automatically adjusting the assistance as the user's performance varies or as users with different motor impairments are encountered.
Learned statistical models have been used to identify users with physical impairments with 92.7% accuracy as well as novice and skilled users with 91% accuracy .
By looking at the characteristics of the sub-movements and implementing similar models as those used to distinguish between able-bodied and impaired users we can identify difficulties and variabilities within those difficulties that would help our personalization mechanism.
By extending PointAssist to individuals with Motor Impairments we currently have the only proven target-agnostic assistive technology that works with a variety of users, namely children, able-bodied older adults and individuals with disabilities.
Through our personalization mechanism we managed to adapt the system to the user, thus sharing the burden of system adaptation with the user.
These two reasons make PointAssist adaptable to many users.
We tested PointAssist and proved we could improve click success rates of individuals that undoubtedly had a wide range of motor skills.
Furthermore, through personalization we took each individual's needs and abilities into account.
Remote testing was effectively implemented for all the experiments we conducted.
This is a new trend in the field that points towards feasibility in data collection.
Participants with a certain set of abilities may be difficult to find and remote testing breaks the geographical boundaries that may prevent effective and feasible data collection.
This study was conducted using a controlled experiment that, though deployed to each participant's computer with their own personal settings, may not accurately represent realworld interactions.
With remote testing there is a risk of participants completing tasks over multiple days or sessions of use.
However, all tasks had a timestamp and the data confirms that all participants performed a full test in under an hour on the same day.
The highest average time completion per block was of 7.58 minutes by participant 22 with the longest block lasting 10.22 minutes and the test completed in 30.31 minutes.
All of these results confirm that the data collected was sound.
We intended to help all participants, but there were four  that proved to be very accurate, a result of possible habituation from the first test round.
