When unstable systems are being tested , this fact can influence users' comments and actions related to usability.
So instead of user testing, heuristic evaluation is a good method to perform early in the development process in order to uncover problems as soon as possible and with a relative low-cost.
It is a wellestablished method, popular with practitioners, which can ensure a usable interface for interactive television applications .
As Thomas & Macredie  have argued, if there are no specific guidelines, designers for interactive television would be forced to apply existing HCI guidelines.
Because of the essential difference between television and computers, designers would create a mix of ad hoc, company specific standards that are mostly incompatible and inconsistent, based on HCI knowledge stemming from an obsolete economical, social and technological environment.
In order to design new guidelines, the general principles of HCI need to be adapted to the properties of interactive television and the characteristics of the traditional television viewer .
Recently, several such guidelines to design interfaces for interactive television have been presented , focusing on the usability of interactive TV systems.
Currently, a new type of interactive TV applications is being developed: social television systems that allow remote viewers to interact with each other via the television set  or via PC .
Various social television systems and applications, enabling remote communication and interaction between viewers, are currently in development.
Although usability guidelines exist for interactive television to ensure a usable system, there are no sociability guidelines for designing or evaluating the social interaction these systems enable.
In this paper we present twelve sociability heuristics for evaluating social TV, based on several user studies with social TV systems.
In recent years, many interactive systems for use on television as well as web applications with TV content have been successfully introduced.
This so-called "interactive television" is no longer perceived as a failed experiment as it was in the late nineties .
Technological advances as well as the ubiquity of interactivity in everyday life using e.g.
As with many other consumer applications, the interface of interactive TV applications needs to be as simple as possible, to accommodate a wide range of users with different capabilities due to the widespread nature of television.
One of the challenges posed by user testing of interactive TV is the fact that users expect a seamless TV experience,
To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee.
For such systems, evaluating only usability is not enough.
Even if these applications are evaluated to improve their usability, it doesn't mean that the social interactions they are supposed to enable are well supported.
One could even argue that due to the social nature of television  interactive television in general can only be successful if it supports the social uses of television .
The term `sociability' is used to indicate these interface aspects that support and enhance social interaction with and through new technologies and applications .
Several research areas already focus for quite some time on this phenomenon, such as Computer Mediated Communication  and Computer Supported Cooperative Work .
However, specifically evaluating how well these social interactions are supported is only recently an area of research, e.g.
Similar to these last examples, interactive television can benefit from sociability guidelines or heuristics, but there are currently no well established guidelines for evaluating the sociability of social television systems.
Although some existing principles could be borrowed from CSCW, the specific nature of social television, such as enjoying a television program while communicating or using television content as conversation starter , warrant specific sociability heuristics for social TV in order to design wellfunctioning applications that support social interaction in a non-work related environment.
In this paper, we will present a set of heuristics based on several user studies that will help evaluators to assess how well these systems will support social interactions between viewers.
This paper is structured as follows: in the first part, we will review work related to creating heuristics, from general heuristics to domain-specific heuristics.
The second part explains the creation process of our sociability heuristics, which are described in more detail in the third and final part of this paper.
Later on, Nielsen  refined the heuristics by collecting seven sets of usability heuristics that were being used often at the time  and using them to explain 249 usability problems from 11 projects.
For each of the in total 101 usability heuristics, Nielsen assessed how well it explained each single usability problem.
All heuristics were then clustered based on factor analysis, resulting in the formulation of nine new heuristics.
In a later publication, a tenth heuristic was added .
Dykstra  created domain-specific heuristics for calendar applications in addition to the general usability heuristics.
According to Dykstra, the value of these domain-specific heuristics lies in the fact that they capture the productspecific knowledge of so-called double experts, people that are specialized in usability as well as in the specific domain of the software that is being evaluated, and put it in the hands of non-double experts.
He used competitive usability tests, during which several similar products are compared, in his case by testing five commercially available calendar applications for Microsoft Windows with seven participants, to detect usability problems with them.
By basing heuristics on actual user difficulties with software in a specific domain, Dykstra claims this will partially mitigate the tendency of heuristics to find more false positives.
Although there are no explicitly developed heuristics for evaluating the usability of interactive television, there do exist interaction or user interface design principles for interactive television.
Lu  surveyed the field of interactive television as well as existing design guidelines and challenges to formulate her interaction design principles for interactive television.
Chorianopoulos  took a similar approach, and explored the field of communication science, more specifically television and audience research, to create user interface design principles.
However, no user research has been used for the creation of these guidelines and the focus is mainly on usability, although Chorianopoulos does mention the social nature of television in one of his principles.
In the past, several sets of heuristics have been created, from general usability heuristics  to domain-specific usability heuristics .
More recently, heuristics that don't focus on usability but on playability  or sociability  have been developed, emphasizing the role heuristics can play in evaluating other aspects of new technologies.
We will first describe the creation processes of some of these heuristics that have inspired the process of creating our sociability heuristics for interactive television.
When presenting their nine usability heuristics for the first time, Molich and Nielsen  simply claimed that " checklist reflects our personal experience".
In another publication they state that " have developed this specific list of heuristics during several years of experience with teaching and consulting about usability engineering" .
The studies referenced in the previous section already present a variety of methods that have been used for creating new heuristics.
A common aspect of most  of these kind of studies is that the heuristics created are based on actual use of these systems by representative users, directly or indirectly.
We think that it is very important to base heuristics, be it usability or sociability heuristics, on actual user behavior on a variety of systems.
A crucial aspect of a competitive analysis is selecting the right applications to be tested.
We decided that our main focus would lie on applications targeted for use on a television screen and a ten-foot viewing experience, as these have a large impact on collocated social interaction as well as on remote social interaction.
Collocated interaction implies that multiple people are watching television and interacting in the same room, whereas remote interaction refers to different people watching television and interacting in different rooms.
This decision excludes internet based applications such as Lycos Cinema, which are mainly used individually on a computer, although some internet based applications can also be watched on television using a normal remote control.
As social television systems are in full development, and not commercially available yet, we performed user tests on several systems in development: AmigoTV , Messenger on Windows Media Center3, Communication Services on Interactive Television , Social TV  and Ambulant Annotator .
By using these specific systems, we were able to test the almost full range of social features currently available in Social TV systems such as voice and text chat, synchronous and asynchronous communication, recommendations, sharing content, emoticons, avatars or buddy lists.
Although new features can and will be created in the future, this range of applications and features offered us the best possible set of social television systems there is currently available and serves as an excellent basis for creating the sociability heuristics.
The competitive user tests we performed as a basis for creating our sociability heuristics were carried out between April 2006 and March 2008.
Ages ranged from 14 to 76 years old.
Each user test was performed in two connected rooms, of which one was a usability lab with a one way mirror.
The applications were operated with a remote control and/or remote keyboard and used on a normal television set.
All user tests followed the same pattern, including an introduction to the system, the test itself, a  interview and a couple of questionnaires, but as all applications were different, e.g.
In April 2006, we set up a controlled within-subjects lab experiment with AmigoTV  and Windows Messenger on Windows Media Center .
We performed six user tests with groups of people, in total 17 participants.
Ages ranged from 17 to 61 years old, including 9 males and 8 females.
The smallest group contained two participants, the largest group four.
One group  stayed in a usability lab where all the users' actions were recorded , and the other group stayed in a nearby meeting room  with approximately the same user set-up but no recording facilities.
We asked the test participants in advance to list their favorite television shows which they regularly discuss with friends or family.
These shows were recorded the week before the test and used during the test as the programs alongside which communication with the other group could take place.
Programs included football matches, drama series, reality TV, films and documentaries.
The order in which the applications were tested was counter-balanced.
The participants were asked to watch the television program, and communicate with the person or group in the other room like they would normally do with person in the same room.
They were not explicitly instructed to talk about the program or something else; this was left up to the participants.
In October 2006 we carried out nine user tests with Motorola's Social TV system .
In total 48 participants took part in these tests with 19 male and 29 female participants and ages from 25 to 65 years old.
The smallest group contained three participants, the largest group nine.
In each of the groups, all participants knew each other well, and were either friends or family of each other.
After an explanation of the system, participants were instructed that they could find a television show to watch the next twenty minutes, and they could communicate with the other participants.
Live broadcasting was used for this test, providing a wide variety of television programs for the participants to find a suitable show.
The second iteration of user testing was performed in July 2007.
Since the first iteration, some functions were redesigned and new functions had been added to the application.
In total, ten tests were performed with 33 participants.
This time, the smallest group contained two participants and the largest group five participants, with ages ranging from 18 to 68 years old, including 17 male and 16 female participants.
During the test, the groups of friends or relatives were divided in two: part of the participants stayed in one room and used the CoSe application to communicate with the other group in a separate room, about 100 meters away from the first room, so a sense of distance was present.
Again, users were given a set of tasks to perform, but this time we gave the participants 15 minutes during the test to communicate freely with the other group using the system.
Four recorded programs were provided for the test, and the participants could switch between them like they were used to with their own television.
In the first half of 2007, we worked together with Siemens and Coeno GmbH in an iterative design process for the interface of the CoSe application .
As part of this process, we performed two iterations of user testing with the CoSe interface .
In March 2008, we performed a user test with the Ambulant Annotator system .
The system included clips from two documentaries and several film trailers that the participants could send and receive.
Twelve user tests were performed with groups of users.
Each group consisted of two to five people that knew each other well, either as friends or as family members, and sometimes a mix of both.
In total 36 participants took part in the test, with ages ranging from 14 to 72.
As for gender, 13 participants were male and 23 participants were female.
The test sessions took place in a simulated living room and consisted of two main parts: a collocated test situation  and a remote test situation.
The first iteration of user testing took place in February 2007, and included ten test sessions with in total 15 participants.
In half of the test sessions a single user participated, the other half involved couples .
The ages ranged from 16 to 76 years old.
Eight participants were male, and seven participants were female.
When there were two participants, they stayed together in the same room and the remote chat activity was taken care of by a separate researcher.
In the second part of the test, the group was split into two sub-groups.
One sub-group  stayed in the simulated living room, whereas the other sub-group  was led to a separate room.
For this part of the test, the participants in the living room were asked to edit and annotate clips to send to the participants in the other location.
This resulted in a smaller set of categories of sociability issues, which we subsequently reworded as heuristic guidelines and then checked if each single issue that was listed under this heuristic was covered by this formulation.
Although this process might seem to involve many similar steps in coding, analyzing and clustering, it is consistent with the emphasis on constant comparison in Grounded Theory , and ensures a well-founded set of categories.
The user tests we carried out as described in the previous section, provided us with several hours of digital video files,  transcripts of each session, 149 questionnaires and 68 transcribed interviews.
These raw data needed to be analyzed systematically in order to distill the issues related to social interaction from them, and then translate them into sociability guidelines.
To broaden the scope of our analysis, we also analyzed user studies of several other social TV applications that are reported in papers or book chapters , although the amount of data reported was less rich than from our own user tests.
Because we are aware that user tests in a usability lab are more artificial than a real-life situation, and could not capture all sociability issues, we decided to additionally include in our analysis reports of three field studies with social television systems.
The systems included in this extra analysis are CollaboraTV , Social TV  and ConnecTV .
These reports included much more information that reflects the  context and environment of the participants in a real-life situation.
We imported all data from the user tests into the qualitative software package QSR NVIVO8.
We first started with the open coding of our own user tests, which resulted in 15 high level codes.
Using a process called axial coding, the 15 codes were enriched by writing down related concepts, resulting in ca.
The 55 concepts were then clustered in 6 main groups and 17 subgroups.
Because of some overlap between concepts, 45 low-level concepts were retained.
With these new codes, we recoded our user tests, and additionally coded the reports of other lab tests and field trials.
As a result of this process, a few new codes were added, which we immediately clustered in existing categories, and some codes that were not used were removed.
It is important to note that these codes do not represent single sociability issues, but were used solely as a way to detect and collect similar issues with social interaction in the different systems.
Finally, the sociability issues that the codes referred to were compiled, resulting in an aggregated set of 70 separate sociability issues.
As each of these issues was very specific, and they were not all formulated as guideline, we first had to cluster similar issues into the same category, in order to create a classification of more general sociability issues.
In this section, we introduce the sociability heuristics derived from the data as described in the previous section.
For each heuristic, we will first discuss the background and context of the heuristic, based on our data.
We then present the heuristic, along with a short explanation that should help the evaluator to use the heuristic during a sociability evaluation.
Some heuristics are related to others, or should take other heuristics into account as well.
When this is the case, we will refer to that heuristic by its number.
One of the basic functions of most social television systems is supporting communication between remote television viewers.
The first issue that arises when implementing communication tools is whether to enable text chat or voice chat, or maybe even both.
However, our data indicates that offering both modalities is the preferred option for users.
This allows them to choose the communication modality that best fits the situation and their own experiences.
The older users in our tests were less adept at chatting and multitasking, and preferred voice chat, whereas the younger users preferred text chat .
However, if only one option can be chosen, due to technical or budgetary reasons, one has to carefully select the right modality, based on the intended user population and context of use.
Whatever communication modality is chosen, users clearly like a wide range of communication options.
The field studies we analyzed  have shown that when restricting communication channels, e.g.
This means that users need full communication possibilities.
This doesn't mean that other ways of communicating should be abandoned.
Lightweight messaging such as emoticons, small generic messages or gestures that convey interest in a certain show were used extensively by our test users and all enrich the way users can communicate with each other through the system.
Indicating who is talking, giving feedback when a reply is being typed or offering a simple way to control the audio, all ensure that communication between users goes smoothly.
Offer different channels and levels for communicating freely Enable voice chat as well as text chat if possible, otherwise use voice chat for a broad user audience including people with little chat experience or text chat for a specific audience including people with chat experience.
Allow communication on different levels, from low-activity quick responses such as emoticons, gestures or automatic replies, to free-form communication.
Make sure the communication process is optimally supported so it can go smoothly.
In computer-mediated communication, indicating presence is an important feature that supports awareness and enhances sociability .
Offering more information than just presence provides even more awareness for the users.
In a social television system, awareness features can enable other viewers to see who is currently watching television, what channel they are watching and even what program.
There can be several levels of presence indication, from a simple `someone is watching television' to the names of the people that are watching television to a list of buddies that each have a status and indicate the channel and program names they are watching.
The systems which provided most information were most appreciated by our test users, as this is an excellent way of indicating to other people that they can talk to their friends or family, whether or not about the current program.
Even though there might be some privacy issues , our test users said they value information of other user's viewing behavior and usually don't have a problem of sharing this information for noncommercial reasons.
One way of indicating presence, is using a status to convey availability, as found in several instant messaging clients.
Having a good presence and awareness system helps to show these availabilities.
Such a system could not only be active while the television set is turned on, but also use more ambient ways of conveying presence, as in one of the analyzed field studies .
Use awareness tools for communicating availability Provide a means for indicating presence, and giving information about the current behavior of other users.
There can be several levels of presence and awareness indication, from a simple `someone is watching television' to a list of buddies that each have a status and indicate the channel and program names they are watching.
These tools should indicate if a user is available to chat or otherwise interact,
Similar to other communication tools, social television can support synchronous communication as well as asynchronous communication.
This distinction is similar to the traditional social uses of television, where people can either talk or interact while watching television, talk about television afterwards or even before watching television .
Accordingly, social television systems can support synchronous use as well as asynchronous use.
For example, a user can send a recommendation to watch a specific show to a friend.
When the show is currently playing, and that friend is currently watching television, he can immediately tune to the recommended channel to start watching the show and use the communication features of the system to talk together.
However, our test users mentioned several situations in which that friend might not to be watching television at that moment.
He might just not be at home at the moment, or not watching television, but he might also live in a different time zone on another continent.
For these and other reasons, our test users wanted recommendations to be saved somehow so that the next time they start watching television, they can see that a show was recommended and choose to start watching on demand or the next time the show is aired.
Allow both synchronous and asynchronous use Provide different functionalities for interacting and communicating synchronously as well as asynchronously, so users do not always have to be using the system at the same time, but can also benefit from it when they are using it at different times.
Even though television can be a solitary activity, the dominant model for watching television has been and mostly still is a social activity, meaning that multiple people are watching television in the same location.
With the advent of social television, however, communicating and interacting around television can also happen at the same time, but in different places, or even at a different time at different places.
Although this seems rather straightforward, it gets more complicated when there are multiple people in the same room and different people at other locations, as we simulated in all our user tests.
This means a social television system should cater for both collocated and remote audiences.
For example, during our user tests there were frequent side-conversations where two people silently talked to each other to say something private and/or in order not to disturb the other viewers.
This can be supported in social TV either collocated, where a voice enabled system might allow users to temporarily mute their own sound to talk freely, or remote, where a text chat system might provide a separate chat window for talking to someone outside of a group conversation.
A social television system should also be careful not to break any of the two, because this might result in a good experience for the remote users, but not for the relationship between the collocated viewers.
For example, Ambulant Annotator, CoSe as well as AmigoTV had system menus or certain features that overlaid much of the screen.
Even though the users that had initiated the action did not find this a problem, their co-viewers were usually following the television program and were annoyed by their actions.
This is a careful balance that should be considered for each function .
Support remote as well as collocated interaction As social television systems can be used with multiple users at the same location  simultaneous with different users at other locations , it should make sure its functions are appropriate for both situations, and do not disturb the interactions between collocated or remote viewers.
Although we do not intend to repeat basic usability heuristics with our sociability heuristics for interactive television, we feel this is such an important heuristic with severe implications for the sociability of such systems, that it needs inclusion here.
In several of the user tests we performed, as well as those reported in the literature we analyzed, users expressed concerns about certain features for several reasons  and indicated they would like to control different aspects of the systems they used during these tests.
This ranged from deciding what information they would like to convey to whom, controlling voice or text chat activity , how to send and receive notifications, etc.
In order to support this, users should on the one hand be able to change system settings to suit their own  preferences and on the other hand be able to have different options for specific functions .
The possibility of tailoring actions and changing settings should however not break the lean-back nature of television  and not disrupt or distract from the television program .
Give the user appropriate control over actions and system settings Users should have sufficient control over their actions and system settings, so they can adapt the system or specific features to their needs or to the current situation.
Heuristic #2 discusses presence and awareness, including showing information about a user's current activities, such as what channel or what program he is watching.
This can be taken a step further, by using the information of current and  past information in specific functionalities.
Information about a specific program can for instance include functionality to switch to that channel directly or, more extensively, a shared television guide  can contain information about which television programs are most favored by a user's buddies and even record popular shows from buddies automatically to a user's personal video recorder.
Similarly, a system can provide recommendations based on other buddies' watching behavior.
A history of other viewers' behavior can also give a good indication of favorable viewing times, to make sure there are friends or family members available for talking or interacting, as indicated in one of the field studies .
Exploit viewing behavior for informing and engaging other viewers Use information from a user's viewing behavior not only for showing currently viewed programs, but also for creating functions that aid communication, social interaction or recommendations for other users.
The social nature of watching television has several consequences, one being that users not only want to protect their own personal privacy, but also privacy related to the group situation.
Regarding personal privacy, not everyone is keen on sharing information about all television programs they are watching.
This has been raised in several of our user studies as an important concern, where  users indicated they don't want friends or family to know they are watching e.g.
Another privacy related issue has to do with video communication.
Although this hasn't been implemented in any of the systems that have been analyzed for creating these guidelines, it was mentioned by some participants during the group interviews as a useful feature.
However, most users indicated they would feel it intrudes their private space, or they would not be dressed appropriately when watching television.
If a system would have a video communication feature, users should be able to activate or deactivate it for privacy reasons.
On the other hand, group privacy relates to the collocated situation in some instances.
In one of the field studies  as well as in a lab study  we analyzed, a user on one end said something that a collocated user on the other end wasn't supposed to hear.
This led to all sorts of awkward situations, which should rather be avoided.
Guarantee both personal privacy and group privacy Make sure the system enables users to ensure their own personal privacy, by choosing what  to disclose, as well as group privacy, by taking into account the presence of multiple viewers in a collocated viewing situation.
Minimize distraction from the television program Design system features so there is not too much distraction from watching the television program.
Specific tools can help users control if they want to be distracted or not.
Distraction of other collocated viewers should also be taken into account and minimized.
The main purpose of television remains entertaining or informing viewers with television programs.
When new features are added that enable communication or interaction via television, these features should not interfere too much with the content that is being shown.
This means that interaction with the system needs to be as easy and fluent as possible, so that attention to the system is minimal, and viewers can pay sufficient attention to the program itself.
Especially the genre of a program influences how much attention is needed to the television screen .
Both text chat and voice chat is taking some attention away from the audiovisual content on screen.
Although this usually does not stand in the way of enjoying the experience , the system should be designed so that this distraction is as minimal as possible.
Making screen elements not too large, putting them in the visual periphery , enabling quick access to frequent functions and allowing automatic replies or short lightweight messages to be sent, all helps in minimizing distraction.
The text chat features that obscured the screen  or reduced the screen size  were not liked by our test users.
A helpful tool for users to decide if they want to be more engaged in interaction or not, is the status "don't disturb".
When in don't disturb mode, there should be some small unobtrusive indication when something is happening, otherwise, users won't notice that someone is trying to chat.
In the test with Windows Messenger, users did not receive any notification, and only noticed after a long time that they missed a whole conversation.
However, this notification should be unobtrusive and users should be able to ignore it  or act on it when they feel like it.
A collocated viewing situation brings up another issue: when one user was interacting with the system in our tests, and several menus or other messages appeared on screen, sometimes even overlaying parts of the content, this disturbed other viewers.
When using social television systems, users interact with each other in different ways.
This can be explicit communication, using text chat or voice chat, but it can also be less direct and involve a recommendation that is being sent or even implicit interactions of users that change the television channel or ignore a sent recommendation.
As with traditional usability, where feedback is needed about how the system responds to user actions, a sociable system should also provide feedback about actions or responses of other users.
When our users sent a recommendation to the remote users, they wanted to know if they accepted the recommendation or not, which was not always the case.
A notification from the system when a user starts watching a certain channel or leaves a certain channel helps in the communication process, so users know if they have common ground to talk about.
Of course, when giving the user a notification, this should not interfere with heuristic #8 that states that distraction from the television program should be minimized, otherwise users can get irritated about these.
It's also advisable to make this a controllable feature, so that some users can disable them if wanted, or choose which ones they would like to receive and which ones not.
Notify the user of incoming events and situation changes When users are requested to respond to an action of another user, notify them visibly or audibly of these incoming events.
When there are changes in another user's situation, e.g.
As a social television system will usually be used at the same time as watching a television program, its features should be in some way adapted to the content that is being shown.
This is less straightforward than it might sound, as this content is very heterogeneous.
Television programs  are classified into different genres, that each induce specific audience reactions or user experiences.
Television program genres range from movies, drama and soap opera to reality TV, news and sports.
One differentiator between these genres, having an impact on social television systems, is the plot-
As different genres were used in our user tests, it was clear that the more plot structure a genre has, the more attention our users had to pay to it to follow the program.
Genres with high plot-structure were less suitable for synchronous interaction and communication, as chatting demanded a lot of attention from the users as well and interfered with following the plot.
News, soap, quiz and sport were genres during which people indicated talking a lot while watching.
For designing features for synchronous social TV systems, these genres are most suitable.
On the other hand, film and news are genres our users indicated talking a lot about and which they would also like to share, while documentaries and music programs also scored high in this regard.
This means that the focus of asynchronous TV systems  should be on these genres when designing features for these systems.
During the test with Ambulant Annotator, users indicated that genres also play a role in the platform that they use to watch their television content.
As users nowadays have several options to watch television or video content , they can also choose what content they want to watch on which device.
Documentaries and movies are preferably viewed by our users on television, in contrast to the weather or breaking news, which people prefer to watch on their mobile phone.
Not only plot structure, but also the length of the content plays a role in choosing a platform to watch this content.
For example, mobile phones are preferred for watching short clips.
Adapt to appropriate television program genres Take into account the properties of television genres, such as the plot structure and social uses of certain program genres, and offer features or settings that are appropriate for these genres.
The system should be tailored to television genres that are more suited for the synchronicity of the interaction or for specific platforms.
As users often have access to different devices to watch content next to television, such as a computer or a mobile device, they wanted to be able to send and receive content on these devices as well, and easily transfer it from one device to another device.
Let users share content flexibly When enabling sharing content with other users, make sure users can send content to and from different devices.
They should be able to edit the content as they wish, and add some form of commentary to it.
As much as possible, integrate sharing content with other features of the social television system.
Social TV is not only about communication, but also about sharing activities.
Examples are watching the same television program at the same time, choosing which programs to watch, recommending a favorite television show, pointing out a funny scene, etc.
Features that make it easy to start and maintain these activities or even encourage them were heavily used or requested by our test users, such as accepting  invitations to watch together, a shared remote control to pause or fast forward content or a shared program guide that allows several people to choose a television program to watch.
Of course, just offering these features is not sufficient.
They should take into account the specific nature of television, which is already covered by other heuristics such as heuristic #4 or heuristic #8.
There are however also specific aspects of sharing activities.
For example, when watching content together, users often wanted to refer to something that was happening on screen during our tests and with text chat, a delay when typing made this problematic.
A system that enables an accurate way of supporting this will enhance the sociability of communicating about television content.
Encourage shared activities Allow users to easily start and maintain shared activities around the television content, such as communicating, watching together, choosing programs or controlling the content.
Make sure sufficient information about these activities is provided so efficient communication and interaction is enabled.
Currently, user-generated content  is created and shared in large amounts.
Although a lot of it is publicly available on sites such as Flickr or YouTube, even more UGC is hidden because it is only shared privately, often not online but by exchanging videos or DVDs or showing visitors vacation snapshots.
It is therefore no surprise that in all our user tests, people expressed a wish to be able to share content; either created by themselves or broadcasted content that they have recorded.
Legal issues aside, there are many benefits to social interaction that warrant social television systems to enable the sharing of content.
Sharing UGC or professionally edited content alone is not sufficient however.
The users in the test with Ambulant Annotator highly appreciated the options to edit the content, e.g.
The twelve sociability heuristics presented in this paper offer designers and evaluators of social television systems guidance when implementing or evaluating tools for supporting and stimulating social interaction.
We spent a lot of effort on grounding the sociability heuristics in actual user behavior with social television systems, to ensure that the heuristics reflect real issues with real users.
It is however necessary that in future work, these sociability guidelines are validated to assess their applicability.
Unfortunately, since no social TV systems are commercially available yet, it is currently not possible to thoroughly validate the heuristics, as we believe only longterm use in a real-life context can be used to detect real sociability problems to be compared to the problems found with our heuristics.
We hope that our sociability heuristics can already be a step towards creating successful social television programs and services as this is an opportunity to make guidelines available before any of these systems are launched and have an impact on the systems that are in development, rather than after they have been launched.
Enhancing Social Sharing of Videos: Fragment, Annotate, Enrich, and Share.
Chorianopoulos, K. User Interface Design Principles for Interactive Television Applications.
In International Journal of Human-Computer Interaction, 24, 6, Taylor Francis  4.
Coppens, T., Trappeniers, L. & Godon, M. AmigoTV: towards a social TV experience.
In Masthoff, J. Griffiths, R. & Pemberton, L.
Using heuristics to evaluate the playability of games.
In CHI 2004 Extended Abstracts.
Dourish, P. & Belotti, V. Awareness and Coordination in Shared Workspaces.
A Comparison of Heuristic Evaluation and Usability Testing: The Efficacy of a DomainSpecific Heuristic Checklist.
Geerts, D. Comparing voice chat and text chat in a communication tool for interactive television.
