In games where skills such as targeting are critical to winning, it is difficult for players with different skill levels to have a competitive and engaging experience.
Although several mechanisms for accommodating different skill levels have been proposed, traditional approaches can be too obvious and can change the nature of the game.
For games involving aiming, we propose the use of target assistance techniques  to accommodate skill imbalances.
We compared three techniques in a study, and found that area cursors and target gravity significantly reduced score differential in a shooting-gallery game.
Further, less skilled players reported having more fun when the techniques helped them be more competitive, and even after they learned assistance was given, felt that this form of balancing was good for group gameplay.
Our results show that target assistance techniques can make target-based games more competitive for shared play.
Methods in video games include automatic catch ups in racing games to bring slower players back into the action, differential capabilities , or score-based changes .
The fact that skill-accommodation mechanisms have been invented in so many different contexts shows that balancing for differing skill levels is an important concern for game designers.
However, there are still problems with traditional mechanisms.
First, they are often too obvious to players - it is often clear that one player has been given an advantage to make up for a lack of skill.
This can lead to feelings of artificiality ; and many players do not want to win a game only because of an advantage.
Second, traditional accommodation mechanisms can change gameplay - such as when players have different weapons, or must achieve different objectives; in these cases, two people can end up playing different individual games rather than one shared game.
Third, traditional methods are usually static - they are defined and set before the game.
If the accommodation is incorrectly calculated , the game can remain unbalanced.
Overcoming these problems could improve group play for users with different skill levels.
In this paper we present the idea of using target assistance to accomplish these goals for games that involve aiming and shooting.
Target assistance has been seen in games before - to reduce variance in game controllers, or as a way to cheat in online shooter games.
The techniques have not previously been used to balance different skill levels, but since they can be applied differentially to different players, they hold considerable promise for these situations.
Target assistance can also solve the problems of traditional balancing mechanisms: they are often minimally perceptible ; they need not change the basic interactions with a game; and they can be changed adaptively, scaling assistance as needed.
To test the usefulness of target assistance as a balancing technique, we carried out a controlled experiment with pairs of differently-skilled players in a simple shooting-gallery game.
The experiment compared the effectiveness of three techniques 
Many kinds of video games, such as shooting or driving games, involve competition between two or more players.
In these games, success is based on motor-control skills such as aiming or steering - and for the game to be evenly matched, players skill levels must be roughly equal.
If one player is far more skilled than the other, the game will not be competitive and will be less fun to play.
Because many games rely on competition as means to provide fun, finding ways to provide an evenly-matched contest is desirable.
Several approaches have been used to address imbalance between players of different skill levels.
To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee.
Techniques were tested in both a static mode - providing a fixed amount of assistance to the weaker player - and an adaptive mode - where assistance is scaled based on the current score differential.
Our study showed that games were more balanced with area cursors and target gravity than when no technique was used.
These techniques reduced the average score differential from 47 points with no technique to less than 10 points, and the static versions resulted in the weaker player winning about half the games.
The study also showed that the target assistance techniques were not perceived by the players, did not affect player ratings of fairness, and improved the sense of fun for assisted players while not affecting the fun had by non-assisted players.
After we revealed that one player had been assisted, 22 of 24 participants agreed that balancing the game benefits group gameplay.
Our study is the first to show that target assistance can be an effective tool for improving competition in situations where players have different skill levels.
Our results provide game designers with new tools that can extend the enjoyment of shared gaming to a much wider audience.
Increasing the target size in both visual and motor space still leads to problems, such as occlusion .
When the space between targets is not used for other purposes, the effective area of targets can be increased by enlarging the size of the target or the activation size of the cursor.
The area cursor technique  increases the size of the cursor, from a single point to a larger square area.
This effectively increases target size - a target may be selected when any part of the cursors square intersects any region of the target.
A major drawback of area cursor is the problem of the cursor intersecting multiple targets; it cannot determine which is the intended target.
DynaSpot addresses the major drawbacks of area cursor by only increasing the area of the cursor at higher movement speeds, and reducing it to a single point for slower, more precise targeting .
Another approach is to allow the cursor to make selections even when it is not within a target.
Bubble Cursor maps every point in the display to the closest target, allowing selection regardless of the actual cursor location .
A third approach for increasing width, called sticky targets or pseudo-haptics, changes the control-to-display ratio of the input device when the cursor is over a selectable target .
The user must move the pointing device farther to achieve the same cursor movement, effectively increasing the motor space of the target.
User perception of CD manipulation is not strong - low to moderate levels of the effect are rarely noticed .
The goal of target assistance is to help users select onscreen targets quickly and accurately.
The underlying principles of aimed movement are well understood.
In particular, Fittss Law  states that targeting difficulty is predicted by the index of difficulty , which is calculated based on the size of the target  and its distance from the starting location  .
Selecting a target involves three phases : a ballistic motion, a corrective phase, and a final acquisition phase where the pointer is moved into the target and the selection action is performed.
Assistance techniques have been directed at all of these phases and can be organized into three groups: manipulation of amplitude, width, or both .
We briefly review this work to provide the basis for our investigation into target assistance in video games.
A third class of techniques changes both the size of the targets and their distance.
Some CD-manipulation techniques alter the cursor position throughout the targeting motion , rather than just over the target.
Force fields  and target gravity  are two such approaches.
The techniques warp the cursor by increasing motions toward the target, and motions away are decreased.
A similar technique leaves magnetic dust around windows and widgets as they are used.
Dust accumulates over time and frequently used interface elements become more attractive .
The TractorBeam technique for distant pointing on tabletop displays compared increasing target width and decreasing target distance .
Users performed equally with both techniques .
One class of techniques reduces targeting time by reducing the distance between the pointer and target.
Some techniques move targets closer to the cursor ; the decision about which targets to move is determined by a command gesture or by the initial movement of the cursor.
Other techniques warp the cursor to the target by predicting the end location of the targeting motion .
Both methods work well for large displays, but prediction of the final position of a moving cursor remains a problem .
Flow is a balance between anxiety and boredom , and is an important part of game design.
To achieve optimal flow, games must balance challenge and skill .
If a game is too easy, players may become bored.
Conversely, if a game is too hard, players may become frustrated.
In this section, we explore game play balancing and player balancing.
Competition is a contest between two or more players, and has been shown to be a motivating factor for participating in multiplayer video games .
To maintain flow, competition between players must be balanced - that is, players of equal skill and experience have an equal chance of winning .
If a player or group has an advantage, opposing players may have to perform at a higher level than the advantaged players, and may be incapable of winning the game.
If unbalanced game elements are exploited, the advantaged player may no longer be challenged, and the disadvantaged player may quickly become frustrated .
Therefore, balancing game elements is an important aspect of video game design that has been recognized in industry, where simulations and extensive play testing are often used to uncover potentially unbalanced game elements .
Adaptive difficulty adjustments alter game elements in real-time based on performance .
Adaptive difficulty adjustment has been applied in various game genres for single and multiplayer games.
A version of the classic Pong game was implemented to support play among children and parents of different skill .
Players racquet lengths, movement speed, and incoming ball speed were adjusted based on performance.
Generating game content  based on the ability of the player is another approach ; for example, Infinite Mario provides endless new game levels that are suitable for a players ability .
Many arcade-style racing games include "catch -up" or "rubber band" systems that provide advantages to a losing player.
For example, in Mario Kart trailing players receive items that give them a greater chance of capturing the lead .
The "fatboy" modification of Unreal Tournament adjusts the size of a players avatar, increasing its width based on the number of kills scored.
This makes successful players easier targets than losing players.
Adaptive difficulty adjustments have several potential limiting factors.
For example, the "catch -up" effect that occurs in Mario Kart can lead to a sense of frustration as more experienced players begin to feel cheated , and scaling game difficulty based on a players progress can result in the player losing their sense of achievement .
Although games often provide optimal game play balance, it can be difficult to balance the differences between players .
In video games, players have varying skill, experience, tactics, and reaction time , and because many games reward skill, novices can have difficulty playing against experienced players.
We review three common approaches for addressing the differences between players below.
Grouping players by their abilities is one technique used to adjust competition.
For example, ranking and ladders are often used in sports and traditional games .
Similarly, many multiplayer online games track performance to match players and balance teams .
TrueSkill assesses player skill based on a number of game outcomes using Bayesian networks and the Elo chess scoring system, and has been widely used in games such as Halo 2 .
A limiting factor of matchmaking is that it requires a measure of player skill, which can be difficult to determine when players initially join a game .
Games involving aiming tasks often include some form of computer-supported target assistance.
Many FPS consolegames include target assistance in order to address the lack of precision when aiming with a thumb-stick on a gamepad .
Alternatively, third-party software called "aimbots" have been developed to provide target assistance for many FPS games .
These systems are often considered as "cheats" by serious gamers , as they may provide an unfair advantage.
Common approaches for target assistance include: reticule magnetism and target lock-on.
Reticule magnetism, like the sticky target technique, works by adjusting the control-to-display ratio during targeting; as the reticule  passes over a target, it moves more slowly.
This technique is common in FPS console games , as it can be difficult to make fine aiming adjustments using a gamepad or thumbstick .
Reticule magnetism can, however, lead to unexpected acceleration of the cursor.
As a player moves off of a target, friction is no longer applied, causing the cursor to swing rapidly in the direction they are being moved .
Locking a players cursor onto potential targets is another form of target assistance in games .
For example, pressing a button on the gamepad will lock the cursor onto nearby enemies in games such as The Legend of Zelda: Twilight Princess.
A potential downside of target lock-on is that the cursor may lock onto an unintended target as they attempt to aim.
Providing unique tasks is another approach for addressing skill differences.
Many team sports include several roles requiring different skills.
For example, positions in American football differ between roles; the quarterbacks job is to handle the ball on every offensive play, while an offensive lineman may play many games without ever touching the ball.
Asymmetric roles can also be found in video games.
Some multiplayer games  require players to fill several roles to succeed .
Asymmetric roles allow players with different skill sets to play together; however, a team may be limited by the performance of the weakest member.
Further, the use of asymmetric roles does not address the situation of competitive play.
Target stickiness was applied when the cursor was over a target by changing the CD ratio of the input: the lower the ratio, the stickier the target.
For example, a ratio of 0.4 meant that a movement over a target would result in only 40% of the normal on-screen cursor movement.
A previous study of sticky targets with the Wiimote found that the accumulated difference between cursor position and Wiimote position from passing through sticky targets could lead to increasing cursor drift .
While not a problem for player performance, the infrared light source could become out of range of the Wiimote camera after accumulated cursor drift.
To side-step the issue, our implementation returned the cursor to the position it would have otherwise reached had it not passed through a sticky target.
This design choice resulted in the cursor rapidly accelerating off targets when exited or shot, and has also been described in observations of cursor magnetism in practice .
We designed a simple shooting-gallery game where the goal is to score points by shooting on-screen targets with a Nintendo Wii Remote .
A cursor  is displayed for each player  at the absolute position reported by the Wiimote.
Players score a point for shooting a target and lose a point for each miss.
Targets are shot by placing the centre of the cursor  over any region of the target and pressing the trigger.
Sound feedback identifies hits and misses.
Visual feedback shows hits and misses with a +1 or -1 at the shot point for one second, in the same colour as the players cursor .
We created five game levels that varied the size, movement, speed, and time of appearance of the targets.
The goal was not to fully enumerate the space of target behaviours, but to create several interesting levels of increasing difficulty.
The game was built using C# and XNA 3.1 with a screen refresh rate of more than 60 fps.
The system ran on a Windows 7, Intel Core 2 Duo machine and a Dell 42-inch, 1024x768 plasma screen.
Participants sat on a couch or stood approximately 250cm from the screen.
Target gravity  is similar to the force field technique ; but instead of restricting a targets attraction to a limited range, all targets provide an attractive force.
Because target gravity is inversely proportional to the square of the distance between the cursor and target, the influence of a target decreases rapidly at greater distances.
Our gravity effect is calculated as follows.
For n targets, let p1, p2,..pn be the positions of the targets with radii r1, r2,..rn.
Let p0 represent the true position of the cursor , and let pw be the warped position.
Let G be the gravitational constant .
Then, for each target i=1..n, compute the target weight with Equation 1.
Finally, compute the warped position of the cursor using Equation 2.
The warped position is a weighted average of the true cursor position and the positions of each target.
The weight for the cursor position is fixed at 1.0.
Manipulating G changes the strength of the gravity effect, and bigger targets provide more gravity .
Target gravity has been shown to improve performance using a Wiimote .
We chose three techniques that have been considered in prior target assistance research: sticky targets that change effective target width when the cursor is on the target ; target gravity that attracts the cursor towards targets ; and an area cursor that increases the size of the affected area when a shot is taken .
These techniques were selected because we felt they would improve performance, yet offer low perceptibility.
Further, because these techniques do not fundamentally change the on-screen appearance of targets or the cursor  or the way that targets are selected  they may be widely applicable in real-world video games.
We tested these techniques using both static and adaptive target assistance.
The static approach provided a constant level of assistance, while the adaptive approach adjusted the assistance depending on the difference in score.
Our area cursor implementation is closely related to the original implementation , but in order to minimize perceptibility the physical size of the cursor remains consistent.
Further, our technique does change how targets are selected or how the appearance of intersected targets, like newer related techniques .
However, like the newer techniques we use a circular activation area.
The effect was imperceptible to the users before shooting.
After shooting it would be possible for them to perceive the increased activation area.
We conducted a pilot study to determine the levels of static assistance and upper limits for adaptive assistance.
Eight participants tested 10 levels of each technique and rated how noticeable the assistance was on a 10-point scale.
We chose technique levels that combined performance improvement with low perceptibility.
For the static levels we chose: area cursor, an area 52px in diameter; sticky targets, a CD-ratio of 0.2; gravity, a gravitational constant of 2.0.
We also chose the upper limits of the adaptive assistance techniques.
For sticky targets, a CD-ratio of less than 0.1 could make fast moving targets unselectable; the CD manipulation would slow the cursor too much to keep pace.
A gravity constant greater than 6 could make it difficult to reach all targets, because the force exerted by closely-spaced targets was too strong to overcome.
No upper limit was observed for the area cursor technique, although large area cursors could allow multiple targets to be hit with a single shot.
Adaptive assistance used the following algorithm.
If the assisted players score was greater than or equal to the unassisted player, then provide no assistance.
Otherwise, give 10% of the static level for each point the assisted player trails the non-assisted player.
For example, if the assisted player trailed by two points using the gravity technique, the resulting gravity coefficient would be .4 .
After each game the experimenter would announce the final score on the final transition screen to ensure participants were aware of their performance.
After each of Games 2-9, players answered a survey where they reported on their experience with the "controller algorithm."
After the experiment, players were given another questionnaire that asked for their impressions of the game, their performance and the performance of their partner.
The experimenter then revealed that the controller algorithms gave assistance to just one of them, and that the goal was to keep the game competitive and to make it more fun.
They were told which player received assistance, and that this decision was based on their individual games.
A final survey solicited their opinions on game balancing.
We recruited 24 players  who were undergraduate students , graduate students , or university staff .
Participants were paired with a participant whom they did not know , or with a friend .
Of the 12 assisted players , half reported not typically playing video games, with the rest spending under 3 hours per week.
They rated their expertise with the Wiimote an average of 1.75  on a 7-point scale , and five reported having played a shooting-gallery type game before.
Of the 12 non-assisted players , all but one played video games regularly .
Non-assisted players rated their Wiimote expertise an average of 4.7  on a 7-point scale and all had previously played shooting-gallery games.
Participants were tested in pairs and were told that they would be competing in a shooting gallery game where we were testing new "controller algorithms" for the Wiimote.
Participants were not told that the algorithms gave assistance.
We highlighted that we wanted their experience to be like a game with a friend, and they were free to speak to one another.
They were asked to try and win each game, to have fun, but not to worry if they didnt win.
Player skill level was determined by an individual game.
While one participant played the individual game, the other completed a demographics questionnaire in a separate room.
The experimenter used a combination of score and completion time in the individual games to choose which player received assistance during competitive play.
The competitive play portion consisted of a series of games.
Game 1 was a control condition; no assistance was given and players were told that this was the "normal algorithm".
Games 2-4 presented the static assistance techniques .
Game 5 was another control game.
Games 6-8 presented the adaptive techniques .
Game 9 was a final control.
Each game started with a practice level, where the players could get accustomed to any differences in the controller algorithms.
The game then randomly presented the five levels of play.
All data were analyzed separately for assisted and nonassisted players.
Performance data were gathered from computer logs and analyzed with one-way ANOVAs.
Posthoc tests were conducted using Tukeys HSD.
Survey results were analyzed using Friedmans ANOVA for related samples; pairwise comparisons used Wilcoxon Signed Ranks Tests for 2-related samples; correlations used Spearmans rho.
We conducted a series of planned comparison tests.
As players competed in groups, we examined performance at the individual level and relative to their partner.
Did the hit ratio change when one player was assisted?
Hit ratio was calculated as the number of successful target hits divided by the total number of shots for an entire game.
Hit ratio did not change for non-assisted players when their partner was provided with assistance .
Post-hoc tests showed that area cursors  yielded the best hit ratio , and that static gravity was better than sticky targets and no assistance , and adaptive gravity was better than no assistance .
There were no differences between the static and adaptive versions of any of the techniques .
Figure 2: Mean hit ratio  by technique for assisted and non-assisted players.
Was game score closer between the players when one was assisted?
Game score was a combination of target hits  and misses .
Although a sign of individual performance, it is linked to the performance of a players partner, as a partner hitting more targets would result in fewer targets available for a player to hit.
Game score is the measure that was shown to the participants as they played the levels.
To answer our question, we calculated the difference in score between competitors after each game, and conducted a one-way ANOVA with assistance type as the factor.
Post-hoc tests showed that area cursors resulted in a smaller game score difference than sticky targets or no assistance .
Static gravity yielded less difference than sticky targets or no assistance , and adaptive gravity produced less difference than no assistance .
Were there learning or ordering effects?
We used the final scores in the three competitive control games to test for learning effects.
No significant differences were found between control game scores for assisted  or unassisted  players, suggesting that there was no important learning effect as the study progressed.
Therefore, comparisons between static and dynamic techniques should not be biased by ordering.
How did assistance type affect the number of games that were won by the assisted player?
We counted the number of games won by the assisted player.
All others had significant differences between the number of won and lost games .
Taken together the performance results show that assisting one player boosts their hit ratio, while not affecting the hit ratio of the non-assisted player.
After each game, we asked users whether they noticed a difference in the controller algorithms compared to the normal case .
We also asked players about the difficulty of aiming, their perceived performance and the perceived performance of their partner after each game on a 5-point scale .
For example, there was no difference between static sticky targets and adaptive sticky targets.
Did players report differences in the difficulty of the techniques?
Pairwise tests showed that the sticky technique was perceived as more difficult than area cursor or gravity for both the static and adaptive versions , that no assistance was more difficult than area cursor or gravity for the static techniques, and that no assistance and adaptive gravity were more difficult than adaptive area cursor .
There were no differences between the static and adaptive versions of any of the techniques.
Did assisted players think they performed better when there was assistance provided?
Assisted players noticed the change in their performance compared to the normal base case .
In addition, adaptive gravity was perceived as resulting in better performance than adaptive sticky .
There were no differences between the static and adaptive versions of any of the techniques.
Did players notice the difference in their partner's performance?
Non-assisted players did notice the change in their assisted partners performance .
They felt that their partner played better when provided with both area cursors and gravity over sticky targets and no assistance for both the static and adaptive techniques .
There was no perceived difference between the static and adaptive versions of any of the techniques.
Assisted participants did not think that their partners performed differently depending on the assistance they received themselves .
For the static techniques, area cursor and gravity were rated as more fun than sticky targets or no assistance .
For the adaptive techniques, area cursor was perceived as more fun than any other technique .
There were no differences between the perceived fun of any of the static or adaptive techniques.
Players who did not receive assistance did not rate their fun differently after games where their partner was provided with assistance .
Taken together, these results are interesting as play experience was strengthened for those receiving assistance, while not being weakened for those who werent.
Mean fun ratings   by technique and player.
Did players' performance affect how much fun they had?
Fun ratings for each game were significantly related with game score differential for assisted players , but not for non-assisted players .
Assisted players reported having more fun, the closer the score was in a game, but this did not come at the expense of non-assisted players perception of fun.
Did players' ratings for fun change after finding out that there was assistance provided in the game?
Neither assisted nor non-assisted players changed their ratings of fun after finding out that assistance was provided .
Did participants think that it is fair to provide assistance to one player?
Before revealing that assistance was provided, all assisted players felt that the games were fair, while 10 non-assisted players agreed.
Two non-assisted players felt that games were unfair because previous experience could provide an advantage, and that fairness may have depended on how the algorithms were assigned.
After finding out that one player was assisted, most non-assisted players felt that it was fair .
Non-assisted players commented that: it would broaden the demographics of their opponents ; it is better for casual gamers; and it would be more fun.
Dissenting players felt that it would not be a true competition, but that it would be OK to provide assistance when playing against children.
Assisted players were more split in their opinion .
Assisted players who thought it was fair commented that: it would improve the competition; it would increase the challenge for the better player; and that it would increase the fun.
Did participants without assistance think that their own performance changed when their partners were given assistance?
Although the performance of non-assisted players didnt change, their performance relative to their competitor did.
They thought their own performance was better when their partner was assisted using sticky targets than with area cursor or gravity for both the static and adaptive techniques .
There were no differences between the static and adaptive versions of any of the techniques.
Taken together, these results related to perceptibility and performance change suggest that assisted players attributed the difference in score to their own improvement, not to their partners playing poorly or to changes in their control mechanism, while non-assisted players perceived both an improvement in their partners performance and a decrease in their own performance.
We asked the players how much fun it was to play the game after each assistance technique was used, at the end of the experiment, and after revealing that we were assisting one of the players, all on a 5-point scale.
Did participants rate their fun differently after playing with different assistance techniques?
Players who were provided with assistance rated their fun differently after games,
Some assisted players commented that although there would be benefits to the group experience, it would be through unfair means.
Do players think that balancing benefits the group?
Players agreed that balancing the game by providing assistance to one player can improve the experience for the group .
Comments included that it would: improve the competition; allow people of multiple ages and skill levels to compete together; provide a greater challenge to better players; be less frustrating for less-skilled players; and be more fun.
Would players want to know if one player was assisted?
Most players would want to know .
Those who wanted to know commented that: they would want to know if they were beaten by the person, or by the computer and the person; and to evaluate their actual ability.
Those who didnt commented that: it would benefit the social aspect of games to not know; and it might ruin the experience if they did.
There are six main results from the comparison study.
Two of the target-assist techniques  significantly improved player performance, and significantly reduced score differences in the game.
There was no significant difference between static and adaptive versions of the techniques, but the static versions did allow weaker players to win more often.
Players did not notice differences between the controller algorithms .
Assisted players reported having more fun as games became more competitive, but this did not come at the expense of perceived fun of the non-assisted players.
Players reported the game as being fair, and did not change their assessment after learning about assistance.
After learning about the targeting techniques, assisted players opinions were less favorable than non -assisted players, but both groups felt that assistance could benefit the group play experience.
Players did not notice differences in the various "controller algorithms", but did notice when they  performed better.
As in previous work, it appears that people do not easily perceive target assistance .
First, the effects of the techniques  are subtle, and do not dramatically change the visible behavior of the onscreen objects.
Second, noise in the input device hides some of the effects of the techniques: there is already some jitter in the way that the cursor tracks the motion of the Wiimote, and it is difficult for users to tell exactly where they are pointing with the device.
Third, the players attention is strongly focused on the game, not on the motion of the cursor, which reduces their ability to notice the effects of target assistance.
All of the assistance techniques have been effective in prior work, but only area cursors and gravity were beneficial here.
One reason is that stickiness may be less useful in situations with moving targets, since the user must be on top of the target for the technique to take effect.
Target gravity has an effect wherever the cursor is on the screen , and area cursors allowed players to hit targets simply by being close.
A second problem with sticky targets was that when leaving a target, the cursor had to jump to return to its actual location.
This means that if the player moved through distractor targets en route to the desired target, the cursor could appear to skip.
There was no significant difference in the effect of static or adaptive techniques on game scores or hit ratios, although static techniques allowed the weaker player to win more games than the adaptive techniques.
This does not mean that adaptivity is a poor design, but rather highlights the differences between the approaches; pointing to the importance of considering the game outcome and the score differential.
The adaptive techniques adjusted with each shot fired, meaning that as the score difference between players approached zero, the techniques strength also approached zero.
This resulted in close games where the unassisted player won as opposed to games played with the static techniques where the assisted player also won.
For situations where game outcome should be balanced , it may be best to use static techniques or to change the adaptive techniques to allow for varied game outcome.
For situations where the goal is to have close play, but still reward the stronger player with more wins, adaptive techniques may be more suitable.
Here we consider whether the value of target assistance can be realized with other players, input devices, and games.
First, our results suggest that the target assistance techniques will work with a wide variety of players, with a wide variety of skill differentials.
In our study, we had some pairs who were closely matched, and others who were very far apart .
We believe that these issues can be easily addressed .
Second, there is also reason to believe that these results will transfer to games using other input devices.
For some devices , target assistance is already being used, and our techniques should work for with little need for adjustment.
For other devices, particularly those that are more precise , the techniques may be more perceivable .
However, the attentional demands of games are likely to hide these effects in most cases.
Third, there is considerable opportunity to apply our results in other types of shooting games, although designers will have to adjust the techniques to suit a particular game.
For example, first-person shooters could easily adopt these balancing techniques, but would have to ensure that the semantics of the game are not changed .
Game semantics, however, could be used as an additional resource for balancing techniques: for example, weapons with a wider spread of damage could be a natural fit for area cursors; spread radius could change based on the amount of assistance desired.
In addition, target assistance  could also be used in other game genres.
In particular, the gravity technique could possibly be applied to driving games, giving weaker players better centre-line gravity than stronger players.
We plan to study the perceptibility of this technique in future work - but it is likely to be much less perceivable than the catch -up adjustments that are currently used in some games.
This would allow either a higher level of assistance - or perhaps more importantly, would allow the levels of each technique to be lowered, reducing overall perceptibility.
It is extremely important that the values for the techniques  be carefully chosen.
The techniques can become highly obvious if these values are too high .
The parameters of the adaptation algorithm should also be carefully chosen.
These should be matched both to the length of the game  and to the desired outcome .
An important design issue is whether to reveal that target assistance is being used.
Our participants were divided on whether they wanted to know about the techniques, it may be safest to make this a setting that players can see .
In some games that are expressly designed for casual use, or for walk-up play in public settings, designers could choose to add the technique without informing players - but in these cases, it will be important to ensure that the levels chosen for the techniques will keep the assistance below the perceivable level for most players.
This study provides several lessons and raises several issues for designers wishing to employ target assistance.
The main lesson for designers from this work is that target assistance techniques work very well as a balancing mechanism: they are able to compensate for widely different skill levels, without being overly noticeable.
The techniques can be used immediately to improve the accessibility and competitiveness of shared games.
For moving-target games, designers should first consider area cursors and target gravity.
Area cursors were best at balancing games, but can only be used effectively in situations where hitting multiple targets is not a problem.
Target gravity was also successful, and can work in situations with small targets.
Sticky targets were not effective, and although they may be useful in other game genres, they seem to have too many drawbacks to be recommended for use in shooting games.
It is possible for the techniques to be combined in situations where extra assistance is required.
Video games are an increasingly popular form of entertainment that are played by people of many different skill levels.
In this paper we addressed the problem of skill imbalance using target assistance techniques, which have not previously been used for this purpose.
Our study of three different techniques showed that target gravity and area cursors can balance competition between players of different abilities.
We found that by making the game more competitive, less-skilled players report having more fun, and that this does not adversely affect the experience of the more skilled players.
Target assistance techniques are particularly well suited for this application because they can be applied without being noticed by players, and need not change game mechanics.
In future work, we will investigate the application of similar techniques in other game genres, such as first-person shooters and driving games, to test whether our results generalize to other situations.
Finally, we will further investigate the real-world requirements of assistance techniques through longer-term testing, and testing with specific player types with larger differences in skill, such as teenagers and grandparents.
