Palplates are a collection of touch-screen terminals placed around the office enabling human-computer interactions at the point of need.
Supporting a community of mobile authenticated workers with a small number of stationary devices is an alternative to providing each person with a portable wireless computer.
In contrast to the PC's desktop metaphor, Palplates use a place metaphor that reflect the actual rooms, corridors, and buildings that are part of the office place.
Users interact graphically with applications supported by a geographic database.
The user interface is generated dynamically based on the user's identity, the point-of-access, and the changing collection of physical office equipment, electronic documents and applications present at any given location.
In our workplace people frequently leave their desks and spend a significant amount of time away from their desktop computers.
During these times, tasks arise that are best supported by a computing system.
For example, when in a meeting you might need to reserve a room for the next meeting; or order coffee supplies when in the kitchen; or resubmit or cancel a print job in the printer room.
We believe that certain actions "trigger" the need for human-computer interaction, and when these activities occur away from the desktop, interaction must be postponed or people must constantly return to their desks.
To address this need, we introduce "Palplates," a new genre of mobile computing consisting of networked touch-screen terminals that are located in common places and used for common tasks.
The user interface for Palplates is keyed to its location, showing the most likely tasks and providing the most specific information for that place.
Although Palplates are not mobile computers, they do aid mobile users.
In this way, Palplates are analogous to the workplace telecommunications model: shared telephones at key locations rather than personal cellular phones.
Some advantages of this approach are constant high-bandwidth network connectivity, larger more capable devices, reduced expense , and users don't have to carry anything with them.
In order to identify tasks and places, we first developed a paper prototype, "Paper Plates" that we were able to quickly deploy into an office community.
Each Paper Plate is a simple 8.5" x 11" poster with post-it notes, graphics, and instructions.
We distributed 16 prototypes on office doors and in common spaces including a kitchen, meeting room, and copy/printer room.
Five volunteers agreed to play the part of a network  by checking the Paper Plates once each day and scheduling meetings, fetching supplies, and delivering notes as requested by users.
Paper Plates provided four services: 1.
Request supplies allows requesting and locating supplies 2.
Virtual suggestion box lets people discuss and vote on suggestions, eventually transmitting those ideas to the people who could act on them.
Reservation agent allows scheduling the use of meeting and conference rooms.
Local news allows personal communication and announcements keyed to location.
We found that even though Paper Plates were missing important interactive aspects, people used them.
As we expected, the Paper Plates in different locations were used for different tasks.
For example, the kitchen Plate was used mostly for discussion and ordering kitchen supplies.
The design of the electronic version of Palplates focuses on issues of interface and infrastructure.
The Paper Plates prototype generated a set of requirements: that the UI reflects the presence of location specific information and services.
The Paper Plates supported the idea that information and functions keyed to location is a useful UI technique.
Users learned the features of other Plates, such as room reservation, and then requested those functions remotely.
Users felt that access to personal information, such as their calendar, would help them interact with the Paper Plates.
Figure 1 shows the user interface for Palplates.
The interface is constructed dynamically based on the user's identity, the point of access, and the changing collection of documents, office equipment, and applications which are present at a location.
In this way, the user sees local information, local functions, and, if they log-in, their own documents.
The user interface consists of three regions, the applications dock, the program area, and the user's dock.
The Applications Dock shows icons for starting applications along with icons for navigating back and forward.
The set of applications present at any given time is generated from the location.
In Figure 1, the applications are "Notes," "Suggestions," and "Supplies."
Although the first two are general applications, the third, "Supplies," is only presented at locations with consumable supplies.
In addition, once started, the "Supplies" application will show a list of different supplies for different places; printer paper in the printer room, and coffee supplies in the kitchen.
The Program Area contains the main application view.
Initially when a person walks up to a Palplate, this displays the objects  active at the current location.
Another common view is a map used for navigation.
In this way we support remote access.
The program area can also be taken over by other applications selected from the application bar or it can be used to show user specific information such as Web pages.
Finally, the User's Dock contains permanent information, including pointers to places and objects and pointers to Web pages.
Whereas the top two panels in the user interface change when navigating to a remote Palplate location, this information stays constant.
Users can drag objects onto and off of this shelf.
Each user can access their own unique shelf if they log in.
Ideally, the system should recognize them automatically .
The shelf provides users with a simple way of personalizing the user interface.
MUD objects are represented on screen by icons.
Pointers to the icons are stored in the mud as URLs and loaded from the Web by the browser.
Each mud object also has an associated action which is either a URL or a Java class.
If an icon is pressed by the user, either the associated object is notified of the event or the URL is loaded into the program area.
Currently, the MUD database contains a navigable map of our office area.
The GUI is built dynamically from the database by a java library.
The "Notes" application is implemented, and users can move objects from place to place.
This work follows from the Ubiquitous Computing initiative at Xerox PARC .
Gelernter presented a vision of mirror worlds, or electronic places that mimic real places  and Curtis investigated MUDs .
Belloti and Bly  studied local mobility in the office place.
Bartlett experimented with an officeplace metaphor and map-based GUI in a groupware application for office workers.
V. Belloti and S. Bly, Walking away from the Desktop Computer: Distributed Collaboration and Mobility in a Product Design Team, Proceedings CSCW '96, 1996.
Mirror Worlds: or The Day Software Puts the Universe in a Shoebox.
How it Will Happen and What it Will Mean.
An Overview of the ParcTab Ubiquitous Computing Experiment.
IEEE Personal Communications, Special Issue on Mobile Computing.
