General-purpose software applications are usually not tailored for a specific user with specific tasks, strategies or preferences.
In order to achieve optimal performance with such applications, users typically need to transition to an alternative efficient behavior.
Often, features of such alternative behaviors are not initially accessible and first need to be customized.
However, few research works formally study and empirically measure what drives a user to customize.
In this paper, we describe the challenges involved in empirically studying customization behaviors, and propose a methodology for formally measuring the impact of potential customization factors.
We then demonstrate this methodology by studying the impact of different customization factors on customization behaviors.
Our results show that increasing exposure and awareness of customization features, and adding social influence can significantly affect the user's customization behavior.
In some cases, alternative enhanced behaviors are, by default, available for use.
An example is preconfigured hotkeys.
However, in other cases, features that would lead a user to more optimal performance are not initially accessible and first need to be customized .
In particular, users are reluctant to change their behavior when they are in the middle of a production process .
However, at some breaking point, a user may decide to perform a customization.
This may be triggered when the perceived benefits outweigh the costs of setting up the customization.
If software systems can manipulate this breaking point, then users could more rapidly approach optimal performance.
Although many studies look at the performance of customizable interfaces, few formally study and empirically measure what drives a user to customize.
Typically, customizable interfaces are evaluated on the assumption that the user does choose to customize .
Customization factors established by Mackay  are probably the most thorough to date, but the identified "triggers" and "barriers" have not yet been empirically measured.
In particular, it is worthwhile to explore whether such factors can be manipulated through the software application itself, to increase the customization behavior of its users, and ultimately, optimize their performance.
With these goals in mind, we present our contributions, which are both methodological and empirical.
First, we describe the challenges involved in empirically studying customization behaviors, and propose a methodology for formally measuring the impact of potential customization factors.
We then demonstrate this methodology by studying the impact which exposure, awareness, and social factors have on customization behaviors.
Our results show that users develop different customization strategies, and that some might be more eager to customize and switch to an enhanced behavior.
But more importantly, we also show that increasing exposure and awareness, or adding social influences, can significantly impact a user's breaking point.
This implies that there exist customization factors which can be manipulated in software.
One of the aims of HCI research is to design interfaces that allow users to maximize their performance while interacting with the computer.
However, for complex software applications, supporting optimal efficiency while remaining universally accessible is a challenge .
For example, many desktop applications are designed to accommodate a broad spectrum of users and usage scenarios.
These general-purpose interfaces are usually not tailored for a specific user with specific tasks, strategies or preferences.
As such, the most apparent way to use software is rarely the most efficient way for any particular user.
Users typically need to adapt their own behaviors if they are ever to achieve optimal performance.
To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee.
Past research looked at ways to help the user make this transition by explicitly teaching how to use an alternative approach , or even forcing the user to use the more efficient approach .
That body of work, however, does not focus on the customization portion of the transition.
Users often customize software because they wish to personalize it, improve their performance, or reduce their workload while using the software .
However, Mackay  showed that most users do not customize, and identified a comprehensive list of triggers as well as barriers to customization.
However, few studies have empirically evaluated the impact of these factors on customization behaviors.
Past research has investigated user behaviors with different personalized systems.
Marathe and Sundar  showed that customization behavior could depend on the proficiency of the user, and that power-users might be more inclined to customize to gain a sense of control over the software.
Social influence has also been identified as an important factor that could influence user customization behavior  and could encourage transition to expert use .
Research has shown that often there exist users within organizations that customize software and are willing to share their customizations , which could also be beneficial as it prevents intelligibility problems associated with local customization .
In our study we investigate how we can encapsulate this social influence into a mixedinitiative system in order to influence customization.
Software personalization can improve task performance and reduce workload in GUI control structures.
We refer the reader to Findlater and McGrenere  for a detailed overview of such user interfaces.
Prior work has proposed numerous adaptive user interfaces that can improve user performance compared to static interfaces.
Most adaptive approaches looked at ways to improve the performance of accessing items from a menu , with variations on frequency-based menus  and split menus  being very common.
Another example in the research literature is layered interfaces  which provide multiple levels of interface complexity, to match a user's skill level.
Some of these adaptable interfaces also showed benefits over adaptive ones, with users performing faster , or showing preference for adaptable interface over adaptive ones .
Typically, when such techniques are evaluated, the main goal was to study the benefits of customization under the assumption that the user customized, and not whether or not the user would choose to customize .
Therefore, it still remains important to formally study what causes a user to choose to customize.
We define a user's breaking point as when a user decides to customize their software.
The factors which Mackay  identified are all potential influences of a user's breaking point.
Those factors describe the contexts and the social processes in which the user is more likely to customize.
If software systems could influence this breaking point by manipulating those customization factors, then users could more rapidly approach optimal performance.
Other customization factors can potentially be manipulated, which we discuss below.
There, we draw parallels between these customization factors and factors that drive technology adoption in general.
We refer to the factors in Unified Theory of Acceptance and Use of Technology  : performance expectancy, effort expectancy, social influence, and facilitating conditions.
As such, the customization facility should be efficient.
Neither of these two customization facilities has been formally evaluated.
Mixed-initiative incremental interfaces , and multiple-interfaces  could improve the user's performance.
Such interfaces provide mechanisms to prompt the users to make a customization based on user's behavior, proficiency, or current task.
An example is the Adaptive Bar , which prompts the user to add a command to an application bar based on historical frequency of the command.
One of the first important triggers of customization is the user's performance expectancy, or realization that there is an alternative way of performing the task, which improves the user's performance or reduces the user's workload.
In order to customize software, the user must also be aware of the facilitating conditions, or the customization facility.
The inability of the user to determine the actual time it would take to switch from one way of performing a task to another, where the time includes the time to customize, could be a barrier to customization.
On the other hand, exposing the user to the customization could change user's effort expectancy and trigger a customization.
The social influence to perform better or simply like other users could be a strong customization trigger.
Furthermore, the recommendation from a friend to customize could influence a user's perceived benefit of the customization.
Integrating social cues with a software environment may allow for such triggers.
However, in our case, we wish to evaluate the choice to customize, so using a low cognitive demand task may artificially bias users towards customizing.
To achieve a higher degree of external validity, the study may need to include tasks that vary in cognitive load.
However, due to limited duration of lab experiments, it might not be possible to test different tasks.
In such cases the study should include at least a single primary task with a reasonable cognitive load.
As we have discussed, software customization takes place over time and is influenced by many factors.
It is thus worthwhile to empirically evaluate the relative impact of these factors.
The primary dependent variable of the methodology is if and when a user chooses to customize.
However, studying a decision on behalf of the participant is challenging, as extreme care must be taken to minimize any bias of that decision process.
Here we discuss the factors and process of developing our study methodology in detail.
Desktop applications allow for a wide variety of customization techniques .
In order to study customization behaviors, it is important that the customization facility used in the experimental task generalizes well.
Although some in-place customization techniques have been explored , customizations that result in significant benefits typically have an associated cost.
For example, to define a new hotkey in Microsoft Word 2007, a user needs to access a dialog, 4 levels deep in the user interface.
As such, for external validity, the customization facility should have some associated cost.
In order for such a study to work, there must be a reasonable motivation for the user to customize.
This means that the enhanced behavior that the customization enables must provide real benefits in terms of task performance or workload, in comparison to the default behavior.
Unlike real-world scenarios, where the benefits of the enhanced behavior can propagate over long periods of time, lab experiments have a limited duration.
As such the benefits need to be clear and immediate, so that it is to the user's advantage to customize.
In particular, the enhanced behavior should not have a steep learning curve.
Due to all of the above-noted challenges, we conducted several pilot studies, to test various methodologies and study environments.
Our initial methodology was based on Grossman et al.
A user was shown an image and could either select an associated menu item from the top of the screen, or use a customization dialog to set up a hotkey for that item .
However, we found that the mental demand of the enhanced behavior, using a hotkey, was too high, and as such participants consistently chose not to customize.
It was apparent that this methodology did not provide enough motivation to customize.
To simplify the enhanced behavior, we introduced a local tool palette as the enhanced behavior.
The users could access the palette faster than the default menu bar at the top of the screen.
Because it offers a visual support for successful recall of customized operations, this approach required lower mental demand, but all participants were customizing, and reported that it was obvious that this would improve performance.
Here, it became clear that the abstract image matching task we chose did not introduce enough task complexity.
As such, we introduced a more involved primary task to the methodology.
After running several participants, the methodology seemed to provide a good balance, as advanced users chose to customize, while less advanced users did not.
We settled on this methodology for our full experiment, which we now describe in detail.
Because customization behavior involves a user's decision, any exposure to the customization facility or enhanced behavior could bias the user's decision to perform future customizations.
If a user is exposed to multiple conditions, their decision to customize in later conditions could be influenced by experiences from the earlier conditions .
Thus, a between-subject design should be used.
T The goal of th his experiment is to compare e how exposur re, a awareness, an nd social fact tors influence e customizatio on b behavior.
We looked at how w these custom mization facto ors in nfluence the breaking b point, the amount of o customizatio on th hat the user is s willing to pe erform, and ho ow these facto ors c compare in term ms of the benef fit they provide e to the user.
W We conducted d the experim ment on two HP Intel Xeo on c computers with h 3.2GHz dua al-processor an nd 12GB RAM M, r running Windo ows 7.
Both machines m were equipped with ha 2 24-inch monito or set to 1920 0x1200 resolu ution, a standa ard o optical mouse e and QWER RTY keyboar rd.
Participan nts p performed the task in separat te rooms, and the investigato ors m monitored the eir progress using u a VNC C-based remo ote d desktop viewe er.
The exper rimental setup p required tw wo d different room ms because fo or one of the e conditions we w r required participants to come in with one of their frien nds a and take part t in the stud dy at the sa ame time.
Th he e experimental so oftware was im mplemented usi ing Java 5 SE.
The particip pants added ite em properties one by one to o the active cell us sing one comm mand for each p property.
Diffe erent items fferent number of properties s that the parti icipant had had dif to chan nge, resulting i in some proper rties being mor re frequent than ot thers.
A correct command c caused the corr responding propert rty to be adde ed to the item m in the grid.
The grid selectio on was then c cleared so tha at the participant had to select a cell to be ed dited before per rforming each command.
This a allowed trackin ng of trial tim mes.
A wrong command caused d a 3 second pe enalty and the s selection was c cleared.
No specifi ic order was im mposed for ap pplying the pr roperties to lls, with the ex xception that th he shape alway ys had to be the cel icipant was not required to co omplete an added first.
The parti g a different ce ell.
Figure 1.II I illustrates item b efore selecting mpletion of an n item made o of a star shape e, a banana the com foregro ound image an nd blue fill colo or.
Items appea ared checkmarked d in both grids when complet ted.
Each item in the reference grid g consisted of he following properties: shape s , fill color , border , and a foreg ground image .
All com mmands were available from m the menus, but only a subset of commands was initially a available from t the palette.
Each p property menu u contained 12 com mmands .
Figure 2 shows the default palette e, split into f four property categories.
T The default palette e contained all the needed sh hapes, and a su ubset of the ed other proper rties.
Each pale ette section als so included require exactly y one distracter r that was neve er needed.
F For a closer approximation a to customizat tion facilities in r real software, we added a 10 1 second pro ogress bar when lo log.
Before e the study, and d after each blo ock, the system m informed users a about the possib bility to custom mize.
The mess sage was: "All it tems can be a accessed throu ugh the menu.
The items availab ble in the pale ette can be cus stomized throu ugh the file menu."
The parti icipants were allowed to rest between blocks , with an enfor rced rest of at l least 20 second ds.
The c customization conditions wer re: control, exposu ure, awareness s, and social.
There were 16 p participants in each h condition.
Ea ach participant t was randoml ly assigned to one of the four gr roups, but thos se participants who came h a friend wer re only used i in the social g group.
The in with conditi ions were as fo ollows: - Cont trol - this cond dition provided d only the men ntion of the exist tence of the customization n feature .
Participa ants in this g group were force ed to practice customizing o one command during the warm m-up, and the en accessing t that command d from the palet tte.
This was t the only group p that was ever r instructed on h how to customi ize.
We include ed this conditio on because it p provides the exposure thr rough experie encing the custo omization facil lity.
Participan nts received a n notification custo mess sages informin ng that customi izing a specific c command enab bles faster acce ess .
We chose this approach as it is similar to m many past mixe ed-initiative sys stems.
In th his condition, t two friends comp mpleted the stud dy at the same e time in separ rate rooms.
The participants r received a sim milar message as for the reness conditio on, but the me essage was craf fted so that awar it sa aid that the fri iend customized a command and was comp mpleting the tas sk faster .
The me essage was prov vided regardles ss of the friend's activity.
Thi is approach allow wed us to tes st the impact of social infl luences on custo omization beha avior.
B Before the start t of the experim ment, an experimenter escorted th he participants s to a study ro oom, but did not provide an ny v verbal instructi ions about the task.
Instead participants p read th he instructions s once seated in the room.
The instructions a asked participa ants to perform m the task as quickly and as a accurately as possible.
But t the actual amount a of tim me p participants ha ad to spend on o the study was complete ely d dependent on their t own perfo ormance.
As su uch, participan nts h had an implicit motivation to complete the study s efficientl ly.
F Figure 3 shows s an overview of the experim mental procedur re.
E Each participan nt completed 1 warm-up blo ock and 12 stud dy b blocks.
Each bl lock consisted of a single ref ference grid.
Th he s set of items used to fill in th he reference gr rid was the sam me a across the stud dy block, but the t positions in i the grid we ere r randomly gene erated for each h block.
The pa articipant had to e execute exactl ly 10 correct commands in i the warm-u up b block, and 60 0 correct commands in eac ch of the stud dy b blocks.
A block k was complet ted only when n all items in th he g grid were co orrectly recre eated.
On nly correct comm comm mmands were co onsidered.
Study dy Time - the t time it took to o complete all trial grids .
We als so measured w when the parti icipants first c customized and the e extent of cust tomization which occurred:
T The participan nts in the aw wareness and d social grou ups r received notifications during g the rest time e after the first, s second, and fo ourth grid.
In the first mess sage the syste em p proposed the most m frequent command that the participa ant h had not custom mized at that point, in the second message it p proposed the most m frequent command that the participa ant h had customized d, and in the third message it proposed th he n next most fre equent comm mand that the user had not n c customized.
If all commands s were already y customized, an a arbitrary comm mand was chose en.
E Each participan nt completed 12 grids x 60 co ommands each h= 7 720 command ds.
The frequ uencies of commands we ere c computed base ed on 30 rand dom drawings from a Zipfian d distribution of exponent 1  .
There were 14 commands that participan nts u used in the exp periment .
Th he c command to frequency f assi ignment was counterbalanced a across particip pants, with ea ach command d mapped to a f frequency once e. The participa ant did not kno ow the comman nd f frequencies upf front, but they became appar rent as they we ere th he same every block.
W We also inclu uded one pla anted comman nd, which on nly a appeared twic ce across the e entire study y, to see ho ow p participants wo ould respond to o a command th hat would not be b b beneficial to customize.
Th he f following defau ult properties were w assigned to t a shape: whi ite f fill color, solid black border, and no foregro ound image.
Th he p participant never had to selec ct any of the default d properti ies a as they were prepopulated p on o the item on nce a shape was w a added to the gr rid.
The warm-up grid contain ned 4 items, on ne in n each group, and a set of 24 2 items were used during th he s study, with 6 ob bjects in each group.
This was done e to account fo or different levels of customiza ation experien nce .
Thr ree of the s performed d data coding on n participant's responses.
There w was substantia al agreement between the coders .
The split b between power users and ower users acr ross conditions s was relatively y balanced non-po .
In this s section we p present the results of our e experiment.
Unless s otherwise stat ted, we analyz zed parametric participant data  with on ne-way and ay ANOVAs.
Type II ANOVA was used when data two-wa was m mildly unbalan nced.
The pai ir-wise compa arison was done u using a Tukey y's test.
Non-p parametric dat ta, such as numbe er of customiz zations we ana alyzed using a KruskalWallis test and pair r-wise compar rison was don ne using a -Whitney's U t test.
One o of the impo ortant design consideration ns in our method dology was t to ensure tha at customizati ion would benefit t the user .
Ad dditionally, in all groups,
It is als so interesting to n note that there was a differen nce in study completion c tim mes b between condit tions , whe ere u users in the soc cial group com mpleted the stud dy faster than th he e exposure  and awaren ness  groups.
We now look at the a actual customiz zation behavio ors between s. Figure 7 sh hows the num mber of partici ipants that groups custom mized in the fo four conditions s. In compari ison to the contro l, the number of users who customized in ncreased by ure and aware eness condition ns, and by 62.5% in the exposu n the social co ondition.
Desp pite the observ vable trend, 50% in the dat ta only represe ents a single s sample per use er, and the differe ence did not rea ach statistical s significance.
P Participants de emonstrated di ifferent strateg gies, but at th he h high level, we looked at:  strategies of th hose that did not n c customize and  strategies s of those that t did customiz ze.
A Across the 64 participants, 46 4 customized and 18 did no ot.
S Some users in the control gr roup  ch hose to use on nly m menus , bu ut the majority y of non-custom mizers used bo oth th he menu and the command palette .
One participa ant w who did not us se the palette stated s after the experiment th hat s she prefers to "get " into the flo ow" with one particular p way of p performing a ta ask and dislikes s switching.
In the control group, , 6 out of 8 po ower users and d 2 out of 8 ower users cus stomized.
This s suggests that t the study non-po design , to a degre ee, resembles the real dif fference in mization behav vior between power and non-power custom users .
We fou und a similar trend in the awareness ifference in number of t those who group, and the di mized between n non-power u users  and custom power users  approached significance .
This m may indicate th hat exposure and social two gr factors s are more effective for non-p power users.
S Strategies of th hose participan nts that custom mized can furth her b be classified in nto:  earl ly customization,  spar rse c customization and  lat ter customizat tion.
The ear rly c customizers and late customizers tended to customize mo ost o of the comma ands in quick succession , differing only y in the time when they fir rst s started customi ization.
The sparse customizers customize ed e early in the ex xperiment, but took time to customize all of th he commands that they did d, before switching to almo ost e exclusively usi ing the palette.
Figure 6 sho ows examples of th hese customiza ation strategies s from actual participants.
Thi is was likely because b exposu ure o occurred before e the first bloc ck, whereas the awareness an nd s social messages appeared bef fore the second d block.
Overa all, th his provides empirical e data that the evalu uated factors can in nfluence a user r's breaking po oint.
The mean re esults were 4 in exposure and d awareness, and 5 in so ocial.
The ences were n not significan ntly different .
The pa articipants in th he exposure gr roup saw the tr raining as a means to raise their a awareness of th he customization facility.
Some participants  removed r some e of the distra actor comman nds f from the palett te.
This is dif fferent from ot ther studies th hat r reported that participants rare ely remove fea atures .
Th his in ndicates that some users, not only sw witched to th he e enhanced beha avior, but also tried to furthe er improve the eir p performance.
I In order to furt ther analyze th he magnitude of o customizatio on, w we grouped bl locks in distin nct periods in the experimen nt: s start , middle , and d end .
In n the control group, the st tart and midd dle p periods were not n significant tly different.
This T means th hat e exposure, awar reness, and social conditions can help use ers c customize mor re items earlier r, when custom mization has th he m most value.
S Some particip pants also customized th he lemon.
Th he p percentage of users u that custo omized the lem mon command in th he middle peri iod was: 0% in n the control gr roup, 25% in th he e exposure group p, 0% in the aw wareness grou up, and 6.25% in th he social grou up.
The differe ences approach hed significan nce .
It sent me in the right directio on."
Seei ing that the customi izations helped h his strategy mad de me take the ti ime to make my own n customizations s to enable me to o work to my full l capacity to complet te the task."
I figured it would take too much work.
But when I saw that my friend changed it, I thought I might as well try it once."
After seeing my friend had, I decided to attempt to customize my own, and discovered it was a fairly simple process."
I really didn't care what he was doing to be honest!"
I tend to be rather competitive, so it just added extra pressure to perform.
In the awareness and social groups some participants did not customize simply because they chose to disregard the messages.
As such, other techniques to expose users to awareness and social factors, besides system messages, should be explored.
An ambient display of such information, which a user would not be as rushed to dismiss, could be one potential solution .
The social condition might have an adverse effect on some users, as the pressure to perform faster could inhibit their willingness to explore customization options.
Future research should explore how social factors affect users with different personalities.
However, as users were under time pressure in the lab study, it remains an open question if such adverse effects would occur in a more relaxed setting.
A secondary contribution of our work is that we show how sensitive customization studies are to the particulars of the study methodology.
Small changes made after each of our pilots had large effects on user behaviors.
Our experiences, and our methodology considerations discussion, provide important lessons for future customization studies.
In summary, each of the factors we tested impacted customization behaviors, and some trade-offs between the techniques appeared.
In order to design successful customization facilities, designers should consider the strengths and weaknesses of these factors.
Through our analysis, we have identified that the factors we tested have a significant influence on users' customization behavior.
In this study, this was mainly manifested in changing when a user chose to customize.
While not significant, it also seemed to influence whether or not a user chose to customize.
The analysis revealed only subtle differences in the impact of the three test conditions.
Larger scale studies, with more participants, may be required to more accurately measure the relative impact of these factors.
Most prominent was that in the social condition, users performed the task significantly faster than in other conditions.
This could be due to competition rather than benefits of customization.
Even so, in addition to changing the customization behavior this approach could be used to increase user performance.
We also found that the factors might have a different effect on power and non-power users.
In the control group, only 25% non-power users customized, and in the awareness group, only 57%.
On the other hand, in the exposure and social conditions, more non-power users customized .
This may indicate that awareness is a weaker influence for non-power users.
In an actual application, exposure to the customization facility could be achieved through occasional enforced training.
But it could also be combined with social influences, where the system notifies the user about her friend's or colleague's behavior and offers to guide her through the customization process.
It was interesting to note that some participants chose not to customize even in the test conditions.
While we expected this behavior in the control group, we found various reasons for such behavior in other groups.
In the exposure group this could be due to participants being overly reluctant to changing their behaviors .
In this paper we demonstrated a methodology for personalization studies which require a user choice.
We then used this methodology to design and execute a user study.
The results of the study exposed different customization strategies and differences in how users respond to increased exposure and awareness, and social influences.
We showed that these three factors can decrease the time to the breaking point, and that software can in fact control such factors in order to change user behavior.
Based on these findings we proposed directions in which future research can improve customization facilities.
While our results may generalize beyond the specific facility and enhanced behavior from our methodology, the factors should be evaluated against different customization approaches .
Also, our findings provide grounding for follow-up field studies with more complex and real-world software applications to test whether our results would extend to such systems.
As we discussed, lab studies have inherent challenges when running studies that involve user choice.
It would be interesting to develop field study methodologies to test how closely our results would be replicated in actual usage scenarios.
Nevertheless, our findings provide insights into customization factors and allow for more focused field studies of customization factors that can be controlled by software.
