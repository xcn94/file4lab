This paper introduces a new framework for thinking about tangible interfaces in education, with specific focus on abstract problem domains.
Manipulatives are physical objects specifically designed to foster learning.
We offer a new classification of Manipulatives: "Froebel-inspired Manipulatives"  and "Montessori-inspired Manipulatives" .
We argue that FiMs are design materials, fostering modeling of real-world structures, while MiMs foster modeling of more abstract structures.
We show that our classification extends to computationally enhanced versions of manipulatives.
We present Digital MiMs - computationally enhanced building blocks.
We describe two prototypical members of the Digital MiMs class: FlowBlocks and SystemBlocks, physical, modular interactive systems that serve as generalpurpose modeling and simulation tools for dynamic behavior.
We present findings from qualitative studies, and conclude that digital MiMs are accessible to young children, engaging, and encourage learning of abstract structures of dynamic behavior through an iterative process of hands-on modeling, simulating, and analogizing.
Until now, the physical objects designed by Froebel, Montessori, and others have been collectively called "Manipulatives".
We offer a new classification: "Froebelinspired Manipulatives"  and "Montessori-inspired Manipulatives" .
FiMs are building toys, enabling children to design realworld things, objects, and physical structures.
For example, using wooden blocks to build a structure that resembles a castle.
MiMs are a set of building blocks too, but are primarily focused on modeling conceptual, more abstract structures.
To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee.
FiMs encourage design while MiMs encourage more limited exploration, striving to make abstract concepts more salient.
There are many similarities between FiMs and MiMs.
In the hands of a good teacher, FiMs can enable exploration of abstract concepts and MiMs can serve as design material, but clearly, the center of gravity of each class is different.
At their core, FiMs focus on design of real-world objects, while MiMs are concerned with modeling of more abstract structures.
Abstract concepts are hard to learn.
The advantage of tangible interfaces as a teaching tool for abstract problem domains is threefold:  Sensory engagement - the natural way children learn, engaging multiple senses  in a constructive process.
Physical objects have been traditionally used in kindergartens and elementary schools to introduce young learners to abstract concepts such as quantity, numbers, base ten, fractions etc.
Abstract concepts of dynamic behavior, involving change and behavior over time, make the learning challenge even harder.
In our evaluations, some four-year-olds used SystemBlocks to simulate dynamic accumulation, while six and eight year olds used FlowBlocks to collaboratively model probabilistic behavior.
A ten-year-old girl said: "I am a person that likes to do things with my hands.
With software on the computer, it's always just clicking buttons and inserting numbers and then a window opens and you see the result.
With the blocks I can feel what I'm doing, I can see the flow."
Digital MiMs are computationally enhanced building blocks systems that support learning of abstract concepts.
Digital MiMs involve physical construction, but the result of the construction is a simulation of a generic structure, rather than a real-world example.
Digital MiMs can support learning in different domains of knowledge including the mathematics of change, dynamic behavior, probabilistic behavior, and more.
For example, SystemBlocks, one of our two Digital MiMs prototypes, can simulate system dynamics models , involving concepts such as rates, accumulation, and feedback.
By way of analogy, children see that the same generic structure can represent: water flow through a bathtub, virus spread in a population, bank account savings growth from interest rate, CO2 pollution growth from emissions, and more.
FlowBlocks, our second prototype, can simulate mathematical concepts such as counting and probability, as well as computer-science concepts such as looping, branching, and variables.
Our Digital MiMs maintain coincident and synchronous input/output behavior, meaning that manipulation and simulation occurs at the same space  and in real-time.
Digital MiMs construct abstract structures, but nevertheless are playful tools, facilitating a physical, multi-sensory, interactive experience.
In our evaluations, we observed how 25 children ages 4-11 interact with FlowBlocks and SystemBlocks for an aggregated duration of 40 hours.
The children played with the blocks individually as well as in mixed ages groups.
Our findings suggest that Digital MiMs are engaging for children, and successfully introduce specific concepts such as rate, accumulation, feedback, and probability to different age groups.
Furthermore, we observed how the special characteristics of Digital MiMs encouraged children to make analogies between the simulated abstract behavior and reallife examples that are meaningful to the children.
For example, using SystemBlocks, a 10-year-old girl analogized a "water flow through the bathtub" simulation to "books flow through the school library" simulation, and was able to come up with the different variables that influence the flow of books .
Digital Manipulatives   are computationally enhanced versions of physical objects, created in an effort to expand the range of concepts that children can explore through direct manipulation.
DM differ from traditional manipulatives in their ability to model temporal and computational processes.
For example, when a child throws the Bitball  in the air, the Bitball's embedded computation can measure and plot the ball's velocity and acceleration.
We argue that the FiMs/MiMs classification applies to DM as well .
Furthermore, the classification makes it clear that the majority of current products and research projects are FiMs.
We believe there is a great need to strengthen the under-populated field of Digital MiMs.
We conclude that digital MiMs are accessible to young children, engaging, and encourage learning of abstract structures of dynamic behavior through an iterative process of hands-on modeling, simulating, and analogizing.
In the next section we present our design process and what we learned from it, including our design guidelines for Digital MiMs.
Later we give a hypothetical scenario of children interacting with our prototypes, and report the details of our evaluations, where 25 children interacted with our prototypes for a total duration of 40 hours.
In 2003 we developed and evaluated an early MiMs prototype.
We presented this work at CHI 2003 as a short talk, called "A Physical Interface for System Dynamics Simulation" .
This prototype had five building blocks and enabled children to simulate reinforcing and balancing feedback loops by connecting the blocks in different arrangements.
Since then we learned about several flaws in the design of that early prototype: the blocks' behaviors were not authentic to a theoretical framework; each building block was not meaningful on its own; and there were no method to help children make analogies.
In addition, we wanted to improve the technical infrastructure and the physical design.
Nevertheless, the early prototype was instrumental to our design process, and enabled us to evaluate the concept with children, colleagues, and members of the HCI community.
The following are a set of "Digital MiMs Design Guidelines" we developed throughout our design process.
Guidelines 1-4 define the core of a Digital MiM, and are useful to differentiate MiMs from FiMs.
Guidelines A-D are general design criteria, some specific for Tangible Interfaces .
There are four types of components to SystemBlocks: Stocks, Flows, Variables, and Probes.
Stocks are accumulators, representing their value with a vertical line of LEDs.
Flows are rates, representing their value with light moving on a horizontal line of LEDs.
Flows are connected to a Stock, either as inflow  or outflow .
Variables are the valves of the Flows, controlling the rate of each Flow.
Probes are additional representations, on top of the default LEDs representation.
For example, a sound Probe maps the stock level to MIDI notes and the Flows rate to tempo.
A line-graph Probe maps the stock level to a line graph height and the Flows rate to the line-graph slope.
Jack, a 10-year-old boy has choice time at his 5th grade class.
He chooses to play with SystemBlocks, and the teacher arranges the blocks in one of the classroom corners.
Jack is already somewhat familiar with SystemBlocks.
He saw the teacher demonstrating them a few weeks ago, and last week his friend Daniel chose them for his choice time, but Jack never used them by himself.
He starts by setting up one of the examples from the "Systems Around Us" guide.
He browses through the different examples until he sees a picture of playing fields in a park.
He likes baseball, so he picks this example.
He takes the relevant cards out from the picture cards box, and stares at them.
There are three picture cards: "people arriving at the playing fields", "number of people currently at the playing fields", and "people leaving the playing fields".
Jack knows he needs to place the cards in a certain order on the blocks before simulating.
He is confused, not sure what order to place them.
He decides to look back at the "bathtub example" he saw the teachers demonstrating: "water flow into bathtub", "level of water in the bathtub", and "water flow out from bathtub".
He remembers how he should place them .
Now, he thinks he knows how to place the playing fields cards.
He places them, and starts to simulate.
Turning the dial on the inflow Variable block, he sees the Flow block lights moving towards the Stock, "those are the people arriving at the playing fields" he says to himself.
He watches how the light level in the Stock block increases, "this is probably the number of people currently in the playing fields".
The light in the Stock block continues to accumulate, and before it reaches the top, Jack turns the dial on the outflow Variable block all the way.
Now, he sees the second Flow block lights moving away from the Stock, at a faster speed than the inflow, "those are the people leaving the playing fields".
To his surprise, the light level in the Stock block starts to decrease.
Jack is satisfied, and looks for another example.
He selects the "air pollution" example, because he remembers his mom was talking about buying a new car that pollutes less than the current one they have.
This time he decides to connect sound to hear the simulation on top of the built-in moving lights.
Structures created with SystemBlocks do not encourage realworld association.
This invites the child to manipulate a generic behavior, rather than a specific real-world example.
We designed a specific method to encourage analogies to the simulated generic structures.
This method connects a simulation with a real-world example, without compromising the generality of the blocks.
Our method includes sets of picture cards, and a designated "card holder" mounted on each of the blocks.
Children can easily place cards on top of the blocks and swap different examples .
At first, it might seem that this method violates our first two design guidelines .
In fact, the ephemeral nature of the picture cards method enhances the generality of the blocks, by inviting children to quickly swap a variety of realworld examples, and make their own analogies.
In our evaluation interviews, we observed how children quickly swapped 5-10 examples from different domains during less than 5 minutes of simulation.
We created FlowBlocks to enable children to manipulate abstract structures of dynamic processes.
We wanted to design a system that could "grow with the child", starting with preschoolers making their first steps in counting and quantity, and continuing with high school or college students struggling with calculus and statistics.
FlowBlocks is designed to simulate concepts related to counting, probability, looping and branching.
SystemBlocks is a physical implementation of the Stocks & Flows modeling language , and therefore is a generalpurpose modeling tool.
Additional Stocks, Flows, and Variables can be added without compromising performance.
SystemBlocks can simulate first-order, second-order, or "any-order" positive and negative feedback, by connecting Stocks back to Flows .
SystemBlocks can simulate supply-chain or food-chain models by connecting Stocks and Flows in a sequence.
There are four types of components to FlowBlocks: Paths, Generators, Rules, and Probes.
Path blocks connect to each other using magnetic connectors.
Light is representing the dynamic process, by "moving" from one Path block to the next in a sequential process.
The Generator block supplies power to the other blocks, and has a button that sends out the first light.
Rules blocks are small units that plug into the Path blocks and change the internal rule programmed into that block.
For example, Rules can make the light go faster or slower.
Probes are additional representations, such as the "Counter" Probe that numerically counts how many times the light passed through it.
Valerie clicks the button and they watch with anticipation, waiting for the light to reach the Faster Rule.
When the light hits the Rule, it speeds up to a new constant speed and travels at that speed throughout the sequence.
They plug all the Faster and Slower Rules Blocks along the sequence, watching the light go faster or slower at each sub-sequence.
While the light is traveling, Suzanne is tinkering again with the Blue block's slider, making the light disappear by turning left to nowhere.
They quickly snap-out blocks from their long sequence to construct a new one from both sides of the Blue "Probability Fork" Block.
They quickly snap blocks in and out, trying to form a square.
When they are done, Valerie clicks the button and they all watch the light.
Three 8-year-old girls, Valerie, Suzanne, and Karen, gather around a table with a set of FlowBlocks.
Valerie takes the Generator block, turns it on, and brings it close to a Yellow "Straight" Path block.
The magnetic connectors pull the two blocks together, and the Yellow "Straight" Path block flash to signal it was automatically turned on.
Valerie clicks the button on the Generator and watches the light travels through the Yellow "Straight" Path block she just connected.
Meanwhile, Suzanne played with Green "Turn" Path blocks and created an "L" shape by snapping two of them together.
Together, they bring the blocks closer until they snap.
Valerie clicks the button again, and they watch the light travel straight through the Yellow, take a turn through the Green, and another turn through the second Green.
Karen snaps another Yellow and in no time they connect all the 25 Path blocks in a long and winding sequence.
This time, Karen clicks the button to send the light.
When it reaches a Blue "Probability Fork" Block, the light turns to the left instead of to the right, where the next block is connected.
They stare at it for a while.
Suzanne starts to tinker with the slider mounted on the Blue "Probability Fork" Block's surface, noticing she can move it from side to side.
She moves it all the way to the right and clicks the button again.
They watch the light with anticipation and scream with joy when the light turns to the right direction.
Now the three of them quickly move all the Blue blocks' sliders along the path, and the light travels successfully through all the blocks along the sequence.
They are satisfied and immediately look for the next thing to do.
FlowBlocks can simulate many more models.
Figure 7 shows a "two loops" arrangement with a Blue probability block serving as a "junction".
In this simulation, the probability slider is set at the middle for 50% probability to turn right or left.
Two display probes are plugged on each side of the Blue block, each counting how many times the light has passed through.
In figure 7 the display probes show "74" and "72", as the simulation has already been running for some time.
Figure 1 shows a tree structure simulating "normal distribution".
Each Blue "Probability Fork" Block in the tree structure is set at 50% probability.
Children can experience it by keeping the Generator button pressed, which in turn sends a continuous stream of numbers into the blocks.
The light will travel in the tree structure, and the display Probes will count how many lights reached each branch of the tree.
The result of this simulation will be the "bell shape" or "normal distribution" curve, noticed even with just 3 branches.
We conducted separate evaluations for FlowBlocks and SystemBlocks.
In total we observed 25 children interacting with Digital MiMs for a total duration of 40 hours.
Our research approach was a qualitative one.
We used a clinical-interview approach where the interviewer presents brief, standard tasks to the students, and then probes the students' understanding based upon their response to the tasks.
The standard set of probes were loosely structured and designed to follow up on what the students said.
FlowBlocks and SystemBlocks are made from laser-cut Plexiglas or basswood parts, which are later glued together.
The basswood blocks are sanded and airbrushed.
The hardware is a 20 MHz PIC16F876 microcontroller mounted on a dedicated printed-circuit-board that handles power distribution, local processing, A/D conversion, and 16bit serial network communication .
A single 6V battery powers the whole system.
The firmware is written in Logo  and runs on a Logochip PIC16F virtual machine .
A 16bit number system was implemented to enable non-integer calculations , to ensure accuracy when simulating exponential decay and similar simulations.
A mix of custom-made and commercially available connectors transfers power, ground, and data between the different blocks.
The custom-made connectors snap the FlowBlocks' Path blocks together using neodymium pressure-formed magnets .
The other blocks use a variety of commercially available connectors, including 2.5mm mono, 3.5mm stereo, and DB9.
5mm LEDs are used throughout the system to provide the "moving lights" representation.
7-segment LED display units are used to provide the number display.
The Cricket busdevice MIDI hardware is used to provide the sound representation.
Hyundai graphic display module is used to provide the line graph representation.
The study with 10-year-olds was performed at two public schools in Massachusetts with ten children, four girls and six boys.
We conducted 2-3 individual sessions with each child, when average session duration was 45 minutes.
All sessions were videotaped for later analysis.
The tasks in each of the individual SystemBlocks sessions were presented by the interviewer but performed solely by the student:  mapping of picture cards onto a simple inflow-stock-outflow structure,  simulating the model and analyzing net-flow dynamics using moving lights and sound,  analyzing net-flow dynamics using real-time line graph,  analyzing models with simple positive-feedback loop,  generating analogies of simple systems.
The 10-year-olds easily associated the moving lights to flow or accumulation processes.
They quickly mapped the example picture cards onto the simulated model, and were able to generate their own analogies.
In the process of mapping picture cards and simulating a new example, several misconceptions and tendencies surfaced.
For example, Julian, a 10-year-old boy, drew a basketball example .
Julian probably analogized from examples he simulated earlier, such as the bathtub example .
In the bathtub example, there are simultaneous processes.
Water can flow into and out from the bathtub at the same time.
The higher the rate of water flow in or out, the higher the rate of change in the bathtub water level.
In Julian's example, the processes are sequential, rather than simultaneous.
First he gets a basketball, then he practice, then he gets better.
Julian simulated his example, and after a few minutes of interactive simulation he asked if he could change his example.
Interacting with SystemBlocks helped him see, by himself, that the casual model in his example does not apply to the generic structure he simulated.
When enthusiastic children used our systems, several problems occurred consistently and pointed us to our system's limitations.
The Acrylic used in SystemBlocks tend to break, the wood we later used in FlowBlocks was much more robust.
The single battery source in FlowBlocks sometimes failed to supply power when a new block was added to a sequence .
FlowBlocks custom-made magnetic connectors experienced failures in signal transfer.
We plan to address these problems in future prototypes.
This time he came up with: "time you spend playing basketball", and "how good you are".
For the outflow he wasn't sure, and suggested "time you spend doing other things".
This time, his example works.
The more time he spends playing, the better he becomes.
Six out of the ten 5th graders repeated Julian's tendency for sequential causality rather than simultaneous causality.
This tendency might inform us that children are growing up aware to the sequential processes around them , but with less understanding of the simultaneous processes and more complex systems in their lives.
We observed additional tendencies and misconceptions .
For example: preferring quantity  over process  when mapping an example , preferring inflow over outflow when adjusting a simulation .
Throughout both sessions , the children that could analogize the moving lights were very engaged and hands-on with SystemBlocks.
The tangibility aspect of System Blocks promoted discussion, and was effective in surfacing students' mental models and exposing misconceptions.
Lisa, a 10-year-old girl, compared the experience she had with SystemBlocks to working with a computer at school: "I am a person that likes to do things with my hands.
With software on the computer, it's always just clicking buttons.
With the blocks I can feel what I'm doing.
I like it much more."
Jim, a 10-year-old boy, who had previous experience with a software simulation tool called STELLA , said: "I like the blocks much more than STELLA.
With STELLA, you click buttons and insert numbers and then a window opens and you see the result.
With the blocks, I can see the flow, I can change this dial and see the lights move faster."
When asked about the multiple medium used in SystemBlocks, Lisa said: "I think the lights and the sound are very helpful.
The graph is also helpful, but I like the sound better.
Starting with the lights, then hearing the sound, and then seeing the graph was great."
The exploratory study with 4-year-olds was performed at the MIT child care center with five children, three girls and two boys.
We conducted one individual session with each child, with an average session duration of 20 minutes.
All sessions were videotaped for later analysis.
The tasks in these sessions were:  filling a beaker with real water from the faucet at different rates,  mapping the faucet-and-beaker example using picture cards onto an inflow-stock structure,  analogizing the moving lights to water.
Out of the five children, three could analogize the moving lights to water, and two could not.
The ones that could not said "the lights are blinking".
They could not recognize the moving illusion of the blinking LEDs, and lost interest quickly.
The three children that could analogize moved on to the cookies example.
We placed the following picture cards on the SystemBlocks: "baking cookies", "number of cookies made", and "eating cookies".
The 4-year-olds successfully simulated the model while describing with joy how they bake the cookies and other kids eat the cookies.
Charlie, a 4-yearold boy, pointed at the lights in the stock as the level increased, and counted out loud "one cookie, two cookies, three cookies, four cookies".
When he turned the outflow dial to increase the "eating cookies" rate he waited until the light level in the stock decreased completely and said "no more cookies".
The FlowBlocks evaluation focused on individual as well as small-group sessions with mixed-age groups , ranging in age from 6-11 year-olds.
The study was performed at MIT's Westgate community center with ten children, five girls and five boys.
The average session duration was 45 minutes.
All sessions were videotaped for later analysis.
These sessions were designed to be more open-ended play.
During the sessions, we looked for the following activities:  building sequences with various speed changes,  forming a loop with increasing speed,  using the Blue probability block to direct sequences,  using the Probes to perform counting and probability measurements,  reacting to the "normal distribution" statistics simulation, constructed by the interviewer.
All the children were able to quickly form sequences by themselves, figuring out the way the Path blocks connect to each other.
The magnetic connectors were very effective in helping the children "guess their way" though the construction process.
The sequences they created were directly influenced by the set of blocks they were offered.
When all the blocks were available to them, they tried to use all of them by forming a long and winding sequence.
With fewer blocks square-shaped loops were starting to form.
There was a clear difference in the amount of time it took the younger children  to form a loop vs. the older children .
But after the first loop was formed, all ages could quickly form new ones.
Most of the children called the loops "squares" but some called them "circles", even though their visual shape is a square.
The children were fascinated with the light traveling through the loops.
Tina, an 8-year-old girl said "it's going round and round, do you think it will ever stop?"
All the children loved to plug the Rules blocks in and out of the Paths, and see the immediate change in the simulation.
Michael, a 9-year-old, plugged both Faster and Slower Rules into his loop.
When asked to make the light go faster, he quickly took one of the Slower Rules out, instead of adding another Faster one.
This demonstrates ability to think in "mediating causality" terms .
The same action was observed with all the other children, with no difference in their age.
When Christopher, a 10-year-old boy saw the display Probes, he quickly plugged them into a Path block and formed a loop around it.
He simulated it, and said: "awesome, it's counting".
By mistake he clicked the generator button again, which sent another light to the loop.
In a different session, Sean, a 6-year-old boy, was bored when his older brother was forming a sequence.
He took a few blocks and started to form a sequence by himself.
When asked if he wanted the Generator block to simulate his structure, he said: "no, I don't need the light, I use my mind to think it up".
Can FlowBlocks help children run simple simulations in their minds?
When Karen, an 8-year-old girl formed a sequence with the Blue probability block, she insisted there is a pattern in the number of times the light is turning to each side.
Her guess for the pattern was "first two to the right and then two to the left".
After some observation she was confused.
Her friend Suzanne suggested to measure it using the Probes.
They plugged two display Probes in and watched the numbers increase in both Probes.
They could still not figure out the pattern, but saw that over time, the numbers increase in almost similar amounts.
They watched the numbers for almost two minutes until both Probes reached their maximum .
The Probes reached their max in a difference of 2 seconds.
They decided to try the whole thing again, to see what will happen the next time.
In a different session, Alexander, 11-year-old boy, said the Blue block is his favorite block "because it is unpredictable".
When asked about other unpredictable things in his life, he said: "It is like the chance for my mom to say yes when I ask her to let me play video games".
He took the Blue block and moved the slider to 25% right turn vs. 75% left turn.
During the sessions, the younger children tried to form realworld structures, like letters, numbers, triangles.
Gaia asked if she could build her name and run the light through it.
Karen held a loop sequence up and peeked through its middle hole, pretending to hold a camera.
It seems the younger children felt a need to concretize the structures in a visual way.
We think it is better to design Digital MiMs in such a way that will not encourage any specific, real-world visual forms, only to increase the chance that children will create analogies to the abstract processes, rather than the physical form.
Several software-based simulation environments for dynamic behavior, such as STELLA , Vensim , Model-It , and StarLogo , have encouraged us to design a tangible interface for dynamic behavior.
Ishii's Tangible Bits vision  helped us clarify our user interface approach.
Many research labs have developed and researched Tangible User Interfaces  in education.
Several UI approaches have been taken.
In one approach, the TUI serves as an input device to a standard computer, and the output is displayed on a separated GUI.
Projects in this category include: AlgoBlocks by Suzuki and Kato  - a block-based interface to create LOGO programs; ActiveCubes and TSU.MI.KI from Osaka University  - a cube based interface for the construction of and interaction with 3D environments; Block Jam by Sony's Newton-Dunn et al.
In another approach the output is projected from a standard computer on top of the TUI input device.
Projects in this category include: The TICLE project by Scarlatos  - augmenting Tangram puzzle construction with computer-vision-based "guide on the side"; and CircuiTUI by Chak and Ishii - an electronics circuit-design tool based on the SenseTable technology .
Another approach is TUI as a front-end to a ubiquitous computing system, creating an interactive space or immersive environment.
Projects in this category include MIT's Kids Room , University of Maryland's Physical Programming and Story Rooms projects , Philips Design's Pogo , and Sweden's University of Umea's Ely the Explorer .
Our prototypes belong to a different approach, in which computation is embedded inside the physical object, creating a TUI that serves both as input and output, with no standard computers involved.
Research projects in this category can be best described as extending the work of Froebel and Montessori, presenting new computational based learning materials.
Projects in this category include: the first digital manipulatives, the Bitball and Beads by Resnick et al.
Table 1 shows the FiMs/MiMs classification for traditional manipulatives, popular toys/learning materials, and the research projects that focus on Manipulative-style learning.
Following is a detailed explanation of our classification in the research category.
We used our Digital MiMs Design Guidelines  to differentiate between the classes.
TICLE  - a computer-vision system that tracks children's play with the Chinese geometry puzzle Tangram.
The system scaffolds the play process with hints in real-time.
TICLE focuses on scaffolding the play process with the Tangram puzzle, and in the same way, could scaffold children's play with other manipulatives, either FiMs or MiMs.
Therefore, we do not classify it as either FiM or MiM.
Bitball  - is a rubbery ball that changes color based on changes in acceleration.
Bitball models a specific realworld example of the derivative concept .
Beads  - are programmable electronic beads that engage children in creating "one dimensional" dynamic light patterns.
The Beads inspired us when we designed FlowBlocks, and in our work we extended some of the Beads underlying themes.
Beads focus on the creation of necklaces, and the bead's internal operations do not represent a specific mathematical operation, but was rather designed to make it easier to create engaging light patterns.
Block Jam  - is a block interface for interactive music creation.
Block Jam developers define it as a Modular Tangible Interface that is "Functionally Homogeneous" vs. "Functionally Heterogeneous" - meaning there is one type of physical artifact with a single function rather than different physical artifacts each holding a different function.
Block Jam was not designed to help people understand what the building blocks of a musical sequence are, but was rather designed to make it easier to construct a musical sequence in an expressive process.
Topobo  - is a 3D constructive assembly system with kinetic memory enabling people to assemble and animate dynamic biomorphic forms like animals and skeletons.
Topobo encourages design and construction of real-world creations such as a walking bug, dog, or moose.
Electronic Duplo Blocks  - a LEGO Duplo based programming environment for children that includes sensor blocks, action blocks and logic blocks.
Output is presented as a car's physical motion, a sound melody, and a light.
The Electronic Blocks model generic behavior rather than specific ones, and maintain a rigorous association between the blocks and their underlying meaning .
At the same time, they limit the range of abstractions and analogies by using a car and a specific melody.
ActiveCube  - a cube-based interface allowing users to build 3D structures in the real world while computer software automatically generates a corresponding 3D virtual model that is displayed on the computer screen.
ActiveCube encourages design and construction of realworld objects.
We would like to emphasize that classifying projects to FiMs or MiMs implies nothing on a project's educational value.
FiMs and MiMs, just like Froebel's Gifts and Montessori's Materials, can both be excellent learning tools that encourage learning in different ways.
Future design efforts will focus on adding new mathematical concepts to FlowBlocks, such as addition, multiplication and other arithmetic operations.
We plan to extend the probabilistic behavior.
We would like to expand the range of structures by adding new Path blocks with different angles and curves, as well as expansion to 3D.
We hope to extend the Digital MiMs family and develop new interactive systems that focus on a range of abstract concepts.
We plan to continue our evaluations of Digital MiMs both with children and adults, in an effort to understand what concepts are more appropriate for MiMs rather than FiMs, and vice versa.
We presented Digital MiMs - a class of computationally enhanced manipulatives that encourage modeling of abstract structures.
We described two prototypical members of the Digital MiMs class: FlowBlocks and SystemBlocks, physical, modular interactive systems that serve as generalpurpose modeling and simulation tools for dynamic behavior.
Our research suggests that Digital MiMs are engaging learning environments despite their high level of abstraction, and gives children an opportunity to interact with dynamic behavior at the symbolic level rather than the example level.
We showed that Digital MiMs, as other TUIs for learning, promote group interaction and discussion.
Furthermore, our SystemBlocks 5th grade study suggests that an iterative process of hands-on modeling and simulation provides children with an opportunity to confront their misconceptions about dynamic behavior.
We would like to thank the anonymous reviewers from the CHI peer review process for their thoughtful comments, in particular the associate chair and reviewer # 4.
We would like to thank Brian Silverman, Tina Grotzer, Guy Hoffman, Orit Zuckerman, the members of the Lifelong Kindergarten Group, Hiroshi Ishii and the Tangible Media Group.
This research has been supported by the LEGO Company, and the MIT Media Lab's Center for Bits & Atoms  and Things That Think consortium.
Disappearing computer, emerging creativity: an educational environment for cooperative story building.
Designing tangible interfaces for children's collaboration.
Designing StoryRooms: Interactive storytelling spaces for children.
In Proceedings of Designing Interactive Systems, ACM Press, 95-104.
The Kids Room: A perceptuallybased interactive and immersive story environment.
Forrester, J W.  "Principles of Systems", Pegasus Communications Inc. MA 7.
Master's thesis, Massachu-setts Institute of Technology.
On the Education of Man , Keilhau/Leipzig: Wienbrach.
ActiveCube and its 3D Applications, IEEE VR 2004, Chicago, IL, USA.
TSU.MI.KI: Stimulating Children's Creativity and Imagination with Interactive Blocks.
In proceeding to the Second International Conference on Creating, Connecting and Collaborating through Computing  January 29 - 30, 2004.
An Application of Tangible Interfaces in Collaborative Learning Environments.
From turtles to Tangible Programming Bricks.
Newton-Dunn H., Nakano H., Gibson J.
Block Jam: A Tangible Interface for Interactive Music.
Papert, S. Mindstorms: Children, computers and powerful ideas.
Sensetable: A Wireless Object Tracking Platform for Tangible User Interfaces'.
Models and moves: Focusing on dimensions of causal complexity to achieve deeper scientific understanding.
Paper presented at the annual conference of the American Educational Research Association , New Orleans, LA.
Topobo: A Constructive Assembly System with Kinetic Memory.
Turtles, Termites, and Traffic Jams.
Programmable Bricks: Toys to Think With.
Introduction to System thinking, High Performance Inc. Lebanon, NH.
Interaction-Level Support for Collaborative Learning: AlgoBlock -- An Open Programming Language.
Ullmer, B and Ishii, H.  Human-Computer Interaction in the New Millenium, John M. Carroll, ed.
Wyeth Peta, Purchase C. Helen.
Tangible programming elements for young children.
System Blocks: Learning about Systems Concepts through Hands-on Modeling and Simulation.
System Blocks: A Physical Interface for System Dynamics Learning.
Proceedings of the 21st International System Dynamics Conference.
System Blocks: A Physical Interface for System Dynamics Simulation.
In Proceedings of CHI '03, ACM Press, pp.
