To go beyond these limitations we describe a system we developed to visualize and navigate hybrid networks constructed from multiple data sources - with a direct link between formal representations and the raw content.
We illustrate the benefits of our approach by analyzing patterns of collaboration in a large Open Source project, using hybrid networks to uncover important roles that would otherwise have been missed.
Moreover, a second risk with structural analysis is to concentrate entirely on the form of network patterns , without giving any weight to the content generated by the members of the network.
This pitfall could affect the reliability of conclusions drawn from analysis of the patterns, and therefore it is essential to preserve the links between formal representations and the original data .
Recent research has begun to address these issues.
In sociology,  discusses "multi-modal" networks and presents one attempt at merging heterogeneous data sources.
In the context of distributed software development  describe systems linking various information repositories  from Open Source projects into hybrid networks.
The Conversation Map  illustrates a different kind of hybridism by interconnecting the structural, semantic, and thematic networks constructed by participants in online discussions.
Finally,  discuss how systems presenting hybrid, visual representations of online activities  can be used as powerful images to trigger storytelling.
In this paper we describe our attempt at designing and using such evocative, hybrid representations of online activities.
Each component in this hybrid network allows easy access to the raw data, so that analysts can examine the qualitative information behind the structure of the network.
We illustrate our approach below by using our software to analyze development activities in a large Open Source project, Python.
We show how the simultaneous visualization of heterogeneous data reveals collaboration patterns that would not have been visible using social networks exclusively.
We conclude with a discussion of the current limitations of our software and propose avenues for future research.
The CHI community has had a long-standing interest in social networks, in great part because of their descriptive and analytical power.
However, using social network analysis for the observation of online activities is not without limitations .
To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee.
We clean the corpus and perform stemming and lemmatization.
We then identify some dominant conversation topics using Probabilistic Latent Semantic Indexing  clustering , though other approaches could be used.
We perform topical clustering of the textual corpus until the topics identified by our algorithm appear to be reasonable.
This linguistic data is then used as the "background layer" of our visualization.
For each message, we get an n dimensional vector giving the probabilities that the message is about one of the n identified topics.
We then associate probability vectors with the authors in the corpus by individually summing the vectors of all the emails each have written and dividing the sum by the 1-norm.
At this stage, complementary sources of textual information can be added to the data set.
During our analyses of Open Source projects, for instance, we had access to CVS logs.
The commit messages in these logs were folded into the topicality model generated by PLSI, giving a probability vector for every major branch of the source tree.
The nodes of the hybrid network are laid out on the screen using a self-organizing map , which reduces a highdimensional space to a 2D layout.
Using this technique brings similar entities close and pushes dissimilar ones apart.
The nodes are positioned according to how much they are "about" each topic.
Finally, we link each of the nodes  to the others based on their structural relationships.
For instance, we connect authors to each other if they have directly replied to each other's email messages, as one would during classic social network analysis.
Authors are also connected to CVS branches they have committed code to.
These links are not what determines the position of each node, however; the vector affecting the coordinates of their placement is based on the linguistic analysis described earlier.
The hybrid network is displayed using the Prefuse Interactive Visualization Toolkit .
To avoid cluttering the display edges are not visible by default but they can be highlighted by clicking on any of the nodes.
Clicking on an author also highlights all the messages he or she wrote .
Clicking on any of the text-based nodes  opens up a window with the original text.
Finally, clicking on a CVS branch also shows all of the authors who have contributed to the branch .
Figure 1 shows the initial state of our visualization after we processed the entire archive of activities: the email messages from the Python development mailing list  and the team's CVS logs, for 2002.
We used PLSI to identify four main topics discussed by Python-dev's contributors in 2002.
These four topics are represented as blues nodes in each of the four corners of Figure 1.
It is widely known that Python is the brainchild of Guido and that he plays a central role in the project: an analysis of his communication patterns places him at the very center of the project's communication network .
However our system nuances this picture.
Indeed, it looks as if Python, at least in 2002, has two or three heads instead.
Guido's messages tend to focus on code discussion and maintenance/release  while Martin and Mal focus more on Unicode and tech support.
Highlighting each author's messages by clicking on their nodes confirms this hypothesis.
Our visualization also points at possible work foci for the group in 2002.
The upper right section of the display highlights the importance of Unicode-related developments for Python during the year, with subsequent modifications to the /Lib/encodings branch of the architecture.
The core members could then decide to implement  the member's ideas - all CVS commits to the Encodings library were made by Guido and his associates .
The messages sent to the python-dev mailing list are represented as gray ovals.
As described above, they are laid out depending on their association with one of the four topics.
The pile of messages directly under "code discussion," for instance, tends to be concerned almost exclusively with this topic, while messages at the center of the display are not as narrowly focused.
Authors are represented as red rectangles proportional in size to the volume of messages that have been written.
Branches of Python's source tree are displayed as yellow rectangles, laid out in proximity to the topic they are associated with.
When an author is selected, his or her links to other authors are shown in black ; connections with source code tree branches are shown in yellow.
When a source tree branch is selected, all the authors who have worked on the branch are similarly highlighted in black and have yellow links to them .
In both cases, the width of the connecting lines is log-proportional to the amount of activity between the two nodes.
At this stage, without having selected any nodes, our system can already reveal interesting information about Python's organization.
The examples above illustrate our attempt at providing a more nuanced picture of communication flows in this project.
Here our system suggests the possibility of a boundary between the material and discursive sides of the project.
In Python it looks as if the transformation of ideas into code requires "translation" by the core members : holding the keys to the project's material infrastructure is an important source of power.
Stephen, for instance, was an important source of comments and ideas related to Unicode.
The hybrid network is also useful to identify other important roles.
For example, clicking on the documentation-related modules reveals the chief documenter for the project in 2002: Fdrake.
It also reveals that most of his emails are in the "maintenance/release" topic, which might mean that there is a scramble to get the documentation ready for new releases - a pretty standard occurrence with technology projects.
We also see members standing out whose role could have been easily misinterpreted using classic social network analysis.
Oren, for instance , is a major contributor to the mailing list and talks to a large subset of the project members in 2002.
He therefore looks more like a "philosopher" - his messages are fairly lengthy pieces discussing details of how certain things work or should work in Python.
Participants like Oren can spur important discussions and debates and affect the course of the project without writing code, in essence exerting a form of "discursive power."
In this paper we have presented one possible approach to implementing and using hybrid networks for the analysis of online activities.
Our focus has been on merging and displaying structural and content-based links in such a way that roles are perceivable and most of each activity's context is preserved.
However our system is not without limitations.
Scalability is a clear concern and our attempt at preserving context can lead to visual complexity.
The selection and placement of each topical cluster can greatly affect the final layout - several trials are often necessary before any evocative and meaningful results are obtained.
