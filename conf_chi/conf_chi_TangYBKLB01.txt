We explored the use of awareness information to facilitate communication by developing a series of prototypes.
The ConNexus prototype integrates awareness information, instant messaging, and other communication channels in an interface that runs on a desktop computer.
The Awarenex prototype extends that functionality to wireless handheld devices, such as a Palm.
A speech interface also enables callers to make use of the awareness information over the telephone.
While the prototypes offer similar functionality, the interfaces reflect the different design affordances and use contexts of each platform.
We discuss the design implications of providing awareness information on devices with varying interface and network characteristics.
Thus, we see a trend in awareness work from rich video images among computer desktops to lower fidelity text information.
The pervasiveness and lower network bandwidth requirements of text affords widespread use and is even accessible from mobile, handheld devices.
For over a decade, the research community has been exploring how to provide awareness information to help distributed collaborators work together more smoothly.
Awareness information facilitates contact and communication among distributed workers by representing some of the cues people use in face-to-face situations to determine if a colleague is available for an interaction.
This paper presents a progression of design ideas that extends awareness research beyond the desktop to include mobile users.
Recent research also highlights the need to account for people's mobility when designing collaborative systems.
Bellotti and Bly  found that workers' local mobility  often means that they are not near their computer desktop.
Consequently, all the tools that help manage communication, coordination, and awareness on the computer desktop are ineffective whenever the user is mobile.
The proliferation of wireless devices that have some connection to a computer network  presents the opportunity of extending the benefits of awareness information to mobile users.
The `live addressbook' project by Milewski & Smith  augments the traditionally static address book with dynamic awareness information.
It allows users to manually update their availability and best phone contact  as they move about.
Recognizing the need to access and update this information while mobile, they also offer a wireless Palm handheld client.
The CLUES work of Marx and Schmandt  took advantage of integrating communication resources to help provide users with a simple and effective interface for managing their communication while mobile.
Many of the popular commercial IM systems are also exploring IM clients for mobile devices.
In this paper, we report on a progression of prototype designs that provide awareness information to facilitate contacting people.
We begin with a research prototype that runs on desktop computers, code named ConNexus.
The next iteration research prototype, code named Awarenex, extends the functionality to mobile devices, such as wireless Palm handhelds and Research In Motion  Blackberry devices, in conjunction with cell phones.
Instant Messaging  systems also provide some awareness information, indicating when a "buddy" is on-line and how long they have been idle.
To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee.
Many companies confronting the problem of increasingly distributed workforces have turned to commercial IM systems to facilitate remote communication.
We believe that the design requirements in the workplace are different than those for on-line socializing, where IM became popular.
In designing ConNexus, we integrated communication tools and awareness capabilities into the workplace context.
We drew upon the research of Nardi et al.
Their study also revealed how concerned workplace users are about being interrupted and interrupting others when initiating contact.
One reason users like IM is because they find it to be less disruptive than the phone.
Figure 1 shows a Contact List for a user named Nicole.
Nicole has opted to show an entry for herself, with is at the top of the list.
Her entry indicates that she is running ConNexus and active on her computer .
Since she is not involved in any communication activities, no activity indicators are displayed.
Based on the Nardi et al.
We called our desktop prototype ConNexus, which stands for Contact Nexus.
The primary components in ConNexus are: * Contact List--a selected list of colleagues for which awareness information is provided and through which you can easily establish contact with them.
The Contact List provides awareness information for a selected set of people.
Each entry in the list indicates whether: * the user is logged in and using ConNexus * the input devices  have been idle * the user is engaged in any computer-mediated communication activities 
In the Contact Toolbar for Mattias shown in Figure 2, the first line at the top shows one line of information about the most salient appointment for Mattias--either an appointment that is currently occurring, or the next appointment, if any, that is scheduled to occur for the day.
The row of buttons presents the relevant communication resources for Mattias.
By positioning his cursor over the requester's entry in the Contact List, he can get a Contact Preview--a roll-over pop-up that displays the most recent text entered into the message at that point, shown in Figure 4.
The Contact Preview allows the recipient of the IM to preview what this message is about, and decide whether to join the IM.
While the IM chat functionality in ConNexus is similar to commercial IM systems, we revised the features to minimize disruption and increase awareness of remote participants.
Choosing to launch an IM chat from the Contact Toolbar  brings up an IM window.
The IM window has a region for displaying the interactive chat, and a text input field below that for typing input to the chat .
Initially, the background of the chat region is a light gray until the person you are directing the IM to joins the chat.
When the recipient joins the IM, the chat region background turns white, giving you awareness of when you are mutually engaged in an interaction.
As you enter text into the input field at the bottom, it gets inserted into the chat region character-by-character, so that others in the chat see it appear in their IM windows as you are typing.
Showing the text input character-by-character lets other users be aware that you are in the process of responding .
It can also increase the efficiency of IM chat by allowing participants to anticipate the intent of the text before it is actually completed.
When a user gets a request to start an IM, a peek icon animates out next to the name of the initiator of the IM, an IM activity indicator appears, and a sound is played.
This provides a sense of approach that someone wants to start an IM interaction.
If the user wants to join the IM chat, he doubleclicks on the entry of the person initiating the message.
The recipient can also choose to ignore the IM request.
At this point the disruption has been minimized to a peek and icon indicator in the Contact List and a notification sound.
The IM window has a "Goodbye" button at the bottom that allows users to convey their intent to end the chat without abruptly disconnecting the IM.
Pressing Goodbye starts the "leave-taking" process by printing a message and starting a countdown, shown by a series of dots of diminishing size, .
This conveys that you would like to take leave of the conversation, but keeps the connection open for any last-minute thoughts before the window disappears.
Designing for mobile devices, rather than a computer desktop, posed a few major challenges: * The screen size of mobile devices is severely limited .
To get some early use experience with the ConNexus design concepts, we extended an academic IM system  to create a working prototype.
We have been using the prototype in our own group  for about a year and a half, and have added two other working groups and summer interns adding up to about ten users of the system.
We also temporarily deployed ConNexus among a group of three administrative assistants.
From this preliminary use experience, we found that much of the benefit from ConNexus comes from the awareness in the Contact List, without using IM or other communication tools at all.
Awareness of when people are at their desk is useful in timing when to place a phone call to them .
Awareness information is especially useful for users in different time zones.
For our group, it helps us notice when people on the West Coast come in to the office, when people leave for and come back from lunch, and when people on the East Coast leave the office.
Users also appreciated having calendar information integrated into ConNexus as being much more efficient than using our desktop calendar program to browse someone else's current schedule.
The proliferation of mobile devices and the need to account for mobility in collaborative technology motivated us to extend the awareness functionality in ConNexus to wireless devices.
We began by interviewing groups of mobile professionals  to understand their communication needs and how they currently use their mobile devices.
Some common themes emerged from these interviews: * People need access to their information from a variety of locations .
Drawing from previous research and these interviews, we designed the Awarenex  prototype.
We focused on handhelds  and also integrated telephony into Awarenex.
We wanted both to enable mobile users who were away from their desktop computer to maintain awareness of their colleagues, and to be able to maintain awareness of mobile users when they left their desktop.
Each entry in the Contact List includes a name, the locale for where that user is  active, and any communication activity information.
Figure 6 shows that Nicole was most recently in her office, but her computer there has been idle for 23 minutes.
Furthermore, the clock icon indicates that she currently has an appointment scheduled in her on-line calendar.
From her awareness information, it seems unlikely that Nicole is available for contact.
Bo is shown to be mobile, currently using a wireless handheld, and in a call with his mobile phone.
Frank has not been logged in to an Awarenex device  for 2 hours and 46 minutes.
Phil's most recent activity was in the Speech Lab 3 minutes ago.
Willie is in a call at home,
Paul is currently active on the phone but his locale is unknown, since he is using the speech interface over the phone which cannot report a location for him.
Note that all times are presented in a "relative" format .
This format avoids problems we encountered in our earlier experience with ConNexus, which used an "absolute" time stamp .
Since users spanned across several different time zones, it was often unclear how to interpret in which time zone the time was being reported.
Most users do not log out of their office computers while taking short trips or attending meetings throughout the day, and many users leave themselves logged in indefinitely .
Thus, we had to handle users becoming active from another locale  while still being logged on elsewhere.
For the Contact List, we present the awareness information from the locale in which the user was most recently active.
More detailed awareness information from the other locales is presented in the following screens.
The rest of the Contact Locator shows the locales that the system knows about, the contact devices within each locale, and the awareness information about each device.
The most likely locale to reach the user  is indicated by the locale label in bold.
While we hope the simple algorithm of highlighting the locale with the most recent activity will be helpful, we do not expect it to be foolproof.
Rather, we imagine there will be many situations where the human user will have to interpret the complete awareness information from the calendar and all locales to determine the best way to try to contact a user.
Thus, we present all the awareness information from all locales to enable the user to make informed choices that the software would not be able to reliably predict.
Within each locale, the communication devices are listed along with their awareness information.
In the example in Figure 7, Bo was most recently active in his office and has devices in two other locales  through which he can be contacted.
Clicking on an entry for a device will initiate a communication attempt to that person at that device, as described in the next section.
Note that the communication devices fall into two different categories: those that are usually on and used somewhat continuously, and those that are usually inactive and used only intermittently.
This differentiation determines what kind of awareness information is useful for each device.
Once logged on to a computer, it is used somewhat continuously, and any idle time of the input devices or time since logging out is reported as awareness information.
On the other hand, mobile devices and phones are used only intermittently, and otherwise are inactive.
Thus, the awareness information shows when these devices are actively being used .
Otherwise, the time since the device was last used is reported.
The Contact Locator also provides access to communication resources that are not specific to a locale.
On the RIM interface, these are offered as menu options that are presented when any item is selected.
On the Palm interface, these options are displayed in a row of buttons along the bottom edge of the screen.
These resources include providing an interface for browsing through the next week of calendar appointments for the person, sending him e-mail, and browsing his on-line directory information.
The Contact Locator provides more detailed awareness information and presents the options for contacting that person, as shown on a RIM Blackberry 957 device in Figure 7.
The interface on the RIM is driven by selecting an item with the thumbwheel and clicking on it to bring up a context-sensitive menu of actions associated with that item.
The first line in the Contact Locator shows the most salient appointment for the person .
From the Contact Locator, you can initiate an attempt to communicate with a person at a specific device.
Clicking on a device that can receive an IM  brings up an IM interface.
The latencies in some of the wireless networks are such that character-by-character display of the IM text is impractical.
In this case, the text is buffered and transmitted when the line of text is completed.
Clicking on a phone entry brings up the interface shown in Figure 8 for placing a phone call.
It shows placing a call to the person at the device that you selected.
The system makes a guess about what phone to use for you from which to place the call.
Awarenex: Tom has an appointment at 1:30 pm to 6:00 pm Eastern Time, `working at home'.
His computer at home is active.
Caller: Call his home Awarenex: Calling Tom at home.
Awarenex would then transfer the call.
Without a display, the speech interface does not provide all the awareness information about a user, but provides the most relevant information to suggest the best alternative for making contact with the person.
Integrating awareness into the phone dialer also allows us to experiment with automatically routing phone calls to the user's most recently active locale.
The pop-up menu next to each phone number offers all the phone numbers that Awarenex knows about  to easily redirect the call if the default option is inappropriate.
Once the phone numbers are confirmed by pressing the "Call" button, Awarenex calls your phone, then places the call to the recipient and updates the awareness information to show that both of you are in a call.
Note that the IM interface also has a button to initiate a phone call to support the transition from IM to phone that was observed in the research on IM use in the workplace .
Selecting to send e-mail brings up a compose window for the user's default e-mail address.
People are often known at a single e-mail address .
Thus, email tends not to be tied to any locale.
If the user has more than one e-mail address, a menu is available in the compose screen to change the address to other known addresses.
Awarenex is a centralized system consisting of a set of device-dependent clients and two main server components: the Awarenex server and the telephone Dialer server .
Desktop and handheld clients connect to an Awarenex server which receives activity and communication information from clients and propagates those changes to appropriate clients.
The Dialer server consists of a multiline telephone switch and is responsible for placing calls between Awarenex users and providing a speech interface to the Awarenex service.
When a user places a telephone call through Awarenex, the Awarenex server connects to the Dialer server which places the call and tracks the status of both parties .
The Dialer server also acts as a client of the Awarenex server, providing a speech interface to users who call into the Dialer server.
Two additional server-side components are used to connect with the networks that service the wireless handhelds.
Integrating telephony services within Awarenex suggested the opportunity of making the awareness information available to users calling in over the phone without any mobile device.
For example, if you were to call a colleague, Tom, and he does not answer, you could identify herself as an Awarenex user and go through the following dialog: Awarenex: Tom is not answering the phone.
Would you like to leave voice-mail, page him, or check status?
All server components and the desktop client are written in the JavaTM programming language.
The RIM and Palm clients are written in C++.
The components communicate using an ASCII message protocol.
The protocol and distribution architecture are designed to support scalability through the use of multiple Awarenex servers.
Although the RIM and Palm devices have similar processing and display capabilities, the platforms present different development environments, user interface libraries, as well as data storage and access libraries.
Due to this platform variance, we spent considerable time re-creating common platform functions such as the string manipulation functions found in the standard C libraries.
Together, ConNexus and Awarenex demonstrate: * Providing interfaces on multiple platforms for interacting with a centralized resource of dynamically changing awareness information * Coordinating actions among different devices operating on independent networks * Integrating telephony with other communication resources and providing awareness of telephony activity * Augmenting IM chats by offering approach and leave-taking awareness cues when starting and ending chats.
Extending beyond the desktop to include mobile users helped us to appreciate a larger context for which awareness information is useful.
It also led us to the concept of locales as a useful way of grouping communication devices, tracking awareness, and suggesting the best way to contact someone.
Integrating the different platforms of computer desktop, wireless handheld, and speech also presented several design challenges.
Each device has different interface affordances.
The Palm interface is driven by a stylus on a touch screen with graffiti text input.
The RIM uses a thumbwheel to make menu selections and a dedicated "Back" button with a miniature keyboard for text input.
The menu driven interface on the RIM reveals more about the user operations and options that can be taken on that selection, but typically requires two clicks .
On the other hand, interface widgets on the Palm must make evident what will happen when you touch them, which takes some crafting of the interface but requires fewer input actions from the user.
As mentioned earlier, an important difference among the platforms is the user context for each device.
The somewhat continuous use of the desktop client often means that you need to alert users to changes of state.
The intermittent use of handheld devices makes the user more task-focused and hurried.
The temporal nature of speech interfaces makes it more important to streamline the information that is presented over the audio channel.
One interesting aspect of this project is that it is likely that one user will encounter the Awarenex interface on multiple platforms, as she moves from office desktop to handheld device to speech interface.
This is slightly different from traditional cross-platform design, where interfaces are created across several different platforms, but users typically stay within a platform .
Since users are likely to experience the interface on multiple platforms, we had to maintain a certain consistency in the interface across all platforms, while also respecting the different use contexts of each platform.
Providing these awareness services across a range of platforms points out the need for better interaction among devices.
Much of the current design involves bridging among the various service providers and networks .
In extending our desktop computer interface to mobile devices, we were concerned that we might fall into the trap of treating the mobile devices as simply compact versions of the desktop client.
Industry experience with interface design for handhelds has highlighted that those interfaces must account for the more task-focused and urgent context of a mobile user .
To get some feedback on our design concepts, we conducted a heuristic evaluation with user interface designers in our company that have more experience with designing for mobile devices.
We followed this up with a "paper" usability study  with experienced Palm users.
Both experiences suggested some design revisions and raised open issues that we want to investigate by observing the prototype with real use experience.
We need to simplify the navigation among the Awarenex screens on the mobile client.
Currently we have a button labeled "Contacts" that takes users back from the Contact Locator to the Contact List.
None of the users could make sense of this button label, and we will instead use more of a Web navigation model with a "Back" operator to navigate back to the list.
Several other button label issues also arose in these studies.
An open issue is whether our simple algorithm for suggesting the best locale for contacting people is reliable enough to allow us to streamline the interface.
Some felt that if Awarenex knows the user's most recently active locale, presenting awareness information for the other locales unnecessarily clutters the Contact Locator interface.
On the other hand, our concern is that you may often need to exercise judgement based on all the awareness information for the user about how to best contact that person.
For example, if a user is in transit between two scheduled appointments, but briefly stops by her office to glance at email, there will be a span of time where the most recent awareness information would indicate that she is in her office.
The bigger picture, including the scheduled appointments and mobile devices, would explain that she is probably still mobile.
We will be looking forward to real use experience to help us better understand the right UI model.
Another open issue is the organization of the Contact Locator interface, currently grouped in terms of locales.
Some devices transcend locales .
Furthermore, you might be more interested to reach someone using a particular communication channel, regardless of what locale they are in.
Thus, some wanted to see the Contact Locator organized by devices rather than locales.
Our rationale for grouping devices in the context of locales is that the activity of the other devices in a locale helps determine the best way to contact someone.
We expect that technologies such as Bluetooth and JiniTM that promise to enable seamless interaction among devices should make it easier to implement the kind of functionality that we have designed in Awarenex.
For example, having a handheld device communicate directly with a cell phone would probably reduce the latency of placing a call that we experience in Awarenex.
Bellotti, Victoria, and Sara Bly, "Walking Away from the Desktop Computer: Distributed Collaboration and Mobility in a Product Design Team", Proceedings of the Conference on Computer-Supported Cooperative Work  `96, Boston, November 1996, pp.
Bergman, Eric, Ed., Information Appliances and Beyond, San Francisco: Morgan Kaufmann Publishers, 2000.
Bly, Sara A., Steve R. Harrison, and Susan Irwin, "Media spaces: Bringing People Together in a Video, Audio, and Computing Environment", Communications of the ACM, Vol.
Bradner, Erin, Wendy A. Kellogg, Thomas Erickson, "The Adoption and Use of `BABBLE': A Field Study of Chat in the Workplace", Proceedings of the European Conference on Computer-Supported Collaborative Work , Copenhagen, September, 1999, pp.
Dourish, Paul and Sara Bly, "Portholes: Supporting Awareness in a Distributed Work Group", Proceedings of the Conference on Computer Human Interaction  `92, Monterey, CA, May 1992, pp.
Greenberg, Saul, "Peepholes: Low Cost Awareness of One's Community", Companion Proceedings of the Conference on Computer Human Interaction  '96 Vancouver, April 1996, pp.
Isaacs, Ellen A., John C. Tang, and Trevor Morris, "Piazza: A desktop environment supporting impromptu and planned interactions", Proceedings of the Conference on Computer-Supported Cooperative Work  `96, Boston, November 1996, pp.
Jeffrey, Phillip and Andrew McGrath, "Sharing Serendipity in the Workplace", Proceedings of the Conference on Collaborative Virtual Environments  2000, San Francisco, September, 2000, pp.
Marx, Matthew and Chris Schmandt, "CLUES: Dynamic Personalized Message Filtering", Proceedings of the Conference on Computer-Supported Cooperative Work  `96, Boston, November 1996, pp.
Milewski, Allen E., and Thomas M. Smith, "Providing Presence Cues to Telephone Users", Proceedings of the Conference on Computer-Supported Cooperative Work  2000, Philadelphia, December 2000, pp.
Nardi, Bonnie, Steve Whittaker, Erin Bradner, "Interaction and Outeraction: Instant Messaging in Action", Proceedings of the Conference on Computer-Supported Cooperative Work  2000, Philadelphia, December 2000, pp.
At this point we have working prototypes of the Palm and RIM clients as well as the speech interface.
We need to complete the design revisions mentioned from our usability study and update the workstation client to conform to the new Awarenex design.
The next step is to deploy the system to gain some experience using it.
By implementing the Awarenex server from scratch, we were able to address the reliability problems we experienced with ConNexus that should enable an extended deployment that can give us valuable use experience.
Only a longitudinal use study will give us insight into the many research questions that such prototypes raise.
Do people feel closer and more coordinated through these awareness features?
Are people willing to make the trade-off of broadcasting their activities for the awareness benefits gained?
How do people feel about the distractiveness of the system?
We hope to address these questions by studying Awarenex in use.
We are especially interested in experiencing the use of the different platform clients and seeing how they interact with each other.
For example, one thing we would like to do when having an IM between a computer desktop client and a handheld client is to resize the IM window on the desktop client to reflect how the handheld user is viewing the IM chat, so that they have a shared user experience.
We would also like to explore what kind of application sharing might be useful between a desktop and handheld client.
Awarenex strives to give meaningful awareness information to anyone, anywhere, to facilitate making contact among each other.
We hope to gain more experience with our working prototypes to refine our design concepts and further our understanding of how we can include mobile users in collaboration systems.
Will Walker, Paul Lamere, and Philip Kwok in the Speech Integration group implemented the Dialer server and speech interface.
We are grateful to our paper usability study participants and to the Java Software User Experience Group for their heuristic evaluation of Awarenex.
We thank Philip Isenhour at Virginia Tech, who implemented PEPPER and granted us permission to extend it for our use.
