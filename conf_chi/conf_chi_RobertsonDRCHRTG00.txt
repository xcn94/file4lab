The Task Gallery is a window manager that uses interactive 3D graphics to provide direct support for task management and document comparison, lacking from many systems implementing the desktop metaphor.
User tasks appear as artwork hung on the walls of a virtual art gallery, with the selected task on a stage.
Multiple documents can be selected and displayed side-by-side using 3D space to provide uniform and intuitive scaling.
The Task Gallery hosts any Windows application, using a novel redirection mechanism that routes input and output between the 3D environment and unmodified 2D Windows applications.
User studies suggest that the Task Gallery helps with task management, is enjoyable to use, and that the 3D metaphor evokes spatial memory and cognition.
Management of multiple user tasks is an activity that, if made easier, could help enrich users' computing experience.
A task is a collection of documents and applications organized around a particular user activity.
For example, a user may rapidly switch between working on finances, writing a paper, and managing correspondence.
Each of these may involve many applications.
Task management has several components: creating, locating, and bringing tasks into focus, and window management within a task.
Within a task, users need to manage placement and size of windows and quickly shift focus of attention from one window to another.
Users also need to be able to bring relevant information to bear on the task being performed.
In some cases, this requires bringing two or more windows into a useful view simultaneously.
The Task Gallery is designed to meet the goals of task management, while providing other features available in a window manager.
It is a 3D environment designed so users can be productive using familiar, existing applications.
Our design premise is that 3D virtual environments can more effectively engage spatial cognition and perception.
Almost all new personal computers are now delivered with 3D graphics acceleration hardware.
Although this innovation has been driven by the computer game industry, it could usher in a whole new class of productivity applications with 3D interfaces.
In the Task Gallery , the current task is displayed on a stage at the end of a virtual art gallery.
It contains opened windows for that task.
Other tasks are placed on the walls, floor, and ceiling of the gallery.
The user switches to a new task by clicking on it, which moves it to the stage.
Viewing multiple windows simultaneously is done with a button click, using automatic layout and movement in the 3D space to provide uniform and intuitive scaling.
Applications and frequently used documents are kept in a Start Palette  carried in the user's virtual left hand.
The Task Gallery currently lacks one feature of Rooms, which is the ability to share a window so that it appears in multiple tasks; however, we plan to implement this in the future.
The Andrew window system  explored a space-filling tiled window layout, where windows are resized automatically .
Users found it confusing and the approach was abandoned.
Elastic Windows  also uses a space-filling tiled layout, with tasks replaced by hierarchical user roles.
The lowest level role is similar to the Rooms notion of task.
The Task Gallery returns to tasks as the basic unit, and uses spatial layout of tasks for task management, instead of a role hierarchy.
Elastic Windows addresses the problem of simultaneous display of multiple windows by allowing the user to create a container into which multiple windows can be dragged.
The Task Gallery has similar functional advantages, but no special container is needed and only a single button click is required to select each window.
The Task Gallery also maintains spatial continuity whereas Elastic Windows can do significant window repositioning.
3D Rooms  was built as an information workspace that used 3D virtual environments to extend the ideas of Rooms.
This was not actually a window manager; abstract information visualizations replaced windows.
The basic motivation was to engage human spatial cognition and perception in order to make task management easier.
The Task Gallery shares that motivation, but manages windows associated with existing applications in order to bring the advantages of human spatial cognition and perception to our current set of computer applications.
Web Forager  and Data Mountain  are virtual environments designed for managing documents.
They each use a 3D virtual environment to more fully engage human spatial cognition and memory.
Studies of the Data Mountain  demonstrate that placing documents in a 3D space helps the user remember where the documents are during later retrievals.
The Task Gallery also seeks to use spatial memory to help the user remember where tasks are placed in the gallery.
The window manager is the part of the computer user interface that manages display and input device resources .
It allows the user to bring up windows, menus, and dialogue boxes associated with running applications, manipulate windows, and minimize them.
It takes mouse and keyboard input and directs it to the appropriate applications.
The window manager also determines the look and feel of much of the user interface.
Window management systems have been a fundamental part of computer user interfaces for the last 25 years.
By the mid1980's, Unix and MacOS window management had converged on the desktop metaphor with overlapped windows .
This metaphor has served the computer industry well for 15 years, making it possible for many new users to use computers effectively.
The desktop metaphor has changed little since it was created.
However, the way computers are used has changed significantly.
The growing range of applications and online services have made computers applicable to many more real-world activities.
People often engage in a number of tasks and need to switch between them frequently and quickly .
In the desktop metaphor, switching between tasks can involve dozens of operations .
Users often need to see multiple documents simultaneously .
Again, this can take many steps .
The desktop metaphor has inadequate support for task switching, leading to wasted effort and frustration on the part of the user .
In the Task Gallery, switching between tasks and viewing multiple windows simultaneously are simple actions.
In addition, the Task Gallery provides a strong spatial framework for encoding location information and front to back relationships, thereby engaging the user's spatial memory to help retrieve tasks and services.
Rooms  was created to deal with problems that early PC users had in managing their tasks .
Users switch between tasks frequently and there is strong locality of window reference based on task: particular windows are associated with particular tasks.
This can be exploited by creating a visible representation of a task, and allowing the user to easily switch between tasks .
The choice of a navigable spatial metaphor was partly motivated by a desire to leverage human spatial memory .
An art gallery was chosen because of its familiarity.
To increase ease of retrieval, the Task Gallery includes the images of documents and tasks in the space in addition to their spatial location and title cues.
Classical mnemonic research has documented that mental cues in the form of visual images are an excellent way to enhance memory for items .
Our previous studies have shown the strong influence of snapshot/thumbnail cues to aid spatial memory during the storage and retrieval of web pages .
Thus, we provide a few simple controls rather than a general egocentric navigation mechanism.
Figure 2 shows these onscreen controls, which allow the user to "jump" backward, forward, home , and to a bird's eye view showing all the tasks in the Task Gallery.
Each jump control starts a one-second camera animation from the current position to the desired target.
Our studies showed that users did not become disoriented in the 3D space when using these controls, and that they could easily find their desired tasks.
New tasks can be created by picking the "new task" item on a menu or on the Start Palette .
A background image is chosen by the system to distinguish the new task from existing tasks.
The user's desired location of the new task is not yet known, so it is placed on the floor in front of the stage.
Other tasks on the floor are moved back away from the stage to make room for the new task.
This is done with a three-step animation: move the camera back to make the action visible, move the tasks on the floor back and place the new task on the floor, and finally do a task switch as described earlier.
The three-step animation was implemented as a result of user testing, and greatly improved the usability of task creation.
It is assumed that the user will move the task to a more appropriate location in the gallery later.
Animation is used to reinforce the spatial metaphor.
For example, when a user switches to a task by clicking on it, a one-second animation starts.
The current task is closed by creating a snapshot which is moved back to the task's frame in the gallery.
The newly selected task is then moved from its frame to the stage.
When it arrives at the stage, it is transformed from artwork into live windows.
A "ghosted" view of the task remains in the gallery, to mark the spot that it came from.
The initial and primary working view is a close-up of the stage , showing the current task and its live windows.
To view other tasks, the user backs up to see more of the gallery, as in Figure 1.
The gallery is composed of a sequence of rooms, with only one closed end; more rooms are revealed without limit as the user moves back.
This provides a simple way of managing the user's attention.
As the user backs away, attention is widened.
Moving to the stage focuses attention on the current task.
The user can move tasks wherever desired with a dragging movement.
Tasks are constrained to remain on walls, floor, or ceiling, but can be moved between these surfaces in a way inspired by Object Associations .
The transition from wall to floor, for example, causes the task to shift to the appropriate orientation on the floor.
Task frames are tilted outward so that they are more legible from a distance.
Task frames on walls are mounted on a stand to make the metaphor more obvious and to ground them visually in depth.
Segmentation of the gallery into separate rooms, grouping of task windows into mounted pieces of artwork, and using distinctive backgrounds all provide landmark and spatial cues that act as memory aids.
Users  tend to get lost in many 3D systems that require them to navigate.
The current task on the stage is composed of several components, including a loose stack, an ordered stack, and a selected windows set.
The loose stack is used for overlapped windows in much the same way as the current desktop metaphor.
These windows are mounted on stands to visually ground them to the stage.
Clicking on one of these windows will bring it forward to a selected window position, replacing the current selected window.
The window manipulation controls shown in Figure 3 are used for moving windows around and placing them on various stacks.
These controls appear over the window banner when the user points to the banner.
Windows in the loose stack can be directly moved anywhere on the stage, using a technique similar to Point of Interest object movement ; mouse movement controls movement in the plane perpendicular to the line of sight, and the shift and control keys control movement toward or away from the user.
The ordered stack appears to the left of the stage, as shown in Figure 4.
Users choose to place windows in the ordered stack to keep currently unused windows organized .
If one of the windows on the podium is moved, the stack is tidied to have a fixed distance between each window.
Clicking on a page in the ordered stack moves it to the selected window region.
When windows are selected, the system moves them closer to the user for greater legibility.
Multiple windows can be selected using the "Add to Selection" icon in Figure 3.
Each time a window is added, an automatic layout moves the windows so they are all visible side by side .
Unlike tiled window managers that crop windows and may force users to scroll, this operation does not affect what is visible in selected windows.
Thus we use distance in 3D to provide uniform scaling in an intuitive way.
The Left toolspace contains the "Start Palette", which is a Data Mountain  with the appearance of an artist's palette .
The Data Mountain was originally a tilted plane in 3D holding favorite web pages.
The objects on the Start Palette are icons and snapshots for applications, favorite documents, or web pages.
The behavior of the Start Palette is similar to a Data Mountain, including object movement and occlusion avoidance.
The only difference is that selecting an object from the Start Palette causes an application to launch with its window in the current task.
When an application is launched, the glance is terminated.
Our user testing demonstrated that participants learned to add applications and documents to their tasks easily using the Start Palette.
Earlier studies of the Data Mountain  suggest that users should be able to find icons on the Start Palette much faster than in the traditional Start Menu.
The existing Windows desktop metaphor uses menus  and toolbars to give the user access to commonly used tools and documents.
To better fit the metaphor of moving through a hallway, we designed the Task Gallery so that the user carries tools and documents associated with the virtual body, using an adaptation of Glances and Toolspaces .
Glances are a lightweight, ephemeral way of looking around in a virtual environment without moving the virtual body.
Toolspaces are placed around the user, and hold various tools or objects, keeping them associated with the virtual body as it moves through the virtual environment.
The Task Gallery has toolspaces left of, right of, above, and below the user.
Hands and feet are shown to make the scale of the objects in the toolspaces more obvious and to suggest that these tools stay with the user as the user navigates through the environment.
In the Task Gallery, glances are initiated with the controls shown in Figure 2.
Glances remain in effect until the user selects something in the toolspace or glances elsewhere.
During the design and implementation of the Task Gallery, we gathered empirical evidence to support our design decisions.
Our first three studies examined task management before and after various usability issues were resolved.
The third study took place several months after the first two, and included evaluation of features added in response to the first two studies .
In addition, we were interested in how spatial cognition pertains to 3D environments like the Task Gallery, and whether or not aspects of real world spatial location memory transfer to electronic environments.
We were interested specifically in how well users could create and modify tasks and arrange the overall task space.
In addition, detailed information about organizing and retrieval strategies was collected, to support those strategies in future designs.
We wanted to know whether organizing strategies were based on frequency, size, type of content or time.
While the art gallery metaphor suggests use of the walls over the floor and ceiling, previous research suggests that certain bodily axes are considered primary in the real world .
We also wanted to know how subjectively satisfying participants considered the 3D user interface for task management.
A benchmark comparison between the Task Gallery and Windows is planned after further design iteration.
Materials included two prototype versions of the Task Gallery, which used "snapshots" of documents instead of live applications.
The prototype environments were fully interactive except that the applications were not live.
Eight tasks and their contents were created prior to the study, based on common computer tasks collected during actual Windows' user home visits.
Tasks typically contained 2 to 5 documents .
Images of documents comprising these tasks were saved onto the Start Palette in a default arrangement used for each subject.
During the study, participants used the Start Palette for items to add to tasks and to create new tasks.
The Start Palette had 33 items.
The study was run on a 300Mhz Gateway Pentium computer with a  15" NEC Mutisync LCD flat panel monitor.
Participants interacted with the software using a standard Microsoft serial mouse.
No audio was included in this prototype.
Trial times for each subject were averaged across trials for each trial type in the experimental phase of the study.
Overall trial times improved after changes were made to the user interface by about 7 seconds , on average.
None of the performance improvements reached statistical significance due to the small number of participants and the large individual differences observed.
Participants carried out 6 tutorial trials, and 20 experimental trials.
In the tutorial trials, users were introduced to the concepts of navigating, selecting, and arranging documents and tasks in the environment.
Once it was determined that the participants could perform all of the tutorial trials easily, the experimental trials were begun.
During the experimental trials, users created tasks, organized the tasks in a way that was meaningful to them, retrieved eight tasks and their specific content items, and finally carried out various Windows operations.
After the first experimental trial, we asked users to draw what the hallway looked like to them, and what location and orientation they had within the hallway.
At the end of the session, users drew their information layout in the hallway in as detailed a manner as they were able.
In addition, they filled out a user satisfaction questionnaire.
Participants placed significantly more tasks on the left and right walls of the gallery than the ceiling or floor.
This tendency to conform to the way space is typically used in a real world gallery suggests that participants were using the metaphor to guide interaction.
Legibility was the same on walls, floor, and ceiling in these two studies.
Participants' organization of tasks involved spatially grouping related tasks.
Tasks that "went together" were placed close together on the same surface.
A variety of organizational strategies were observed including ordering by frequency of use, location of use , semantic relations, and alphabetical.
Furthermore, most participants used more than one organizing strategy.
Most participants thought of the hallway as a square, rectangle, or quadrilateral in shape.
All participants correctly identified their face forward orientation.
The fact that participants chose a canonical gallery shape suggests that the metaphor and 3D cues were sufficient for them to perceive a 3D space.
Participants' drawings of the Task Gallery were scored for correct recall of tasks and correct placement of recalled tasks in their depictions of the space.
Sixty-four per cent of the tasks were correctly recalled, and forty-six percent were correctly recalled and also drawn in the same position that they were placed in the Task Gallery.
These are acceptable figures given the complex nature of the environment, and the fact that participants were not told they would be given a memory test.
There were no reliable differences between tasks that were "pre-arranged" in the space and those that the participants created themselves.
This suggests that an initial default Task Gallery layout could be provided for users, to simplify the work of laying out tasks.
Eighteen percent of the tasks were recalled but placed incorrectly.
Analysis of those errors showed that it was more difficult to remember whether a task had been placed on the left or right wall than to remember its depth order .
Ninety-two per cent of the placement errors were due to drawing tasks on the wrong wall.
Only eight percent of these errors were due to drawing tasks in the wrong relative depth order  = 2.74, p < .05.
This is consistent with the literature on memory for spatial arrays , which finds that front-back relations are easier to represent than left-right relations.
This supports our design by showing that users leverage the front-back relations afforded by the use of 3D to represent and recall task location.
The study was run on a 400Mhz Gateway Pentium computer with a  15" NEC Mutisync LCD flat panel monitor.
Participants interacted with the software using a standard Microsoft serial mouse.
Fully spatialized audio was used in this iteration of testing, which had not been available in the earlier iterations.
Participants carried out icon identification and purposematching on the windows controls shown in Figure 3.
These identification and matching tasks were carried out on paper, requiring subjects to label and match pictures of the icons to their actual functions without ever using the Task Gallery or seeing hover text titles.
Next, participants ran through 2 tutorial trials introducing them to the navigation and window controls, and 12 experimental trials.
Five tasks were pre-arranged in the Task Gallery, and these tasks were used in the early phase of the experiment in order to give users a reason to move about the environment .
Users were introduced to the notion of arranging various documents into tasks, which could be saved away to a permanent spatial location .
Next, the users created three new tasks and saved them during the experimental trials.
During the experimental trials, users organized all the tasks in a way that was meaningful to them.
On average, users identified the icons 44% of the time and matched the icons correctly 48% of the time.
Given the users had not seen the Task Gallery nor did they know what could be done in the environment at the time of the icon evaluation, this is not a surprising result.
After using the system for under 10 minutes, all users understood how the novel 3D windows controls operated, and what their unique functions were.
For this study, eight tasks and their contents were identified and created prior to the study.
Tasks typically contained between 5 and 11 documents .
Note that this iteration of testing included many more documents in tasks than the previous two iterations, as we were interested in how the Task Gallery might scale up to larger numbers of documents.
Therefore, we did not attempt any quantitative comparisons to the previous two iterations.
As before, thumbnails of documents comprising these tasks were saved onto the Start Palette in a default arrangement that was used for each subject.
During the study, participants went to the Start Palette to get items to add to tasks and to create new tasks.
There were 27 items on the Start Palette.
Satisfaction ratings were even higher with this iteration.
The overall average satisfaction ratings were 5.3  using a 7 point scale, with 7=positive.
The only satisfaction question which received a lower than average rating was "I always knew what to do in this software", with an average of 3.1 .
Given the highly novel nature of this environment for most users, we believe a lower rating here is acceptable for a first session, but may suggest an area to focus on for improvement.
On average, users rated the Task Gallery as preferable to their current Windows software .
Some participants simply did not like the idea of tasks lying on the floor.
Two participants, however, mentioned that tasks on the ceiling and floor were more difficult to read, due to the angle at which they are placed.
This was not true in the prototype tested in experiments 1 and 2.
Legibility problems were introduced in the final version of the system as a result of addressing some serious texture management issues.
We are currently exploring alternative layouts to make tasks on the ceiling and floor easier to read.
We identified several usability issues in this iteration of testing.
Some of the novel icons and controls have already been changed based on feedback.
In particular, many of the navigation and control icons were confusable or not grouped properly by function.
In addition, it was clear that some participants had trouble differentiating glances from hallway navigation.
Some users wanted to multi-select items from the palette for addition into a new task.
These issues will be addressed in a revised design.
The Task Gallery faces the same problem.
The best we can currently do is to record the information used to launch the application.
Unfortunately, that is far from ideal.
Applications allow the user to change what files are open, and some even provide a form of window management within the application.
Without some standard way of getting the state of open files and sub-windows within an application, it is extremely difficult to solve the general problem.
Some Windows applications allow inspection of their open documents through COM interfaces.
We are exploring what can be done by tracking file opens and closes and window creation, but this approach is difficult without modifying existing applications.
The key technical challenge in building a 3D window manager is to get existing applications to work in the 3D environment without changing or recompiling them.
This requires both output and input redirection facilities in the operating system.
Output redirection causes applications to render to off-screen bitmaps instead of the screen, gain access to those bitmaps so that they can be used as textures in the 3D environment, and receive notification whenever an application has updated its visual display.
Input redirection causes mouse and keyboard events to be received by an application rather than the 3D environment's main window, but with mouse coordinates translated from 3D to 2D.
The details of our implementation unfortunately fall beyond the scope of the current paper, but will be published in a separate paper.
Although these details are specific to the Windows 2000 operating system, the components needed will be similar in other operating systems.
For example, similar changes are possible for any OS that uses the X Window System, as long as the X server runs on the same machine as the client applications and the window manager so that bitmap sharing is efficient.
For example, Feiner  modified an X server to put 2D windows into a 3D augmented reality.
The Task Gallery runs on current high-end PCs with a modified version of Windows 2000 and a standard 3D graphics accelerator .
All Task Gallery code was implemented in C++, using Win32 and Direct3D APIs.
The Task Gallery is an exploration of the use of 3D virtual environments for window and task management.
It is motivated by the desire to leverage human spatial cognition and perception and to take advantage of the coming ubiquity of 3D graphics hardware for more than computer games.
Early user tests suggest that the Task Gallery does help with task management and is enjoyable to use.
But we have only scratched the surface.
In our usability studies we observed users exhibiting many of the same principles of spatial cognition as are exhibited in the real world.
Users had a strong sense of front to back ordering of their tasks, rarely confusing that ordering in memory.
We will continue to explore metaphors leveraging users' real world knowledge in our future 3D environments.
There are a number of things that we plan to do as we continue to evolve the Task Gallery.
Better landmarks could make a significant difference in helping users remember on which wall they placed tasks.
The Data Mountain occlusion avoidance algorithm can be used to help avoid occlusion problems while moving task frames.
As discussed earlier, the task persistence mechanism may benefit from application-level changes, although we hope to avoid those.
These changes will make it possible to effectively use the Task Gallery as a replacement for the current desktop on a day-to-day basis.
Once these necessary changes are made, we intend to do a benchmark study comparing the Windows desktop shell with the Task Gallery.
Beyond that, we plan to explore integration of novel uses of 3D visualizations living side-by-side with existing Windows applications.
Our goal was to design a 3D window manager that solves two problems with the current desktop metaphor: task management and comparison of multiple windows.
The Task Gallery is a first-generation system that addresses these issues, and is built on a general-purpose application redirection technology which will allow us to explore alternative user interfaces for application environments.
We thank Matt Conway, Susan Dumais, George Furnas, and Dennis Proffitt for valuable assistance during the design of the Task Gallery.
The Windows 2000 USER and GDI teams  were instrumental in architecting appropriate low-level support for this work; we owe great thanks in particular to Corneliu Lupu and Andrew Goossen.
