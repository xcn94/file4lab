Christof van Nimwegen Daniel Burgos Herre van Oostendorp Hermina Schijf  Utrecht University, Center for Content and Knowledge Engineering Padualaan 14, 3584CH, Utrecht, The Netherlands.
This paper investigates the influence of interface styles on problem solving performance.
It is often assumed that performance on problem solving tasks improves when users are assisted by externalizing task-related information on the interface.
Although externalization requires less recall and relieves working memory, it does not instigate planning, understanding and knowledge acquisition.
Without this assistance, task-information must be internalized, stored in the user's memory, leading to more planning and thinking and perhaps to better performance and knowledge.
Another variable that can influence behavior is "Need for Cognition" , the tendency to engage in effortful cognitive tasks.
We investigated the effects of interface style and cognitive style on performance using a conference planning application.
Interface style influenced behavior and performance, but NFC did not.
The internalization interface led to more planful behavior and smarter solutions.
When planning and learning are the aim, designers should thus beware of giving a user  much assistance.
Understanding how people react to interface information can be crucial in designing effective software, especially important in the areas of education and learning.
The interfaces of today are by no means comparable with command-line interfaces of the past.
A recurring issue in usability guidelines is the importance of minimizing "user memory load" , also referred to as computational offloading .
This means that the working memory of a user is relieved so that a maximum of cognitive resources can be devoted to the task at hand.
The externalization of certain information could be of assistance to the problem solver.
The need to plan is reduced, and externalization can limit the possibilities in a given situation, thus reducing the problem space that has to be searched .
A way to implement some degree of externalization is to make parts of the interface context-sensitive, e.g.
By doing so, the user is "taken by the hand" by limiting choices and providing feedback .
Examples are wizards, help-options and graying-out menu-items that don't permit using them, thus offering a context-sensitive interface with only "possible" actions.
For example, in Word you cannot select "paste" from the "edit"-tab in the menu when nothing is copied first.
In the opposite situation, when no such features are provided, a user has to internalize the information himself, and store this information in his/her memory.
Concerning the graying out of menu items in this manner, there have been some famous remarks in the past from within the HCI community .
Mostly, irritation was expressed stemming from the fact that the graying out in itself raised new questions.
In complex software, users often did not know why something was grayed out, possibly causing more frustration than not graying out items at all, leave alone the chance of graying out being of extra help.
Besides the fact that externalizing relevant information is almost default in direct manipulation interfaces, there is also research advocating the use of externalization.
An experiment by Zhang and Norman  showed that relieving working memory by externalizing information can be useful for cognitive tasks; the more is externalized, the easier it is to solve the problem.
To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee.
Despite such results showing that supporting the user can make tasks easier, it could also be argued that externalization may have negative consequences for task performance and knowledge acquisition.
In general, there is the notion that learning is more effective when people experiment and discover for themselves.
Exploratory learning as a whole has been a subject of research in many domains.
Carroll  for example, already more than a decade ago propagated minimalism in design and instructions.
An example is to leave instructions intentionally incomplete to promote intrinsic interest through a problem challenge.
Perhaps knowledge gained using an externalization-based interface is more volatile and difficult to transfer to other situations.
In the context of this presumed volatility there is a famous study investigating what users remember of the detailed content of the Mac Write interface .
It showed that even experienced users recall little of menu contents, even though they use them all the time and achieve successful performance.
Although the needed information for the task was found and applied, it was not remembered later on.
Payne, Howes and Reader  state that internalization vs. externalization effects can be framed as just one example of the cost/benefit analysis of environmental action.
When information is externalized on the screen, users simply use it  and don't need to incur the cost of storing relevant information in their memory, as the information is reliably always available.
This in turn allows users to quickly being able to perform a task.
However, when information is not externalized, planning and learning occurs, making it possible to optimize the performance.
O'Hara & Payne  distinguished between plan-based and display-based problem solving.
In plan-based problem solving one uses detailed problem strategies from long-term memory.
Display-based problem solving on the other hand makes little use of acquired knowledge but relies on interface information.
Plan-based activity eventually leads to a shorter solution route, because steps are planned, and no unnecessary steps are taken, while a display-based strategy involves more steps because of more searching.
O'Hara and Payne tried to provoke plan-based problem solving behavior by varying the operator cost in an interface.
A puzzle was solved in a low-cost interface and a high-cost interface.
The high-cost interface imposed a much longer lockout time on subjects after performing an action than the low-cost interface.
Results showed that the highcost interface indeed induced a more plan-based approach, which in turn led to better task performance .
Also, the task knowledge acquired with the high-cost interface could more easily be transferred to problems within the same domain.
They warned, however, that just freeing up cognitive resources is not enough.
In short, strong reliance on the visual display may result in less transfer of skills and less planning.
Research using two interfaces to the Tower of Hanoi  showed converging results.
Subjects used a command line interface or a direct manipulation interface to the problem.
It showed that subjects performed better  with the command line interface .
Thus, externalizing information may not be beneficial when the ultimate goal is to achieve better, transferable task performance and knowledge.
Besides better transfer to other situations and problems, one could imagine that possessing better internal knowledge-elements, leads to better performance even when one has worked with the application some longer time ago.
In other research by the authors  an abstract version of the Missionaries and Cannibals Puzzle was used.
We investigated the effects of internalization vs. externalization on task performance, knowledge, and transfer over time to different problems in the same domain.
This problem, called Balls & Boxes  had to be solved using an application that existed in two interface styles: externalization vs. internalization.
Externalization was realized by graying out inapplicable  buttons that were needed to perform certain operations.
In the internalization condition this support was absent.
The experiment consisted of two sessions with 8 months between them.
Surprisingly, not ever, on any task aspect did subjects in the externalization condition perform better.
It also showed that subjects in the internalization condition had better knowledge afterwards.
Even after 8 months, the internalization subjects still proved to have better knowledge and now also better performance.
In addition, these subjects performed better at transferring the acquired rule-knowledge to a different but similar task.
This finding is similar to results from Palmiter and Elkerton , although they did not focus on interface styles per se.
In an experiment users were presented with animated demonstrations, textual instructions or a combination of both to learn a program.
It showed that demonstrations  may not provide useful knowledge for retention and transfer.
The demonstration group was faster and more accurate when learning the tasks, but several days later the textual group was faster and as accurate performing a similar task.
The results confirmed the observation that users who "worked harder" had advantage later on, and in a transfer situation.
Perhaps the textual procedures were learned better due to differences in processing effort.
The text learners may have expended more effort to read, integrate and understand the information, resulting in improved long-term memory.
Users who watched the demonstrations may have passively observed them without processing the information solidly.
In a follow up study  we investigated whether possible differences in attitude to problem solving between subjects were of influence.
Besides varying interface style  we tried to influence task conception or attitude by giving instructions encouraging plan-based behavior in one group, and encouraging display-based behavior in the other group.
This was done using specific instructions before the start of the tasks, meant to change the affective state the subjects.
We provided either a low-planning instruction  or a high-planning instruction .
Again, in general, internalization subjects performed better and had better knowledge.
The instructions did not have any effect on externalization subjects.
It seemed as if upon being confronted with our type of externalization interface, subjects ignored, or even forgot the planning instruction altogether.
However, the instruction did have effect on internalization subjects.
When receiving a high-planning instruction, they attempted only half as many illegal moves as compared to those given a low-planning instruction.
Also the number of unnecessary moves was lower with the highplanning instruction.
Puzzles like B&B , TOH  and the 8-puzzle  that were used in the mentioned experiments, have been extensively studied in the problem-solving literature , and user behavior can be precisely traced with them.
They can be solved both by planning and by trial-and-error.
Although being excellent tasks from a scientific point of view, a drawback is that findings from these experiments may not be relevant in less abstract tasks.
O'Hara and Payne  tried to examine whether their findings with an abstract problem  could be generalized to an administrative task.
In their experiment, subjects had to prepare letters that had to be sent to visitors of a conference, by copying the information and pasting it into the appropriate letter.
Results showed that insights gained from experiments using an abstract problem, were also applicable to a less abstract administrative task.
Not so much the specific functions or controls of the application have to be "learned"  but users rather had to attempt to uncover heuristics of problem solving behavior provoked by different interface styles.
We will again investigate the influence of interface style on a problem solving performance task.
We define the externalization of the underlying rules as visualizing the result of applying a set of constraints onto the interface.
Externalization shows which actions are allowed with the object at hand, so the user is able to see the outcome of the application of the rules.
This is comparable with the graying out of menu items in for example Microsoft Word, to show that the current situation does not permit those functions to be used, i.e.
We argue that in problem-solving situations where people need to learn the underlying rules of a system, make as little mistakes as possible, or find a solution as economically as possible, the use of a plan-based approach is preferred.
If it is preferable that people use a plan-based approach during interaction, one should find out how people can be persuaded to use that approach.
We will investigate our assumptions, with a more realistic life-like task of which the functioning and appearance are more towards everydayrealism.
We see our current task, involving constraintscheduling, as a step towards realism and regard the shift from classic puzzles to our current task as an intermediary one.
The difference is that not so much the "catch" to a math-like puzzle has to be found or that continuous action sequences  have to be performed.
In  we investigated the influence of externally induced motivation.
Here we included possible differences in task conception or problem solving attitude, focusing on more stable personal qualities of people that could influence behavior.
We measured "need for cognition" , a construct that measures the tendency of individuals to engage in and enjoy effortful cognitive tasks .
It has consistently explained variations in individuals' predisposition to engage in varying levels of cognitive activity, making it reasonable to presume an effect on planfulness.
Persons with a high NFC love to seek, reflect on and reason about information, whereas someone with low NFC only thinks as hard as he has to and is inclined to rely on others.
The fact that high-NFC persons generally recall more information than low-NFC persons could have implications for HCI.
This is interesting for research on adaptation, where the nonexistence of a `one-size-fits-all'-solution  and the importance of adapting external representations to the emotional state of learners is emphasized.
Literature on learning systems proposes adapting to various constant and volatile user characteristics .
Crystal and Kalyanaraman used a web information-seeking task, in which they compared clear vs. unclear link-labels and informative feedback vs. no feedback while pages where loading .
NFC indeed influenced aspects of usability and user responses.
Affective measures such as perceived speed and perceived ease of information location were positively associated with NFC.
Regarding cognitive effects it showed that NFC was negatively associated with informationseeking time and navigational moves.
We formulated two hypotheses: H1: Internalization leads to a more plan-based strategy and better performance than externalization.
Having information externalized, providing on-screen assistance tempts users to rely on the interface and not to form plans.
The internalized condition lacks this guidance, encouraging planning and thinking before acting.
We therefore expect that requiring subjects to internalize the information will lead to more elaborate planning and consequently better task performance such as more efficient solutions.
We also expect better knowledge afterwards.
H2: High NFC leads to a more plan-based strategy than low NFC.
People with high NFC have high intrinsic motivation to think and engage in effortful cognitive tasks, and will show more plan-based behavior.
Consequently, we expect the subjects with a high NFC to have better task performance and knowledge.
The second one is the core of the application itself: the set of rules and related algorithms.
Here is defined which actions are permitted, based on the requirements of the experiment and which are the subsequent consequences.
The third component is a database, with all the scenarios used in the experiment.
The forth component is the logging-module that writes all the clicks and drag & drop moves and their associated times, as well as waiting times to an external spreadsheet.
The logs provide data for analysis of the results.
In the experiment, subjects had to solve 5 different conference scheduling situations.
The conference speakers each had different demands, and they had to be scheduled into one of three rooms .
This type of task  is not extremely difficult, but a certain approach is necessary to solve the situation in an efficient manner.
When facing the problem, subjects can take multiple  approaches to schedule the speakers.
Unlike the abstract tasks used in previous research, such as the Tower of Hanoi or B&B, there are many more ways to optimally solve the scheduling task.
Even with more correct solutions existing, without some degree of planning, the scheduling will not be optimal and extra moves  will be needed.
If the entire situation is not taken into account, the participant will get stuck in some later phase of the task because he will encounter a speaker that does not fit in any of the slots that are left.
Only by planning one will be able to fill the schedule without extra moves.
A useful heuristic would be to look for the speakers with the most constraints and place them on the schedule first, matching their constraints with the constraints of the schedule slots.
It can also be effective to start with identification of the slots that are hardest to fill  and then assign speakers to those slots.
An "easy" approach that does not involve much planning would be to start from the top of the list and work your way down, filling up the different slots.
However, this approach is not so smart: you will find that some speakers cannot be placed anymore, after which speakers must be shifted around to make room.
One can imagine still other strategies that do not involve a lot of planning, but strategies that are more like a trial-anderror approach .
The difference between externalization and internalization was implemented by highlighting all legal slots in the externalization condition , where a person can be placed.
In this condition, when one clicks on a speaker in the list on the left, the legal slots  in the timetable turned green.
Note that this does not show the best slot to place a speaker, but simply which slots are possible.
We developed an Open Source software application called "Conference Planner" which simulated the planning of speakers for a conference.
The software  logged all the moves participants made.
The "Conference Planner" was developed by The Open University of The Netherlands and funded by the European UNFOLD Project .
It consists of four different components.
Not all the timeslots in the grid are always available.
Some where unavailable all the time, indicated with light-gray, for example the timeslots during lunchtime , but also some arbitrary other slots.
The empty available timeslots were shown in white, and the ones that were already occupied by a speaker would display the name of a speaker.
The experiment had a 2X2 design with two independent variables: interface style  and cognitive style .
After the NFC-test, subjects were randomly assigned to INT/EXT.
After 20 subjects, their NFC median was calculated.
On this basis we labeled subjects high/low NFC.
We checked whether low/high NFC subjects were evenly divided over INT/EXT.
From then on NFC was checked immediately  and INT/EXT was continuously re-balanced to obtain equal groups.
At the end the subjects per condition were: LowNFC-EXT:10 LowNFC-INT:11 HighNFC-EXT:11 HighNFC-INT:11.
In both conditions, a list of speakers that had to be scheduled was given on the left.
Each speaker had his/her own constraints displayed next to them, which could vary on a maximum of three variables: * Number of hours they will speak  * Whether a beamer is needed  * Number of expected listeners  The assignment of the participant was to place all the speakers on the schedule timetable, while taking the different constraints into account.
It is an indicator for planning, telling how long subjects analyzed the problem before they started solving it.
We interpret this measure as a planning indicator.
Superfluous moves are all the extra unnecessary actions besides this shortest path.
We use this measure as the main performance measure, because it reflects the efficiency with which the task has been solved.
This measure includes correction moves: all extra performed moves  that were made to "fix" non-optimal placements .
Also reconsidered moves are among the superfluous moves: when subjects pick up speakers and while dragging change their minds and put him/her back before placement on the grid.
The measures obtained from the post experimental questionnaire consist of answers to questions that tested for  declarative knowledge,  procedural knowledge, and  subject's opinions.
For each essay question, a subject could receive a maximum of two points.
A picture of a situation as in the application they just worked with accompanied most of the essay questions.
The opinion measures give us an idea of how the task was experienced and perceived by subjects themselves.
Subjects could rate various statements on a scale from one to seven.
The questionnaire consisted of three sets of questions: * Declarative knowledge: Essay questions about situations that could be legal or illegal were shown, and one had to decide whether the situation was possible  and why .
Parts of situations were given and the questions were formulated as "how would you do this?"
There were 8 questions concerning perceived own problem solving and opinions about the application.
After completing the NFC questionnaire, subjects received a textual introduction to the task explaining the general idea and saw a brief video-clip showing how the application and its controls worked.
After this, subjects completed the 5 tasks.
Finally the post-experimental questionnaire was completed.
We statistically analyzed the effects of interface style and cognitive style using ANOVA.
We report on significant effects using a significance level of p < 0.05.
Results with p-values between 0.05 and 0.10 are reported as tendencies.
All the tasks were eventually solved correctly by all the subjects across conditions.
There was a significant main effect of interface style on the number of superfluous moves that were made F=4.17, p<0.05.
For cognitive style, there was no significant effect, nor an interaction effect.
Internalization subjects showed a tendency to use the `most constraints first' strategy more often than externalization subjects =3.21, p=0.08.
Internalization subjects used that strategy 2.4 times  out of 5  whereas externalization subjects used it 1.5 times out of 5 .
There was neither a significant main effect nor interaction effect in relation to cognitive style.
Our first hypothesis stating that internalization leads to more planning and better performance than externalization is supported both by time-based and move-based measures.
As in earlier experiments , it once again showed that  user behavior differed depending on interface style.
The time-based measures showed that the interface style requiring  internalization resulted in longer thinking times before subjects started working on the problem, and also more time between moves, which we took as indicators of planning.
Both these results indicate that when information has to be internalized, more contemplation from the user is provoked.
This is in line with results of O'Hara and Payne , who reported a longer inter-move latency for subjects in the effortful condition, indicating a more plan-based approach.
Also interesting are the conclusions that can be drawn from the move-based measures.
It has to be born in mind that the issue here was not "can they solve it?"
Results showed that internalization subjects solved the problems with fewer superfluous moves, in a more straightforward manner, thus with less deviation from the minimum amount of moves, resulting in greater efficiency.
We infer that the shorter solution paths are a result stemming from better planning.
These superfluous moves included "correction moves", moves made to "repair" situations that sometimes were created by users making "not so smart" moves.
Superfluous moves also included "reconsidered moves" .
These findings converge with our earlier results  in which there were strong tendencies in that direction.
The results are also in line with O'Hara and Payne  who found that the subjects with a planbased approach used fewer moves than subjects using a display-based approach.
They also stated that "backtracking"  occurred more in subjects showing display-based problem solving.
In sum, although there was no significant difference in the total time taken to complete the tasks, there were differences in how efficient, in which manner subjects solve the problems.
All subjects needed about the same total amount of time, but subjects who were required to internalize thought longer before moves and came up with more efficient solutions.
The results reflect a trade-off between time spent thinking and planning  and time spent making superfluous moves .
The effect of interface style on answers to the declarative knowledge questions was almost significant at F=3.73, p=0.06.
Internalization subjects answered more of those questions correctly than externalization subjects .
No significant effects of cognitive style were found.
On all of the questions internalization subjects scored marginally higher, but only one of these differences was significant, namely whether the subjects "sometimes did not know how to proceed with the arrangement of the speakers", F=5.91, p<0.02.
Externalization subjects scored significantly lower  than subjects in the internalization condition , meaning that they had this feeling more often.
All this might be of value in for example a transfer task, or when doing a similar task after a big lapse of time.
This interpretation also gets some support from internalization subjects' tendency to use a more appropriate strategy.
Regarding the strategy that subjects chose to use, a qualitative analysis of the results pointed at a more planbased approach by the internalization subjects, showing that those subjects more often filled the timetable by first scheduling speakers with the most constraints.
This strategy is again an indicator of good planning, because it shows that people think about whom, and how they are going to schedule before starting with the task.
The issue of strategy use could merit more interest in future research.
Also, it would be interesting to investigate whether subjects stick to the same strategy or change it, if they feel it is unproductive or if another less effortful strategy suffices.
Another interesting question would be whether strategy choice can be influenced .
The second hypothesis has to be rejected.
Cognitive style, at least along our dimension of high NFC versus low NFC had no influence; pre-existing attitudes towards problem solving did not have significant effects on the displayed behavior and performance of subjects.
Perhaps the strong effects of interface style overruled possible effects of preexisting individual differences in cognitive style.
However, the lack of findings may also be due to our subjects' high NFC scores.
The difference in scores between high-NFC and low-NFC may not have been large enough to produce significant results.
Another possible reason for the lack of findings is that our task might have been too easy for the subjects, not needing the extra impetus from having high NFC-scores.
This is supported by answers in the post experimental questionnaire concerning the perceived difficulty.
Subjects reported having little difficulty with the tasks, and the cognitive effort required was quite low.
We also tested the knowledge subjects possessed after completing the tasks.
In the declarative knowledge questions, subjects had to judge situations where the rules sometimes were violated.
They had to identify whether the shown situations were theoretically possible or not.
They had to look at the constraints of a situation, and decide whether any "rule" was violated .
The expected effect of interface style on declarative knowledge questions was almost significant, although not as strong as in earlier experiments with B&B .
It showed that internalization subjects tended to give more correct answers to those questions.
Perhaps a training effect occurred that made them more accurate on these questions too.
There were also several procedural knowledge questions.
These were not so much about judgment, but about insight on what to do to solve a part of a problem.
As expected, interface style had no effect here, no differences concerning answers to the procedural questions were found .
In a way this is not very surprising, since the problems were not so difficult, and we also saw that all subjects correctly solved al the situations.
This pattern is similar to the one found in previous experiments: a positive effect of internalization on declarative knowledge, and no effect on procedural knowledge .
Lastly, the opinion questions indicated that all the subjects had little difficulty performing the tasks and were confident about their own performance.
There were hardly any differences between the two interface styles, although the scores of internalization subjects were marginally higher.
One question yielded significantly different scores, pointing at an advantage of internalization.
We asked whether the subjects sometimes did not know how to proceed with the arrangement of the speakers.
This "feeling stuck" occurred significantly more often in the externalization condition than in the internalization condition.
This lends support to the finding that externalization subjects needed more superfluous moves  to complete the tasks.
We take this also as an indicator that the internalization subjects had better insight.
To sum up our conclusions, at not any point or with any measure did externalization result in better performance, reconfirming various earlier findings.
Also in a more realistic task, we found positive effects of internalization on problem-solving behavior: having the user internalize the information leads to a more plan-based behavior, smarter solution paths, better declarative knowledge, and less feeling lost.
Externalization on the other hand led to a more display-based approach, resulting in less efficient solutions  and less thinking about moves to be made.
It is worthwhile to reflect on what was in effect externalized and visualized.
In the externalization condition this was the result of applying the set of constraints that was attached to the speaker, to the sets of constraints attached to the scheduling slots.
The interface showed which actions are allowed with the object at hand.
Subjects were able to see the outcome of the application of the rules.
This is comparable to the graying out of menu items in for example Microsoft Word, showing that the current situation does not permit those functions to be used.
We showed that this widely accepted and implemented guideline does sometimes have undesirable effects.
In the real world, when designing interfaces we have to be careful with providing interface cues that give away too much, and must design in such a manner that the way users think is optimally supported.
This in turn could help the software to achieve its specific goal.
How can we link all this to general aspects of usability such as learnability, satisfaction, errors/memorability and efficiency ?
In previous research by the authors we saw that errors/memorability  was better in the internalization condition .
Concerning errors, the current results concerning superfluous moves  point at an advantage for internalization.
Efficiency in terms of "path economy" was better in the situations where subjects had to internalize information themselves.
Satisfaction was not our main focus, but there was a question  reflecting satisfaction, and there was no difference between the interfaces.
We feel that understanding how people react to interface information  is one of the main challenges in HCI research.
Our research shows that a computer mediated task can take advantage of interfaces that are designed from considerations that run deeper than plain usability.
With all kinds of multimedia present in all corners of society, our research contributes to building bridges between cognitive science, HCI and current educational practices.
Our findings, especially if extended to even more realistic tasks can be valuable in the development of applications in the realm of education, multimedia learning or game based learning, and still others.
Examples are interactive learning devices in museums that try to explain certain principles, but also more generally other situations where learning as good as possible or when certain issues are at stake, and making as little mistakes as possible or speed are important.
There are of course situations in which the investigated issues are not crucial at all, but, depending on the specific goal and situation, designing software in such a way that active learning is being provoked can be valuable.
We expect that having knowledge internalized can be important when dependence on the existence of a particular interface is specifically not desired, or when speeding up a task is important, just to name a few situations.
One can think of situations where risky and complex tasks are performed, and where a user suddenly is required to a new situation.
Now his/her insights and knowledge has to be transferred to a different situation.
The common guideline to "not give users the chance to make mistakes" should of course not be neglected, but at the same time, interaction should facilitate or even persuade users to learn what underlies the task they are doing.
The investigated concepts are important in situations where learning itself is the aim, but one can also think of situations where making errors generates a high cost.
An example would be certain types of medical software, where it is important that users master underlying concepts at all times, and are continuously provoked to "actively think".
Likewise, one can also think of process operators in for example a hydroelectric power plant.
If the system would break down and operators have to manually do the job that is normally done aided by computers, will they still know what exactly underlies the task?
Examples are actions that must be performed in a certain order, such as opening valves, closing a circuit and so on.
Or are they so used to the information and feedback from the interface that they will now be stuck?
In this light, Fu and Gray  found that when inefficient procedures are chosen to solve a problem, these procedures shared two characteristics.
They are often generic and well-practiced, but more importantly the procedure is composed of interactive components that bring fast, incremental feedback on the external problem states.
These actions require less cognitive effort, but this bias to depend on interactive units unfortunately leads to paths that require more effort in the long run.
The title of this paper is of course a wink to the famous book chapter by Carroll and Rosson  entitled "The paradox of the active user".
This term refers to a common observation that users never read manuals but start using software immediately.
They are not very interested in the system, and don't want to spend time up front on getting established, or going through learning packages.
It is a paradox because users would save time in the long run by taking some time to optimize the system and learn more about it.
The paradox in our research would be that users that received an interface providing some assistance come up with less smart solutions, among other things.
This assistance from the interface of course is meant to help, but appears to be counter effective.
The conclusion of the two paradoxes could be the same: depending on the purpose of the software, we must perhaps design for the way users think and behave in reality.
We saw that tweaking a small part of the interface had impact on the efficiency and planfulness of user behavior.
Externalization and internalization as we implemented it are not extremes on a continuum; they rather refer to the amount of externalization.
Our two interface conditions could have represented different values on that continuum, and the difference between them could have been smaller or bigger.
It would be interesting to see the effects of adaptively varying the amount of externalization over time, based on user's performance.
Besides the amount of externalization, also the type of task can be varied.
We also intend to look at in how far findings can be generalized to other, even more realistic task domains.
The issues of interruptions and distractions deserve attention as well, especially interaction paradigms in a nowadays-prevalent area: mobile devices.
Our devices are more mobile than ever before and during interactions with them a wide range of interruptions and distractions are commonplace.
Typical interruptions of our modern lives are getting in/out of a taxi, reaching a subway station or temporary losing your wireless connection.
If the former is the case, it means that users still need solid plans.
The assistance as we implemented it is only one way to externalize information, and it will be interesting to look into other ways.
We will continue the research and broaden the types of problem solving activities, and include other variables related to attitudes to problem solving.
The effects of operator implementation cost on planfulness of problem solving and learning.
Planning and the user interface: The effects of lockout time and error recovery cost.
Palmiter, S. and Elkerton, J.
An evaluation of demonstrations for learning computer based tasks.
Payne S.J., Howes, A. and Reader, W.R. Adaptively distributing cognition: A decision-making perspective on human-computer interaction.
Scaife, M. and Rogers, Y.
External cognition: How do graphical representations work?
The influence of interface style on problem solving.
Van Nimwegen, C., Van Oostendorp, H. and Tabachneck-Schijf, H.J.M.
Does context sensitivity in the interface help?
Van Nimwegen, C., Van Oostendorp, H. and Tabachneck-Schijf, H.J.M.
The over-assisting interface: The role of support in knowledge acquisition.
Van Nimwegen, C., Van Oostendorp, H. and Tabachneck-Schijf, H.J.M.
The role of interface style in planning during problem solving.
Van Oostendorp, H. and De Mul, S. Learning by exploration: Thinking aloud while exploring an information system.
Representations in distributed cognitive tasks.
The efficient assessment of need for cognition.
The Nurnberg Funnel: Designing Minimalist Instruction for Practical Computer Skill.
The paradox of the active user.
Crystal, A. and Kalyanaraman, S. Personality variables and information processing on the web: Methodological issues and empirical evidence.
Paper presented at the International Communication Association Annual Meeting , 26-30.
De Mul, S. and Van Oostendorp, H. Learning user interfaces by exploration.
Resolving the paradox of the active user: stable suboptimal performance in interactive tasks.
Kort, B., Reilly, R. and Picard, R. External representation of learning process and domain knowledge: Affective state as a determinate of its structure and function.
Paper presented at the 10th International Conference on Artificial Intelligence in Education, San Antonio, TX .
Mayes, J. T., Draper, S.W., McGregor, A.M. and Oatley, K. Information flow in a user interface: the effect of experience and context on the recall of MacWrite screens.
