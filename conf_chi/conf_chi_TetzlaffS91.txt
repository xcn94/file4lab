We studied the use of an evolving interface style book to evaluate the role of such guidelines in the development of siyle-conforming interface desi M. Although the designs were judged JO .bc gene~al P y col~orming, study participants had sgmficant ddlicxdty m interpreting the guidelines.
Iley Guidelines are almost never used in isolation.
Other techniques include press and user feedback, a set of highly functional, conforming a placations, and supporting toolkits for application deve Yopment.
Many of the techniques for assuring compliance are motivat~onal  or focus on recovering from fadures m the.
When we began, we were skeptical that guidelines by themselves would be sr.dlicient for devclo ment of conforming designs.
Our objectives were the f ollowing:
Guidelines vary in content: Some enumerate general principles; others explicitly specify intctface detail; some focus on the presentation and behavior of the interface, while others address perfortnance characteristics of the inlerface in use.
The probIcm conccrncti on-line management of a compan s onsored, rccrcationzd activity , and too c a!
Partici ants workcci at their own pace, and were asked to ver E alize all aspects of their work, including references to the book, Sessions were vicico taped, and the verbal protocols were logged by the experimenters in rcaI time.
Following the session, participants were debriefed and completed a satisfaction questionnaire.
The document was divided into three interface.
Each item in the Reference Section included a textual definition, a graphic illustration, and a list of detads covering constraints and conditions of use.
The book was roughly 300 pages long, of which about 250 pages were devoted to the Itemized Reference Section.
Nine people partici@cd in the study.
All were experienced users of the s stem they were designing for, and We tested all were experience d interface designers.
Your company recreation club would like to strcamliie its procedures for managing its various team sports.
Individual employees or their spouses submit either a paper or on-line `J'he general situation 1s as follows.
For each sport, someone is responsible for making up teams, scheduYing g~mes ancl keeping players reformed about what's happening.
Coordinators routinely create a set of team rosters, a schedule for the season, and an address list, so that team In addition, they need to be able to respond to requests for detailed inmembers c<an contact each other.
Coordinators are volunteers, and arc hard to come by.
Furthermore this activity only happens once a year, so they never get a chance to become experts with the system.
Your design should be detailed e~ou~h so that a user could dinator could determine if it is gmdehnc conforming.
4, A A A A in detail how each of the following scenarios figure out how to use it and a compbnce For each scenario coor-
The coordinator needs to reschedule a game because four players \vill hc out of towm.
It will not be possible to swap times with another team, and the game can't be schedutcd for a night when another Dcscribc how the coordinator changes the tmm's schedule and the master act ivit y has the fields.
S/he would like to get the information via the network.
Describe how the coordinator makes tf lis information available.
The situation is as follows: Ilascs <are Ioadcd.
T'hc hatter hits the ball anti makes it successfully to first base; the player on scconct gets safely to third; the runner on third makes it home; but the player on first is tagged out bcfbrc getting to second base.
Participants used examples beyond the sco of their explicit context.
So, for example, if scro r bars ha pened to appear in an illustration intended to exemph f y the use of radio buttons, if it was titnel~, the articipant might take the example as rcprcsentatwe of L th without further reference to the entry for the scroll bar.
In some cases, these incidental details had been provided primarily to make the exam lcs more concrete.
If these incidental items appeare $ generic, such as an icon representing the workstation itself, they were sometimes taken to be part of the system and covered by the guidelines.
On the other hand, things that were clearly application specific, such as a pie chart, were not.
Guidelines that result in unusable applications, may contaminate not only developers feelings about the articular recommendation, but may affect their view o F the guidelines as a whole.
For example, the guidelines we studied encouraged developers to create logical and hierarchical structures of objects, often resulting in long interaction paths to get to even commonly used functions.
Some participants reluctantly preserved the long paths, believing it was necessary for conformance.
Despite a decidedly imperfect understanding, as evidenced b both the protocols and their own testimony in the de 11 riefing, participants were able to produce design solutions that our evaluators  judged largely conforming.
1Iowever, conforming did not mean that the designs were identical.
T'hc presentation and behavior of these solutious were uitc different, but were mostly within the range of con?
In the discussion that follows, we will focus first on the use of exalmples, which proved key in conveying interface style, and then move on to a more general discussion of how participants worked with the book.
There were two general strategies for approaching the book.
The canonical strategy of reatiinq the introductory material first was spontaneously initiated by only two of the seven guideline novices.
They read until they fbund what they thought they needed to know -- and often no farther, missing details that designers no doubt cxpcctcd thcm to absorb.
Thus the prevailing preferred pattern of work was similar to the task-oriented behavior of adult, novice computer users, described by Carroll .
To the extent that the introductory material was germane to their objcctivcs, ~articipants read it with interest.
Participants were impatient with need i'essly long introductory material and with tcrmirmlogy that seemed peripheral to the task at hand.
Carroll's minimalist a preach  seems as relevant here as it does to the Cr cvelopment of user manuals.
The alphabetical arrangement of the Reference Section encouraged browsing and facilit atcd serendipitous contact with other entries.
It was onl at the insistence of the experimenter that they sketc 1 cd out screen designs that could bc reviewed for compliance.
In the first stage, participants attempted to identify the major user interface ob ects.
The second stage consisted of achieviterations throu d the scenarios, each iteration ing a new level of detail in the design: The guidelines mandated Object decomposition: interfaces that were populated by the "objects" that users need to perform tasks, and object decomposition was recommended by the book as the first step in the design process.
All participmts began with this task, roughing out a set of interface objects, largely based on the noun entities present in the problem statement.
These were revised as the design progressed.
It was not obvious to most participants what a number of the "objects" should be.
Participants considered the interface objects, and objects in the user's world, underlying application data, ancl it was not clear how these dMerent "objects" were to reiatc, This problem was most clearly manifested in their design of the schedule .
Should there be an independent schedule obJect, or should schedule be an action on some other object such as a field or a team?
If schedule were an independent object, how should they implement scenario 3 which asks for the schedule for a p.artim.dar team?
If maintained for each team, how would they coordinate team schedules wit hin the league?
What kinds of functions needed to be provided?
How would the application be used?
For novices, this sta e of the desi was completely anchored in the prob f em and ma F e little reference to the book.
In contrast, experts designed immediately in terms of the guideline detail.
This stage was characterized by frequent use of short what-if scenarios used to elaborate understanding of the total function.
Por example: What if 1 want the system to accumulate long-term statistics ,,.
What if I can't @ the mouse to work on a park bench ...
The scenanos were spontaneous , and transient , though they seemed to make an important contribution to participants' internal model.
I;unctional design was followed by working through the scenarios to consider the kinds of windows and interaction techniques to be used, but with little specification of the explicit detail that would appear on the screen.
This involved generally frustrating attempts to get ~idance from the book, which rovided Me inte ratlvc information on how objects sK ould combine to f orm applications.
At this point, most participants felt that b working out the logical design, they had cornpletc 2 the task.
Some indicated that at this point, in real life, the would take their sketch of the design to users for fee J back, `lhey re arded the elaboration of the design into explicit contro f s and visual layout as a mlmdane and .-.
While some mchcated -that It ~id, others .ma@e cIear that the experiment ar-hticmlly reduced gtmtelme usage.
One participant claimed he never used guidelines in ma!
Another said that she and her colleagues mrcl rcferreci to guidelines.
Instead the dcsi~ed as best t Kcy could in terms of the task an J usabdity requirements of their users, and negotiated for compliance status only at the end of the process, making adjustments as necessary to obta"m it.
A similar sentiment was echoed by another, impatient with the hi level principles and introductory material: lle wante P the book to explicitly specify the criteria against which hls appticat Ion wouId be evaluated.
130th in conversation with the partici ants and in informal discussions with others involve f in the guideline clear that guideline compliance process, it bccamc compliance was a subjective and interpretive process that used the book merely as a starting po"mt.
Our protocols indeed indicated that participants missed m~y critical ~once ts and details.
For one thin , \vc believe that the design per se may not be a high f y sensitive test of the effectiveness of the guidelines to elicit conforming design.
The protocols revealed many roblcms not apparent in the paper and >encil desi t E at could bc expected to prove probetnatic ha r the roccss been pursued through imple1 mentation.
Pro fdcms were finessed by designers and evaluators alike.
Ilesigners copied b ~ rote or invented where they did not understand, an J evaluators compensated fbr clcsiguer error from their own understanding, for example, treating serious conceptual flaws as minor labeling errors.
Second, there is much yet to be understood about the process of judging design conformance.
Reviewers were not consistent among themselves in their qualitative evaluation of the clesi 1s.
Personal assessment of usability sometimes intrw Tcd into their judgement of conformity.
Further, there is no reason to suppose that conformance issues which seem critical to guideline authors will also bc salient to rcvicwcrs in the press or to end users.
LJscrs, at least, are more likely to think in terms of usability.
Conformity will mean little if these arc not achieved.
Examples of conforming interface design.
Examples appear to be the single most powerful vehicle for the communication of interface design style.
Examples in this study were static and limlted m scope.
It seems clear that carefully crafted, rich, intcrnr$ee examples would be more powerful still.
Tognazzini  cretlts the simultaneous release of MacWrite and MacPaint with the Macintosh for much of the consistency across Macintosh applications.
Thus a model of mouse selection is better illustrated by drawin on text, spreadsheet and graphics than sitnpl y by il f ustrating with text alone.
To assure conformity, guidelines should be developed in conjunction with the su porting environment and toolkits.
They should document their sco e and limitations, addressing conditions of use for in 2 ~vidual components.
Thus toolkits may dlctatc the form and parameters of a control, but something on ~~per needs to relate the wwiet y of controls to the cleslgners task, and to the conditions under which each alternative n appropriate.
An application may illustrate effective assignment of choices to menus; nonetheless, the underlying organizational principle may be hard for designers to infer.
But it must be understood that much written material may go unread, misunderstood, and consequently unheeded, The longer and more complex the document, the greater the risk.
To the extent that conformance to the interface is critical, the interface style needs to be carried in the examples, facilitated by toolkits, illust~ated by interactive demos or well-formed applicatmns, and supported by iterative usability testing.
J Com J inating user interfaces for c;nsistemy.
Consistency in the user interface: Common User Access impact study.
IBM, ESIl, User Interface Technology IXpartmcnt, lloca Raton, FL, 1989.
Advanced interface International BusiBoca Raton, FL, inteflace.
Achieving consistency for the Macintosh.
Coordinating user interfaces for comistency.
Zcvin, R. Systems Application Architecture Common IJscr Access compliance process.
