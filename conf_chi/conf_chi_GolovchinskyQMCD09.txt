One of the core challenges now facing smart rooms is supporting realistic, everyday activities.
While much research has been done to push forward the frontiers of novel interaction techniques, we argue that technology geared toward widespread adoption requires a design approach that emphasizes straightforward configuration and control, as well as flexibility.
We examined the work practices of users of a large, multi-purpose conference room, and designed DICE, a system to help them use the room's capabilities.
We describe the design process, and report findings about the system's usability and about people's use of a multi-purpose conference room.
Conceptually people know what they want to do , but they may not know how to configure or to operate equipment in the room--hence the need for wizards.
But there are problems with this mediation: wizards are expensive for an organization to employ, so they may not always be available; it may take a wizard some time to configure the room, taking time away from the meeting proper; a wizard may need to be in the room to operate the equipment, creating problems for confidential meetings; people may under-utilize the available equipment because they do not want to bother the wizard.
Although meeting room technology in its raw form is difficult to use, it can still make meetings more productive.
The challenge, then, is to strike a balance between usability and functionality.
The goal of the Distributed Intelligent Conferencing Environment  project is to allow people to use typical conference room technology without having to pay special attention to it, and without a wizard's mediation.
As Star  notes, tools disappear into the fabric of everyday use when they are viewed as infrastructure.
We argue that producing a system that is part of everyday infrastructure requires a design approach that balances functionality with usability.
While it is possible to build systems with rich functionality, if that comes at the expense of usability, the systems will not be used.
Our approach followed the recommendation by Edward et al.
To this end, we conducted a set of interviews with users of a large multi-purpose conference room to understand how it was used.
We then built and deployed our system, evaluated its use, and redesigned it based on user feedback.
In the remainder of this paper, we discuss related work, describe the environment into which we deployed our technology, describe our system, and report on its use for over one year.
Our contributions are not only technical, but also include lessons we learned from our deployments that are critical to maintaining usability in increasingly complex office environments.
As meeting rooms add functionality, they often lose usability.
In just one of the meeting rooms in our building, for example, there are computers, projectors, videoconferencing systems, and electronic whiteboards.
Each device is controlled via its own remote control, and they are not interconnected.
Using this room often requires the help of a technology expert  who specializes in meeting room systems.
In our experience, similar to other ubicomp deployments , "smart" meeting rooms typically require resident experts who keep the room's systems functioning, who often must be available just to enable people to use the room, and who may not have formalized ways of communicating the current state of the room to other wizards or to users.
To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee.
Other ubicomp systems have been designed to control devices.
The Patch Panel system  uses an event heap to direct events in a multi-device environment.
However, we set out to integrate complex existing components such as video conferencing systems, projectors, and applications rather than "primitives" such as joysticks and buttons.
Furthermore, we do not require completely custom applications as some other systems do ; instead, we can adapt existing applications  to our system through a well-defined API.
Finally, unlike commercial systems  we focus on high-level tasks rather than on low-level device control.
DICE is designed to be predictable and controllable by the user, rather than autonomous, as some ubicomp systems are .
There is a clear relationship between users' actions and system responses in our system, unlike in autonomous ones in which some of the initiative lies with the system, and where system behavior may be difficult to predict .
We focus on short-term meeting support rather than on long-running tasks that may be moved from one location to another .
Our task focus means that the system requires behavior different from other, related, work: for example, if a user requests a document to be displayed on a powered-down projector our system will turn on the projector, whereas some systems re-route the display to another projector .
While this adaptive routing may be useful in a room with many redundant displays, it may not be a useful solution in many cases.
We also distinguish our work from presentation management systems such as ePic .
On the other hand, DICE orchestrates multiple applications and devices.
The quantitative study used recordings of activities made by ProjectorBox , a meeting capture system, during two and a half months , and data from the meeting room calendar during the same time period.
The goal was to identify patterns of use that the system we were building would need to support.
The interview study focused on surveying different activities in Kumo and how the room and its equipment support those activities.
We interviewed 34 employees at our organization.
Interviewees had different organizational roles and different roles in relation to the conference room.
Most were researchers who regularly gave presentations and demonstrations, a few were wizards, a few were managers, and the rest mainly used the conference room to attend meetings and talks.
Interviews lasted from 5 to 45 minutes , depending on the different kinds of involvement the interviewee had with the room.
Interviews were transcribed and analyzed.
Kumo is a 50-person multi-purpose conference room.
It has gone through several redesigns in its lifetime.
The room currently has three large screens taking up most of the front wall.
In front of the screens is a podium with a touch screen, keyboard and mouse connected to the Kumo PC, which is usually displayed on the center screen.
Visitors can use the podium to connect their laptops .
Kumo also has at least five computers connected to a video switch.
The machinery is located in two rooms: the projector room and the multimedia lab.
Both rooms have locked doors, limiting the access to configure the space.
One of the room's wizards developed a UI to reconfigure the switch, but this interim tool was located next to the switch  in the locked multimedia lab.
Kumo is a busy conference room.
Of the 53 workdays studied, Kumo was used on 44 days.
We recorded 146 distinct uses of the room, of which 46 were scheduled through the corporate calendar, and 100 were unscheduled.
The average duration was 47 minutes for scheduled meetings and 24 minutes for unscheduled ones.
We classified each distinct use of the room into the following general activities: preparing a demo , preparing a meeting , preparing slides , giving a demo , meeting , presenting slides , presenting slides and a demo , system maintenance , and other .
It is interesting that preparations for meetings are the most frequent activities.
System maintenance is probably more frequent than our data suggest, since activities were only recorded when the main room computer was used.
The room was used collaboratively: 87% of demos and presentations involved at least two presenters, and 29% of all presentations involved more than one presenter.
For the purposes of our design, we identified applications used in the conference room: presentation , browser , desktop , in-house applications , media player , and multiple applications .
Not surprisingly, presentation was the most common application.
People frequently give presentations or demos in Kumo.
Nineteen interviewees estimated that they gave talks at least once a month, but few used more than one display.
In fact, only three interviewees said they used multiple displays and 20 said that they never or only once had used more than one display .
These numbers indicate that at the time of the interview the space's capabilities were under-utilized.
Interviewees complained that it was too difficult to set up more than one display.
Many people reported that they needed to find one of the wizards to get it working, which would take too much of their and the wizard's time.
A presentation is a performance.
A measure of its effectiveness is the overall impression the audience has of the performance.
Some interviewees desired seamless transitions between different media.
This seamlessness also applies to starting and stopping presentations.
The overall impression of a talk may suffer if the audience sees the presenter fiddling around on the desktop to start up a presentation or to shut down a demo.
I like  to be in the slide, so the experience is not launching some other player.
I consider that important to me.
The conference room is used for a wide range of meetings.
Understanding the character of the different kinds of meetings is critical for understanding the requirements the participants in the meetings have on the space.
Serial presentation for VIP visitors.
Researchers often give formal updates on their projects.
These updates may include both a presentation and a demo.
Preparation for such talks is extensive, particularly when demos are involved.
Ursula, one of our interviewees, said that she repeatedly gave the same demos, yet still spent about as much time preparing each demo as giving it.
Transitions between speakers must seem effortless to convey an impression of competence.
We found that several strategies are employed to achieve seamless transitions between speakers.
For meetings with few demonstrations, presentations may be merged into one PowerPoint file that is set up before the meeting.
For a longer program, the schedule is designed with breaks to set up demonstrations, and presenters pre-load their presentations during breaks.
When sandwiched between speakers, some prefer to present using AnySpot , a system that allows easy remote access to the "recent documents" on their desktop PCs.
However, they need to verify before the meeting that AnySpot will place the right file at the top of its list, so that they will not need to look around for their files during the meeting.
Most weeks there is a staff meeting organized by the corporate secretary.
People can reserve slots in the meeting in advance through a web-based interface.
A speaker can choose to start a single-screen presentation or multi-screen  presentation from the agenda that is displayed in a web page on the Kumo PC.
Most people present using a single screen.
Kumo is used for different kinds of internal presentations.
In these meetings, employees present work or ideas to each other.
Some of these meetings have a set agenda and a formalized procedure, while others, such as work-in-progress talks, are informal, with one presentation given by individual presenters or by groups.
Visitors often give talks in Kumo.
Most present on only a single screen.
Employees had access to ePic , a tool for authoring multi-screen presentations.
Interviewees reported that they did not use it because they often did not need to make multi-screen presentations.
Also, the tool was not integrated with PowerPoint for editing, so presenters needed to use two tools to create their presentation.
But the major reason for not making multi-screen presentations was that people wanted to use side displays for demonstrations, but they did not know how to use ePic for this purpose.
In addition, they perceived ePic as being unreliable.
As a consequence, multiple displays were used only when required by management or for some specific demonstrations.
Although our interviewees rarely used more than one display , they liked the idea of using more than one screen for presentations and demos, so that they could have slides supporting the demo up at the same time.
They also wanted to plug in more than one laptop or other computers that could be controlled with keyboard and mouse.
Although many interviewees said they give presentations, the degree of comfort when presenting varied.
I'm not comfortable giving presentations.
I tend to be really uptight.
My IQ goes way down.
Ursula I just want to make sure that when I'm out there, I'm not fumbling.
Queenie For these people preparation and familiarity with the system is important, so that they do not need to perform irrelevant or annoying actions during the presentation.
However, there are occasionally visitors who want to use more than one display.
Someone ... wanted to put something up on the left screen.
I have no idea how to do this ...
It's really only  who really understands how everything is wired and patched together ... through the variety of switches that are in that room behind Kumo.
Peter One interviewee recalled a visitor who wanted to show slides on one screen and use the other screen for demonstrating a web application over the Internet.
A wizard helped him connect his laptop, show the demo on the left display, and load his presentation onto the PC shown on the center display.
One or two day-long working sessions with visitors are typically held in Kumo.
These meeting include both planned presentations and impromptu use of the space.
At occasions visitors come and we'll trade off presentations and have meetings or sort of brainstorming sessions or whatever we are working on.
Dora None of our interviewees mentioned that they had used more than one display at such meetings, although they had certainly felt a need for it.
I wanted to be able to show slides on one side and then have  plug in a laptop and show slides.
Wendy Finally, our interviewees frequently mentioned the lack of whiteboards in Kumo.
Meeting participants often need to draw or write to support their communication.
Finishing a presentation and/or a demo is often more straightforward and less stressful for the presenter than starting it.
Although all presenters have the intention to close down their applications, they do not always do it: Sometimes I'm very rude and forget to exit.
I don't know if I remembered this time or not.
The Kumo PC is shared for all users of Kumo.
No extra password or administrative right is needed for installing software or changing configurations.
Presenters take precautions and check before a meeting that everything is set, but when the meeting has more than one speaker there is no guarantee that somebody will not inadvertently close a presentation or demo window.
We identified several design requirements based on our analysis of interviews.
The requirements are intended to reduce presenters' stress during talks so that people can focus on the meeting rather than on the supporting technology.
Reliability: A presenter must be able to trust the meeting support system.
If the system does not work properly, the user will not adopt the system and will avoid using it.
Error recovery: A meeting support system relies on many devices and software components, each of which may fail at some point.
The ability to recover from breakdowns is as important as overall reliability.
A good error recovery strategy also minimizes the need for wizards supporting the system.
Accessible and flexible mapping of devices to the displays: Many of our users wanted to use more than one display; the existing mechanisms for mapping displays made this too difficult for the typical user.
Also, since Kumo contains many applications and devices, users need to find out easily what technology is currently available.
Flexible workflow design: Interviews showed that presenters had a variety of preferences and workflows when preparing and giving a presentation.
We believe it is impossible to force people to use a workflow they are not comfortable with, particularly in such high-visibility tasks as giving presentations.
Instead the system should support multiple workflows.
Facilitate seamless transitions: Presentations are performances; it is important to create an appropriate impression when presenting to an audience.
The meeting support system needs to support seamless transitions between presenters and between use of different devices and applications.
Predictable configuration: In a stressful situation, such as giving a presentation, users do not like surprises.
The configurations a user prepares should be predictable, and consequences of configurations should be obvious.
From these typical meeting types we can extrapolate a general presentation process in Kumo.
People prepare slides for their presentations, make sure the slides are accessible in the room, and test their demonstrations.
Typically people either copy files to the Kumo computer , access it from the network , or use their laptop .
Three of the presenters said that they used different methods depending on the kind of presentation, and two presenters said that they used multiple methods mainly to be sure that one of the methods would work: I'm paranoid ...
I put them in ePic meeting, I put them in my folder on share in Kumo so I use both.
Presenters either pre-load their presentations before the start of the session, use the file system to find files to present, type the name of the document into a command line, or launch desktop shortcuts they created in advance.
In each case, PowerPoint is started in editing mode and then switched to presentation mode.
The interviewees had few comments on giving presentations.
Based on our initial findings, we built a system to control devices and applications in specific physical spaces.
The goal was to build a basic system based on our interpretation of user requirements, and then to iterate the design based on user feedback.
This iterative process is described in this section; a longitudinal study of use follows.
We focused our design on three aspects: scheduling, preview, and presentation.
Scheduling involves specifying a configuration for each presenter in a particular meeting.
Preview capability allows presenters to try out their presentations before the actual meeting.
Multiple applications can be run simultaneously on each display machine; the system places no restrictions on the kinds of applications that can be run.
To support remote control, applications must implement an API based on standard input/output streams.
For example, we implemented a shim that manages the COM API exposed by PowerPoint to control slides on a remote machine.
DICE consists of a set of web services that coordinate the devices and applications in a meeting room, including multi-display systems, digital whiteboards, etc.
Figure 4 illustrates the key parts of the Kumo configuration.
The Room Server coordinates the control of applications and devices during a meeting.
The console tablet allows users to select devices or applications running on one of the display PCs for projecting onto one of the three screens.
Laptops brought into the room can be displayed on any screen.
The Configuration Server maintains a database of information about room capabilities, users, and meetings.
Configuring a meeting associates contextual information 
A recurring design goal for DICE was to make the routine trivial, and the complex possible.
In designing interfaces, we had to balance scheduling complexity vs. presentation complexity.
We biased our design toward up-front complexity to reduce the cognitive load on presenters.
Thoughtful decisions made before the meeting can reduce in-meeting distractions.
We built an application for scheduling and configuring meetings.
The DICE Scheduler implements a step-by-step interface that guides the user through the scheduling and configuration process.
It allows new meetings to be created, or existing meetings or configurations to be edited.
Importantly, this interface is designed to be used before a meeting so that users can devote full attention to the task .
Scheduling a meeting consists of several steps: the user must first pick the room and date and time of the meeting, and assign it a name.
Then, optionally, additional presenters can be added to the meeting.
This is typically done by a meeting owner who is coordinating a multi-presenter meeting.
Finally, each display in the room can be configured to select the options that will be available on that display in the meeting .
These include applications such as PowerPoint , and computer sources for various purposes: running a demo, showing a guest laptop, etc.
Displays are selected by clicking on the corresponding tab at the top of the scheduler window.
The scheduler does not require all displays to be configured: a few options are predefined as defaults for each screen.
When done, the user presses the "Save" button, which causes the scheduler to record the configuration, which can be later edited by repeating these steps.
When a multi-presenter meeting is scheduled, presenters can edit their own configurations for that meeting.
Once a meeting is selected, the scheduler switches to the screen tabs, bypassing the time and presenter screens.
The in-room user interface for DICE was conceived with some explicit goals: it had to have "walk up and use" simplicity of interaction, it had to provide task-oriented  controls, and it had to reflect the pace of interaction with devices in the room.
To address these design goals, we decided on a kiosk-like appliance as the UI hardware, selected a tablet PC that could be manipulated with a finger , and built a Flash UI to control the screen .
We made an early user study of the scheduler to identify usability problems with our design.
One usability problem with the scheduler is over-emphasis on a room's displays during scheduling.
We structured interaction in terms of displays , but that was not how people thought about configuring the space.
Our users wanted to configure displays in a different order , and they did not know what all the options meant.
Console interaction is structured around potential tasks.
Users can display presentation slides, select one of several computers, or show a guest laptop on one of the three screens in the room.
Some devices may take a few seconds to complete user requests.
We accommodated this possibility in the console's design--the interface responds to the user immediately, and then provides reassuring feedback while the hardware reconfigures itself.
While the console design was mostly successful, we discovered some usability issues during deployment.
These included confusing labels for displays, problems with the presentation interface, problems switching between presenters, and lack of control over meeting capture.
We discuss these in turn below.
In particular, users were confused by the range of choices available for each screen, because they did not know what many of the names  referred to.
Because the presenter faces the audience rather than the displays, there is a natural left-right confusion when referring to displays.
Initially, we had labeled the screens "left," "center," and "right," but that created confusion between "stage right" or "audience right."
We tried flipping the controls so that the right column on the control display corresponded to the display on the presenter's right, but that still caused some confusion.
In the end, we settled for re-
Although this seems to have reduced the degree of confusion, the solution is still not completely satisfactory.
When presenting, people like to face the audience, but they also want to see their presentation materials to cue the talk.
To avoid having presenters continually glance over their shoulder at their slides, we added a slide preview image to the console.
Another issue related to presentation involved the size of the slide controls.
People found the buttons on the screen too small, and too hard to press reliably without devoting too much attention to the control mechanism.
We addressed this problem by adding a presentation mode in which the buttons on the screen take up most of the display, so that a casual tap on the screen does the right thing .
We conducted longitudinal user studies of the DICE deployment in Kumo to evaluate our design with respect to users' needs, and to understand how they dealt with the ensuing changes in work practice.
We designed two user studies to capture the change of work practice with respect to the identified design requirements.
The first study examined how DICE supported transitions in multipresenter meetings.
The second evaluated how presenters used Kumo to support different types of meetings.
The transition study analyzed multi-presenter meetings during one year prior to the introduction of DICE, and for eight months after its introduction.
During the latter period, presenters were asked to fill in questionnaires of their experience with DICE after each multi-presenter meeting.
We also collected data on DICE performance and usage from our meeting capture system, and from DICE log files.
All meetings with more than one speaker presenting visual material on at least one display were included in the study.
In the year prior to deployment, there were five highimportance meetings, ten normal-importance meetings, and eight internal meetings; after deployment, there were five high- and normal-importance meetings, and ten internal meetings.
In the second study, we analyzed DICE log files from November 2007 to August 2008 to support the longitudinal study of patterns of use in different meetings.
In addition, users' experiences were collected in a questionnaire in September 2008.
Initially, presenters seemed to have some trouble switching to their configurations.
During the first high-importance meeting in which DICE was in use, one presenter finished his talk and then switched to the succeeding presenter's configuration, but that person had not noticed.
As a result, she tried to switch to her presentation, unsuccessfully, since DICE already had completed the switch.
We also noticed that presenters tended to press the "Done" button rather than the "Presenter" button when completing their presentation.
We redesigned the console to make buttons easier to see and to show the list of presenters when either the "Done" or the "Presenter" button was pressed.
After these changes were deployed, we have seen fewer problems switching presenters.
Finally, people wanted to control the capture of their presentations through ProjectorBox .
While ProjectorBox offers a web-based interface, people preferred to have more direct control over whether their slides would be captured.
We added a control to the console to start or stop the recording, and added an external display to show the state of the recording to the audience.
We did not see any differences in overall transition time before and after deployment <1, ns..
This is not surprising, since transition time was often used for getting to the podium and at times greeting guests, rather than just starting the presentation.
However, DICE greatly reduced the time irrelevant material was shown during transitions .
Note that a number over 100% indicates that irrelevant material was shown for a longer time than the duration of the transition.
These data indicate that people perceived the value of making good impressions on their audience: more important meetings showed less irrelevant material on the screens than less important ones.
For high importance meetings and normal meetings the difference was dramatic, decreasing from 367% to 28%, and from 130% to 65% respectively.
The overall difference in time showing irrelevant material before and after DICE installation was significant =16.356, p<0.001.
Seamless transitions between speakers are accomplished easily when using DICE to start a presentation.
After the DICE deployment, we noticed changes in meeting room technology used during transitions.
Instead, presenters used DICE to start 48% of presentations.
Also, the use of laptops was doubled in multi-presenter meetings.
Before DICE, laptops were scheduled to be the first in a meeting, or to be the first after a break to mask the overhead of switching projectors.
After deployment, laptops were used in 11% of the transitions .
We also wanted to explore how people used the three types of meetings supported by DICE: ad hoc meetings, previews of scheduled meetings, and scheduled meetings.
For this analysis we used DICE log data from November 2007 to August 2008.
From the logs it is not always possible to tell if an activity in DICE is a meeting, a rehearsal, or a restart of a meeting in a different mode; we called all these activities meeting events.
For this analysis, we removed meeting events shorter than 52s  and longer than 7h 17 min .
Meetings typically do not last more than six hours; longer durations usually indicate that a meeting was not closed.
In addition, meeting events for testing and maintaining DICE were filtered out.
We also administered a questionnaire in September 2008 to collect users' perspectives on their use of DICE.
Eighteen people responded to the questionnaire.
The number of meetings events is determined by work cycles and current activities, rather than by technology.
Thus, we found no changes in how often people presented after our deployment.
Figure 9 shows that people used DICE frequently for previewing important scheduled meetings; when the number of such meetings decreased, the use of DICE for previewing also decreased.
Minimizing the amount of time showing irrelevant material is easy when speakers presented through DICE.
However, in 51% of the transitions the second presenter had not uploaded a presentation and instead used a laptop or the Kumo PC.
For these transitions, the average duration of displaying irrelevant material also significantly decreased =9.806, p<0.01 from 84 sec to 28 sec, on average.
These results show that DICE supported seamless transitions even when presenters did not use it for controlling their presentations.
We assessed users' impressions of DICE through questionnaires administered to presenters of high-importance meetings.
We asked them to rate how easy and fast transitions between presenters were on a seven point Likertscale, where 1 stands for strongly disagree and 7 for strongly agree.
On average, presenters rated the speed and ease of transition at 5.5 , and their comments supported this score: Despite complaints, really love DICE.
I attended a conference recently.
I'd forgotten about the five-minute configuration wait between speakers.
Not to mention the speaker's private email showed up in front of the whole audience, oops!
When asked in the questionnaire, why people used ad hoc meetings, respondents said that these meetings were often impromptu.
For instance, people needed a display in the meeting and the other meeting rooms with that capability were occupied.
They also started ad hoc meetings for testing demos, rehearsing presentations or preparing demos.
Also, ad hoc meetings were used when the presenter did not have advance notice to configure a presentation in DICE.
94% of the respondents reported starting ad hoc meetings.
Speakers in Kumo can choose to give their presentation using PowerPoint on the Kumo PC or upload their presentation to DICE and display it from there.
The reasons to use DICE for their presentation were to coordinate a presentation and demo, to start and navigate the slides easily, to coordinate multi-presenter meetings, and to accomplish seamless transitions.
Using DICE, speakers can start with one set of devices, applications and displays, but they can also change their configuration during the meeting.
In 62% of all meeting events  speakers selected at least one device/application during the meeting.
Table 2 shows the most common selections for mapping devices and applications to displays for ad hoc and for scheduled meetings.
The numbers in parentheses show the number of selection of devices and applications before or during the meeting event.
The 76 meetings scheduled between November and August included 165 configurations , an average of 2.2 configurations per meeting.
This suggests that meetings were scheduled to coordinate multiple speakers' presentations.
One speaker wanted to use Kumo PC to make less formal presentations to offset the formality of the room.
Interestingly, 62% of respondents preferred DICE to PowerPoint on Kumo PC due to ease of use, but the two camps gave surprisingly similar reasons for their choices: About using PowerPoint on Kumo PC: "Easy to setup, easy to update, easy to control."
Respondent 10 About using DICE to show slides: "It's easier to start up your slides."
Respondent 2 "I liked the ease of using it--just push button on one display."
Respondent 6 This suggests that DICE was successful in the design goal of accommodating speakers' preferred patterns of use while introducing new methods for controlling devices and applications.
This conclusion is further reinforced by the users' rating of how well DICE supported their activities in Kumo: mean=4.0  on a 5-point Likert scale, where 5 corresponded to excellent and 1 to poor.
We believe this result is critical to the success of these types of systems: users are not likely to adopt systems that do not fit their needs or preferences, despite potential advantages.
Our design tried to accommodate existing practices as much as possible, while making it possible to use the equipment in new ways.
Not only does this support gradual adoption of new technology as people get used to it, but also makes the overall system more flexible and capable.
One added benefit of using DICE to show slides is that Kumo PC can be used to show demos on a different display.
85% of respondents said that they used multiple displays in Kumo at least once after DICE was deployed, up from 52% before the deployment.
Log data support these claims: Multiple displays were used in 61% of ad hoc meeting events and in 72% of scheduled configurations.
Multiple displays were used to orchestrate slides and a demo, to run demos  on multiple screens, or to show additional slides or an agenda.
Some respondents said that they used multiple screens every time they give a presentation.
Reasons for not using multiple screens, according to respondents, were to keep authoring, planning and presenting as simple as possible, particularly when the content of the presentation and the character of the meeting did not require use of more than one display.
We found that in preview and scheduled meeting events, devices or applications were switched 727 times and 298 for ad hoc meetings.
Figure 11 shows the average number of selections per meeting and user for the three meeting types and displays.
The Tukey HSD post hoc test showed significant differences in number of selections between scheduled and ad hoc meeting events , and between preview and scheduled events .
Also, the center display had significantly more selections than the left display  and the right display .
These numbers suggest that when people create involved presentations using multiple devices and displays, they are more likely to schedule the meeting to reduce the workload during the talk.
Still, the speakers frequently switch to different resources, for example when starting a demo.
On average, each configuration was loaded 2.5 times before or during the scheduled meeting .
Thus DICE is used not only during the meeting, but for preparing and rehearsing for the meeting.
These data indicate that speakers take advantage of DICE's ability to control the mapping of devices and applications to specific displays, particularly in scheduled meetings that involve both presentations and demos.
Also, DICE supports both ad hoc and scheduled meetings in Kumo, which we believe to be another important aspect for DICE's adoption.
DICE has been in use for over a year, and has resulted in qualitative changes in the use of the room's facilities.
More screens are now in use more often, and people seem to like the system.
One of the design goals was to support a seamless transition between existing practices and new ways of using the room.
Presenters can still use the room as they have always done, but it is now easier to use multiple screens, to set up more complicated configurations, and to make seamless transitions between speakers.
One important lesson that can be applied to other similar situations is to understand the balance between proactive and reactive behavior.
It is important to rely only on knowledge that users have, and to allow them the flexibility of action once they know what to do.
We believe that continued iterative design of the system's user interfaces based on feedback from users will increase the use of the system not just as a means of controlling devices, but also as a platform for application use.
This work has implications for the ubicomp field in general.
Such systems should allow people to take full advantage of a space's capabilities while providing reasonable fallbacks and defaults to minimize the need for casual users to learn something new, and to minimize the amount of planning required to use the system.
