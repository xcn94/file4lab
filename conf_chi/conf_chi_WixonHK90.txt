ABSTRACT We offer an introduction to contextual design as an emergent method for building effective systems.
Contextual design addressesa number of the inadequacies in previous methods by emphasizing: interview methods conducted in the context of the user's work, codesigning with the user, building an understanding of work in context, and summarizing conclusions through out the research.
We contrast this design method to usability engineering and artifact examination.
We will outline the procedures of contextual design .
We will also contrast contextual design to the procedures described by Carroll and Kellogg, noting that the major differences may be a result of different goals: product design versus theory development.
This paper communicates our position on the theory and practice of human factors in system design.
We are particularly motivated by Carroll and Kellogg's  excellent article calling for a study of anifacts to derive theories for interface design.
While we support their effort at formalizing a method of design, we question their statements about hermeneutic design approaches.In particular, we make a case for the relevance of one hermeneutic design technique, contextual design, to engineering practice.
This method was developed to design usable products.
It results in an understanding of customer work which can be generalized to new design problems.
At the 1989 CHI conference, we noted the several panel sessions devoted to non-traditional design techniques, such as "Contextual Field Research" and "Drama and Personality in User Interface Design".
We also witnessed the tension between traditional and non-traditional views in the panel session "The Role of Laboratory Experiments in HCI: Help, Hindrance, or Ho-Hum?".
This tension is at the heart of the Carroll and Kellogg paper, which appears motivated by a desire to synthesize hermeneutic approaches and those predicated on quantitative models of human performance.
We contend that this tension derives from a general recognition that traditional methods have failed to provide relevant information for a number of necessary elements of product development such as: needs analysis, requirements definition, and interface design.
This inadequacy is keenly felt in the industrial environment, where technological developments are rapidly accelerating.
The need to respond with timely, informed, and realistic designs  is paramount.
Permission to copy without fee all or part of this material is granted provided that the copies are not made or distributed for direct commercial advantage, the ACM copyright notice and the title of the publication and its date appear, and notice is given th?t copying is by permission of the Association for Computing Machnery.
To copy otherwise, or to republish requires a fee and/or specific permission.
Some investigators claim that the breakdown in traditional human factors practice has resulted from an inability to integrate findings of independent laboratory studies.
We agree with another set of investigators, who see the problem as the difficulty in applying laboratory findings to the design of real world systems.
We further contend that the root cause of this problem is the method itself.
We claim that the practice of traditional human factors to address concerns of design is a misapplication of expetimentation borrowed from the physical sciences.
This methodology was not developed for product design.
It has become, by default, the dominant methodological paradigm in the human factors profession primarily because of early successes in establishing relationships between perceptual/motor performance and system engineering.
However, the challenges of interface design have changed dramatically in the last 25 years.
For example, at Digital these techniques were used on products such as XUI, DECwrite, DECdecision, EVE, and VAX Rally 2.0.
In the industry as a whole they have been used at IBM, Tectronix, Pacific Bell, MCC, Candle, and the IJniversity of York 183.Contextual design methods are chosen because they Ipassthe acid test: providing timely, usable information that aids in the making of critical design decisions.
A number of new approaches to user interface design are being clarified and articulated.
These approaches differ in fundamental assumptions, choice of methods, overall goals, and interpretation of results.
At the same time the approaches overlap to a varying extent.
A simplistic summary of the differences in these approaches is captured iu Table 1.
Both usability engineering and the: contextual design place a greater emphasis on understanding user needs in context than artifact examination.
Usability engineering differs from contextual design in its use of operational specifications to focus tlhe usability effort.
Artifact examination uses a generic task analysis which is absent from other approaches.
Since contextual design is the topic of this paper and since it may be less weIl understood than the other approaches, the following section is aimed at briefly describing this approach.
Today, design engineers are under intense pressure to design effective interfaces and thus must creatively synthesize and integrate available technologies into a unified solution.
The questions faced am not adequately addressed by quantitative models predicting how fast subjects can perform benchmark tasks or the decrease in error rates from method A to method B.
Contextual design approaches go beyond verbal data by incorporating observations made in the user's context.
These observations are not bounded b:y techniques which pre-define categories of observation and subsequently analyze "msults".
Rather, the value in the data comes from interpreting what is observed in its context and by engaging the customer in a dialog about these interpretations 1301.
Contextual design as developed and practiced by us is intended to support the development of products.
Although the methods used in contextual design were adapted from various field research techniques, its primary purpose is not to develop theory.
Our challenge within Digital is to design products in a cost effective and timely fashion that supports, extends and transforms user work.
There am two critical phrases in the statement of our intention: "transform user work", and "cost effective" design.
To "transform user work" we must understand: what that work is, what kind of computer system would support that work, how technology could transform such work, and how to anticipate and support the changes in work that new technology brings.Our assumption is that systems are designed from a set of explicit  assumptions about how users work.
For example, in VAX RALLY V1.0 software, the system provided menus of variable names which eliminated recall and typing.
However, in the part of the system, where the users did coding, no menus were provided.
Designers assumed the users of the system would not do much coding and that, when coding, only a few variable names would be used, which would be easy to remember.
Our studies showed that many users program and that they found recalling and correctly typing variable names difficult.
It was clear that the product could be improved and user errors eliminated if users could pick variable names from a menu when coding.
This feature was added in V2.0.
Thus, version 2.0 of VAX RALLY better reflected the type of work users did.
F6r us, a major task of design is to design a system that will fit with and enhance the user's existing way of working, In contextual design we use contextual inquiry to yield data on user work as a basis for design.
The cornerstone of contextual inquiry is to collect data in the context of users' work as a partner with users.
We talk with users while they are working.
We see which aspects of a system support or interfere with work and how that system interacts with the whole work context.
If work occurs over months or hours, we track the work by talking about artifacts users have produced and events that occurred during the work.
Because we engage the users as partners in this inquiry, we gather users' interpretations, language, and the structuring of their work activities.
The structure of users' work in many ways is revealed in users' thoughts, intentions and how they orient to their work tasks.
Thus, talking with users to develop a shared understanding of these thoughts is key to uncovering the data needed to develop a usable system: a workflow and task concept which builds upon the users' existing decomposition of work.
The second critical phrase in our intention is to provide "cost effective and timely" information for design.
When developing a product which requires data with respect to user work the relevant questions are: "How long will it take to get this data?"
Because of aggressive development schedules, the design will be often done with a small sample of users.
In contextual design we accept this constraint and seek to maximize differences between interviewees to get a comprehensive view of user work with as few participants as possible.
Moreover we build understandings at the same time that data are collected.
Thus, results are av.aiiable at any point in the inquiry.
There is no need to wait for the "end of a study" or "enough users".
If an understanding of each product domain, or worse, each product must be developed' from scratch as though no prior knowledge is relevant, we would not be cost effective.
Implicit in any good methodology, for science or engineering, is that it produces knowledge which can be used in new situations.
Contextual inquiry creates a9 understanding of mer work and usability which informs engineers while they design.
While this understanding is relevant to a particular work domain and thus to any tools within this work domain, it tilso suggests generic principles of usability and work concepts that become the initial framework for the design of new products.
This initial framework must then be iterated or shaped by domain-specific information.
For example, in one domain, a user of a word processing system performed production work transcribing reports for a hospital.
The reports varied by format and paper color for printing.
As a result, she organized her work into groups using the same format and paper color.
Rather than making each report a separate file within each format group, the user put more than one report in a file.
But this strategy necessitated manual pagination which required her to be very vigilant to assure comet page numbers.
Although the product provided a pagination facility, it `wasdesigned assuming that each file represented a single continuous document.
In addition the system did not provide a way to easily copy a format and enter new text.
Thus, the user developed a workaround to suit her needs.
As she said "It's as if the product has a mind and is saying this is how you do it.
But that's not how I wanted to do it...
It didn't really fit my need."
Understanding work disruption in one context we were able to use it in other design efforts.
For example, in the Digital toolkit for X Window System, XUI, we developed a number of software routines  to support specific user actions such as the selection of existing files, the storage of new files, and others.
These widgets allow users to access and store infomlation without leaving an application and disrupting the flow of work.
Thus, the general principle of maintaining the flow of work generated the rationale for the design of a specific interface component.
The component is then instantiated in code, which is shared among a whole family of products.
In this way general principles do more than give us a beginning understanding; they can actually shorten the time it takes to develop products.
Each set of principles from contextual interviews informs the data-gathering in a new application area.
Although the concepts start out domain-specific, they evolve a9 designers move from domain to domain.
Within specific areas work with users refines and develops the concepts appropriate to the new domain.
Our concepts of work and usability grow from product to product.
We never start from scratch; we always build upon our growing knowledge.
Becausewe recognize that we carry +&isframework or focus around with us ti the time, contextual design builds into its methodology a w?y of challenging and evolving this focus to ensure that we do not overgeneralize.
We must validate these frameworks with users within a specific domain.
We do this by continuously sharing our assumptions and interpretations with users and by inviting them to intel-pret and design with us.
We stated earlier that contextual inquiry was developed for the explicit purpose of :supporting engineering efforts, not scientific efforts.
Necessarily, contextual inquivy uses a well-delined set of procedures.
These prowdures differ from traditional experimental techniques, and have not been systematically and completely presented as a methodology in the public literature.
We axe now in the process of training our engineers to do contextual inquiry including the interviewing, analysis and concept development.
We have found our procedures to be communicable.
Today the procedure may be summarized as follows: Interview users about their work in the real work environment Be concrete, talk about what the user is doing, just did, or talk in the context of a work product Let the user lead the conve:rsation, co-interpret and co-design: share your understandings of their work and design ideas with nsers to validate and to stimulate user reflectivity, inquire about their assumptions Expand and challenge the background of assumptions one brings to each intelview, probe all surprises, and assumptions.
Share your assumptions with users.
Pick users strategically so that they are Rpresenative of the diversity of your user base.
Summarize your understanding at the end of each session to determine who to talk to next and what to focus on next.
Build an understanding of user work and of the environment to be designed.
Based on this understand, design and build a first cut at a User Environment.
A clarificaticz of how artifact examination uses interviews, reflections, or field data could help to reconcile apparent differences between artifact examination and contextual design.
Details of Design As proponents of contextual design methods, we argue that principles alone are not enough in the design of artifacts.
Design involves not only a broad architecture but also a myriad of details which are not obvious until observed in practice.
Once articulated as a paper specification, a simulation or as a functional prototype, a design can be evaluated.
This can take place in the field or in the laboratory; the overriding concern being the extrapolation from the test situations to the actual situation of use.
One can draw an analogy from psychological research.
The relation between iterative testing and original user interface is somewhat similar to the relation between theory and experiment in traditional science.
The overall experimental context is the product of a widely shared but often unstated matrix of assumptions about the definition and development of knowledge, and the particular variables manipulated, which are products of the specific theory being tested.
Similarly, in interface design the overall design  produces a particular interface  which is then evaluated in the context of use .
The findings of these tests are used to alter both the overall design  and the particular details of the implementation .
Cle,arly, there ate important differences between a user interface prototype and an experiment.
One set of differences arises from practical concerns such as the time critical nature of results for product development, or the need to collect, organize, and present results in a way that they can be most readily assimilated by a development group.
A second and more interesting set of concerns are philosophical.
Some examples would be a commitment to involve the user as a partner in design, and a greater emphasis on discovery of principles as compared to the testing of alternatives.
A major claim and important insight of artifact examination is that the usability of an object is determined "by independent psychological rationales inherent in its design".
While true, we ask the question: "Is the resulting design a good one?"
While there may be principles inherent in the design of objects, these principles could have produced an unusable product.
As Norman  points out, many products are poorly designed.
Examining such artifacts for their "inherent design" principles could lead to more poor designs.
In contextual design, we place a strong emphasis on studying people's work and the use of products in that work.
In addition, any inherent psychological principles in a design may be difficult to ferret out or are simply not present.
The design of a product is the result of a number of competing forces: resources, features, time to market, and competitive position.
These forces have often overwhelmed usability issues in design.
Examination of a product which was designed exclusively to minimize time to market and cost might reveal few usability principles.
In contextual design we rely on the study of products in the context of use to ferret out the effective and ineffective aspectsof the design.
We don't really believe that Carroll and Kellogg intend to extract design principles solely by examining artifacts in isolation.
It is clear Carroll and Kellogg carefully studied :he use of the training wheels editor and HyperCard.
In the case of the training wheels system,  the methodology employed involved examining the problems people had when using traditional documentation and producing prototypes which were improved through an empirical approach.
Artifact examination places a strong emphasis on falsifiable claims.
This concern for falsifiable claims is rooted in a particular view of science which claims that a meaningful hypothesis is one that can be disconfirmed .
CHI 90 Prcceecim classical view.
For example, design principie l&e "Users want and need to be in control of of the to& they use to perform their work" .
One can imagine ways to disconfirm this hypothesis using traditional laboratory methods.
In contrast in designing an interface, we seek to develop with users an understanding of this principle in the context of their work.
By refining what "control" means in the context of a specific product we can produce an effective design.
We expect most vendors are working on refining the interpretation of these principles rather than seeking to disconfirm them using classical experiments.
We have all had experiences like this to varying degrees, in art appreciation, the natural world, or in love.
We may have had this experience in design, an aspect of a product may "clearly feel right" or "clearly feel wrong".
However, the intensity of our revelation is not usually adequate to convince software developers to1change designs or managers to allocate resources.
To effect design change we must work effectively with others who may or may not share our experience.
We can't afford to become hermits as many mystics do.
Instead we focus on developing a shared understanding of the experience of the user.
The aim of contextual inquiry is to make the user's experience public so it can drive the social process of design.
The use of artifacts to create new designs is a timehonored tradition and is widely used.
Certainly design is often or can be seen as an evolutionary process building on designs of the past.
However, design also has an additional aspect.
Good design breaks new ground, applies existing technology to new domains, integrates features from diverse sources into a single design, exploits on new technology, or extends existing technology beyond limits.
Pelle Ehn  considers design as a dialectic between tradition  and transcendence .
In contextual design, we seek a wide range of sources for inspiration.
We see spreadsheets and statistical analysis packages as examples to be emulated.
The designs for these did not derive from existing software artifacts, rather they represent automated embodiments of clearly specified procedures,i.e.
We have summarized what we see:as a breakdown in traditional methods of design and applied research.
We have briefly sketched contextual d&sign.
We have placed it in its origins in the product development process and outlined its methods, particularly the contextual interview.
We have contrasted this approach with that of artifact examination.
We sense that practitioners of product design are developing new and effective methods, Our belief is that the presentation and documentation of these methods will lead to their refinement.
Contextual design is an evolving collection of methods.
We continue integration of methods and synergy between diverse approaches.
The authors thank: Alana Brassard, Anne Duncan, Charles Frean, Michael Good, Derek Kozikowslci, Dave Marca, and Chauncey Wilson for their careful reviews.
We also acknowledge John Whiteside for his knowledge and guidance.
XUI, DECldecision, DECwrite, VAX, RALLY are trademarks of Digital Equipment Corporation, Maynard Mass.
IBM is a trademark of IBM corporation.
Artifact examination claims that, in the hermeneutic approach to design, decision making is "essentially mystical".
While elements of my,sticism are often involved in designing usable systems, an essentially mystic approach would hardly be effective in an engineering environment.
Heidegger, M. Being And Time.
Human Interface Guidelines: Apple Desktop Interface.
IBM Common User Access Advanced Inteeace Design Guide.
Cummulating the science of HCI: From S-R compatibility to transcription typing.
Proceedings of the Conference of Human Factors in Computing Systems, Austin, 109-114.
Kato, T.  What "question-asking protocols" can say about tie user interface.
Directed Dialogue Protocols: Verbal data for user interface design.
Proceedings of the Conference of Human Factors in Computing Systems,Austin,
The value of research is in the eye of the beholder.
Artifact as theory nexus: Hermeueutics meets theoryof based design.
Proceedings of the Conference Human Factors in Computing systems.
Softening-up hard science: Reply to Newell and Card.
Leaming a word processing systems with training wheels and guided exploration.
Proceeding of CHI + Gf'87: Conference on Human Factors in Computing and Graphics Integace.
An edpidemiological approach to the criteria gap in human factors engineering.
Evaluating the user interface: Videotaping without a camera.Proceedings of The Human Factors Society, 30th Annual Meeting, Santa Monica, CA: Human Factors Society, 1029-1033.
Ehn, P. Work-Oriented Design of Computer Artifacts, Stockholm: Arbetlivscentrum, 1988.
Interfacing Thought: Cognitive Aspects Of Human Computer Interaction.
