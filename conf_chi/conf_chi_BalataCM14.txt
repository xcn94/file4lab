We present an external labeling laid over small and/or overlapping 2D objects as an efficient representation for their selection.
The approximation of objects with points allows us to transform the labeling problem to graph layout problem, which we solve by means of force-based algorithm.
In a study with 15 participants two implementations of our algorithm were compared against labeling method, where all label boxes share the same offset from corresponding objects.
The results of the study show that implementation using a special functionality  was 14% faster with a comparable accuracy.
The subjective evaluation revealed that the implementation with temporary freezing is perceived as most comfortable, fastest and most accurate.
The implementation without temporary freezing showed much higher error rate and cannot be recommended.
We have identified this problem during the work on the graphical user interface  for operation of Unmanned Aerial Vehicles .
UAV is a small robotic plane or helicopter without human pilot that autonomously fulfills high level commands of the operator .
The primary task of the operator is to control many UAVs from the ground using our GUI of UAV control center prototype.
The execution of such missions is often time critical and the low level of cognitive load is fundamental for fast and precise selection and assignment of the mission tasks to the particular UAV.
In fact, the operator solves two complex tasks: visual search of the desired UAV, and pointing of the UAV with a pointing device as fast and accurate as possible.
According to our pre-study the visual search task is the dominant one .
The UAVs are displayed as small 2D objects overlaid over the map.
The selection of UAVs becomes complicated due to their movement, proximity and/or overlapping.
Other scenarios can be a real-time control of larger group of agents in multi-agent systems  and tracking objects on the map.
In this paper, we separate the selection from the presented 2D objects.
We introduce a selection space into which we put a handler for each object and deform the space to meet the guidelines for the size of selection areas of the handlers.
We overlay the presented 2D objects with the deformed selection space.
To establish the connection between the handlers and the 2D objects we join each handler with a corresponding object with a straight line.
In this way we create an external labeling of the objects.
The external labeling should exhibit a number of criteria , which deal with the positions of label boxes , anchors , and leader lines .
In our implementation we consider the following criteria: Leader lines do not cross.
Anchors are not too near to each other.
Leader lines are as short as possible so label boxes are near to the corresponding objects.
Label boxes are not too near to each other.
Label boxes do not overlap anchors.
Movement of label boxes is temporally coherent.
We propose a hypothesis that an external labeling which exhibits these criteria  is an effective representation for selection of small and/or overlapping 2D objects.
We test the hypothesis on a scenario where the operator selects UAVs, small moving and often overlapping objects.
As the visual search and pointing are inseparable we test both tasks.
Note that the visual search is the dominant task.
In this paper we deal with the problem of selection of moving 2D objects in the screen space with given resolution.
The more imprecise the pointing device is, the bigger the size of selection area needs to be.
However, in situations where the guidelines for the size of selection areas cannot be met it might be hard to point the desired object with a pointing device.
This holds especially when many small objects are close to each other and/or certain objects are overlapping.
The overlapping of objects makes visual identification of the desired object even harder.
Copyrights for components of this work owned by others than ACM must be honored.
Abstracting with credit is permitted.
To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee.
The set of edges E contains two types of edges.
The first type represents the attractive force between the nodes  and the other one represents the repulsive force between the nodes.
Thus, p Fj - p Fi is a dilatation of the spring and wa is the spring constant which we use as weight to influence the attractive force.
The problem we are solving is to find such positions of label boxes  that do not occlude the objects  or the remaining label boxes.
An approach to this problem where the user specifies a circular focus containing the anchors and the label boxes are placed outside of this focus was introduced by Fekete and Plaisant .
All approaches above are designed for selection of static targets and their extension to the selection of moving targets is nontrivial.
Inspired by work of  tzelmann et al.
In the area of moving targets selection our work is related to time freezing  and static proxies of moving targets .
In the equation, the weight wr substitute the positive Coulomb's constant ke multiplied by the negative charges qi and qj of the endpoints.
The edges in the graph are constructed according to the criteria for anchors and label boxes: Anchor distance.
As we cannot move the positions of anchors , we omit this criterion.
Thus, the leader lines will be as short as possible and the label boxes will be near to the associated objects.
We create a repulsive edge between each endpoint and all other endpoints to ensure that the endpoints are not too near to each other.
We create a repulsive edge between each endpoint and all anchors to ensure that the label boxes do not overlap UAVs.
We apply three additional attractive forces to improve the temporal coherence of endpoints.
The first force, influenced by the weight w4 , is attracting an endpoint to its projection in the direction of its associated UAV.
The second force, influenced by the weight w5 , is attracting the endpoint to its previous position.
The last force, influenced by the weight w6 , is attracting all endpoints.
6 are used to fine tune the behavior of the algorithm.
An example of labeling produced with these weights is in Figure 1.
In our GUI the UAVs are small objects and therefore it is possible to approximate each UAV with a 2D point, anchor F ai , in the center of its bounding box.
Each label box is also approximated with a 2D point, endpoint F ei , in the center of each label box.
In our case all label boxes have similar size.
Our algorithm operates with the anchors and endpoints.
The labeling problem is solved in each frame as the position of anchors  changes in time.
Our preliminary study showed that temporal coherence is crucial for efficiency of visual search and pointing.
The limited number of iterations provides better temporal coherence and limits distracting fast movements of endpoints , but at the price of leader lines crossing.
To calculate forces applied on the endpoints we construct graph G.
The external labeling algorithm using these weights ensures that the minimum distance of selection areas is always bigger than the recommended distance for mouse, see Figure 2.
We define the minimum distance as a shortest distance between all pairs of endpoints and the recommended distance as a diameter of circle circumscribed to the selection area of recommended size .
The external labeling algorithm was implemented in Dynamic and LabelFreeze labeling modes.
Unlike Dynamic mode, LabelFreeze mode gives an operator the ability to temporarily turn off the calculation of label box positions by pressing and holding Ctrl key.
Then the mutual position of label boxes and anchors gets frozen and label boxes move with their associated anchors, until the Ctrl key is released.
This should result in more predictable movements of label boxes while Ctrl key is pressed, but at the price of not fulfilling the recommended distance of selection areas .
For evaluation purposes we implemented an external labeling method where all label boxes share the same static offset from the anchors, called Fixed mode .
Due to the similar size of label boxes and UAVs the overlapping of the label boxes will be comparable.
The Fixed mode does not fulfill the recommended minimum distance, see Figure 2.
Our assumption is that this will make the selection of UAVs more difficult.
Our aim was to research if the measured speed of selection of UAVs  is higher for our labeling method  than for Fixed mode.
The experiment was performed in a usability lab dedicated for execution of user tests.
Before the experiment was started the participants adjusted the position of the display and the mouse to feel comfortable.
The experimenter explained the GUI, three labeling modes and the tasks.
The experiment began with a training session.
The participants were asked to accomplish two tasks for each labeling mode two times.
The first task was to select 10 UAVs with a particular name in given order.
The intention was to simulate use-cases where the operator is asked to select the UAVs not only by their names, but also by other attributes.
Each participant performed this training two times .
The goal was to let the participants get familiar with the operation of the UAV control center, get used to the experiment procedure and to minimize any learning effects.
The training session was followed by the test with the same two tasks for each labeling mode but with different UAVs to select.
For each task there was prepared one set of UAVs for all three labeling modes  to ensure the same conditions.
The participants were asked to proceed as quickly and accurately as possible.
Between each task they were allowed to take short breaks.
Each participant selected 72 UAVs and the test lasted 15-20 minutes.
The participants were interacting with the mouse by means of moving cursor and performing left mouse button single click.
For LabelFreeze mode participants could use Ctrl key on the PC keyboard to activate the freeze functionality.
After the data collection, the participants were asked on demographic data and completed a questionnaire investigating their subjective judgment about the level of comfort, speed and support for minimizing misclicks of each labeling mode .
The experiment was one factor  within-subject design.
The independent variable was the labeling mode.
The order of labeling modes was counterbalanced using a Latin square.
The total amount of UAVs to select  was 15 participants x 3 labeling modes x 24 UAVs/mode = 1080 UAVs.
The main measures were speed, calculated as a number of UAVs selected per minute, and error rate, calculated as a portion of misclicks in proportion to all clicks performed by the participant.
Misclicks were defined as either clicking the background or a wrong UAV.
For statistical analysis repeated measures ANOVA was used.
Fifteen participants  were recruited from our university.
All were daily users of computers.
The hardware consisted of a standard PC computer with a 22 inches LCD display , a PC keyboard and optical mouse with 2 buttons.
There were 30 UAVs whose movement was simulated based on a real UAV behavior to ensure the same conditions for all participants.
The prototype of the UAV control center used in the experiment was developed in Java.
We added name into each label box to be able to formulate selection tasks during the evaluation.
The UAVs are selected by clicking either on the UAV or on the label box.
The average speed for Fixed mode was 7.4 UAV/minute, for Dynamic 8.8 UAV/minute and for LabelFreeze 8.4 UAV/minute.
A post hoc Scheff e test revealed significant differences between the Fixed-Dynamic and Fixed-LabelFreeze pairings .
There was no significant difference between Dynamic and LabelFreeze modes.
The group effect was not detected.
The average error rate for Fixed mode was 4.2%, for Dynamic 11.4% and for LabelFreeze 5.6%.
A post hoc Scheff e test revealed significant differences between the Fixed-Dynamic and DynamicLabelFreeze pairings .
There was no significant difference between Fixed and LabelFreeze modes.
The group effect was not detected.
We also asked the participants about the level of comfort, speed and error rate of each labeling mode.
The average subjective rating of the error rate for each mode is as follows: 3.53 for Fixed mode, 3.07 for Dynamic mode, and 1.93 for LabelFreeze mode.
The average subjective rating of comfort was: 3.93 for Fixed mode, 2.2 for Dynamic mode, and 1.67 for LabelFreeze mode.
The average subjective rating of speed was: 3.87 for Fixed mode, 2.4 for Dynamic mode, and 1.93 for LabelFreeze mode.
A post hoc Scheffe differences between Fixed-Dynamic and Fixed-LabelFreeze pairings in comfort  and speed , but not between Dynamic-LabelFreeze pairing.
Dynamic and LabelFreeze modes were perceived as more comfortable than Fixed mode.
There were significant differences between Fixed-LabelFreeze and Dynamic-LabelFreeze pairings in error rate , but not between Fixed-Dynamic pairing.
LabelFreeze mode was perceived as producing fewer errors than Dynamic or Fixed.
The group effect was not detected.
These results indicate that our labeling methods  are faster than Fixed mode in visual search and pointing tasks.
However, Dynamic mode leads to much higher error rate  than Fixed mode, what is caused by the unpredictable movement of label boxes.
LabelFreeze mode, which makes the label boxes movement more predictable, reduces the error rate significantly  to the same level as Fixed mode, while preserving the same speed as Dynamic mode.
The reason why LabelFreeze mode is not significantly faster than Dynamic mode can be that the time of the pointing task is very small in comparison to the time of visual search.
From subjective perspective LabelFreeze and Dynamic modes were perceived as more comfortable and faster than Fixed mode.
LabelFreeze mode was moreover perceived as producing minimum errors in comparison to other two modes.
According to high error rate Dynamic mode cannot be recommended as a promising solution.
We presented two external labeling methods with fixed anchors and floating label boxes called Dynamic and LabelFreeze.
LabelFreeze mode showed up as an effective representation for selection of small and/or overlapping 2D objects.
It is 14% faster than Fixed mode, it has similar error rate  as Fixed mode, and is subjectively perceived as more comfortable and faster than Fixed mode.
The study showed that Dynamic mode suffers from more than 2x higher error rate than LabelFreeze or Fixed mode.
