We present a study of cursors for selecting 2D-projected 3D targets.
We compared a stereo- and mono-rendered  cursor using two mouse-based and two remote pointing techniques in a 3D Fitts' law pointing experiment.
The first experiment used targets at fixed depths.
Results indicate that one-eyed cursors only improve screen-plane pointing techniques, and that constant target depth does not influence pointing throughput.
A second experiment included pointing between targets at varying depths and used only "screen-plane" pointing techniques.
Our results suggest that in the absence of stereo cue conflicts, screenspace projections of Fitts' law parameters  yield constant throughput despite target depth differences and produce better models of performance.
Both devices are used with both a screen-plane  pointing technique and a depth-cursor  pointing technique.
Although the mouse works with many desktop 3D systems , it is impractical in immersive VR systems, and 3D trackers are still frequently used .
We "bridge the gap" between these types of systems by comparing both classes of device.
A mouse cursor with ray-casting affords selection of 3D objects via their screen-space projections.
However, projections of far objects are smaller due to perspective, and such objects may be harder to hit with the mouse or remote pointing.
Therefore, we consider the effect of perspective due to target depth.
In our first experiment, target depth is constant between targets.
Our second study uses varying target depth.
We propose to model the effect of perspective with extensions to the 2D formulation of Fitts' law  and the ISO 9241-9 standard , rather than extending these toward 3D models.
We argue that this is more appropriate in such "2.5D" or projected pointing tasks.
Extending our previous work , we investigate stereo cursors, primarily at which the depth the cursor should be displayed.
Simply displaying a stereo cursor in the screen plane yields stereo cue conflicts and cause diplopia when trying to select objects at different depths.
In contrast, a one-eyed  cursor, first suggested by Ware et al.
It is thus also immune to diplopia.
Our contributions are:  A comparison of one-eyed and stereo cursors, extending Ware  with a more robust experimental paradigm.
We show that one-eyed cursors improve performance with screen cursors, but hinder ray-based techniques.
A novel screen-plane ray technique that outperforms standard ray-casting and may be more adaptable to immersive VR/AR systems than mouse pointing.
Evidence that 2D projected Fitts' law parameters are more appropriate than 3D extensions when using screen-plane techniques.
Pointing at three-dimensional objects to select them is a fundamental task in 3D user interfaces and is analogous to 2D pointing in graphical user interfaces.
However, 3D selection is complicated by a number of issues not found in 2D systems.
First, 3D graphics systems use perspective; much like reality, far objects appear smaller, which may influence pointing task difficulty.
Second, many graphics systems, including some games and virtual reality, use stereo display.
This introduces stereo cue conflicts, and issues such as cursor diplopia .
Third, there is no universally accepted 3D pointing technique or device, unlike the 2D domain where the mouse is commonly used.
We investigate the interplay between pointing device, technique, and stereo cursors when selecting perspectivescaled 3D targets.
To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee.
Ray-based techniques test a virtual line originating at the input device for object intersections.
Ray techniques are often used with large displays  and collaborative systems .
A drawback of ray techniques is the relative difficulty in selecting remote objects .
Far objects take up proportionally less screen space due to perspective.
However, in a static scene, far targets also appear closer together.
Thus, according to Fitts' law , pointing at objects at the same visual depth from the viewer projected onto a screen should be unaffected by object depth, since both width and distance parameters scale by the same factor.
This does not hold if targets are presented at different depths.
Ware and Lowther  report that a "one-eyed" cursor outperforms a stereo cursor in 3D selection tasks with a 3DOF tracker.
The stereo cursor required matching the position in all three dimensions.
Their one-eyed cursor ignored tracker depth and moved the mono-rendered cursor in the screen plane, effectively pointing at object screen projections.
Thus, there are large differences between these two techniques and their study did not account for differences in degrees-of-freedom or input device.
Our study expands on this by comparing cursor rendering style across both 2 and 3DOF techniques.
They used only targets at the screen plane.
In contrast, we use targets displayed at varying depths in stereo.
Their RCE technique maps tracker rotation to the orientation of a ray originating at the user's eye.
RCE was significantly faster than standard ray-casting, especially for  occluded targets.
The effective width, We, is computed by projecting the cursor onto the task axis  and multiplying the standard deviation of the distances by 4.1333.
We previously suggested  using the distance between the selection ray and the target as a more accurate representation of the effective width We, as the actual 3D cursor position may be arbitrarily far away on near misses.
The main advantage of effective measures is that throughput variability for the same condition tends to be lower .
Consequently, results of pointing studies are more consistent and comparable.
This helps account for the speed-accuracy tradeoff, i.e., optimizing for speed typically hurts accuracy, and vice versa.
Throughput scores are largely insensitive to this tradeoff .
Although Fitts' law was developed originally for onedimensional motions, it works extremely well for 2D motions and is commonly employed in the evaluation of pointing device performance .
Straightforward extensions to 3D pointing generally focus on improving the correlation between MT and ID.
Note however that adding any extra free parameter in a regression analysis will always improve the correlation .
Thus, it is not always clear if extra factors improve models' predictive capabilities appropriately.
For example, Murata and Iwase  used a 3D tracked device to evaluate pointing tasks on a vertically oriented 2D plane.
This was not a true 3D task, as it did not involve hitting targets at varying depths.
They derived a model for ID incorporating the angle to the target, and report a higher correlation between MT and their ID model.
Their model considered the direction of movement as a vector through the target.
Yet, they used only targets positioned on a single "ground plane" parallel to the floor, effectively a 2D task.
They experimentally validated their model using a volumetric display and a tracked input device.
Volumetric displays provide more complete depth cues than stereo systems.
Moreover, they used a 3D cursor, rather than screen-plane cursors as in our study.
The model presented by Kopper et al.
Effectively, this results in targets closer to the user being easier to hit , due to increased ray precision near the ray origin.
While the model was validated for 2D target selection tasks on large screen displays, it theoretically will also work for ray-based selection in virtual environments.
Our proposed model is similar, in that targets are effectively resized based on the degree of perspective scaling they are subject to.
Fitts' law  is an empirical model of the tradeoff between speed and accuracy in pointing tasks.
MT is movement time, D is target distance, and W is target size, while a and b are empirically derived via linear regression.
Fitts' law implies that the smaller and farther a target, the more difficult it is to hit it accurately.
The log term is known as the index of difficulty  and indicates overall pointing task difficulty.
The law is associated with a measure of performance known as throughput.
Two variations on this are commonly used: one given as TP = 1/b, and the other given as TP = IDavg/MTavg.
A discussion of the merits of both options is omitted for space reasons, but can be found elsewhere .
An international standard  recommends a postexperiment adjustment for accuracy to fix the error rate to 4% by re-sizing targets to their "effective" size .
This "normalized" accuracy enables computation of  throughput, a measure that incorporates both speed and accuracy.
Thus, we use two different cursor modes with each device.
The first uses a screen plane cursor and the second a sliding cursor .
Our first study included all four combinations depicted in Figure 1.
The first mouse technique, which we refer to as MC ,  displays a cursor in the screen plane and uses the eye-cursor ray for selection.
This represents typical 3D selection techniques with the mouse.
The sliding mouse cursor, or MS ,  instead displays the cursor where the  selection ray intersects the scene.
Thus, the cursor slides across the geometry.
Our novel "ray-screen" technique, RS,  displays a screen cursor where the device ray intersects the screen, but does not use this ray for selection.
Instead, the ray from the eye through this cursor is used for selection.
This effectively affords selection of object projections via a usercontrolled cursor on the screen, similar to mouse pointing.
This is different from Argelaguet et al.
While RS is somewhat similar to zoomable interfaces, it also affords off-axis pointing and uses an implicit zoom control .
The final technique, RC,  is traditional ray casting: a device-centric ray that requires users to point the device directly at the 3D target position, which is a form of sliding cursor.
We hypothesize that selecting targets presented at the same depth yields constant performance.
Here ID, which depends on D and W, is unaffected by target depth as both parameters are scaled by the same factor due to perspective.
Perspective scaling of targets is depicted in Figure 2.
The same scaling applies to distances as well.
Consequently, we expect that screen-plane pointing techniques, such as mouse and ray-screen, are not affected by target depth, assuming a one-eyed cursor is used to avoid diplopia.
This does not apply to targets presented at different depths nor when head-tracking is used since both affect how targets project to the screen.
In a head-tracked system, ID would constantly change for screen-plane conditions as each head motion could affect the target size and distance.
In both cases, the D and W parameters scale by different factors, and ID will subsequently change from what was presented.
For small head movements or targets that are far away this change may be insignificant, though.
Here we describe the two user studies we performed to investigate the effect of cursors, devices, and target depth on performance.
The first study looks only at cursors and devices for motions between targets at equal depths.
The second study investigates a subset of the conditions on motions between targets at different depths.
The participant sat approximately 65 cm away from the display on a fixed chair.
Although the system supports head-tracking, this was disabled to avoid the potential confounds discussed above.
Instead, the user sat in a fixed chair.
The stereo LCD was synchronized via an RF hub with NVidia 3DVision Pro shutter glasses.
Five NaturalPoint Optitrack S250e cameras were used for 3D tracking.
The tracked remote pointing device was calibrated to 0.7 mm RMS.
The dependent variables were movement time , error rate , and throughput .
There were 10 trials recorded per target circle.
Each target circle represented a different index of difficulty, combinations of 3 distances and 2 sizes.
This yields six distinct IDs ranging from 2.5 to 4.5 bits, representing a typical range of pointing task difficulty.
Each participant completed a total of 1920 trials, for a total of 30720 recorded trials overall.
User Study 1 setup: the scene depicting a target circle at -20 cm depth.
Targets on the right side of the circle are at a depth of -20 cm, while targets on the right are presented at a depth of +8 cm relative to the screen.
Mouse acceleration was disabled, and gain was set to one level lower than default, for a constant gain of 0.75 .
Although low gain levels may increase clutching and impact performance, we rarely observed this in our study.
The 3D scene was a 30 cm deep box matching the display size, see Figure 3a.
We used textures and cylinders to facilitate spatial perception of the 3D scene.
Target spheres were placed on top of cylinders arranged in a circle.
The active target was highlighted in blue.
Targets highlighted red when intersected by the cursor.
Selection was indicated by pressing a button on the device.
The cursor was always displayed as a small 3D crosshair, either at the screen plane or in the 3D scene, depending on the current condition.
The center point of the 3D crosshair had to be inside the target sphere for successful selection; otherwise, the software recorded a miss.
In one-eyed mode, the cursor was displayed only to the viewer's dominant eye.
In ray mode, the 3D device ray was also displayed to improve feedback.
Stereo display was active in all conditions, regardless of cursor style.
Target size, distance, and depth were constant within target circles, but varied between circles.
Target depth was measured relative to the screen surface; negative depth indicates a target behind the screen.
Overall there was a significant main effect of technique on time.
Movement times are shown in Figure 4.
Both mouse techniques were significantly faster than the remote pointing ones.
Ray-screen was significantly faster than raycasting.
However, there are strong interaction effects with technique, as ray-casting was far worse with the one-eyed cursor.
Participants were first instructed on the task.
To partially compensate for their lack of familiarity with remote pointing, participants were asked to perform 10-20 practice trials with the ray techniques, until they felt comfortable.
Participants were instructed to select the blue highlighted target as quickly and accurately as possible.
The general experimental paradigm followed that of ISO 9241-9 .
Target order started with the "top-most" target  and always went across the circle.
There was a significant two-way interaction between cursor style and technique.
Ray-casting with the one-eyed cursor was significantly worse than all other conditions.
The other conditions all benefitted from the one-eyed cursor.
A significant three-way interaction effect between technique, cursor style, and target depth reveals that the screen-plane conditions  with the stereo cursor performed significantly worse at the -20 cm depth.
The stereo cursor degrades the correlation, especially for the MC and RS techniques, likely due to the more pronounced stereo conflicts on deeper targets.
The sliding cursor is affected much less, likely because cursor and target depths are the same most of the time.
Overall, this illustrates that the predictive capabilities of Fitts' law are unaffected by target depth for 3D pointing techniques that use 2DOF input and a 2D cursor visualization.
Error rate is the percentage of trials where the participant missed the target.
There was a significant main effect of technique on error rate, see Table 1 and Figure 5 for error rates.
Both mouse techniques had significantly lower error rates than both remote techniques, around 4%, consistent with 2D pointing experiments.
A significant interaction between technique and cursor style revealed that the oneeyed cursor increased error rates with the RC technique.
There was a significant main effect of technique on throughput, see Table 1 and Figure 6.
A Tukey-Kramer test revealed three groups: both mouse conditions were close to 4 bits per second and consistent with 2D pointing, followed by RS at around 3 bps, and finally RC at 2.5 bps.
Cursor style alone did not affect throughput.
However, there was a significant interaction effect between technique, cursor style, and target depth.
Throughput fell dramatically for targets at -20 cm depth with the stereo cursor for both the mouse and ray-screen conditions.
The one-eyed cursor hindered the RC technique, which was the worst condition overall, regardless of target depth.
Fitts' law can also be used as a predictive model, by regressing movement time on index of difficulty.
We performed this analysis for each technique for both the stereo and one-eyed cursor, as presented in Figure 7 and Figure 8.
The predictive quality of the model  is very high.
However, it is worth noting that the one-eyed cursor consistently improved R2 values.
Our results also quantify the benefits of the one-eyed cursor in a more robust experimental paradigm compared to the original .
The one-eyed cursor improved performance with mousebased techniques by reducing the impact of target depth in these conditions.
The depth effect is most noticeable in the screen-plane stereo cursor conditions.
In particular, throughput peaked at 0 cm depth  and fell for targets at different depths.
The +8 cm and -8 cm depths show similar throughput, but the -20 cm condition shows a dramatic degradation of performance.
This is likely due to diplopia.
The one-eyed cursor does not suffer from this problem, as it eliminates cursor depth cues altogether, and is thus immune to diplopia.
Movement time for the mouse slide technique using the stereo cursor was significantly faster for deeper targets compared to closer ones.
This seems to be related to participants sliding the cursor up the sides of the target cylinder instead of relying on it "popping" to the front.
We previously observed this suboptimal behavior when using sliding cursor techniques .
The one-eyed cursor eliminated this problem, and participants reported that they could not tell the difference between that condition and the one-eyed mouse  condition.
The movement times for these conditions are nearly identical independent of depth, and are not significantly different .
Our results reveal also the differences between pointing techniques.
The mouse techniques performed best, but the new ray-screen technique was competitive and significantly outperformed standard ray-casting.
We thus recommend this style of image plane technique over classical raycasting for VR systems and games alike.
This is similar to Argelaguet's results , but does not agree with Jota's work .
Our study used a stereo desktop VR system, while Jota used a large non-stereo display system.
This difference may account for the discrepancy and our results may thus not generalize to large displays.
The multiple interaction effects indicate that most techniques work best with a oneeyed cursor, while some require a stereo cursor.
Similarly, some techniques perform best for deeper targets, while others perform best for close targets.
Finally, the one-eyed mouse cursor afforded throughput similar to a standard 2D mouse cursor.
This was fairly consistent for both one-eyed mouse conditions.
The oneeyed ray-screen condition was also unaffected by target depth.
The movement times confirm that performance is unaffected by the perspective scaling of a scene with targets displayed at the same depth when using screen-plane techniques.
The following study expands our investigation by looking at pointing for targets at different depths.
The hardware setup was identical to that used in Study 1.
However, the software was modified such that target depth varied from target to target.
Each target circle was arranged such that every other target was at a different depth.
This ensured that every subsequent target selection required moving either from a deep target to a near target, or vice versa.
This can be seen in Figure 3b.
Correspondingly, data were later split into "up" and "down" motions to analyze each separately.
This design is one of the few options for accurately analyzing 3D movements with the ISO standard, which requires uninterrupted "circles" of targets.
The study used a 2x2x3x3 within-subjects design.
The first two independent variables were cursor style  and technique .
The remaining independent variables were all nine possible combinations of the three target depths .
The dependent variables were movement time , error rate , and throughput .
There were 12 trials recorded per target circle.
Each target circle represented a different index of difficulty, combinations of 3 distances and 2 sizes.
Target distances, more precisely the distances between cylinders, were 7, 15, and 19 cm apart, while target sizes were 0.9 or 1.5 cm in diameter.
This yielded six distinct IDs ranging from 2.5 to 4.5 bits, when computed according to the conventional formulation of Fitts' law .
Thus each participant completed a total of 2592 recorded trials, for a total of 31104 trials overall.
Approximately 8% of all trials were dropped as outliers.
Trials were considered outliers if their movement times were more than three standard deviations from the grand mean time.
After outlier removal, the data were normally distributed according to a Shapiro-Wilks test at the 5% level.
Results were analyzed using repeated measures ANOVA and Tukey-Kramer multiple comparisons at the 5% significance level .
We separated the data for each "round" of trials with different target depths into two sets: upwards and downwards movements and treated these two separately from then on, including the calculation of standard deviations.
Error rate is the average percentage of trials where participants missed the target for a given condition.
Statistical results for error results can be found in Table 2.
Error rates are summarized for each condition in Figure 10.
Every investigated condition had a significant main effect on error rate.
The error rate for the one-eyed mouse cursor is around 5.5%, slightly higher than in the previous study.
For the RS technique the average error rate is much higher than for the mouse, between 10% and 25%.
This is highlighted by the significant interaction effect between the technique, depth, and cursor conditions.
While the rayscreen condition is significantly worse than the mouse cursor, it is unsurprisingly far worse with a stereo cursor when pointing at deep targets.
This can be seen in Figure 10 for any target depth ending at a -20 cm target.
On the other hand, the mouse cursor error rate is essentially constant with the one-eyed cursor, regardless of the depth of the start or end target.
This is further evidence that this condition is unaffected by target depth.
Movement times are shown in Figure 9 and statistical values are shown in Table 2.
Technique had a significant main effect on movement time, while cursor style did not.
However, depth combination did have a significant effect, suggesting that it was a greater source of variability.
Significant interactions between technique and depth suggest that ray-screen is more strongly affected by increasing movement into the scene.
This is likely because these targets are perspective-scaled to appear smaller while target distance stays  constant, and the ray technique is subject to greater input device noise.
An interaction between depth and cursor style suggests that stereo cursor performance falls with deep targets, regardless if the target depths are the same  or not.
The slowest conditions overall were rayscreen with stereo cursor and motions involving -20 cm deep targets.
Movement out of the scene or in front of the screen had relatively little impact on performance, regardless of technique or cursor style, see Figure 8.
The fastest condition was the ray-screen/stereo cursor condition at the screen surface, i.e., when all targets were at 0 cm.
Initially, we computed throughput as in the previous study and also in our previous work , by using the 3D distances between the target and the closest point of the ray from the eye through the cursor position at the "click".
Yet, this artificially inflates throughput scores for movements with greater depth differences.
In Figure 11 this manifests as a "dip" in the middle, with inexplicably higher throughput scores for greater depth differences.
One can see a similar "dip" in some conditions in Figure 12 in previous work , especially for ray-casting.
To avoid this inflation, we argue that for pointing techniques that require effectively only 2D input, such as mouse cursor, ray-screen, and to a large degree ray-casting, performance should be evaluated in the screen plane.
This motivates the development of a new screen-projected throughput score, which first projects the pointing task onto the screen plane.
For this, we first project target and cursor positions to the screen plane, depending on target depth.
Effective width is then computed using the standard deviation of the 2D distances from the projected target to the projected cursor instead of 3D distances.
For simplicity, we ignore the  effect of perspective onto the shape of the target spheres.
Effective distance is computed as the 2D distance between the two projected clicks for each trial.
Throughput is then computed normally from these values.
The statistical results for screen-projected throughput are shown in Table 2 and mean throughput scores can be found in Figure 12.
Technique had a significant main effect on the new screenprojected throughput while cursor style did not.
The combination of start and end target depth did have a significant effect as well.
Overall, the mouse cursor affords significantly higher throughput than the ray-screen technique.
There is a significant interaction effect between cursor style and target depth combination.
Pointing at deeper targets is significantly worse with the stereo cursor than with the one-eyed cursor.
The end target depth of the current trial  seems to matter most here.
For example, throughput is fairly consistent for all -20 cm deep targets, irrespective of the depth of the start target depth .
Screen plane throughput was not affected by depth with either technique .
In the absence of diplopia this suggests that perspective scaling of targets due to depth does not affect pointing performance.
This makes sense and supports our argument that screen-projected throughput is an appropriate measure for such tasks.
Similar to how throughput behaves for changing distances and sizes in 2D and considering the properties of the pointing techniques when used with a one-eyed cursor, throughput should remain constant regardless of target depth.
Note that head position may affect this.
But we did not consider this in our studies, also because participants did not move their heads much during the experiment.
We hypothesized that selecting targets subject to the same perspective scaling should yield constant performance when using screen-plane techniques.
Hence, if all targets in a circle are at the same depth, then throughput should not change regardless of depth.
Figure 13 depicts the mean screen-projected throughput for each condition.
Figure 13 illustrates that performance for both techniques was mostly constant with the one-eyed cursor.
There is at most 5% variation in throughput for the mouse and only 1% for ray-screen.
While this does not conclusively prove that depth has no effect, it indicates that we cannot reject the null hypothesis - that there is no difference due to depth - and we conclude that this is currently the best explanation for our data.
Performance was much more variable with the stereo cursor for both pointing techniques.
Due to the stereo cue conflicts present in these cases, this is not unexpected.
In particular, the 20 cm depth condition was strongly affected by diplopia, as in our first user study.
We did not directly compare our models to others  for several reasons.
First, our task is essentially 2D, as it involves pointing at 2D projections of targets on the screen plane.
Murata's model  may be applicable, but we feel their addition of a free parameter is not well justified.
There several differences between our task and those used by Grossman  or Kopper .
In contrast to Grossman's work, we did not use a position-controlled 3D cursor and trivariate targets.
Consequently, Kopper's work is a better comparison point.
However, a primary objective of our work was a direct comparison of mouse and ray techniques.
Kopper's model focused exclusively on remote pointing, and thus likely does not apply to the mouse.
Hence, a direct comparison of models between devices is not feasible.
Additionally, they used neither stereo display nor varying target depths.
Thus their results are not subject to the stereo cue issues we observed.
Although we found somewhat lower correlations, our mouse model matches or exceeds their model's predictive capabilities for ray-casting for individual depth conditions.
We produced models for each condition using screenprojected target size and distances.
We do not incorporate any additional parameters, as screen-projected ID should be sufficient to explain the effect of perspective scaling.
Figure 14 presents the aggregate models for each pointing technique, using both one-eyed  and stereo  cursor styles.
The models fit slightly worse than one would expect of Fitts' law.
This may be due to the time required to re-adjust the eyes to different depths in presence of accommodationvergence conflicts .
Therefore, we performed separate regression analyses for each target depth combination.
These models are summarized in Table 3.
As expected , participants required more time to adjust for greater depth differences.
This is visible both as higher intercepts and worse predictive qualities, R2.
The models fit well for nearscreen conditions, where depth cue conflicts are weakest.
We did not include regression analyses for the stereo cursor conditions, as the effect of diplopia is too strong to produce reasonable models.
Moreover, we are unaware of a model to predict the additional time required to acquire a target in the presence of both diplopia and the aforementioned accommodation-vergence conflict.
We intend to investigate this further in future work.
Our results show that 3D user interface designers should be wary of using stereo cursors for selecting targets displayed away from the screen.
Interestingly, both studies seem to indicate that stereo cursors offer slightly better performance for targets near the display surface.
However, screen-based stereo cursors hurt performance when targets presented away from the screen.
This is likely due to diplopia and/or the accommodation-vergence conflict.
Our second study suggests that it is the intended target depth that matters most, rather than the actual depth difference.
This also suggests that developers of stereo 3D games should avoid screen-plane stereo cursors.
Unfortunately, they are currently common practice in games.
Overall, both studies indicate that the advantages of stereo cursors are minimal.
But, in general, their usage can significantly hinder user performance in 3D pointing.
Thus, we recommend that developers consider including a one-eyed cursor option.
This leaves the decision of whether to use a stereo cursor to the user, and permits them to avoid performance degradation in stereo display systems.
Finally, there is now interest in the development of stereo touchscreen interfaces .
Such interfaces suffer the same problems when interacting with stereo targets far from the screen.
Much like a stereo mouse cursor, a finger on a stereo touchscreen is also subject to diplopia!
Our work indicates how much of an impact this effect may have.
We conducted two studies to investigate stereo cursor properties and the effect of perspective on target selection.
Our results quantify the benefits of the one-eyed cursor in a more well-refined experimental paradigm compared to previous work  and suggest that the one-eyed cursor is not universally beneficial.
Our second study identified that varying target depth affects performance, but this can be  accounted for by using screen-plane projections of targets.
Overall, mouse-based techniques tended to perform best.
But our new "ray-screen" selection technique also outperforms traditional ray-casting!
Consequently, we suggest adaptation of this new technique for immersive 3D systems that use remote pointing devices.
To investigate the effect of perspective in isolation, we plan to reproduce our study using only mono display.
While our current "screen-projected" model fits the data well, is does not account for stereo conflicts.
Thus, we are also planning to incorporate a new term into the model to account for the cost of stereo cue conflicts during depth movements.
Argelaguet, F. and Andujar, C., Efficient 3D pointing selection in cluttered virtual environments, IEEE Computer Graphics and Applications, 29, 2009, 34-43.
Casiez, G. and Roussel, N., No more bricolage!
Fitts, P. M., The information capacity of the human motor system in controlling the amplitude of movement, Journal of Experimental Psychology, 47, 1954, 381391.
Grossman, T. and Balakrishnan, R., The design and evaluation of selection techniques for 3D volumetric displays, ACM UIST 2006, 3-12.
ISO 9241-9, Ergonomic requirements for office work with visual display terminals  - Part 9: Requirements for non-keyboard input devices.
International Organization for Standardization, 2000.
A., Carpendale, S., and Greenberg, S., A comparison of ray pointing techniques for very large displays, Graphics Interface 2010, 269-276.
