Selecting a menu item in a cascading pull-down menu is a frequent but time consuming and complex GUI task.
This paper describes an approach aimed to support the user during selection in cascading pull-down menus when using an indirect pointing device.
By enhancing such a cascading pulldown menu with "force fields", the cursor is attracted toward a certain direction, e.g.
The experiment described here shows that the force fields can decrease selection times, on average by 18%, when a mouse, a track point, or touch pad is used as input device.
The results also suggest that selection times in cascading pull-down menus can be modeled using a combination of Fitts' law and the steering law.
The proposed model proved to hold for all three devices, in both standard and in enhanced cascading pull-down menus, with correlations better than r 2 = 0.90.
Activity 1, 2 and 4 are well-studied as separate activities .
But studies focusing on the third activity are rare.
Fitts' law  has successfully been used in studies to compare and to model selection times in menu systems where the choices can be selected using a one-directional motion, as in pie-menus  or the selection of a first-level item in a cascading pull-down menu .
There have been very few, if any, model based studies of effecting choices in pull-down menus over more than one menu-level.
One reason for this seems to be the lack of a suitable model which helps to describe and to understand this activity.
When Accot and Zhai  discovered the steering law , an important first step in this direction was made.
The process of selecting a menu item to invoke the corresponding operation is a frequent task which can be cumbersome and time consuming for many users.
If the menu items are wide, a rather long horizontal motion is needed to navigate into a sub-menu.
During the horizontal motion, it is important that the cursor movement does not diverge too much in the vertical direction and leave the parent item, which will close the sub-menu.
Menu navigation becomes particularly difficult in the context of mobile computing where input devices with questionable ergonomic properties  are used.
Furthermore, the environment in which mobile computing takes place 
Then, an experiment conducted to verify the model and to assess the effects of the force fields is presented.
A cascading pull-down menu which is used to select operations is an integral part of many modern graphical computer applications.
This paper focuses on the activity of effecting the choice, i.e.
To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee.
Fitts' law is a robust model of human psychomotor performance widely used in human computer interaction to assess input devices and GUI designs.
Selection time of interface widgets can be modeled using Fitts' Law , which states that the selection time T is proportional to the logarithm of the distance D to the target divided by target width W .
As they introduced the steering law, Accot and Zhai hypothesized that the law could be used to model selection times in cascading pull-down menus.
If the menu selection task is viewed as a compound of two or more linear steering tasks , Accot and Zhai suggested that the time Tn needed to select the nth sub-menu in a hierarchical menu might be approximated by solving:
The logarithmic term in Equation 1 is commonly referred to as the Index of Difficulty , carrying the unit of bits, and is a measurement of how difficult the selection task is.
More difficult tasks having higher IDs.
The parameters a and b are determined empirically through linear regression.
In a typical Fitts' law task, e.g.
But if the trajectory is constrained, i.e.
Such a linear steering task can be described as the task of steering the cursor through a tunnel  without crossing the tunnel walls.
Accot and Zhai  found that the time needed to cover a distance d in a tunnel of width w, without crossing the tunnel walls, is given by the equation: d  w where a and b are determined empirically through linear regression.
Contrary to Fitts' law, the steering law is not logarithmic, and the IDs for linear steering tasks are only linked to the distance-width fraction.
Accot and Zhai conducted their initial experiments using a graphical tablet and its stylus.
Later studies  have shown that the law is also applicable to other input devices over a broad range of IDs.
Using the steering law in this sense, they assumed that horizontal steering and vertical steering are driven by the same law.
Accot and Zhai also pointed out, that, if driven by the same law, the coefficients a and b are likely to be different for horizontal steering and vertical steering.
2 While there are no limits regarding the direction of movement, there is a limit regarding the width of the path.
Accot and Zhai  report that the law loses its predictability power as the width exceeds an upper bound limit of 70 pixels on a 19-inch monitor with 1280x1024 pixels resolution.
This limitation certainly reduces the practicability of the law when modeling selection times in cascading pull-down menus, since the vertical motions, in most cases, are done through tunnels wider than 70 pixels.
If, instead, the vertical motions in a menu selection task are viewed as Fitts' law tasks, i.e., selection tasks with the accuracy constraint collinear to movement, the upper bound limit of the steering law is avoided.
The menu selection task depicted in Figure 2 can be seen as a compound of three vertical Fitts' law tasks and two horizontal steering tasks.
To model the total selection time, we need an IDT which describes the difficulty of the compound task.
The IDs for each separate vertical task are calculated according to Fitts' law, using the menu item height h and item position p to form the distance D. The accuracy constraint is item height h.
The difference might also be a device dependent phenomenon.
The pointing device used in the experiments was physically connected to a limited work space and did not allow the user to pick it up for repositioning.
This might also have influenced the selection times differently according to movement direction.
Schematic representation of a selection of the second third-level menu item in the second top-level menu .
The selection task is a compound of three vertical Fitts' law tasks  and two horizontal steering tasks .
The difficulty to select item B.p at position p in the first submenu depicted in Figure 2, is obtained through: log2 ph +1 h = log2  
It is important to note the difference between how the steering law is used in this model and how it has been used in previous GUI studies .
These studies have used the steering law to model cursor steering time of accurate and error free task trials.
In the reported experiments, the participants were encouraged to balance speed with accuracy, and all trials where the cursor crossed a tunnel wall were excluded from the data analysis.
In the case of menu selection, the accuracy of the horizontal steering tasks inside parent items is less important.
Crossing the walls will not result in an error, and the importance of movement accuracy increases at the end of the tunnel, when the cursor is about to enter the open sub-menu.
The IDs for each separate horizontal steering task are calculated according to the steering law.
Most techniques introduced to improve selection times in cascading pull-down menus have focused on the selection of first-level items.
Shorter selection times have been reached by either decreasing the distance to the menu items, or by increasing the size of the menu item.
A Split menu  adapts to user behavior and relocates the menu items according to usage.
Frequently selected items are moved into the top split of the menu and seldom selected items are pushed downward, i.e.
They also backed up menu items with impenetrable borders to prevent an overshot of the approaching cursor movement and concluded that "systems that maximize the percentage of menu items with borders will have a decided advantage over other menu systems".
However, in a pull-down menu, the number of candidate items for a border is limited.
Kobayashi and Igarashi  showed that a gesture based selection approach can reduce selection times of menu items in the second to fifth hierarchical level of a cascading pulldown menu.
Their menu system analyzed the direction of the cursor movements and distinguished between horizontal and vertical movements.
A horizontal cursor movement to the right in a parent item opened up a sub-menu which, like a pop-up menu, appeared directly at the cursor position.
3 If the user knows that the wanted menu item is located in a submenu, the vertical movement toward the parent-item which opens the sub-menu, will be directed toward the right hand side, i.e.
The angle of the diagonal determines the actual length of the horizontal steering task which follows.
The angle in turn, is dependent on the distance needed to be covered in order to reach the parent-item and the menu width.
During a long task in a wide menu, more focus can be put on reaching the right hand side of the parent item than in a narrow menu or during a short task.
The long horizontal movement trajectories normally required to steer into a sub-menu were shortened in this way.
A leftward motion closed an open sub-menu.
The reported selection times however include both search time and decision time, and the new gesture technique was reported to influence the menu navigation negatively for some users, making it less fluent.
The approach assessed in this paper explores the possibility to optimize selection in cascading pull-down menus by partially overruling the user's control of the screen cursor.
The main advantages of this approach is that no new interaction technique has to be learned, the visual structure or layout of the menus are unchanged and the approach is also applicable to pull-down menus with more than one menu-level.
Cascading pull-down menu with force fields.
Inside a field with a force point, the cursor is attracted toward the force point by warping the cursor along both the horizontal and the vertical axis.
In a parent item, the force field helps the user to steer the cursor within the menu item to the right by deflating vertical and leftward cursor movements and by reinforcing rightward movements.
In non-parent items, overlayed with directional fields, the cursor is only warped along the horizontal axis, toward the middle of the menu item, in one direction, either to the right or to the left.
The software which implements the force fields tracks the current position of the cursor by intercepting mouse motion events generated by the pointing device.
For each mouse motion event registered inside a force field, a new cursor position is calculated, and then the cursor is warped to the new position.
The warping algorithm is based on real vector arithmetic.
Screen coordinates for a new cursor position inside a field with a force point are calculated according to the following formula: n = a+s* a-p * where:
In the case of an indirect pointing device, the control-display  gain maps the distance the device has been moved to a corresponding motion of the screen cursor.
With a low CD gain setting, a large device movement moves the cursor a moderate distance.
With a higher C-D gain setting, a device movement of equal distance moves the cursor a greater distance, i.e.
A similar approach is to use a warping algorithm according to which small cursor displacements are made.
Whereas a change of the C-D gain setting only results in changes collinear with the movement, the warping method also allows for sideway displacements.
In this way, user cursor control can be overruled by software to both influence speed and direction of a cursor movement.
By modifying the visual motion of the cursor in this way, a virtual force can be produced which pushes the cursor toward a certain coordinate of the screen.
When the user sees how the cursor is attracted in one direction, the user also has the illusion as of to "feel" the attracting force when the input device is moved.
This virtual force effect is often referred to as pseudo-haptics, or simulated force-feedback.
Pseudo-haptic effects have been used to simulate various textures felt and differentiated by the users , and to simulate friction and stiffness .
The warping method has also been proposed to facilitate the user during different GUI tasks, e.g.
In our approach to improve navigation and selection in cascading pull-down menus, "force fields", within which the cursor is warped, are placed over menu items in order to help the user steering the cursor.
We used two types of fields, one associated with a force point, for parent items, and one without a force point, a directional field, for non-parent items.
The arrangement of the fields is depicted in Figure 3.
The resulting reals  are rounded to the closest integers, allowing a displacement of the cursor position in the integer based screen coordinate system.
The cursor displacements inside a directional field are calculated in a similar way, but should not result in any changes in the vertical direction, therefore the following formula is used: n = a + s * a - p *   Since the screen coordinates are counted from the top left corner, 1 is used for fields directed to the right and -1 for fields directed to the left .
Apparatus used in the experiment.
A: track point, B: touch pad, C: optical mouse, D: selection button for track point and touch pad.
Equation 10 and Equation 11 imply that in settings with high enough strength or in situations with a large enough cursor movement toward the force point , the force field can cause the cursor to overshoot beyond the force point .
Too high a strength also makes it impossible to leave the field in another direction than going through the force point .
Pilot experiments showed that a strength of 0.8 pixels for fields with the size of a menu item is adequate to avoid these problems.
The pilot experiments also showed that a form of escape functionality is needed, which helps the user if the cursor gets inside a field warping the cursor in an undesired direction.
Therefore, after that the software has registered six consecutive mouse motions away from the force point , the force is turned off to allow for an easy escape from the field.
The force is reactivated as soon as the cursor is moved toward the force point .
Upper left quarter of a screen dump showing the software used in the experiment .
All participants were experienced computer users, using a mouse on a daily basis.
The experience in using a track point and a touch pad varied.
No participant used a track point on a daily basis.
Seven were infrequent  users and eleven had never used a track point before the experiment.
Eleven participants were infrequent touch pad users and seven had no experience with a touch pad prior to the experiment.
In the experiment, six second-level and three third-level menu items had to be selected.
Since we were only interested in the time a subject needed to steer the cursor to the right item and select it, we needed to cancel out the portion of the selection time the participant would need to localize the target item.
To minimize this search time, we used the following trial procedure, which guided the participant to the target items by highlighting key items green.
A trial was started by a click in the start box located near the center of the screen .
One of the four top-level items in the menu bar was highlighted green.
After a click in the green top-level item, a first-level menu opened up.
One of the parent items in the first-level menu was marked by a green highlighting.
As the cursor entered the marked first-level item a second-level menu opened up after a slight delay.
The second-level menu contained one green menu item.
Either this item was the target item or it was a parent item, and opened up a third-level menu which contained the target item.
A click in the target item ended the timing, which started as the cursor exited the green top-level item.
By using this highlighting procedure to help the participants to localize the target item, the sampled times consisted of only movement times, excluding any search times.
If the wrong item was clicked, an error message was displayed, the trial was logged as an error trial, and the participant started a new trial from the start box.
The experiment was conducted on a notebook running Windows XP with a 15-inch TFT monitor.
A full-screen color mode with a 1024x768 resolution was used.
Three input devices were used: a track point, a touch pad and a conventional optical mouse .
All default system settings for the three devices were used.
Eighteen volunteers  participated in the experiment.
All participants had normal or corrected to normal sight.
Menu B Task 4 Task 5 a b c a  b  c  d e f 137 d  e  f 
Task difficulty, IDV : vertical direction, IDH : horizontal direction, IDT : Total task difficulty.
The behavior of the menus was the same as in most Windows applications, i.e.
The nine different tasks used in the experiment are depicted in Figure 6.
Four top-level items, M enu A, M enu B , M enu C and M enu D were used to open up different sub-menus.
Three tasks were started from M enu A, two tasks were started from M enu B , M enu C and M enu D respectively.
Each menu item was 19 pixels high.
The width of the menu items were chosen based on the measurement of 240 first-level menus from 30 different Windows applications  and ranged from 83 pixels to 227 pixels.
The IDs for each task, listed in Table 1, were calculated using Equation 6, 7 and 8.
Schematic representation of the nine tasks used in the experiment.
Four top-level menus were used, M enu A to D. Target items are pictured with dark background.
Item widths are given in pixels below each submenu.
Item height was always 19 pixels.
Each participant performed three test sessions, one with each device.
The order of testing of the three devices was counterbalanced between the 18 participants.
There was at least a one hour long break between each session.
If a device was new to a participant, the participant was instructed about its functionality and how to use it in the best way.
Before the test began, all participants were allowed to have as many practice trials as they needed to get used to the device and to gain sufficient practical skill.
A test session consisted of 180 trials which were divided into 5 blocks.
Within one block, all nine tasks were performed twice in the enhanced menu type and in the standard menu type.
After each block was completed, a recess screen was shown, and the subject could take a short break if desired.
A session lasted on average for 30 minutes.
The participants were not informed about the force fields and their functionality.
The force fields were invisible.
The total number of trials in the experiment can be computed as follows: 18 subjects x 3 devices x 5 blocks x 9 tasks x 2 menu types x 2 trials per task/menu type combination = 9720 trials The total selection time for each trial was measured , timing started as the cursor exited the top-level item and ended with a click in the target item.
First, the results regarding force enhancement vs. standard menus are analysed, then, the modeling aspects are analysed.
A total of 9261 trials were used for the analysis.
Excluded were 459  invalid trials .
An ANOVA with number of logged error trials as dependent variable and subject, device, menu type , task  and block as independent variables, showed a significant main effect for subject , and a significant devicexsubject interaction .
This indicated that there were differences between the devices, as well as between the subjects.
Most errors were made with the touch pad, 180 logged errors.
135 errors were made with the track point, and 144 errors with the mouse.
No further analysis concerning the error rate was made.
A: Comparison of the selection times for all device-experience groups for both menu types for each task.
B: Difference between standard menus and force enhanced menus, for all device-experience groups in all tasks in percent.
Only two of the participants clicked, in a somewhat systematical way , on the parent items to instantly open up the sub-menus.
Both participants were novice track point users and novice touch pad users and the strategy was only applied when using the mouse.
A separate analysis of the selection times for these two participants did not reveal any significant differences between trials with clicks in parent items and trials without clicks.
All five ANOVAs showed significant menu typex task number interactions, indicating that the force fields influenced the selection times differently, depending on task .
Except for the touch pad groups , the force enhanced menus were faster than the standard menus in all tasks.
In T ask 4, there were no differences between the menu types in group ITO and in group NTO.
Five separate ANOVAs, one for each group, with selection time as dependent variable and block number, menu type , task and subject as independent variables, showed significant main effects of block number, indicating learning effects.
Since there were no significant blockxmenu type interactions, we conclude that the learning effect relates to the device and the menu selection exercise, not to the two menu types.
Therefore, the following analyses are based on data from these blocks only.
The force enhanced menus were faster than standard menus in all device-experience groups .
The novice touch pad users profited the most from the force fields, on average 1059 ms per menu selection , followed by the novice track point users .
Infrequent track point users profited the least.
NTO the greatest difference was in T ask 2.
A closer inspection of the cursor trajectories needed to complete T ask 1 and T ask 2 explains why the force fields were more helpful in these tasks than in the other tasks.
If, during the sequence of device manipulations required to steer the cursor to the right into the second sub-menu, just a minor incorrect device manipulation toward the top of the screen is made, the cursor leaves the sub-menu and enters the menu bar.
As soon as the cursor enters a top-level item inside the menu bar, the top-level item becomes active, and a new first-level menu will instantly open up.
In order to reach the target item and to complete the task, the cursor has to be moved back to the left, inside the menu bar to re-open M enu A for a new attempt.
Therefore, one inaccurate device manipulation can result in a substantial loss of time.
However, with the force fields, inaccurate device manipulations toward the menu bar are weakened by the warping algorithm, which replaces the cursor inside the menu item, which in turn makes it easier to reach the sub-menu to the right.
From the fact that T ask 1 and T ask 2 caused considerable problems, the implications for menu design are clear: in a wide sub-menu, the placement of a parent item adjacent to the menu bar should be avoided in order to provide fast and easy menu navigation.
If T ask 1 and T ask 2 are excluded from the selection time comparison, the mean differences between the menu types are reduced to 13.5%, 9.4%, 10.6%, 5.9% and 12.6% for the AM, ITR, NTR, ITO and NTO groups, respectively.
Further analyses of the benefit of the force fields, based on the previously suggested model of selection times in cascading pull-down menus, are made in next section.
Linear regression equations for the five devicesexperience groups.
It is interesting that the force condition, in all except from the AM group, fit the model better than the standard condition.
One possible explanation for this is the level of skill with which the pointing devices were operated.
In all but the AM group, the practical skill was low to intermediate.
The inaccuracy and irresoluteness with which infrequent and novice users operate pointing devices might be more sensitive to the influence of the force fields than the precise and distinct device manipulations made by highly skilled users.
Since the paths accounted for in the model are assumed to be straight, the paths supported by the force fields better match the model paths, which results in a better model fit.
Future deeper analyses of the exact cursor paths taken during selection, and of what the vertical and horizontal movements actually look like will help to further refine the model.
It is questionable whether or not the horizontal movements on average starts from the half of the parent items, i.e.
To investigate if the suggested model can be used to predict selection times in cascading pull-down menus, ten separate linear regression analyses were made.
One for each deviceexperience/menu type combination, using the previously calculated task difficulty, IDT , as independent variable.
T ask 1 and T ask 2 were not included in the regression analyses since the model does not take the above discussed problem with the menu bar into account when the task difficulty is calculated.
In each of the ten regressions, the data fit the model equation  with an r 2 value of 0.904 or above.
This shows that the proposed model can be used to model selection times in cascading pull-down menus for the tested devices and user groups and that the menu selection task indeed can be described as a compound of vertical and horizontal sub-tasks.
Also selection times in force enhanced menus correlated highly with IDT s calculated according to the model.
The regression equations for all device-experience group/menu type combinations are listed in Table 3.
The results show too great differences between the five device-experience groups as to draw any general conclusions regarding the relationship between task difficulty and the benefit of the force fields.
Four vague indications can however be identified which point to a possible relationship between task difficulty and force benefit: 1.
In all device-experience groups, the task with the highest IDT  profited the most from the force fields, which can be seen in Figure 7 and in the regression plots for each group, Figure 8.
If the relative difference in selection times between the two menu types in each task is computed over all groups, some regularities can be seen.
The two tasks with the hig-
In the experiment the participants were not informed about the force fields, and the fields were not visually presented, nevertheless the users were assisted by them.
When debriefed after the last test session, only three of the 18 participants stated that they had noticed a change in the behavior of the pointing device.
All three participants had noticed the changed behavior during the mouse session.
Two could not specify what it was and had not seen any behavioral patterns.
One described the change as a variation of cursor speed.
Considering the presented experimental results and the subjective impressions given, it seems reasonable to assume that the force fields could be even more helpful if the user is aware of them and knows about their functionality, and thus being able to actively take advantage of them.
Regression plots for all device-experience groups, for both menu types.
But, as can be seen in Table 4, there are two mismatches in the benefit ranking.
At Rank 3 comes T ask 3 with the fourth highest IDT , instead of T ask 4.
In all device-experience groups, but the ITO group, the two regression lines intersect at a point between 5.34 and 5.85 IDT .
The last two regularities concerning a relationship between task difficulty and force benefit are particularly interesting since they imply that there is a low lower bound of task difficulty, beyond which, the force fields impede during menu navigation.
This paper has focused on how selection times in cascading pull-down menus can be modeled and how the selection times can be shortened by using a simple cursor warping algorithm to implement "force fields", which helps the user steering the cursor during the selection task.
The force fields and the proposed model of selection times, based on a combination of Fitts' law and the steering law, has been evaluated through a controlled user experiment, in which the users selected menu items in standard menus and in menus enhanced with force fields.
Even though the users in the experiment did not know about the force fields, they benefited to a great extent from the fields, selections in force enhanced menus were on average 18% faster than selections in standard menus.
The results from the experiment also showed that a menu selection task can indeed be seen as a compound of several separate vertical and horizontal tasks, as accounted for in the proposed model.
By calculating a separate index of difficulty for each one of the vertical and horizontal tasks, a total index of difficulty for the compound task can be determined.
This index of difficulty showed to be a robust predictor of the time it takes for a user to complete the modeled menu selection task, i.e., a linear relationship was found.
Moreover, the model was shown to hold for all three devices  used in the experiment.
Beside these unambiguous results, the analyses also showed other less clear results, e.g., the relationship between the in-
During selections in tasks with high index of difficulty, the users tended to profit more from the fields than during selections in tasks with a low index of difficulty.
However, no general and for all tested devices applicable regularity was found.
Further experiments are required to sort out this ambiguity.
Similar experiments will also be helpful in order to optimize the current model and to gain a deeper understanding of user behavior during selection in cascading pull-down menus.
Computer Graphics: Principles and Practice.
Jellinek, Herbert D. and Card, Stuart K. Powermice and User Performance.
Kobayashi, M. and Igarashi, T. Considering the Direction of Cursor Movements for Efficient Traversal of Cascading Menus.
L ecuyer, A., Burkhardt, J-M. and Etienne, L. Feeling Bumps and Holes without a Haptic Interface: the Perception of Pseudo-Haptic Textures.
L ecuyer, A., Coquillart, S., Kheddar, A., Richard, P., and Coiffet, P. Pseudo-Haptic Feedback: Can Isometric Input Devices Simulate Force Feedback?
MacKenzie, S. I. Fitts' Law as a Research and Design Tool in Human-Computer Interaction.
MacKenzie, S. I. and Riddersma, S. Effects of Output Display and Control-Display Gain on Human Performance in Interactive Systems.
19. van Mensvoort, K. What You See Is What You Feel: exploiting the dominance of the visual over the haptic domain to simulate force-feedback with cursor displacements.
Norman, K. The Psychology of Menu Selection: Designing Cognitive Control at the Human/Computer Interface.
Sears, A. and Shneiderman, B.
Split menus: effectively using selection frequency to organize menus.
Tr ankle, U. and Deutschmann, D. Factors Influencing Speed and Precision of Cursor Positioning Using a Mouse.
Walker, N., Smelcer, J.B. and Nilsen, E. Optimizing Speed and Accuracy of Menu Selection: a Comparison of Selection Times from Walking and Pull-Down Menus.
