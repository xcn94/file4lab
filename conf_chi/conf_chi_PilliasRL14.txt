In this paper, we present a collaborative game designed for Sifteo Cubes, a new tangible interface for multiplayer games.
We discuss how this game exploits the platform's interface to transfer some of the game mechanics into the non-digital world, and how this approach affects both the player's experience and the design process.
We present the technical limitations encountered during game development and analyze video recordings of play sessions with regard to the play strategies developed by the players.
Then, we identify two properties that this game shares with many other games on tangible platforms and discuss how these properties influence both the game design process and the player experience.
We advocate that these properties provide players with more freedom and relatedness, while helping to create an easy-to-learn and customizable gameplay, despite their own design limitations.
Reality-Based Interaction is a concept that describes a current trend in HCI research and commercial product design, where user interfaces "attempt to make computer interactions more like interacting with the real, non-digital world" .
In the domain of video games, this trend is epitomized by the emergence of products such as the Wii remote or Kinect.
These interfaces invite the player to interact with the gaming system by using her whole body in a way that usually requires her to reproduce real-world movements.
They also allow for an increased expressiveness of the players' gestures, letting other players and spectators observe how they act, and build a rich social experience from the game.
With these cubes, players can actually manipulate physical objects instead of relying on manipulation metaphors.
Video games have different goals than traditional user interfaces and have thus been described using different concepts: they take place in a specific negotiated state of mind known as the magic circle, and provide players with, among other things, a sense of competency, autonomy and relatedness .
We show, from the analysis of players behaviors, how Sifteo Cubes modify the game design process as well as the plasticity of the magic circle and the motivational aspect of games.
We first present Fat and Furious, a game designed for this platform by students as part of a three month post-graduate coursework project.
We then present an analysis of players' behavior observed during recorded play sessions.
Finally, we discuss how the Sifteo Cubes are different from other gaming interfaces, and how it impacts both the game design process and the player experience.
Fat and Furious  is a runner-type collaborative multiplayer game.
The main character is a fat  hamster, who runs along the road at an ever-increasing speed, randomly choosing its direction at each crossroads, never turning back.
Two of the elements are bonuses that increase the score and momentarily stop the hamster when it reaches them, while twelve elements are obstacles that must be avoided.
The game ends when the hamster attempts to leave the cube with no connected path or when the hamster runs into an obstacle.
The main goal is to beat the highest score by making the hamster run as long as possible.
Each cube traversed gives two points and players can make the hamster go faster for a short time by touching it, also increasing the score.
Every time the hamster leaves a cube, an element may or may not appear on that cube.
Players can use alchemy to get rid of obstacles: connecting two cubes that contain elements can destroy or transform them according to one of 28 possible combinations.
For instance, combining water and fire destroys both obstacles, but combining tree and fire only transforms the tree into fire.
Each of these operations gives a number of points that increases according to the rarity of the elements involved.
Software: Lag and graphical glitches were observed.
Glitches became more frequent as the number of cubes increased, preventing the game from being played with seven or more cubes.
In addition, this kind of problem never appeared in the emulator, making them very hard to debug.
The platform's graphical capabilities are surprisingly low: there is no alpha blending, very few sprites can be displayed simultaneously on a cube, and the foreground layer can only cover half of the screen.
Developers maintained the game speed at the cost of a lower animation rate.
The game was designed to put the players in a feverish state of excitement - almost frenetic at times.
In order to provoke this excitement, the game was intended to be played in short sessions with easily understandable interactions and a strong time pressure.
Also, a game with n players should be played with 2n + 1 cubes.
In this way, players cannot hold all the cubes in their hands and need to pay attention both to the cubes they manipulate and the cubes left on the table.
The designers also wanted to promote collaboration.
They designed two parallel and complementary tasks  so that each player can concentrate on a specific task, but still needs to collaborate with other players to reach the common goal.
The scoring system and difficulty were also tuned so that experienced solo players could not easily perform better than a team of average players.
Playing FnF requires good reflexes, as keeping the hamster running requires quickly placing a free cube in the short time between the moment the hamster reaches a crossroad and the moment it leaves the cube.
FnF is, however, a game where the discovery of new strategies is an important aspect of the gameplay.
Indeed, as the speed increases, the player must think about the best way to arrange cubes on the table, about which cube she should give to another player, which hand she should use, and so forth.
This search for strategies is where the real game is, and every player finds herself starting to think about it, even during the first play session.
As we will see in the next session, players spontaneously develop strategies as answers to these questions.
Most of these strategies concern entities that seem to have only a minor role in the game's rules: other players, positions of the cubes in space, and how the cubes are manipulated between basic interactions.
A large part of the game - if not the largest - lies therefore in manipulations that are not recognized by the cubes, and thus not recognized by the game's software.
This suggests that in FnF, the cubes should not be considered simply as a gaming interface, but rather as a component of the game system.
During game development and play-testing, developers faced some unexpected technical issues: Hardware: Collisions between cubes can momentarily disconnect a cube's battery.
The cube will then reboot and remain offline until the end of the current game, destroying the game experience.
The screen's backlight is mono-directional.
If not viewed from the correct angle, a cube's screen may appear to be off.
In an attempt to resolve this issue, developers chose to create graphical assets that appear upside down when the cube is misoriented, but this did not prove to be effective.
We recorded video of 38 players discovering the game and the platform in realistic settings, in teams of two, for more than 5 hours of total play time.
From this video, we extracted the players' strategies that we list below, grouped by generic concerns.
These concerns apply to other games and platforms, so we first describe what strategies are supported by the Sifteo Cubes, then how they were used in FnF.
Organizing routine: When a player has to complete similar tasks on a regular basis, she can adapt the way she plays in order to complete these tasks more efficiently.
For that purpose, the Sifteo Cubes offer two powerful mechanisms that can be used in combination: the spatial organization of cubes and the planning of cube manipulation sequences.
The latter can take many forms, as cubes can be grabbed individually or collectively, pushed, slid on a table surface, passed in the air, thrown, rotated, stacked, etc.
In FnF, completing the hamster's path with a free cube was a recurrent task that players accomplished by spatially organizing the cubes in one of two ways, either managing a pool of free cubes in a specific area, or letting the cubes form a serpentlike pattern as the hamster goes through them and pick the one at the end.
Alternatively, they systematically used the cube that the hamster just left  or the free cube that was the closest to the one holding the hamster.
The most efficient strategy we observed was to keep only two cubes in hand, including the cube the hamster was in, and rotate the latter so that the hamster faces the other cube.
Time pressure: Players can adopt various strategies to deal with time pressure, each involving different levels of readiness and risk-taking.
With Sifteo Cubes, most basic interactions are recognized after they have been performed by a player, so readiness can manifest itself in various levels of preparation of the actions, such as grouping the cubes that will be used, getting the hand close to the one that will be moved, picking a cube that will be placed somewhere, etc.
When an event's many possible outcomes call for different actions, the latter strategy is a gamble, while the others allow to take more or less risk.
It is sometimes possible, however, to deal with all the possible outcomes: in FnF, some players tried to secure the hamster path by connecting free cubes to all the sides where the hamster could leave the cube it was in.
All other strategies were also observed.
Collaboration between players is a rich source of strategy building.
Of course, they can play opportunistically, performing an action that seems appropriate when they see the opportunity to do it.
But they can also take turns, divide the space into areas of control, assign distinct objectives or subtasks to players, etc.
With Sifteo cubes, the basic interactions only involve one or two cubes and the system cannot detect who performed them, giving few constraints to the players in the choice of a collaboration strategy.
Unexpected behaviors: As we have shown above, our players developed numerous gameplay strategies, some of which were hard to predict when designing the game.
First, some players did not keep the cube in hand while tilting it, but simply left it on the table, lying on its side.
This behavior is very efficient, and only a few players discovered it.
But as soon as one player did, every other player started using it too.
Designers did not anticipate this way of playing either, but as this method of play is impractical, players did not keep using it.
Players also tried to interact with cubes in ways that are natural but that the system was unable to recognize: they literally tried to blow out the flames with their breath, or they poured water on the fire by tilting a water cube above a fire cube.
They also tried to influence the hamster's decision by tilting the cube, by touching a specific area of the screen, or by connecting a cube.
Some players even kept doing this after having been told it was useless.
Video game systems relying on Reality-Based Interaction principles can be classified according to various criteria, but two of them are of special importance to this discussion: Interaction style: Connecting and touching Sifteo cubes are two basic interactions that can only be recognized by the system after they have been performed, and independently of the way it was done.
Other video game systems usually only provide these kind of interactions for buttons or touch events.
We call this interaction style action validation.
Shaking a cube is, however, an interaction that is recognized as a gesture, after it is done, but only allowing some variability in the way it is performed.
Other video game systems often allow the player to perform many more gestures, with varying spatial amplitude and duration.
Finally, tilting a cube is an operation that allows the continuous tracking of a cube's tilt angle, which can then be directly mapped to some game variable.
These three interaction styles thus differ essentially in which part of the expected actions are actually sensed by the system .
Interaction instrument: Tangible video game systems such as the Sifteo Cubes or tabletop tangible interfaces rely on the manipulation of several physical objects for their input, with the possibility to have one physical object associated to an object of the game.
On the other hand, controllers such as a Wii remote  are supposed to stay in the player's hand during the whole play session, but will use different mappings between physical actions and game actions at different times.
Finally, some systems such as the Kinect rely on continuous body tracking.
Of course, the interaction styles and instruments used during a game depend not only on the system, but also on a specific game design.
This class contains FnF and other games for Sifteo Cubes as well as most tangible games on multi-touch tabletop systems and a few games such as B.U.T.T.O.N.
We will analyze how AV+PO games differ from other video-games in terms of players' perceived freedom of action and relatedness, and the game's learnability and customization opportunities.
Freedom: As we showed in a previous section, the manipulation of physical objects with action validation allowed FnF players to devise numerous strategies.
Because the cubes are real objects, players do not rely on a set of pre-defined actions: they can use any action available in the real world.
Because actions are only validated after they have been performed, players have a total freedom in the way to perform them.
With so many opportunities, players are provided with a lot of freedom in strategy planning and action selection, leading to a greater feeling of autonomy, and thus to a better gaming experience .
The game designers can use this freedom to make an AV+PO game richer than it appears at first sight, as in FnF.
But they can also find it harder to tune the game's difficulty when the players get more freedom .
First, the designer cannot make the system enforce rules on player's actions the system is not aware of.
Second, the more freedom the player has, the higher the probability that this player may think about something the designer did not, potentially degrading the gaming experience.
Relatedness is one of the motivational pulls of video games , and AV+PO games support a high level of social interaction.
Indeed, players communicate and interact more easily when they are in the same place, manipulating a common set of physical objects.
For instance, body language can enrich the communication between players, e.g.
Of course, playing like this is easier when the game relies on action validation, as the gestures used to communicate with other players will not be misinterpreted by the gaming system as a game command.
Moreover, a new player may show up and take an object from the table and use it to accomplish one of the game's goals.
It is therefore easier to achieve multiplayer gameplay in AV+PO games, e.g.
Learnability: One of the assumed strengths of tangible user interfaces is that the manipulation of physical objects does not need to be explained.
Indeed, FnF players understood immediately how to take a cube, and how to shake or tilt it.
In addition, action validation sets fewer constraints on the movements to be performed than gestures or continuous tracking, and it should therefore be easier to learn how to do these actions.
Thus, as soon as the player has understood the simple goals of the game, she is fully functional as a player and can begin playing strategically and cooperatively.
On the down side, a player might have trouble discovering what action should be performed in a given context, whatever her ability to perform that action.
For example, with Sifteo cubes, instructions can only be displayed on the cubes, and not around.
It is therefore harder to display an in-game tutorial than with classical video games or tangible tabletop games .
Customization: AV+PO games allow players to easily customize the gameplay.
Indeed, a game needs a certain form of agreement between players, and can always be modified as long as this modification is negotiated .
For instance, players may decide to set a specific meta-rule, like using only one hand or having a player responsible for making the game harder by shuffling the objects.
Sifteo cubes and other tangible platforms allow such modification as it is very easy to modify the real world part of the game, while its digital component cannot be modified by players.
In addition, it is easier to devise a meta-rule if the players' actions are only validated by the system, because the meta-rule will not ask for movements that conflict with gesture recognition or continuous tracking.
In a near future, we will be able to investigate players' behavior with other multiplayer gameplays, as more games will be available for the Sifteo Cubes and other tangible or mixedreality platforms.
