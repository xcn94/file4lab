The labeling problem is not new.
It has been extensively studied for cartographic purposes  where printing or report generation is the main purpose of the application.
But very few solutions have been proposed to automate the labeling process of interactive applications.
In this paper we propose a taxonomy of labeling methods, then describe our excentric labeling technique in detail, discuss its benefits and limitations, and illustrate how it can benefit a variety of applications.
The widespread use of information visualization is hampered by the lack of effective labeling techniques.
A taxonomy of labeling methods is proposed.
We then describe "excentric labeling", a new dynamic technique to label a neighborhood of objects located around the cursor.
This technique does not intrude into the existing interaction, it is not computationally intensive, and was easily applied to several visualization applications.
A pilot study indicates a strong speed benefit for tasks that involve the rapid exploration of large numbers of objects.
A major limiting factor to the widespread use of information visualization is the difficulty of labeling information abundant displays.
Information visualization uses the powerful human visual abilities to extract meaning from graphical information .
Color, size, shape position or orientation are mapped to data attributes.
This visualization helps users find trends, and spot exceptions or relationships between elements on the display.
Experimental studies have been able to show significant task completion time reduction and recall rate improvements when using graphical displays instead of tabular text displays 
However textual information in the form of labels remains critical in identifying elements of the display.
Unfortunately, information visualization systems often lack adequate labeling strategies.
Often labels are entirely missing and users have to peck at graphical objects one at a time.
Sometimes labels overlap each other to the point of obscuring the data and being barely usable; or they are spread out in such a way that the relation between objects and labels becomes ambiguous.
The problem becomes acute when the data density increases and the labels are very long.
To address this problem we propose "excentric labeling" as a new dynamic technique to label a neighborhood of objects .
Figure 1: Excentric labeling provides labels for a neighborhood of objects.
The focus of the labeling is centered on the cursor position.
Labels are updated smoothly as the cursor moves over the display, allowing hundreds of labels to be reviewed in a few seconds.
The color of the label border matches the object color.
For data visualization, a similar process of aggregation can be applied to achieve a reasonable result with static techniques , but the logic of aggregation and sampling is mainly application dependent.
Label sampling has been used occasionally .
The most common techniques remain the "No Label" technique, and the "Rapid Label-all" technique which leads to multiple overlaps and data occlusion .
Also common is the "Label-What-You-Can" technique in which only labels that fit are displayed; other labels that would overlap or occlude data objects are not shown .
The labeling challenge can be stated as follows: given a set of graphical objects, find a layout to position all names so that each name  is: 1.
Non-ambiguously related to its graphical object.
Does not hide any other pertinent information.
Completeness  is desired but not always possible.
Labeling techniques can be classified into two categories: static and dynamic.
The goal of static labeling is to visually associate labels with a maximum  graphic objects in the best possible manner.
But good static technique are usually associated with delays not suitable for interactive exploration.
Dynamic labeling began with interactive computer graphics and visualization.
Two attributes account for the "dynamic" adjective: the set of objects to be labeled can change dynamically, and the number and layout of displayed labels can also change in real time, according to user actions.
Dynamic labeling techniques are more varied .
The classic infotip or "cursor sensitive balloon label" consists at showing the label of an objet right next to the object when the cursor passes over it.
The label can also be shown on a fixed side window, which is appropriate when labels are very long and structured.
In the "All or Nothing" technique, labels appear when the number of objects on the screen falls below a fixed limit .
This is acceptable when the data can be easily and meaningfully filtered to such a small subset, which is not always the case.
Another strategy is to require zooming until enough space is available to reveal the labels, which requires extensive navigation to see all labels.
This technique can be combined elegantly with the static aggregation technique to progressively reveal more and more details - and refined labels - as the zoom ratio increases.
The overview and detail view combination is an alternative zooming solution .
The detail view can also be deformed to spread objects until all labels fit .
Those last two techniques require either a tool selection or dedicated screen space.
Chalmers et al., proposed dynamic sampling where only one to three labels are displayed, depending on the user's activity.
Cleveland describes temporal brushing: labels appear as the cursor passes over the objects , but those labels remain on the screen while new labels are displayed, possibly overlapping older ones.
Static techniques have been used for a long time in cartography.
Cartography also needs to deal with path labeling and zone labeling, which is less widespread in visualization.
We do not address those two issues in this article.
But the same algorithms can be used for both cartography and general visualization.
Since static techniques have to find "the" best labeling possible, the set of objects has to be carefully chosen to avoid a too high density in objects or labels.
In cartography, this is achieved by aggregating some information and forgetting  others .
This technique could be nicknamed the "label-at-all-cost" technique since one of the constraints is to label all objects of the display.
Requires series of precise selection to explore space , cannot reach overlapped objects.
Constant eye movement can be a problem, but avoids occlusion of other objects.
More labels visible at a time, but overlapping problem.
May require extensive navigation to see many labels  May require several filtering to see labels 
Excentric labeling is a dynamic technique of neighborhood labeling for data visualization .
When the cursor stays more than one second over an area where objects are available, all labels in the neighborhood of the cursor are shown without overlap, and aligned to facilitate rapid reading.
A circle centered on the position of the cursor defines the neighborhood or focus region.
A line connects each label to the corresponding object.
The style of the lines matches the object attributes .
The text of the label always appears in black on a white background for better readability.
Once the excentric labels are displayed, users can move the cursor around the window and the excentric labels are updated dynamically.
Excentric labeling stops either when an interaction is started  or the user moves the cursor quickly to leave the focus region.
This labeling technique does not require the use of special interface tool.
Labels are readable , they are non-ambiguously related to their graphical objects and they don't hide any information inside the user's focus region.
Focus Overview and detail Effective when objects are separated enough in the detail + context view without view to allow labels to fit 
Overview and detail with deformation/ transformation  Global deformation of space  Sampling Dynamic sampling 
NEW Excentric labeling Deformation might allow enough room for labels to fit.
May require tool or mode to be selected.
Requires intensive navigation and dexterity to rapidly deform the space and reveal all labels .
To compute the layout of labels, we experimented with several variants of the following algorithm: 1.
Extract each label and position for interesting graphic objects in the focus region.
Assign the labels to either a right or left set.
Stack the left and right labels according to their order.
Minimize the vertical distance of each set from the computed initial position.
Add lines to connect the labels to their related graphic object.
So far, we have used three main variations of this algorithm: non-crossing lines labeling, vertically coherent labeling and horizontally coherent labeling .
Each uses a different method to compute the initial position, the ordering, to assign the labels to the stacks and to join the labels to their related graphic objects.
The non-crossing lines labeling layout  does not maintain the vertical or horizontal ordering of labels, but avoids line crossings.
This technique facilitates the task of tracing the label back to the corresponding object.
It can be used in cartography-like applications where ordering is unimportant.
The initial position on the circle  is computed with a radial projecting onto the circumference of the focus circle.
It is always possible to join the object to the circumference without crossing another radial spoke .
Then, we order spokes in counter-clockwise order starting at the top .
The left set is filled with labels from the top to the bottom and the right set is filled with the rest.
Labels are left justified and regularly spaced vertically.
We maintain a constant margin between the left and right label blocks and the focus circle to draw the connecting lines.
For the left part, three lines are used to connect objects to their label: from the object to the position on the circumference, then to the left margin, and to the right side of the label box.
This third segment is kept as small as possible for compactness, therefore barely visible in Figure 4, except for the bottom-left label.
For the right labels, only two lines are used from the object to the initial position to the left of the label.
The margins contain the lines between the circumference and the labels.
To deal with window boundaries the following rules are applied.
If some labels are cut on the left stack, then move them to the right stack 
When labels become hidden on the upper part of the stack , move them down .
Combining those rules takes care of the corners of the window .
When the vertical ordering of graphic objects has an important meaning we use a variant algorithm that does not avoid line crossing but maintains the relative vertical order of labels.
This will be appropriate for most data visualization, for example, in the starfield application FilmFinder , films can be sorted by attributes like popularity or length, therefore labels should probably be ordered by the same attribute.
Instead of computing the initial position in step 2 by projecting the labels radially to the circumference, we start at the actual Y position of the object.
The rest of the algorithm is exactly the same.
Figure 1 and 2 shows examples using the vertically coherent algorithm, which is probably the best default algorithm.
Crossing can occur but we found that moving slightly the cursor position animates the label connecting lines and helps find the correspondence between objets and their labels.
Excentric labeling fills a gap in information visualization techniques by allowing the exploration of hundreds of labels in dense visualization screens in a matter of seconds.
Many labels can be shown at once 
They are quite readable and can be ordered in a meaningful way.
Links between objects and labels remain apparent.
The technique is simple and computationally inexpensive enough to allow for smooth exploration while labels are continuously updated.
Of course these algorithms don't solve all the problems that may occur when labeling.
Three important challenges remain, and we propose partial solutions for them:
We estimate that about 20 excentric labels can reasonably be displayed at a time.
When more objects fall in the focus region, the screen becomes filled by labels and there is often no way to avoid that some labels fall outside the window.
We implemented two "fallback" strategies:  showing the number of items in the focus region, and  showing a sample of those labels in addition to the number of objects .
The sample could be chosen randomly or by using the closest objects to the focus point.
Although not entirely satisfactory, this method is a major improvement over the usual method of showing no labels at all, or a pile of overlapping labels.
Labels can be so long that they just don't fit on either side of the focus point.
There is no generic way to deal with this problem but truncation is likely to be the most useful method.
Depending on the application, labels may be truncated on the right, or on the left , or they may be truncated following special algorithms.
Some applications may provide a long and a short label to use as a substitute when needed .
Using smaller fonts for long labels might help in some cases.
If long lines occur infrequently, breaking long labels in multiple lines is also possible.
We have implemented excentric labels within three different applications: a java version of starfield display/dynamic query visualization  , a Java implementation of LifeLines , and a map applet to be used for searching people in a building.
The addition of excentric labeling to the first two applications was done in a few hours.
The last program was built from scratch as an evaluation tool.
One of the drawbacks of the dymamic aspect of excentric labeling is that the placement of an object's label will vary while the cursor is moving around the object.
This is needed to allow new labels to be added when the focus area covers more objects, but can lead to discontinuities in the placement of labels.
For example when the cursor moves from the left side of an object to its right side, the label will move from the right to the left stack.
This effect is actually useful to confirm the exact position of a label but might be found confusing by first time users.
We found that discontinuties were more common with the non-crossing algorithm than the Y coherent algorithm which we favor despite the risk of lines crossing.
Depending on the application, several improvements might be considered : * Changing the size and shape of the focus area can be allowed, either at the user's initiative, or dynamically as a function of the label density; * When too many items are in the focus area, excentric labels can show not only the number of objects but also a glyph or bar chart summarizing the contents of the area .
We currently map the color of the label border to the object's color.
But text font size, style or color can also be used if clear coding conventions exist and if adequate readability is preserved.
For example pressing a control key can temporarily "freeze" the excentric labeling, free the cursor, allowing users to select any of the labels.
Figure 8: In LifeLines excentric labeling can be useful as it guarantees that all events in the focus are labeled, even if events overlap.
Chronological order is best for ordering labels.
In this example the focus area is rectangular  and no connecting lines are used.
The label background is yellow to make them more visible.
We are in the process of comparing excentric labeling with a purely zoomable interface.
The map of a building is displayed with workers names assigned randomly to offices.
Subjects have to figure out if a given person is assigned to a room close to one of three red dots shown on the map .
Each subject has to repeat the task ten times with new office assignments and red dot locations.
Subjects reply by selecting "yes" or "no".
The time to perform each task and the number of errors are recorded.
Subjects using excentric labels  have to move the cursor over and around each highlighted point and read the labels.
Subjects using the zooming interface have to move the cursor over each highlighted point, left click to zoom until they can read the labels , right click to zoom back out or pan to the next point.
Our initial test of the experiment highlighted how speed and smoothness of zooming is crucial for zooming interfaces.
In our test application a zoom or pan takes about 3/4 seconds to redraw.
This is representative of many zooming interfaces, but in order to avoid any bias in favor of the excentric labeling we chose to ignore the redisplay time .
Despite the numerous techniques found in visualization systems to label the numerous graphical objects of the display, labeling remains a challenging problem for information visualization.
We believe that excentric labeling provides a novel way for users to rapidly explore objects descriptions once patterns have been found in the display and effectively extract meaning from information visualization.
Early evaluation results are promising, and we have demonstrated that the technique can easily be combined with a variety of information visualization applications.
This work was mainly conducted while Jean-Daniel Fekete visited Maryland during the summer 1998.
We thank all members of the HCIL lab for their constructive feedback, especially Julia Li for her initial research of the labeling problem, and Ben Shneiderman for suggesting the main-axis projection.
This work was supported in part by IBM through the Shared University Research  program and by NASA .
Initial results of the pilot test  shows that users performed the task 4 times faster when using the excentric labeling than with the zooming interface.
Any delay in zooming and panning would further increase the effect in favor of excentric labeling.
Our informal observations suggest that users sometime get lost using the zoom and pan, which does not happen when using the excentric labeling.
Ahlberg, Christopher and Shneiderman, Ben, Visual information seeking: Tight coupling of dynamic query filters with starfield displays, Proc.
Bederson, Ben B. and Hollan, James D., PAD++: A zooming graphical user interface for exploring alternate interface physics, Proc.
Chalmers M., Ingram R. & Pfranger C., Adding imageability features to information displays.
Christensen J., Marks J., Shieber S. Labeling Point Features on Map and Diagrams, to appear in Transactions of Graphics.
Cleveland, William, Visualizing Data, Hobart Press, Summit, NJ .
Card, S, Mackinlay, J., and Shneiderman, Ben, Readings in Information Visualization: Using Vision to Think, Morgan Kauffman Publishers, to appear.
Cleveland, William, Visualizing Data, Hobart Press, Summit, NJ .
Lamping, John, Rao, Ramana, and Pirolli, Peter, A focus + context technique based on hyperbolic geometry for visualizing large hierarchies, Proc.
Lindwarm D., Rose, A., Plaisant, C., and Norman, K., Viewing personal history records: A comparison of tabular format and graphical presentation using LifeLines, Behaviour & Information Technology .
Nation, D. A., Plaisant, C., Marchionini, G., Komlodi, A., Visualizing websites using a hierarchical table of contents browser: WebTOC, Proc.
3rd Conference on Human Factors and the Web, Denver, CO .
Plaisant, Catherine, Rose, Anne, Milash, Brett, Widoff, Seth, and Shneiderman, Ben, LifeLines: Visualizing personal histories, Proc.
