Most studies on tilt based interaction can be classified as point-designs that demonstrate the utility of wrist-tilt as an input medium; tilt parameters are tailored to suit the specific interaction at hand.
In this paper, we systematically analyze the design space of wrist-based interactions and focus on the level of control possible with the wrist.
In a first study, we investigate the various factors that can influence tilt control, separately along the three axes of wrist movement: flexion/extension, pronation/supination, and ulnar/radial deviation.
Results show that users can control comfortably at least 16 levels on the pronation/supination axis and that using a quadratic mapping function for discretization of tilt space significantly improves user performance across all tilt axes.
We discuss the findings of our results in the context of several interaction techniques and identify several general design recommendations.
However, to a large extent, designers have tailored each tilt-based implementation to suit the specific demands of the tilt application being investigated.
Very few designs have considered some of the general limitations and possibilities of using tilt input with the wrist.
The exploration space of tilt-based input requires a more systematic analysis of the design space.
For example, we know little about how precisely or with what level of resolution the user can manipulate digital information when using wrist-tilt input.
A quick survey in the area of tilt interactions reveals two very distinct methods of utilizing tilt.
In a first set of application we find that tilt has been applied to distinct tilt gestures.
The ubiquitous Wii Remote takes advantage of this form of wrist tilt to manipulate a virtual object such as a tennis racquet on the display.
However, a large number of tilt applications have considered breaking up the angular space available with wrist tilt to interact with the system.
TiltText and tilt menus are prime examples of this form of tilt interaction.
Studies have shown that position mapping of tilt to a virtual cursor is more controllable than rate based mapping of tilt .
In this paper we specifically explore the dexterity of wristbased input for discrete interaction.
We investigate how a designer can use tilt sensors to improve interactions in situations where users manipulate a sensor with their wrist.
In two experiments we investigate the number of discrete levels of tilt that users can input with complete visual feedback, the axis of angular wrist movement that lends itself more naturally for tilt interaction, preferences in movement direction or range and differences in using tilt with remote feedback  and with local feedback .
Based on our results, we propose a set of alternatives to resolve concerns with some of the existing tilt based techniques and provide guidelines that can benefit future designers of tilt interactions.
Tilt sensors have become a standard hardware component of many small form-factor devices, such as digital cameras and iPods.
The ubiquity of tilt sensors has added tilt based input to the growing repertoire of sensor based interaction techniques.
However, current commercial tilt-based systems have been integrated in a limited manner in existing applications: tilting is used for browsing images under different aspect ratios or for scrolling content on a screen.
In an effort to explore more functional capabilities of tilt input, researchers have demonstrated the feasibility of tilt input through point-designs .
To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee.
We base our investigation of tilt interaction on an understanding of the movement of the human wrist .
Wrist tilting can take place along three axes as shown in Figure 1.
Flexion occurs when the bending movement decreases the angle between the palm of the hand and the arm.
From an anterior facing position of the palm , flexion has a maximum angle of 60 .
Extension is the movement opposite that of flexion and the average rangeof-motion  for extension is at 45 .
A force grip takes place when all the fingers exert a force to hold a device.
This grip lends itself naturally when holding a PDA, a cell phone or most devices.
Force grips are ubiquitous and their characteristics depend on the ergonomics of the mobile device.
However, with this type of grip input range that could normally be harnessed with the fingers are no longer available.
For this reason researchers have proposed the use of tilt as an additional input mechanism when holding objects.
Rekimoto's  work was one of the earliest systems that proposed tilting a device to invoke an input stream.
He proposed the use of tilt in both a continuous and discrete manner to build interaction techniques ranging from pull-down menus and scroll bars, to more complicated examples such as map browsing and 3D object viewing.
One particularly appealing feature of such an interaction, as noted by Reikimoto, was the use of only one hand to both hold and operate the device .
Since Rekimoto's proposal, a significant number of tiltbased proposals have emerged.
However, we can classify most studies as either using a rate-based mapping or a position-based mapping of tilt to cursor control.
The degree of tilt in any direction moves the cursor faster.
Crossan and Murray-Smith  measured ease of target selection using a cursor controlled by tilt.
In the TiltTable, the tilt-angle of the tabletop is used to control not only the direction, but also the "sliding" speed of the workspace .
In all of these systems, the angular rate of motor tilt was mapped onto a virtual cursor.
On the other hand, numerous systems have defined a fixed mapping from tilt position to a function in the workspace.
Oakley and O`Modhrain  described a tilt-based system with tactile augmentation for menu navigation.
Each menu item was selectable by tilting the device at a fixed angular position.
They did not restrict tilting to any one specific tilt axis and instead only required an up-and-down tilt  to iterate through menu items.
Researchers have also successfully demonstrated the use of tilt for text entry  with small devices.
In both, TiltType  and TiltText , a user could enter text by pressing on a limited number of buttons  and tilting the device in the correct position to enter a letter.
Results have shown that in this form of interaction, text entry speed including correc-
Figure 1: Wrist rotations and degree of rotation possible along each axis of rotation.
What has been primarily defined as "wrist-rotation" in the HCI literature is referred to as pronation and supination .
Pronation is a rotation of the wrist that moves the palm from a position where it is facing sideways to a position where it is facing down .
Supination occurs in the opposite direction.
Pronation/supination is used in opening door knobs.
Together pronation and supination have a ROM of 125, with pronation accounting for approximately 60% of that range .
Ulnar and radial deviation is the upward and downward movement of the wrist when the palm is facing sideways.
The ROM for ulnar and radiation deviation is the least of all three axes and is between 15 and 30 respectively .
This form of tilting was used to accommodate the position of the wrist when holding a mobile device, as in TiltText .
The literature in tilt-based interaction is significant in size and can be grouped under force grip tilting and precision grip tilting.
A precision grip results when the input device is held and primarily controlled by the fingers .
Precision grip tilting and force grip tilting employ different motor control skills and thus require different design principles.
We constrain our study to only force grip tilting.
This occurred despite observing that TiltText resulted in a higher error rate than MultiTap.
While these results confirm that tilt manipulations are not error-free, a study by Oakley and O'Mondrain  has shown that position-based mapping is more accurate than rate-based mapping.
Additionally, position-based mapping provides a larger number of tilt positions to map onto interaction functions.
While the above systems have primarily required some form of a grip, Crossan et al.
They evaluated wrist rotation  for selecting targets using a mobile device when the user is both seated and walking with a tilt sensor strapped to his/her wrist.
Participants in their study were able to perform selections comfortably in the seated conditions but were not accurate when walking.
Particularly interesting about their work is that error rates dropped significantly when the targets selected had a width of 9 or more.
In all of these systems, the designers have had to make choices about how to map the tilt angle to an action, have designed techniques for selecting virtual items with tilt, and have considered issues involving feedback.
However, very few studies present the systematic choice of parameters for tilt-based interactions.
Designers have reported that rate-based systems are difficult to control and do not provide the level of precision possible with position control.
In a study, Oakley and O'Modharin  found that users were more efficient and more accurate controlling items on a menu with positioncontrol than rate-control tilting.
They observed that a primary benefit of position-based tilt control is the lack of reliance on any hidden virtual model.
Additionally, positionbased tilt reinforces feedback with the physical orientation of the hand.
In this paper, we concentrate on tilt interactions for a position control.
The complete range-of-motion for each of the three tilt axes provided by tilt sensors can be difficult to control.
To improve angular tilt control, prior work suggests discretizing the raw angular space by grouping near-by tilt values into unique controllable tilt levels.
There are numerous methods and mappings for discretizing the number of controllable levels using tilt based input .
Studies on tilt interaction have discretized raw tilt space to a maximum of 141 distinct tilt levels .
Tremor and wrist dexterity can also affect how users control individual tilt levels and the precision of each level .
Psychophysics literature suggests that angles at the extremity of the range-of-motion can be difficult to control .
Any discretization function for tilt interaction needs to take into consideration the user's ability to comfortably control the tilt values and the strain that can be induced from controlling values at the extremity.
Earlier studies have shown that discretization methods can directly impact the level of control with the input mechanism .
Numerous discretization functions are possible, including a linear, sigmoid, and quadratic discretization functions.
A linear function partitions the entire tilt space into levels of equal units.
For instance, a range-ofmotion, equivalent to 90 can be divided into 10 levels  and would produce levels consisting of 9 tilt for each level.
Numerous studies have reported using a linear function to control a continuous input stream .
A sigmoid function  ensures that tilt values in the middle of the tilt space are given as much space as possible.
In a quadratic function , the tilt space is divided such that the extremities of the ROM are given the largest amount of space and less angular tilt is allocated to the middle of the range.
Each tilt axis in the wrist affords a limited range-of-motion .
To facilitate appropriate interactions and to avoid strain or injuries, tilt based motions should consider the constraints imposed by the axial range-of-motion .
Furthermore, in conditions where visual feedback is necessary, tilt should be further limited to the range-of-motion that makes it possible to obtain visual feedback.
For example, to design a tilt-based interaction for a cell-phone, a designer may need to eliminate the use of tilt in the direction of a radial deviation so that the screen can still be visible during the interaction.
Many wrist-based motions involve tilt not only along one axis, but possibly along several axes simultaneously.
However, a starting point for characterizing tilt movements could be to investigate each axis individually.
It is likely that an understanding of the limitations with each axis can also be applied in cases where the tilt is carried out over several axes simultaneously.
A selection mechanism is necessary and complements the tilt interaction for selecting a virtual target.
Prior studies have proposed different selection mechanisms for tilt .
In Click-tilt-and-release, the user triggers the tilt mechanism by first pressing a button, tilting it and then releasing the press.
This form of selection was prevalent in TiltText  and is similar to the one designed in .
Clicktilt-and-release is also useful as a delimiter as it sets the device into tilt mode and prepares the device for collecting tilt values.
This form of interaction, in which the tilt mode is explicitly set, is particularly useful in contexts where the arm is moving for accomplishing other tasks.
Click-to-select allows users to select a target item by first tilting the device and then pressing a button or tapping on the screen of the device.
As has been shown to be the case in many laser-pointing and VR glove techniques , using a discrete button to select could interfere with the position of the input device and negatively affect the precision of the input.
To investigate the influence of the above factors on performance we carried out two studies.
To adequately investigate the limits and control with wrist interaction while at the same time keeping our study tractable, we looked at the tilt along each of the three axes separately and focused on position control tilting.
The first study informs the design choice of different tilt control functions when the visual and motor spaces are tightly coupled and local.
The second study examines the effects of various tilt-control functions when the visual and motor spaces are remotely coupled.
A feedback loop is a necessary component of many interactive techniques.
In the case of tilt, the user can infer a certain degree of feedback from the position of the hand.
However, such a feedback mechanism is insufficient if the interaction technique necessitates a large number of unique tilt gestures.
Visual feedback is a common feedback method for most tilt-based techniques .
With visual feedback, the tilt techniques are restricted to the range of motion in which the feedback signal is not inhibited.
For example, extension is highly constrained by the amount of visual feedback obtained from the screen at a tilt position beyond the 0 mark, similarly ranges of motion for pronation and supination would make it difficult for the user to obtain much visual information.
Auditory feedback can also complement visual feedback for tilting .
However, this form of feedback is limited based on the context of its use and the specific techniques employed.
Oakley and Park  presented the case for motion based interaction without any visual feedback but with limited tactile feedback.
To evaluate if their systems could be used eyes-free, they gave participants very minimal training with their menu system.
Their results showed that performance improved with visual feedback but accuracy was unaffected in the eyes-free condition.
Based on prior work, complete visual feedback, in which all items of interest are highlighted, would benefit tilt interaction the most.
We conducted all our experiments with a Dell Axim X30 PDA  and a PC running Microsoft Windows XP.
We used a TiltControl sensor device  connected to the PDA's serial port, to measure angular tilt.
To evaluate tilt control on the remote display we conducted the study with a 19" monitor at a resolution of 1680x1050.
The PDA and remote PC were connected with wireless and all the data were collected either on PDA  or on PC .
The TiltControl is a 2D accelerometer and by default can collect data in the pronation/supination and ulnar/radial deviation movements.
To collect data for extension/flexion we requested our participants to hold the device with the palm in an anterior facing position, i.e., the palm is facing skyward.
In this position, instead of capturing ulnar/radial deviation movements, we were able to capture flexion/extension.
The experimental software recorded trial completion time, errors and number of crossings as dependent variables.
Trial completion time is defined as the total time taken for the user to tilt the device to the appropriate angular range and select the target.
The number of crossings is defined as the number of times the tilt cursor enters or leaves a target for a particular trial.
The software records an error when the participant selects a location which is not a target.
The trial ended only when the user selected the right target, so multiple errors or multiple attempts were possible for each trial.
While trial completion time and errors give us an overall success rate, multiple attempts and number of crossings provide information about the level of control achievable using each of the different tilt discretization functions.
However, in our study we only restricted our investigation to complete visual feedback in which each item during the tilt is highlighted.
We maintained a constant motor-to-visual mapping, in which one degree in motor space corresponds to 2 degrees in visual space.
Other feedback mechanisms need to be considered in future studies.
We used a serial target acquisition and selection task similar to the task used in .
Participants controlled the movement of a blue tilt cursor, along a semi-circle through a sequential list of items using tilt as the input.
Tilt angles along the range-of-motion for each of the tilt axes were discretized using various discretization functions.
During each trial a target was colored in red.
The user's task was to tilt in a controlled manner to move the blue tilt-cursor onto the red target.
We provided complete visual feedback to the user by highlighting the items in blue when the user iterates through them.
The color of the target changed to green when the user selected it correctly or to yellow on an incorrect selection.
The system generated an audio signal to indicate that the task was completed correctly.
We evaluated the ability to control effective tilt angles with each of the three tilt axes.
For the flexion/extension axis we maintained a range of 0  to the limit of the flexion at 60.
We did not utilize the tilt space available with extension as visual feedback is unavailable in that range.
With pronation/supination we maintained a range of 0 , up to 80.
After this range, the screen is no longer visible.
Finally, with ulnar/radial deviation we investigated the tilt space in the range of 0  to the maximum angle in this space 15 .
We did not use radial deviation as the screen is no longer visible.
The experiment used a within-participants factorial design.
The factors were: * Tilt axis: flexion/extension, pronation/supination, ulnar/ radial deviation.
The order of presentation first controlled for tilt axis.
Levels and all the other factors were presented randomly.
We explained the task and participants were given ample time to practice the tilt control with the various control functions and at various tilt levels.
Due to the limited range of motion available for the user in the ulnar/radial axis we only tested level 4 for this axis.
This was based on pilot testing where users could not complete trials for levels 8 and above.
The experiment consisted of one block comprising two trials per condition.
The experiment took approximately 60 minutes per participant.
The selection mechanism we used was click-tilt-andrelease.
We used this selection technique as it explicitly invokes tilting and "recalibration" to a point of origin is unnecessary, an important factor to reduce confounding effects in the study.
In each trial a target appeared in one of four different relative angular positions for each of the tilt axes: 10%, 30%, 70%, and 90% of the entire range-of-motion for each of the axes.
For instance, with flexion/extension, at which the range-of-motion varied from 0 to 60, the four distances were set to 6, 18, 42, and 54.
The total number of trials with errors was 603 out of 3888 trials.
The average trial completion time over all trials completed without errors was 2254 ms .
Figure 4 presents the average trial completion time and number of error trial for each axis.
But we do not do any further comparative performance across the three axis as the range of motion for each axis is different  and we believe that it is more important to understand the strengths and limitations of each axis on its own.
Post-hoc pair-wise comparisons of level yielded significant differences  in number of attempts for all pairs.
Level 4 yielded least number of attempts followed by 8, 12 and 16.
The average number of crossings across all conditions was 0.34 per trial .
With respect to function, the Quadratic function resulted in the least number of crossings , followed by Linear  and Sigmoid .
Post-hoc pair-wise comparisons of level yielded significant differences  in attempts for all pairs except .
Level 4 had least number of crossings followed by 8, 12 and 16.
Post-hoc pair-wise comparisons show that the Quadratic function was significantly faster than Linear and Sigmoid.
We found no difference between Linear and Sigmoid.
Post-hoc pair-wise comparisons of tilt levels yielded significant differences  in trial completion times for all pairs except levels .
Users were fastest with tilt level 4 and slowest with level 16.
Post-hoc pair-wise comparisons show that the Quadratic function was significantly faster than Linear or Sigmoid.
We found no difference between Linear and Sigmoid.
Post-hoc pair-wise comparisons of tilt levels yielded significant differences  in trial completion times for all pairs.
Users were fastest with tilt level 4 followed by 8, 12 and 16.
Errors and Crossings: The average number of attempts per trial across all conditions was 1.18 .
Figure 6  shows the average errors per level for each function.
Post-hoc pair-wise comparisons of functions showed that the quadratic function needed significantly fewer attempts  than Sigmoid  or Linear .
We found no significant difference between sigmoid and linear.
Errors and Crossings: The average number of attempts per trial across all conditions was 1.25 .
Figure 5  shows the average errors per level for each function.
Although we did not find any significant effect of function on number of attempts, the Quadratic function resulted in the least number of attempts to complete a trial followed by Sigmoid and Linear.
The experimental design was such that the target distances for each level were distributed throughout the range of motion for any given axis.
Therefore the experimental design did not favor any function.
We further looked at the results for each distance and level and found that the quadratic function was at often slowest or most error-prone at target distances of 30% and 70% for both flexion and pronation.
However even in these cases, the quadratic function was about as good as the Sigmoid function.
For example, at level 16 the mean trial completion time for Sigmoid at 10% and 70% target distances of pronation were respectively 2941 and 2640 ms while the same for Quadratic was 1047 and 2886 ms.
Post-hoc tests show that the Quadratic function was significantly faster than Sigmoid and Linear.
We found no significant difference between Linear and Sigmoid.
Figure 7  shows the average time.
Users carried out trials only for level 4 so no analysis was done for level.
From Figure 5 we can see that there is a sharp increase  in number of attempts as the levels increase from 12 to 16 when using flexion to control orientation.
The results of our experiment suggest that for flexion/extension users are easily able to control up to 12 levels with any loss of accuracy or increase in number of crossings.
This is particularly the case when we use the quadratic discretization function.
From Figure 6 we see that for pronation/supination error rates are under control even at 16 levels with the quadratic function.
The error rates at 16 levels in this axis are roughly equal to those at the 12 level in the flexion/extension axis.
Post-hoc pair-wise comparisons of functions yielded significant differences  in attempts only for Quadratic and Linear.
Figure 7  shows average errors per level for each function.
ANOVA tests did not reveal any significant effect of function  on number of crossings.
We did not find a statistical difference between Sigmoid and Linear functions.
Our results reveal that the discretization function plays an important role in allowing users to properly control tilt.
Closer inspection of the data did not reveal any preferred or un-preferred distances.
As noted earlier under the Quadratic function, we did not find users performing better for some target distances over other.
Users were generally faster at target distances that was favored by the discretization function.
So 30% and 70% were marginally faster with Sigmoid while 10% and 90% were faster with Quadratic and there was a linear increase in performance with Linear.
The results suggest that target distance does not affect performance in tilt.
This is unlike pressure based interaction techniques where pressure distances further on the pressure scale are significantly harder to acquire than earlier pressure distances .
Thus tilt techniques lend themselves well to tasks that require targeting across the range of the tilt space.
We did not observe any significant different on attempts or number of crossings.
A contributing factor to this difference could be the reduction in visibility when the device is starting the 0 position.
In the first study we examined the limitations on tilt control with locally coupled feedback.
The goal of the second experiment was to examine performance in tilt control when the feedback is remote.
Many scenarios exists when the object to control is either on a larger display or on a display that is decoupled from the user, i.e., when operating a Wii Remote or a PDA to control a public display.
Since the ROM with ulnar/radial deviation is limited, we used the entire range available for this axis.
We maintained a constant motor-tovisual mapping, in which one degree in motor space corresponds to 1.5 degrees in visual space.
All other factors remained the same as in experiment 1.
We briefly present the results of this experiment as most of the result pattern is similar to that of Experiment 1.
Here we focus on results that are different from Experiment 1.
For all axis of wrist rotation, there was a significant effect of function on trial completion time, number of attempts and number of crossings.
The Quadratic was always significantly better than the Linear .
For all axis of wrist rotation, there was a significant effect of number of levels on trial completion time, number of attempts and number of crossings.
In terms of trial completion time, post-hoc tests showed that all levels were significantly different from each other for both all axis of wrist rotation with the lowest level being fastest and the highest level being slowest .
The experimental task, stimuli, procedure and design of Experiment 2 were identical to that of Experiment 1.
However since feedback is remote, we can use a larger range-ofmotion than what was possible with the local display.
We also discarded the Sigmoid discretization based on poor performance in Experiment 1.
The experiment used a 3x2x4x4x2 within-participants factorial design.
The factors were: * Tilt axis: flexion/extension, pronation/supination, ulnar/ radial deviation.
The order of presentation first controlled for tilt axis.
Levels of all the other factors were presented randomly.
We explained the task and participants were given ample time to practice the tilt control with the various control functions and at various tilt levels.
The experiment consisted of one block comprising three trials per condition.
With 10 participants, 3 tilt axes, 2 tilt control functions, 3 tilt levels, 4 tilt distances, 2 directions, 3 trials, the system recorded a total of  4320 trials.
The experiment took approximately 60 minutes per participant.
For number of attempts, post-hoc tests showed that for flexion/extension there was a significant difference between levels  and  but not between 8 and 16.
For pronation/ supination there was a significant difference between all levels except .
Figure 8 shows the average errors per level per function flexion/extension and pronation/supination.. For ulnar/radial deviation there was a significant difference between all levels except  and .
In terms of crossings, for flexion/extension post-hoc tests showed that all levels were significantly different from each other with level 8 being best  followed by 16  and 24 .
For ulnar/radial deviation all levels were significantly dif-
In this experiment we used larger ranges-of-motion for each of the axes that included tilt values where the screen was not previously visible on the mobile device.
For the flexion/extension axis the range varied from 60  to 30  giving a total of 90.
Instead of simply using 80 as in experiment 1 for pronation/supination, we used an additional 40 in supination, for a total of 120.
This can potentially lead to much richer interactions than what is possible by simply utilizing values from each axis individually.
Furthermore, wrist movement is not performed in isolation.
The forearm also moves enabling a wider range of motions.
However, tilt sensors are likely to pick up only a fixed number of readings regardless of which parts of the arm are moving.
Therefore, we need a closer look at the range of movements possible with the forearm and wrist to design suitable gesture-based techniques.
Our results reveal that with flexion/extension and pronation/supination, users can comfortably control 12 and 16 levels respectively.
In our experiments, this maps to roughly 5 of angular tilt along both axes.
This resolution is considerably higher than values reported or used by current systems.
For instance, the authors in  reported selecting targets with a resolution of 9.
Designers typically use tilt using a position control mechanism.
Therefore, under such a system, ideally one should take advantage of the highest resolution possible with tilt.
Furthermore, the limits we obtained in our study suggest that tilt can be well suited to tasks that require a moderate amount of precision.
It is possible that further refined discretization functions can facilitate even higher precision of tilt.
A direct comparison of performance metrics with prior work is difficult due to the variations in experimental conditions and measures.
However, for a very similar task, we observe that our measures are marginally similar to those derived from prior work.
In our study, our worst case performance, with 16 menu items is slightly over 2 secs.
With the Quadratic function we are able to obtain a range in performance times ranging between 1.5 and 2 seconds.
In addition, the Quadratic function reduces error rates to less than 10%.
The following design principles emerge from our results: * Pronation/supination and flexion/extension should be the primary axes for tilt, while ulnar/radial deviation should be used minimally.
In some cases, this may necessitate a more capable tilt sensor that will capture tilt along all axes.
We recommend these levels based on our observation in experiment 1 of a sharp increase in performance time and error rate after level 8  and 12 .
A quadratic discretization performed best in our study.
However, designers can tailor design their own functions based on the needs of the application.
The accelerometer we used in our study senses tilt along only two axes, pronation/supination and ulnar/radial deviation.
To capture data along the flexion/extension axis, we required participants to hold the device with their palm in an anterior facing position, i.e., the palm is facing upward.
While the anterior facing position may seem natural for certain types of devices such as PDAs, the most common method of holding a mobile controller would be when the palm is facing inward, i.e., the right palm faces the left side.
However, in this position, a vertical movement is along an ulnar/radial deviation, which has the least range-of-motion.
To use flexion/extension in this position, devices should use a 3D accelerometer.
This would allow designers to pick up tilt along all three axes.
TiltText  was an adaptation of TiltType  for text entry on mobile phone keypads.
A user can enter letters with TiltText by pressing a button and simultaneously tilting the device in the appropriate direction for that letter.
To obtain a p, q, r or s the user presses the 7 key and tilts the device to the left, front, right or back, respectively.
In their experiment, the tilt displacement was absolute with a point of reference occurring when the device is in a resting position.
In an evaluation, TiltText outperformed MultiTap, in words-per-minute .
However, users were highly errorprone with TiltText and the authors attribute this to two problems.
Backward movements were approximately three times more error-prone than left or right movements.
This resulted in a large number of errors when entering the letters s and z .
Furthermore, the tilt was resulting in a large number of errors when a forward tilt was being recognized instead of left or right tilts.
The left and right tilts in TiltText consist of a pronation and supination, respectively while the forward and backward movements involve a radial and ulnar deviation.
Prior studies in wrist motion and our results on controlling wrist motion suggest that among all the three axes, the axis with the least amount of range-of-motion is the ulnar deviation .
It is therefore not surprising to observe a large num-
The errors on the left and right movements, triggering a forward movement, are also a result of the small range-ofmotion available in the forward direction.
We believe TiltText can be vastly improved by following our design recommendation of replacing ulnar/radial movements with flexion/extension movements.
Our results show that users can control a large number of levels using pronation/supination.
Another alternative would be to rely on movement along this axis only and using a quadratic discretization function to minimize errors.
Motion and tilt sensing are becoming easily accessible and offer a rich and expressive medium for input.
As more tilt sensors get integrated into devices, designers will need to expend effort in identifying the limitations of tilting.
We carried out two experiments to identify some of the limitations of tilt input, along each of the three axes of tilt.
We observed that tilting is superior along the pronation/supination and flexion/extension axes.
While pronation/supination provides a larger range of motion, our results reveal that the resolution possible with pronation/supination is the same as that with flexion/extension.
Our results also show that the method of discretizing the tilt space can lead to improvements in performance.
The design space for tilt input is significant and merits further attention.
In future work we intend to investigate the characteristics of tilt interactions that combine multiple axes, that combine forearm and wrist tilt movements, and that of more naturally occurring tilt movements.
