We report on our experiences of introducing an instant messaging and group chat application into geographically distributed workgroups.
We describe a number of issues we encountered, including privacy concerns, individual versus group training, and focusing on teams or individuals.
The perception of the tool's utility was a complex issue, depending both on users' views of the importance of informal communication, and their perceptions of the nature of cross-site communication issues.
Finally, we conclude with a discussion of critical mass, which is related to the features each user actually uses.
More generally, we encountered a dilemma that imposes serious challenges for user-centered design of groupware systems.
Many people have exposure to interactive text primarily through teenage users who presumably exchange gossip and rumors, talk about their personal lives, and use IM to do all the things teenagers do .
Workplace expectations are likely to be either that interactive text is a waste of time, or possibly even socially undesirable.
In addition, in order to diffuse through the workplace, interactive text must achieve collective adoption within a community of interest, as has been shown for other interactive communication technologies .
Specifically, if collective adoption is described as an "accelerating production function" - where greater number of users leads to more value for potential users - then Markus  identifies two key factors in producing collective adoption.
First, users must choose to absorb certain costs associated with use, such as acquiring new skills, purchasing hardware or software, and exercising "communication discipline" - meaning regularly reading and responding promptly to communications.
Second, there must be initial variation in users' abilities to contribute to and benefit from use of interactive communication systems.
Therefore, collective adoption starts when a highly interested group of people - i.e., the "critical mass" - perceives differential value in using a given technology, and through their use demonstrates utility to others, who in turn become likelier to adopt the technology.
With interactive text, then, if there are no other users, it is uninteresting to message with and be aware of oneself.
It is not clear, however, what defines the community of interest for interactive text systems, or where critical mass must arise to assure successful adoption.
Specifically, is the community defined by the larger organization, where simply attaining some minimum level of adoption will lead to success?
Or, is the community of interest defined more precisely, such as within particular sub-units or working groups?
Resolving these issues is critical, for example, in determining whether deployment proceeds according to a "one size fits all" approach or whether deployment is tailored to match local characteristics.
Our expectation is that the ability of interactive text to support informal, spontaneous, and opportunistic communication should make it particularly suitable for geographically distributed teams.
Instant messaging , after experiencing enormous popularity among recreational users, is beginning to move into the workplace , following on the heels of other forms of text-based computer-mediated communication  such as e-mail and MUD rooms .
To date, there have been few published studies of the use of interactive text communication such as IM and chat outside of research groups who were motivated to use it by their desire to explore the technology.
As with many types of groupware, one would expect that adoption is not a given among work groups more generally.
Interactive text potentially suffers from many of the classic issues of groupware adoption .
For example, there are likely to be some individuals whose attention is in more demand than others.
IM may impose an undue burden on them, but mostly provide benefits for others, i.e., those who want to reach them.
While other forms of CMC, such as e-mail, also have this potential, the synchronous nature of IM makes it harder to ignore.
To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee.
Such problems appear to greatly slow collaborative work that is split across sites, in comparison to comparable work where all activities are conducted at a single site .
An application that shows when colleagues are available, and makes it easy to nonintrusively signal the desire to communicate  should facilitate this type of communication.
As part of a research program designed to address and alleviate the communication and coordination problems of multi-site software development work, we deployed a interactive text tool that we developed, called Rear View Mirror .
In this paper, we focus on adoption issues, describing the strategies that we pursued in order to facilitate adoption, the results of those strategies in terms of usage, and diffusion of the technology through organizations and teams.
Using a low-fidelity paper mockup of the tool, he had 30minute sessions with several potential users at each site, explaining the intended functionality, and asking if the potential user thought it would be useful, and if they had any concerns.
These initial feedback sessions were generally favorable, in that all the users indicated they thought such a tool would be useful for staying in touch with colleagues.
Many users were not familiar with instant messaging or chat, and were initially confused about how they differed from other text messaging, such as e-mail.
One potentially serious concern surfaced in these initial sessions.
Particularly at the German site, users had major reservations about the awareness aspects of the tool, and its potential use for the purpose of surveillance.
We were told that the workers' council would have to approve it, and that it might in fact be illegal under German law.
In response to this initial feedback, we concluded that we should plan to introduce people to the concept of instant messaging and, as opposed to merely introducing them to a new tool.
We also resolved the concern over surveillance by building a security model into RVM such that a user could see another user's presence states only if explicitly permitted by that user.
This alleviated the privacy concern, and the work council representative was satisfied.
The idea of introducing interactive text in the workplace came about as a result of our analysis of observational and interview data gathered at a dozen software development sites in North America, Europe, and Asia.
Collectively, we spent months on site, and we conducted over two hundred semi-structured interviews over a period of approximately two years in order to fully understand the issues of multi-site projects, and the various approaches to communication and coordination used in the company throughout the world.
The interviews included technical staff, supervisors, managers and executives.
The findings from these studies provided us with the set of problems we set out to address.
Chief among these issues were substantial delay in any work split across sites , and difficulties in coping with unforeseen events , and the difficulty of finding and negotiating the availability of coworkers .
One factor that clearly contributed to these problems was the virtual absence of informal communication between sites.
Such "corridor" or "water cooler" talk is essential for keeping people aware of events and concerns, who is doing what, and more generally, the context in which other people are working.
We developed RVM as one thread of activity designed to help alleviate these problems.
The organizations into which we introduced RVM helped to sponsor this work, and the members were generally interested and cooperative in working with us.
It is important to note, however, that we were not responding to a specific request for a tool of this type.
Rather, after going to great lengths to try to identify and understand the problems these multi-site projects were experiencing, we proposed RVM as one part of a solution.
In general, use of RVM was encouraged, but not mandated by managers .
We called our team-oriented interactive text tool Rear View Mirror, with the idea that it was small, unobtrusive, and allowed you to see what was going on around you with a glance.
RVM provides three primary types of functionality: presence awareness, instant messaging, and group chat.
Users can add other users to their presence viewer , and, if permitted, can see that user's presence states.
Presence states are indicated by the color of the border around that person's image 
A mouseover on a person's icon produces more information, e.g., "away for about an hour."
Users can explicitly set their own presence to one of several pre-determined states .
Users can also configure RVM to change border colors and display  user-defined messages after user-selected intervals of keyboard and mouse inactivity.
Users often had fun with this feature.
One user, for example, set RVM to automatically turn his border yellow and display the message, "Missing, presumed working" after an hour of inactivity.
The second primary type of functionality was instant messaging.
For anyone whose icon appears in the presence viewer, one can open an IM window, type in a message, and a window pops up on the other user's screen.
Text messages can then be exchanged in the usual way.
Finally, RVM provides a group chat functionality.
It is important to clarify what we mean by groups.
Groups are quite distinct from "buddy lists."
Over the course of approximately 17 months, RVM was introduced into several work teams.
All of these work groups were geographically distributed.
The following table shows the sites and teams for which we report data in this study.
In the next section, we describe how RVM was introduced to each of these groups.
Screen shot of the RVM tool.
Each user has his/her own buddy list.
Groups, on the other hand, have a consistent membership, defined at the system level, not at the level of each individual user.
In RVM, any user can create any number of groups.
By default, the creator is the group's administrator.
Groups can be open  or closed .
In order to be a member of a group, one must be permitted to join  and one must actually join by selecting an appropriate menu option and typing in the group's name.
Group chat is visible to all participants in a group, and only to members of that group.
Group chat windows open automatically when one logs on to RVM, and the last n hours of conversation are displayed.
Group chat resembles, and in fact was originally inspired by, workplace MUD rooms .
It differs in that it is not threaded, has a single "room," has limited persistence, has only text chat functionality, and is intended to be continuously present.
We also wrote documentation for RVM, including an on-line user manual, and a 1-page quick reference card.
Both prominently displayed e-mail addresses and phone numbers where help was available.
We in fact received many e-mails, but very few phone calls, soliciting help with installation or with RVM features.
Installation was accomplished with a standard installer - the user needed only to double-click on it to install the application.
There was no overlap in people or even sites among the three organizations.
Most individuals in the teams from Wireless 1 were acquainted with one another, and there was some overlap in membership among the teams.
In particular, one first-level manager was a member of Management 1, Quality, and Test.
Both of the management teams consisted of a second-level manager and the first-level managers that reported to him/her.
Two of the other teams  consisted of a first-level manager and two different teams that he managed.
The other two groups  consisted of technical staff .
In the two management groups  RVM use was mandated by the ranking manager.
The teams varied considerably in size over time, but all were generally in the range of 5-10 people.
We gathered usage data via automatic logging on the server, which included logins, logouts, joining and leaving groups, as well as group chat messages.
In order to preserve users' privacy, we did not log instant messages.
We also conducted about two dozen semi-structured interviews with users, and two small focus group sessions to get feedback.
In order to have the greatest impact, we used the results of a survey to target users who appeared to have the greatest need for a cross-site communication tool.
Prior to the introduction effort, we conducted a survey, primarily to help us understand the prevalence of specific communication and coordination problems.
We also used the survey to identify who communicates most frequently with whom across sites.
Based on previous experience with training users on collaboration tools, we decided to make individual, one-hour appointments with each potential user.
A full hour, we reasoned, would give us ample time to describe several collaboration tools to the user, install and test whichever tools the user wanted, and systematically train the user on the tools' functionality.
The tools included RVM, an on-line calendar, and an expertise-finding tool.
At the end of the hour, we left the user with a quick reference cards for all of the tools, and contact information for obtaining help by phone, e-mail, or a group chat in RVM.
We wanted to achieve critical mass quickly, so people would not lose interest in RVM before there were enough other users to make it interesting.
To this end, the installation and training were carried out by two 2-person teams, during one intensive week, simultaneously at both sites.
With our encouragement, the director of the department formed an RVM group with his direct reports.
They were among the first who had the tool installed and began using it.
After this initial week of installation and training we had one member of the research team at each site for an additional week.
This person informally followed up, asking users if they were having problems, if they were finding the tools useful, and being generally available to troubleshoot problems.
We had hoped to achieve an organization-wide critical mass, but instead we eventually lost about 90% of the possible users.
There were a number of factors that caused users to decide not to use, or to discontinue use, of RVM.
We describe these factors next.
The application we released initially was essentially an alpha version, and beset by many of the difficulties one would expect with software in this state.
There were reliability problems with both client and server, as well as usability issues, with such things as confusing menu items, lack of feedback for some actions, and mysterious error messages.
We mention these issues simply because they clearly played a role in discouraging use of the tool.
In most of our early introductions, we had focused our efforts on recruiting the most highly connected pairs of potential users who resided at different sites.
Behind this strategy was the thought that we needed to achieve a critical mass relative to the larger organization as quickly as possible.
We assumed that our installation effort needed to be sufficient to make a substantial proportion of the entire organization RVM users.
We gave some attention to the teams that these pairs belonged to, primarily to have a starting point for demonstrating the team functionality to them.
But we did not specifically target teams, i.e., try to get most or all of a team online.
In contrast with our expectations, it proved relatively Individual training sessions.
The individual training difficult to introduce RVM in the workplace.
Looking at sessions, based on our experience with training users on adoption at the organizational level, we computed a groupware applications, had several major shortcomings.
80% The numerator is the number Server Crash Holidays "I love you" Virus Reorganizations of people in an organization 70% who log in on a given day, 60% and the denominator is the 50% cumulative number of people who had installed the 40% application and logged on as 30% of that date .
0% So the numerator is the actual 1 2 3 4 5 5 7 8 9 10 11 12 13 15 16 17 number of users on a given Month day, while the denominator is Figure 2: Daily use of RVM over time in each organization, as a percentage of the cumulative intended to represent the total total of potential users in that organization.
The figure also notes important external events that number of possible user on impacted RVM usage.
The numbers in parentheses are the final cumulative total number of potential users in each organization.
As you can see in Figure 2, while we initially had about 50% use among those we had visible, meaningful presence information.
There was usually no one else to chat with.
Recall that our initial solution to the privacy concerns of potential users was to allow each user to select who could see his/her presence information, with a default setting that other users could see no information.
While this did seem to put an end to privacy concerns, it made setting up new users inordinately difficult.
When a new user installed the application, he/she was not able to see any information at all about other users, since these users had not yet permitted the new user to "see" them.
In order to have presence information, the new user would have to contact each other user individually, and ask him/her to permit this.
The procedure required considerable effort, and introduced substantial delay between the initial training and installation session and the first point at which something interesting happened with respect to presence, IM, and group chat.
For many potential users, the amount of effort this required surpassed what they were willing to expend.
Figure 3: Daily number of active users for selected RVM groups.
Number of active users is measured by the number of group members who log in.
There was no context and no history.
With persistent group chat, when a user logged in he/she would see all chat that occurred for the last n hours .
We decided to focus on teams, rather than pairs of people, and insofar as possible, we trained entire teams at once.
We accomplished this in Wireless 2 by having 1-hour teleconferences .
We were able to train most members of three teams in two 1-hour sessions.
About half of the teleconference session was devoted to RVM, the other half focused on several other collaboration tools.
For Network, we initially trained two members of the Architect team in person, who then went on to help their colleagues get set up and learn the tool.
We prepared for these sessions much as we had before, but the actual time and effort we spent during the installation and training sessions was much less, since we worked in groups.
Prior to training, we set up groups we expected each user to be interested in based on information gained in interviews with contacts in the organization or with the new users themselves.
In addition to the installation and learning the tool functionality, we also had users chat briefly in group and individual chat windows, configure time-outs, and practice setting their presence status.
The sessions were rather hurried, but we were constrained by the users' very tight schedules.
The users had telephone and e-mail contact information for help, as well as a quick reference card and web-based manual.
We began to realize that where RVM was adopted, it was adopted by all or some substantial part of a team.
Not all teams who began to use it continued, but nowhere did it seem to take off just by virtue of individuals finding each other and chatting.
Figure 3 shows usage data  for four teams from Wireless 1.
The Systems Engineering and Management 1 teams quit using the tool rather quickly, primarily because of reliability and usability problems.
On the other hand, the Quality and Test teams, while starting more modestly, gradually added users, and endured for over a year.
As a result of our experiences with this initial round of RVM introduction, we made a number of changes in both the tool and the methods we used to introduce it.
In the weeks and months after the initial installation, we tested the RVM client and server extensively, fixing many bugs, and making the tool much more reliable and usable.
We altered permissions to be group-based.
After this change, all members of a given group, by default, can chat with each other and see each other's presence information.
The idea was to preserve privacy with respect to other RVM users in general, while making it easy to permit one's team to see one's presence information.
Adding oneself to a group provides a much easier mechanism for making presence information available to others, thereby, we hoped, quickly giving new users a capability that would interest them.
It was also at this point that we introduced persistence in group chat.
These changes seemed to improve RVM's reception, and Figure 2 bears this out.
Wireless 2 and Network both sustained substantially higher rates of use than the Wireless 1 organization.
Wireless 1 settled in at around a fairly consistent 8-10% of possible users logged in each day.
The Network organization appears to be the most volatile, jumping between about 20% and 60%.
The differences in daily login rates between Wireless 1 and Wireless 2, and between Wireless 1 and Network are highly statistically significant, using student t-tests, 1-tailed.
Wireless 2 and Network are not significantly different from each other.
Figure 4 shows daily logins for the two teams that adopted RVM in the second wave.
The Architects team  gradually increased use over time, while the Management 2 team  rose abruptly to a fairly high level of use, and stayed fairly constant throughout the period.
The Architect group, much like the Test and Quality groups in the Wireless 1 organization, grew "bottom-up."
Two users interested in RVM began using it.
As they gained experience and became convinced of its value, they became champions, recruiting the remaining team members.
Interestingly, these two initial users had adjacent offices, though the rest of their group was widely distributed.
And perhaps also reflecting the manner in which the group was initiated, some members revealed in interviews that they believed RVM was used primarily as a surveillance tool, to keep track of when people arrived and left.
We have no evidence of such use, but given no other salient use, e.g., group chat, it is not surprising that some users reached this conclusion.
The work groups who began to consistently use RVM clearly believed they were reaping benefits from the tool.
For many users, group chat was by far the favorite feature.
It provides a lightweight communication channel, a way to find out who is available, a trigger for opportunistic communication, some degree of team context, and a way to query one's entire team at once.
In addition to group chat, many members of these groups made extensive use of IM for conversations that were too sensitive or private for group chat.
Several individuals reported that it was in fact the presence awareness feature, rather than chat or IM that brought them to the tool.
They could see who was around, and had a good idea of when they could reach people.
One manager told us that he found RVM useful only because of the presence indication it provided.
This allowed him to know when his colleagues were present, and "saved me a few steps" by telling him when he could walk down the corridor and find them in their offices.
He did not have frequent communication with people at other sites.
There are several different reasons that people gave for decisions not to use RVM.
IM and chat as superfluous.
It can be difficult to describe the advantages of interactive text communication to new users.
If one needs to communicate, one can call or send an e-mail, which is what our users were accustomed to doing.
We heard a number of comments to this effect, such as, "It's just as easy to pick up a phone and call someone."
Several people said that IM and chat just didn't fit into their established ways of communicating: "...  already was using e-mail, phone and voice mail."
Others feared being overwhelmed by yet other kinds of message.
Feeling inundated with e-mail and voice mail, they saw IM and chat as further encroaching on their time to do "real" work.
Others focused their comments on the awareness functionality, i.e., being able to tell whether someone was currently logged on and active.
Some users questioned the value of this type of awareness information, e.g., "It is not that valuable to know that someone is sitting at their desk."
Others found such functionality useful, especially in conjunction with teleconferences: "Sometimes used it to check on conference calls -- were they there?"
Is "water cooler" talk real work?
IM is a tool for which most workplace users do not have a clear, well-defined need.
One does not generally hear people in the workplace asking for IM tools to help them get their work done.
It is not a direct replacement for any other tool, such as the phone or e-
Figure 4: Daily number of active users for Architects / Mgmt 2 RVM Groups.
Number of active users is measured by the number of group members who log in.
The Management 2 group, on the other hand, began using RVM because a senior manger mandated its use.
This proved effective at quickly generating sustained use.
Moreover, the most widely-publicized use of interactive text is teenagers gossiping via IM.
The utility of interactive text is subtle.
But it is not necessarily clear to the workers themselves how important this sort of informal communication is.
Rather, they often seem to perceive it as recreational, as a form of "goofing off."
These perceptions are not terribly important so long as a mechanism for supporting informal communication is intact, since such communication tends to happen spontaneously.
But if members of distributed teams fail to see "water cooler" talk as "real work," it may be difficult to persuade them that they need a tool such as RVM to replace something they may regard as frivolous.
In the many interviews we conducted before introducing any tools, it became clear that there was considerable friction between workers at different sites.
The attributions made by remote team members about the causes of their remote colleagues' "irritating" behavior are often such that additional opportunities to communicate do not seem desirable.
Especially during the early stages of sites beginning to work together, we saw many instances of what we came to call "uncharitable" attributions about behavior at the other site.
If e-mail was not answered promptly, it was because the remote person was not responsible, or did not respect the sender.
If questions were misunderstood, or not answered fully, it was not a mere language issue, it was likely the competence, commitment, or diligence of the other person that was in question.
After people got to know each other, such attributions began to disappear, but they were quite common early in cross-site relationships.
It is a well-known finding of social psychology that observers of action tend to attribute actions to personal characteristics of the actor, rather than to the actor's situation, while actors tend to see their own behavior more as a product of the situation they are in .
One of the reasons for this difference is simply the greater amount of information the actor has about his/her situation .
Enhancing awareness of remote context may help address this asymmetry.
Yet if the perceived problem is that remote team members are uncooperative, or uninterested, or hostile, or inept, then it is not clear why one would want more communication with them.
Such perceptions, e.g., "they are uncooperative" do not lead in any straightforward way to "we need IM and chat for additional context."
Who is part of my critical mass?
In one sense, critical mass simply means a group of users for whom a given new interactive technology has differential benefit, which leads to higher levels of use of the new technology by that group.
One assumption is that the criteria that determine benefit for potential members of a critical mass are universal within an organization.
This simple view is not necessarily sufficient to explain the patterns of adoption we describe in this study, however.
In particular, people seem to value very different parts of the functionality, and use the tool in very different ways - in part as a reflection of their membership in different organizational sub-units.
For example, users in settings that primarily value the group chat capabilities must have a different kind of critical mass  compared to users in settings that primarily value the tool's indication of presence .
There is a potential asymmetry here, since the "group chat" users might also be part of the "presence only" users' critical mass, while the reverse is not true.
To further complicate the picture, the critical mass number for some features, e.g., chat, may be small.
Perhaps the ability to chat with only 1 or 2 other people is sufficient .
Use purely for other features, e.g., presence information, on the other hand, might require many more users in order to be sufficiently valuable to keep users logging in regularly.
Such wrinkles present a potentially complicated picture of what constitutes critical mass, especially when it is difficult to predict what combinations of features various users in different organizational settings will find valuable.
Another facet of critical mass, to which we fell victim, poses a particular dilemma when introducing any of a large number of groupware tools.
There is widespread agreement among CHI professionals that it is essential to get feedback from real users in order to evaluate a design.
For many groupware systems, there is really no way to do this other than producing a real, working system.
Low-fidelity prototypes can be useful for evaluating interfaces, but understanding how the technology impacts social, political, privacy, and other concerns will require actual use over some period of time.
The problem is that only a few users will be innovators or early adopters, to user Rogers's  terminology, willing to tolerate a technology that is not completely "cooked."
This is not such a problem for single-user applications, since one can learn from the experience of these few to produce a better application.
But if the application requires collective adoption, and only a small percentage of users will be willing to tolerate its unpleasant features, creating sufficient critical mass to move toward collective adoption may be difficult or impossible.
Interactive communication technology must have a critical mass of users in order to achieve the larger goal of collective adoption .
In general, within a given community of interest, the more users of a new interactive technology, the higher its perceived value for non-users within the same community of interest.
This presents a genuine "groupware critical mass" dilemma.
You need a robust, usable application in order to achieve critical mass - which will lead to collective adoption and the opportunity to observe the application in use by a significant population of users.
On the other hand, you need to observe the application in use in order to refine the design into a usable, robust application.
There are several possible solutions, although none is completely adequate.
We used them all in this study.
One common solution is to have the team of developers use the tool.
While they are likely to be sufficiently tolerant, they may be atypical of other users, hence the application refined around their use may still run afoul of social or political issues, or may not fully address needs of naive users.
Another possibility is to try to find an extremely tolerant user group.
We found this in the Architects group.
They hung in there through many application crashes, a bug that degraded performance of the user's machine, very awkward administrative procedures for adding new users, and more.
By the nature of their jobs, and their tool-related responsibilities, they all seemed to be innovators or early adopters.
Finally, one can try to arrange for management pressure for adoption, in order to force the creation of critical mass .
This can be effective, but can also be dangerous.
Managers may be reluctant to put their own credibility on the line for a tool that you and they know will have significant problems.
And use under management pressure may be markedly different from spontaneous use, as we saw in the Management 2 group.
Our experience with RVM in the workplace has convinced us that its combination of features has some potential to help distributed teams overcome the lack of context and absence of informal communication, two of the problems that make distributed work difficult.
There are formidable adoption issues, however, that are likely to keep such tools out of many workplaces for some time.
Notably, the characteristics that produce a critical mass of users can be local and highly variable - which increases the cost of deploying RVM-like tools by removing general approaches to achieving collective adoption.
