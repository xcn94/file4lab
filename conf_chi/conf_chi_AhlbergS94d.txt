The Alphaslider only uses an area less than 7 cm x 2.5 cm.
The tiny size of the Alphaslider allows it to be placed on a credit card, on a control panel for a VCR, or as a widget in a direct manipulation based database interface.
An experiment was conducted with four Alphaslider designs which showed that novice AlphaSlider users could locate one item in a list of 10,000 film titles in 24 seconds on average, an expert user in about 13 seconds.
Much of the research done on selection mechanisms has focused on menus .
To make menu selections effective various techniques have been explored, such as menus with different ratios of breath and width, and menus where items are sorted by how frequently they are selected .
The RIDE interface explored in  allows users to incrementally construct strings from legal alternatives presented on the screen and thereby elminate user errors.
Research has shown that items in scrolling lists should be presented in a vertical format , items should be sorted , and that 7 lines of information is more than adequate for retrieving alphanumeric information .
Introducing an index to the scrolling list can shorten the search time .
Selecting items from lists is a common task in today's society.
New and exciting applications for selection technology are credit card sized phone directories; personal digital assistants such as the Apple Newton with complete telephone, address, and business registers; handheld computers for maintenance workers with selections of prepared reports, objects, maps, and drawings; selection mechanisms for Laser Disc players where frame numbers between 1 and 54,000 need to be selected rapidly and electronic calendars where hours, days, months and years must be selected rapidly and accurately.
Obviously there is a need for methods for selecting items quickly and accurately, without a keyboard and in a small space.
Traditional computers with large screens have used methods such as scrolling lists, menus, and keyboard entry to select items.
For new emerging handheld technologies space is limited which makes scrolling lists and menus hard to implement effectively.
The Alphaslider The Alphaslider  was first proposed by .
It is used to rapidly scan through and select from lists of alphanumeric data.
The essential components of an Alphaslider are a slide area, a slider thumb, a text output and an index to the elements that the slider operates over.
Whereas a traditional slide area lets users page through the content of a scrolling list, the Alphaslider slide area lets users move directly to a certain part of the slider range by clicking in it.
Traditional scroll bars solve this by allowing users to click on the arrow buttons to change the view without scrolling the slider thumb which is a good solution in some cases.
Another solution is to separate the user's movement of the mouse  from the display of the slider thumb - so that when the mouse is moved the position in the list is changed, but not necessarily the position of the slider thumb.
This technique makes it possible to map tens of thousands of items, if not hundreds of thousands, to a slider.
The items are easily selectable and with proper feedback the task can be accomplished rapidly.
This class of techniques has the advantage of users being able to operate the control without looking at it.
The small size of the AlphasIider calls for a compact text display, i.e.
Displaying text in a one-line display can be done in either of the following ways:  by rapidly displaying text at a fixed location, referred to as RSVP, rapid, serial, visual presentation.
RSVP has been used by psychologists to study reading behavior and it has been shown that people can read text presented in RSVP format at approximately the same speed as they can read text presented in page format ,  by scrolling text horizontally from the right to the left, referred to as Times Square.
Reading comprehension using Times Square with a smooth scrolling can be at least as high as for RSVP, and with a higher user preference , and  by scrolling text vertically - a technique that is rarely used for one-line displays .
For situations where the viewing window is narrow and presentation rate is high, we conjecture that RSVP maybe a more suitable display method and also an efficient way to search through lists .
Accordingly, the Alphasliders described in this paper all use RSVP as the display method.
The most infrequent starting characters of the items in the searched list does not show up in the index.
The value of the Alphaslider is reflected in a single line text item, which should update immediately upon user movement of the slider thumb.
Applications of Dynamic Queries have so far been limited to domains where the attributes of the database are numerical, such as real estate databases  and the chemical table of elements , but the Alphaslider makes it possible to query alphanumeric attributes, such as names, titles, and objects.
Although selecting words or names with an Alphaslider might in some cases be slower than typing on a keyboard, the use of an AlphaSlider has several advantages compared to a keyboard.
Using a keyboard, inexperienced users must search the keyboard for the appropriate key and the keyboard does not prevent misspellings.
Users may type a value for a field that is inappropriate such as a number when a person's name is required .
An Alphaslider by definition contains alt valid input choices and can continuously have its query range updated, which effectively eliminates queries that will result in an invalid or empty query result.
Design issues Some major design constraints for the Alphaslider are the small size, one line of text output, and the mapping of a large number of items to a small number of pixels, i.e.
Alphasliders, just as many other controls, should be operatable without looking at them continuously.
This is important if the Alphaslider is used in a direct manipulation interface such as a public information system or a control panel for a medical image retrieval system, where users want to concentrate on the output rather than the input - because they are visually separated.
The issue with the richest set of design possibilities is how the slider thumb should be controlled.
The Alphaslider described in  was implemented with up to 320 entries, which mapped one item to each pixel, In some applications this is sufficient, but as has been argued above, in many emerging technologies there is a need for a much larger range.
An experiment was conducted to compare different designs making it possible to map 10,000 items to a small number of pixels in an Alphaslider.
Apparatus The interfaces used in the experiment were built using the Galaxy user interface development environment with the Motif look and feel.
A Sun Microsystems SparcStation with a 17-inch color monitor and optical three button mouse was used.
The resolution of the screen was 1180 x 876 pixels.
A 14 point Times Roman Medium font was used to display the text.
The experimental setup used 10.5 cm x 3.5 cm of the screen, while the Alphaslider used 7.5 cm x 2.5 cm within the larger area.
Interfaces Four different designs of the Alphaslider were included in the experiment .
Their look and feels were similar in several aspects.
The text output was one line RSVP in all cases and was displayed over the slider.
A timing mechanism for the experiment included two buttons for each interface.
The target title was display directly above the Alphaslider value to minimize vertical eye movement.
The non-scrollbar Alphasliders would move the slider thumb directly to where the mouse was clicked in the slide area.
All the interfaces were based on the Motif look and feel .
The first interface  allowed subjects to select the granularity of their mouse movements by initiating dragging in different parts of the slider thumb.
The top part of the thumb corresponded to the coarse granularity of 100 elements per mouse movement, the middle part to the medium granularity of 20 elements per mouse movement, and the lower part to the fine granularity of one element per mouse movement.
While dragging, the active part was turned black.
The third interface  let subjects select granularity by moving the mouse at different speeds.
If subjects moved the mouse more than a certain trigger level of pixels in one mouse event, the granularity would be changed to the medium granularity, and if the speed reached a second trigger level, the granularity would be changed to COMX.
A simple stabilization algorithm allowed users to move the mouse vertically without effecting the setting of the Alphaslider.
Users select granularity by clicking in different parts of the slider thumb.
The second interface  was based on the standard Motif scroll bar .
To select and move by the coarse granularity, subjects would drag the slider thumb.
To move by the medium granularity, subjects clicked or held down the mouse button on the slide area, on either side of the thumb, and finally to move by the fine granularity subjects would click on the arrow buttons at the ends of the slide area.
With this interface subjects were not able to move directly to a particular part.
Hypotheses A very basic model for comparison of the time to locate an item with different Alphasliders, Tlocate, estimates it to be the time spent dragging and moving the slider thumb to the correct position, Dragging can be estimated with Fitt's Law , but dragging done with the Alphaslider differs substantially from tasks described in those papers.
A simple estimate of Tlocate for comparison purposes is the time users spend moving the thumb to approximately the right spot, Trough-aim, phts the time spent adjusting the thumb to find the correct item, Tadju5t.
Subjects read a general instruction sheet, were presented with interface-specific instructions for each interface and were then given five practice tasks to complete.
While reading instructions and completing practice tasks subjects were free to ask questions.
During the timed tasks for each interface, subjects were not allowed to ask questions and were asked to work as quickly as possible.
The experimenter sat next to the subject and observed the interaction.
When finished, subjects filled out a shortened QUIS-form .
After using all interfaces, subjects tilled out a forced-choice preference rating for each possible pairing of interfaces.
The Acceleration and Micrometer interfaces would perform best as the change of granularity could be done without releasing the mouse button, which would make transition from the coarse and medium granularity to fine granularity short.
The Position interface where the transition to fine granularity only asked for a very small cursor movement would follow in performance.
Also this interface did not allow users to move directly to a particular part of the slider - though this was not expected to account for a large part of differences in time between the Alphasliders.
Subjects were required to have previous mouse experience, and having worked with mouse most probably implies that it was done in a graphical user interface environment.
Consequently, subjects were expected to have used scrollbars before, which could lead to better performance for the Scrollbar interface.
For subjective evaluations it was expected that the Scrollbar interface would be preferred due to its similarity to many commercially available scroll bars - especially the Windows 3.0 scroll bar which many subjects were assumed to have used previously.
Tukey 's post-hoc HSD analysis was used to determine which interface was significantly faster.
The Position and Scrollbar interfaces were found to be significantly faster than the Micrometer and Acceleration interfaces .
Subjects used approximately 24 seconds to complete all tasks for the Position interface and 25 seconds for the Scrollbar interface.
For the Micrometer and Acceleration interfaces subjects used approximately 32 seconds.
An expert Alphaslider user - the first author - used approximately 13, 16, 14 and 19 seconds respectively for the Position, Micrometer, Acceleration and Scrollbar interfaces.
The dependent variables were:  time to locate an item in the list  subjective satisfaction.
Tasks For each interface 25 tasks were generated by presenting random items from a list of 10,000 film titles averaging 19 characters in length.
The tasks were generated at run-time when subjects pushed the start button.
For each interface subjects were presented with 5 practice tasks.
The slider thumb was returned to the middle of the slider before each task.
The results indicate that subjects consistently rated the Scrollba' interface highest, the Position interface second highest, and the Micrometer and Acceleration interfaces worst .
Holding down the mouse button while moving the mouse is a fairly complicated motor action, and subjects were found to repeatedly release the mouse button by mistake, which has been observed in other studies too .
Releasing the mouse button while dragging caused the cursor to leave the slider thumb and forced subjects to initiate dragging again.
Subjects' ability to do the necessary fine tuning was also affected by holding the mouse button down.
Subjects were observed pressing the button too hard and thereby generating friction between the mouse and the mouse pad.
For the Scrollbar interface this behavior was not observed, as subjects clicked the arrow buttons to fine tune the value of the Alphaslider.
It is reasonable to conjecture that a good design of an Alphaslider should include arrow buttons for fine adjustments.
Feedback about subjects change of granularity was provided for the Position, Micrometer, and Acceleration interfaces through a speed indicator in the slider thumb.
Although the thumb was very ciose to the dispiayed film title, it is obvious from the results of the subjective ratings of the interfaces that this feedback is not enough.
Feedback is an important design issue for the Alphaslider and will be discussed further below.
For the Position, Micrometer and Acceleration interfaces subjects were observed to mainly use the middle and fine granularity and for the Scrollbar interface mainly the thumb and the arrow buttons.
The functionality of moving directly to a certain part of the slider was used extensively by subjects.
The Position interface allowed subjects to select one of three parts of the thumb to set granularity, which was greatiy appreciated.
Subjects stated "With this interface I can exactly determine by what speed I'm going to move".
It also caused some problems because the selection areas were smatl.
As subjects were found to nearly always use the middle and fine granularities, this could be addressed by just allowing subjects to select from two granularities on the thumb - with accordingly large areas to select.
Subjects found it easy to do fine tuning with the Scrollbar interface, they just had to click the arrow button and the elements would flash by rapidly.
Some subjects experienced problems having to move the mouse between the end points of the slide area to change directions - this was particularly the case for expert mouse users who were more comfortable with the position interface where they could change directions by just moving the mouse.
The acceleration interface was expected to do well in performance, but the reverse occurred; it both performed badly and was rated low.
Subjects overshot the goal by mistake, by moving too fast and thereby triggering the acceleration.
Feedback was provided in the slider thumb but, as subjects concentrated on the text value of the slider, this feedback was overlooked in many cases.
Subjects completed their tasks on the average one second faster for the Position interface compared to the Scrollbar interface, although the difference was not statistically significant.
The successof both interfaces was probably due to the fact that they both were found to be stable and predictable by the subjects.
Observing subjects revealed different behavior for the two interfaces.
The Position interface was appreciated by some subjects for the possibility to fine-tune without releasing the mouse button, while the scrollbar interface was appreciated by others for the arrow buttons which made it possibie to finetune the setting by repeated mouse clicks instead of dragging.
The hypothesis predicted the Acceleration and Micrometer interfaces to perform better than the Position and Scrollbar interfaces, but this was not the case.
An explanation for the Micrometer interface's bad performance may be found in that subjects found it somewhat complicated.
The time for changing granularity, i.e.
But the functionality of moving the mouse vertically probably interfered with subjects' notion of mouse movements and slowed them down, A similar explanation can be found for the Acceleration interface.
By unintentionally triggering the acceleration mechanism, subjects overshot their targets and were discouraged by fast mouse movements.
The expert Alphaslider user performed nearly twice as fast as the experimental subjects, Observing the expert user's mean times revealed a different ordering of the interfaces' performance.
The order followed the predictions of the hypotheses, except for the Position interface which was the fastest for the expert user as well.
Comparisons to other seiection mechanisms Lartdauer & Nachbar let subjects select words and numbers from menus with 4,096 items, using the whole screen .
When subjects selected words of length 4-14 characters, average selection times varied from 12.5 to 23.4 seconds for different menu structures.
Doughty & Kelso had subjects select numbers from 1 to 4,096 and selection times varied from 9 to 17 seconds for different menu structures .
Alphaslider subjects had to select from film titles, probably a more difficult task, from a list which was 2,5 times as big, only using a fraction of the screen size, and their selection times varied from 24 to 32 seconds - a performance that compares favorably.
The Position interface performed well as it allowed subjects to move directly to a particular part of the Alphaslider, the value could be set by just moving the mouse, and it still allowed coarse movement with the thumb.
The Alphaslider in  would allow subjects to select either coarse or fine movement by selecting different parts of the thumb.
Fine tuning can also be done by clicking on the arrow buttons.
Whereas it was expected that the Micrometer interface would perform well, some subjects found it surprisingly difficult to operate.
An experienced user operating the Alphaslider can concentrate on the output without looking at the Alphaslider itself.
Subjects were confused by the different semantics of moving the mouse vertically and horizontally.
When releasing the mouse button the Alphaslider returned to the middle granularity, to avoid modes that the Alphaslider could be left in.
While this was not detected as a design flaw in the design process and in the pilot experiment, during the experiment it became obvious that this design caused frustration for subjects - especially those who frequently released the mouse button by mistake.
From both the forced choice ratings and the QUIS analysis it is obvious that subjects preferred the Scrollbar interface.
One explanation for this is that the slide area and thumb part of the Alphaslider was similar to other scrollbars subjects had previously used.
The particular feature of the Scrollbar interface that subjects liked was the arrow buttons.
One subject stated about the Scrollbar interface: "This is the interface type I am most familiar with, and thus I was able to apply many of my personal strategies to it.
It was neither as fast nor as intuitive as #3 , however".
Subjects' reactions to the Acceleration interface were interesting.
One subject stated: "Why accelerate at all, as you can just click and go to a particukir place directly?"
Reflecting the opposite opinion, one subject stated "It's much easier than the other interfaces, you just need to move the mouse ".
Subjects appreciated the stability of the Position interfac~ "With this interface I can exactly determine by what speed I'm going to move".
The use of the Alphaslider together with other input devices, such as touch screens, pens, trackballs, and joysticks, should be studied.
The results in this paper should generalize to trackballs and joysticks, but for touchscreens and penbased systems several interesting design alternatives emerge.
Although  suggest the use of RSVP for searching lists, they also show that the Times Square method of displaying text is highly effective.
This should be explored as a design option.
Providing feedback is important when browsing large information spaces, Sound could indicate granularity and granularity changes.
Possible visual cues include indicators in the index below the slide area, display of the text field in different colors, a speed bar displayed just under the text field, zooming in the index, etc.
The Alphaslider in this paper has one line of text output.
The use of two or more lines of text output is certainly possible and should be explored.
The Alphaslider is a widget that makes it possible to rapidly select items from long lists without a keyboard using minimal screen space.
Four different designs of an Alphaslider were evaluated in a controlled experiment.
Lessons learned from the study tell implementors and designers that Alphasliders are ready to be included in interactive systems and user interface management systems.
With good use of feedback techniques, the Alphaslider is a powerful, compact, and rapid way of selecting items from lists.
The University of Maryland is seeking to patent the Alphaslider.
We appreciate support from Chalmerska Forskningsfonden, Adlerbertska Forskningsfonden, and Kungliga Hvitfeldska St.ipendieinrtittningen which made this research possible.
This research was done in the "Widget Carvers of College Park" group - Rich Chimera, Catherine Plaisant, Ninad Jog, Harsha Kumar, and Marko Teittinen, who all contributed at lively design meetings, late night hacking sessions, and early morning email reports.
