In this paper we propose a new video interaction model called adaptive fast-forwarding to help people quickly browse videos with predefined semantic rules.
This model is designed around the metaphor of "scenic car driving," in which the driver slows down near areas of interest and speeds through unexciting areas.
Results from a preliminary user study of our video player suggest the following:  the player should adaptively adjust the current playback speed based on the complexity of the present scene and predefined semantic events;  the player should learn user preferences about predefined event types as well as a suitable playback speed;  the player should fast-forward the video continuously with a playback rate acceptable to the user to avoid missing any undefined events or areas of interest.
Furthermore, our user study results suggest that for certain types of video, our SmartPlayer yields better user experiences in browsing and fast-forwarding videos than existing video players' interaction models.
To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee.
Recent developments in digital technologies have made it easy for people to download, record, and watch videos on a variety of media access devices.
Smart media access devices such as the TiVo  set-top box also learn users' preferences about TV programs, and automatically record them for users.
Additionally, inexpensive mass storage devices enable people to stock unwatched video content on hard disks.
Despite the fact that digital content recording and storing technologies continue to improve over time, video playback systems have not changed much.
Commercial video players such as Apple QuickTime Player , CyberLink PowerDVD , Microsoft Windows Media Player , and Real Network RealOnePlayer  offer comparable sets of simple controls for playing, pausing, stopping, fast-forwarding, and rewinding/reversing videos.
When users have limited patience or time to watch the entire length of a video, they are obliged to manually skim and fast-forward to locate content of interest to watch in fine detail.
This often involves tedious work on the users' part.
Hence, smart playback mechanisms are needed to help users efficiently skim through and fast-forward lengthy and boring content while slowing down to watch the good parts in fine detail.
Several video summarization methods  have been proposed to enable users to skim through content within a short amount of time.
They can be categorized into two approaches: still-image abstraction and video skimming.
For example, key-frames can be played back sequentially as a slideshow or composed into an image mosaic .
Although still-image abstraction has been shown to be effective in helping people quickly obtain a general understanding of what is contained in a video, it does not provide sufficient information to users who want finer details on the parts they are interested in, either for comprehension or entertainment.
In contrast to the still-image abstraction approach, the video skimming approach uses automated video analysis to extract segments that carry significant information, composing them into a short video summary.
Predefined events or rules guide the decision on the significance of different video segments.
When fast-forwarding through new or unfamiliar content, since most users are not able to anticipate precisely where and whether the upcoming content matches their interests, they do not know when they ought to speed up or slow down the playback rate.
Even if the key-frames or video summary extracted through automated video analysis are presented to users, they may still wonder or worry about missing any of what they consider the good parts, given that automated video analysis, based on predefined and incomplete event sets, often falls short of good semantic accuracy.
Therefore, although our SmartPlayer adopts the video skimming approach, it does not skip any parts of a video but enables rapid skimming at a fast playback speed.
Because their player system preserves the audio pitch, it sets a maximum playback rate at 250%  of the normal playback speed.
Since their player system is designed specifically for lecture-type videos in which the audio is important, it may not be suitable for other motion- or event-centric types of video programs such as sports or surveillance.
One noted finding in their studies is that although video skimming is applicable to a wide range of videos, people are unwilling to fast-forward video programs such as movies or entertainment shows.
This finding was consistent with our user inquiry.
In this paper, we propose a new interaction model based on the metaphor of "scenic car driving."
Drivers adjust their speed according to road conditions as well as the quality of the scenery.
When the scenery is monotonous or boring, drivers tend to speed up and skip it.
When the scenery is complex and interesting, drivers tend to slow down to get a better look.
They may also use GPS navigation and guide devices to inform them of any upcoming POIs , and then slow down approaching these areas.
When drivers encounter unlabeled POIs that the GPS guide device misses, as they are in control of the car, they can still slow down to get a better look.
Our SmartPlayer is designed based on this "scenic car driving" metaphor with the following features:
Learning user preferences is necessary for adapting video playback speed.
The rest of this paper is organized as follows.
We first review related work, and then describe a preliminary user inquiry.
Based on the observations from this user inquiry, we then show how our SmartPlayer system is designed.
Afterward, we outline the user study tasks that were conducted to evaluate our SmartPlayer.
Finally, we discuss findings that can be generalized to other designs, as well as future work.
Many video interaction methods, described in , have been proposed to help users browse video content.
Some interaction models, though less relevant to video browsing, have inspired our work.
For example, Igarashi et al.
Similarly, our SmartPlayer finds the semantic properties of a video and adapts the playback rate accordingly.
Other work involves novel control slider bars to improve the video browsing experience.
The browsing speed is adjusted based on the distance between the mouse pointer and the thumb on the scrollbar.
However, this mechanism does not lead to intuitive browsing speed control because the thumb moves continuously during video playback, and users must keep moving their cursor to maintain a certain browsing speed.
Although playing with this direct video manipulation is fun for short video segments, it is not suitable for browsing long videos.
Other work uses still-image abstraction to construct content summaries, enabling users to quickly obtain a high-level understanding of what is contained in a video.
One representation of a video collage is a mosaic, which also serves as a catalog with entry points to different video segments.
Various work uses automated video analysis techniques to construct content summaries from interesting video segments and events .
Interesting events are identified by analyzing a variety of image features, including color, contrast, speech, closed captions, camera motion, and human faces.
Domain-specific knowledge is often necessary to improve the detection accuracy of interesting video segments.
For example, videos of baseball , tennis , weddings , movies , and news  call for analysis of different feature sets corresponding to what are considered interesting semantic concepts in the different video domains.
To enable our SmartPlayer to work on diverse video types, we separate the video analyzers  from the main player, such that it is an independent, pluggable unit.
For example, when a news video is being played, the semantic layer loads the news domain-specific video analyzer that identifies interesting events for news.
Accelerating video playback enables users to efficiently browse videos.
We adopt a similar method.
However, unlike their approach, we do not arbitrarily choose a threshold to accelerate playback speed.
Since results of our user study indicate that different users have different preferences and tolerances with respect to playback speed acceleration, we adopt a learning mechanism that adapts playback speed according to user preferences.
Other work has developed methods for constructing personalized video summarizations.
Lie and Hsu  propose a method to generate personalized video summarizations by asking users to fill out questionnaires on their preferences.
Compared to their approach, our SmartPlayer learns user preferences by observing how users change and override the playback speed set by the system, and thus does not require users to fill out forms.
For example, if a user indicates his or her dislike for certain types of events by consistently speeding up to skip past them, the SmartPlayer will learn this user preference and increase the playback speed for these types of events.
9 out of the 10 participants fast-forward sports videos, because sports videos have predefined patterns and rules which they can use to predict what they are interested in.
No participant fast-forwards movies, because they expect good movies to be enjoyable from start to finish.
2 out of the 10 participants fast-forward lecture videos when slides are shown in the video program.
The other 8 participants consider audio critical for understanding lecture videos, and speech comprehension requires time to think and reflect.
Therefore, they think that lecture videos should not be fast-forwarded.
Thus, videos with predefined rules or simple events, such as surveillance and sports videos, are suitable for fastforwarding.
We then investigated how users fast-forward these videos.
We prepared five types of video programs: surveillance, baseball, tennis, golf, and wedding videos.
The length of each video clip was about twenty minutes.
Participants were asked to watch these five videos as quickly as possible.
Before testing, for each type of video, we also prepared training videos to familiarize the participants with the rules or event patterns.
The testing and training videos are separated into different sets.
To analyze and record user playback behavior, we designed a prototype player with acceleration and deceleration buttons, for which the maximum playback speed was 16x normal playback speed.
We also provided a hotkey to allow them to jump to the normal speed  immediately, analogous to an emergency brake in a car.
The prototype player recorded all participants' button clicks and video-watching behavior for analysis.
We also asked participants some questions to understand their video-watching behavior.
From our analysis, we discerned the following principles to guide the design of our SmartPlayer system.
Participants had varying tolerance on the fast-forward speeds for different video types.
The user-acceptable fast-forward speed for complex, motion-rich videos  was much lower than that of slow videos .
This is because in golf, progress is relatively simple and motion-less, the scene is simple, and the camera view does not move or pan too much.
Based on this observation, we designed the learning mechanism to adjust playback speed according to user preferences.
Participants in general maintained a constant playback speed within one video shot  and seldom changed the playback speed dramatically.
They preferred to gradually increase the playback speed, allowing their eyes to accommodate to a higher playback speed.
When asked about their preferences about skipping in-between, non-event parts of videos, participants said that they prefer not to skip any parts on the first pass, because these in-between video segments provide "context to help them understand what's going on" and enabled them to "watch the video more enjoyably".
Based on these findings, we designed our new video browsing interaction model into the SmartPlayer.
Prior to designing our SmartPlayer, we performed a preliminary user inquiry on how users watch videos with the fastforwarding mechanism.
There were 10 unpaid participants in this user inquiry: 5 males and 5 females.
All participants were computer-savvy users with experience watching videos on computers.
We listed many types of video programs, including short video clips, lectures, home videos, sports videos, movies, cartoons, news programs, travel videos, and surveillance videos, and asked the participants why and what types of video programs they prefer to fast-forward.
Our findings are as follows.
The goal of the SmartPlayer is to provide a better user experience when watching videos in fast-forward mode.
Based on the metaphor of the "scenic car driving", SmartPlayer automatically adjusts playback speed according to the complexity of the current scene and predefined events.
In addition, SmartPlayer allows users to manually adjust or override the playback speed set by the system, thus allowing the system to learn individual user preferences for different events of interest as well as preferred playback speeds.
When first playing a video, SmartPlayer starts out in an automatic playing mode.
This is similar to the autopilot in an airplane.
In automatic playing mode, the video playback speed is automatically increased or decreased according to the current scene.
We design a skimming model  to formulate these principals.
Findings from the preliminary user inquiry  that are valuable for designing the SmartPlayer are summarized below.
Based on the observations, adjusting the playback speed frame by frame would not be desirable.
Instead, SmartPlayer cuts the video into a number of segments and then adjusts the playback speed gradually across segment boundaries.
Additionally, because users change the playback speed based on recently viewed content, the speed of the upcoming content should take into account not only the motion complexity of the upcoming content but also the playback speed of the previous content.
Instead of providing the control of playback speed with limited and discontinuous choices  like most existing video players, SmartPlayer allows a seemingly continuous playback speed control at a fine increment of 0.1x up to the maximum speed of 16x.
There is no frame dropping during fast-
By default, SmartPlayer automatically changes speed according to scene complexity.
If users dislike the current playback speed under the automatic playing mode, they can manually reset the playback speed.
In manual mode, the player adjusts playback speed only according to user input.
In the following sections, we will describe each of the features in SmartPlayer as well as the underlying technologies.
To allow for automated playback speed adjustment, three software engines  have been developed.
These engines correspond to the motion layer, the semantic layer, and the personalization layer.
The motion layer adapts the default playback rate according to detected motion between frames, in which higher motion maps to a lower speed, and vice versa.
The semantic layer detects predefined semantic events in the video, and the personalization layer learns user preferences by analyzing the user's previous video browsing behavior.
The design and implementation of these three engines is described in the following sections.
In order to support adaptive fast-forwarding, it is essential to gauge the similarity between scenes.
We use two lowlevel features for this: color and motion.
Calculating color histogram differences between frames  allows us to detect shot boundaries in a video.
To estimate the motion magnitude between two frames, we extract optical flows between frames using the LucasKanade method , which is a widely-used motion estimation approach.
The motion magnitude between two frames is computed using the following equation:
If M f  max , the playback rate is set to the normal , where max is trained from a huge amount of video clips.
Figure 5 shows the SmartPlayer user interface.
In addition to the basic control buttons , the playback speed is shown at the center of the control panel dashboard to match the "scenic car driving" design metaphor.
When the playback speed changes, the needle swivels to the current speed.
The numeric playback speed is also shown to the right.
Visualizing the scene complexity and semantic events in a video helps users grasp the temporal locations of potential interesting events.
We designed an improved seeker bar , shown near the bottom of the SmartPlayer control panel.
This bar is similar to the scented widgets proposed by Willett et al.
Our visual scent on the video seeker bar is encoded by the amount of saturation on the red color.
If a video segment has a relatively high amount of motion, its red color saturation value on the seeker bar will be higher than those of other video segments.
This indicates that the SmartPlayer will likely slow down when playing this motion-rich video segment.
The semantic layer extracts semantic event points in a video.
To effectively extract these event points, predefined domain-specific inference rules are required, for instance those for sports  and weddings .
As the semantic layer is domain-specific, it uses a plug-in framework in which different inference rules can be inserted to process different domain-specific videos.
Since our system focuses on how to adjust the fast-forward speed, we used manually annotated semantic events in the testing video clips.
Note that such manual annotations can be replaced by an automated event detector such as MagicSport  for baseball videos.
The personalization layer is used to learn user preferences.
In SmartPlayer, users can adjust the playback speed if they dislike the current playback speed set by the automatic playing mode.
By learning from user input, SmartPlayer updates user preferences with respect to video playback speed.
We calculate the new video playback speed by linearly interpolating the original playback speed and the user's input speed as Se =  Se +  Seu , where Se , Se , and S eu are the updated, original, and user input playback speeds for the predefined event type e ; the weight  is set to 0.95 based to user feedbacks.
A video segment with no predefined event is treated as event type enone , corresponding to a "none" event.
To learn user preferences for various event types, the default playback speeds for all predefined events are initially set to the normal speed .
If a user dislikes one specific event type, he or she will accelerate the playback speed through this specific event.
The SmartPlayer thus learns to adjust the playback speed when the same event type is encountered in the future.
Figure 4 shows one of the learning results.
The blue line shows the default playback speed as generated by taking into account each scene's motion complexity and the detected predefined events.
The red line shows the learned speed.
To assess how well the SmartPlayer improves the user's experience for browsing video, we recruited test subjects and asked them to perform the following two tasks, during which we collected their video watching data.
The first task involved using the SmartPlayer to browse through several selected videos of the target types, from which user data was collected to analyze the functional usability of the adaptive fast-forwarding mechanism.
The second task involved browsing selected videos using the SmartPlayer and other video players, from which user data was collected to compare the effectiveness and user satisfactory of the SmartPlayer with that of the traditional player, such as Apple QuickTime Player  and Microsoft Windows Media Player , and the event-based player, which plays only system-detected, predefined events and skips other video segments.
Participants were asked to watch videos using the SmartPlayer.
Five types of videos were selected: surveillance, baseball, news, drama, and wedding videos.
Each type of video included one training video and five testing videos.
The training video was used to familiarize participants with the SmartPlayer user interface.
Five testing videos were used in the actual user testing.
Prior to the user testing, we used a short 5-minute briefing to explain the functions of the SmartPlayer.
Then we asked participants to watch the videos as fast as they could while trying to understand the content.
After participants watched the videos, we interviewed them  to assess how much actual content they comprehended and  to understand their fast-forwarding strategies using the SmartPlayer's functions.
Additionally, the program also recorded the participants' manual fastforwarding behaviors for later analysis.
Events in baseball videos were defined and classified according to well-known baseball rules, such as pitch, hit, homerun, etc.
Events in surveillance videos were defined and classified based on the appearance of pedestrians, cars, and bicycles, etc.
Similarly, events in wedding videos were defined and classified according to the formal wedding procedure.
Events in news reports were categorized into political, financial, life, and international event types.
Since it was difficult to define events in drama videos, no event was defined.
Figure 6 shows the average number of manual adjustments for the 20 participants who used the SmartPlayer to watch five videos in each of five video types .
Our three main findings include the following.
This suggests that as each participant watched more clips of the same type of video, the SmartPlayer learned more about his/her preference, thus resulting in a reduced number of manual adjustments.
The results for surveillance, baseball, and wedding videos were expected because surveillance videos have explicit events, and wedding and baseball videos have explicitly defined rules.
We found two participants who did not make any adjustment to the automated playback speed when watching baseball videos.
These two participants remarked that the automated playback speed was appropriate and that the sys-
From the analysis of the manual fast-forwarding behaviors and the user interviews, participants adjusted playback speeds to be no higher than the speed at which they could follow the subtitles in the drama videos.
A similar phenomenon was also observed for news videos.
Although subtitles effectively improved the learning mechanism of fast-forwarding, the bottleneck becomes the playback speed at which viewers can follow the subtitles .
We learned that effectively leveraging subtitles can also help users fast-forward videos.
Participants had specific preferences for different categories of news.
For example, some participants were not interested in political news, and hence consistently fast-forwarded such videos.
However, when we asked these participants if they wanted to skip all political news completely, they answered no because they still wanted to know the political news for that day, which they indicated to be the reason for watching news.
Due to the high fast-forwarding speed we muted the audio.
Participants found that the lack of audio for certain video types, such as news and wedding videos, degraded the viewing experience because the vocal content was important for comprehension.
Therefore, subtitles might be help-
Participants were asked to watch videos using three video players, which are the SmartPlayer, the traditional player, and the event-based player.
Three different video clips were prepared for each video type so that each participant would not watch the same video clip repetitively on the three different video players.
Additionally, the playback order for the three video clips was set randomly on the three video players for the different participants, thus reducing the ordering effect on the video clips.
Each video clip was approximately 10-minute in length when played at regular speed.
For user behavior analysis, our system recorded the total watching times for each video clip on each of three video players by each participant.
After watching the video clips, participants were asked to fill out questionnaires containing five true/false questions to assess their comprehension of the video contents.
After completing the questions, the participants also filled out qualitative questionnaires about their preferences with respect to the three video players and their experiences fast-forwarding different types of videos.
Second, the SmartPlayer adjusts playback speed according to scene complexity and detected events.
Hence, when using the traditional player, users do not have any information about what will happen next, and therefore watch the video with relatively slow speeds.
This is like driving on an unfamiliar road; we tend to slow down when we do not know enough about the surrounding environment.
Figure 8 shows the average video comprehension levels from the 20 participants who watched baseball, surveillance and news video clips on the SmartPlayer, the traditional player and the event-based player.
Two main findings were described as follows.
The average comprehension level for the SmartPlayer was similar to that of the traditional player; this means that while using the SmartPlayer, users can still effectively understand the video contents.
This is likely because users usually can understand a news story by its title.
Figure 9 shows the average ratings , calculated from the results of questionnaires filled out by 20 participants, for each of the three video players in watching baseball, surveillance, and news videos.
For baseball and news videos, participants preferred the SmartPlayer over the other two video players.
For surveillance videos, participants preferred the event-based player over the other two players because surveillance videos are extremely boring and non-event segments are usually meaningless to viewers.
Note that participants missed some important undefined events using the event-based player.
In comparison, if the non-event segment provided meaning to the viewers, they preferred the SmartPlayer, because the SmartPlayer preserved in-between video segments to help them comprehend what was going on, and because the fast-forwarded video segments also contained interesting yet undefined events.
For an example, during discussion with participants about the contents of a baseball video, many participants noticed many interesting yet undefined events, such as coaches coming on the field to negotiate with the referee, audience played waving, bats broking, etc.
Figure 7 shows the average video watching time for the 20 participants who used the SmartPlayer, the traditional player, and the event-based player to watch baseball, surveillance, and news videos.
On average, participants spent more watching time using the traditional player than that using the SmartPlayer and the event-based player.
The eventbased player had the least amount of watching time because it skipped all of the non-event segments.
Since some undefined events were embedded in the skipped segments, participants missed important information.
We believe that there are two main reasons for the traditional player's requiring more time than the SmartPlayer.
First, the SmartPlayer provides an event detection mechanism and marks detected events on the seeker bar as shown in Figure 5, these marks can be seen as good hints to adjust the play-
From our findings in the user inquiry, we found that although certain video types such as sports and surveillance videos were suitable for automated fast-forwarding, but other video types such as movies and lectures were not.
Video types such as news programs may or may not be suitable, depending on whether they have clear patterns or rely on audio information for understanding.
To generalize our design concepts, our fast-forwarding mechanism is suitable for videos with the following characteristics:
For example, lecture talks are not suitable for high-speed fast-forwarding because the user's attention is mainly focused on understanding what the speaker is saying.
For example, viewers can often guess that a baseball player has hit a homerun from the player's body movement and the subsequent celebratory scene.
From our findings, the two main reasons for fast-forwarding a video are that  viewers do not have enough time to watch the entire video and  viewers perceive the video as boring.
For example, each sport has its own game-play rules, which enable our system to automatically recognize and learn events that are of interest/disinterest to users.
For example, wedding videos often have formal procedures, and news videos often follow formal patterns with interlaced news gathering at the scene and the announcer's report.
Table 1 shows the results from our usability test that compares the SmartPlayer with the traditional player and the event-based player.
Our findings suggest that the SmartPlayer helps participants watch videos in fast-forward mode, reduces watching time from that of the traditional player, maintains a pleasurable viewing experience, and unlike the event-based player, does not cause participants to miss any interesting content.
Compared to the traditional player, participants do not need to manually adjust the playback speed all the time, because the SmartPlayer can learn their preferences with respect to playback speed.
Moreover, providing seemingly continuous playback speed control at fine increments  may be more suitable for a large range of users.
While using the traditional player, users are limited to playback speeds of 1x, 2x, 4x, etc., and thus cannot fine-tune the playback speed according to their true preference.
Hence, providing fine increments also follows the spirit of the universal design principle.
In comparison to the traditional player and the event-based player, the SmartPlayer also provides personalization to help participants browse videos effectively at their preferred playback speed.
In this paper, we propose a new interactive video browsing model, in which the design concept adopts the metaphor of "scenic car driving".
From observations in the user inquiry, our SmartPlayer automatically adapts its playback speed according to the scene complexity, any predefined events of interest, and the user's preferences with respect to playback speed.
Additionally, the SmartPlayer also learns the user's preferred event types and the preferred playback speeds for these event types from the user's manual adjustments.
Our user study shows that as a user watches videos over time, the SmartPlayer effectively learns his or her preferences to make more accurate playback speed adjustment.
Moreover, not skipping any video segments  maintains a sense of context and enhances the user experience in browsing and comprehension.
Future work will improve upon the limitations of the SmartPlayer found in our user studies.
For example, if users are familiar with the rules of the baseball game, they can guess how the game will progress according to the distribution of the events.
If two adjacent events are separated by a long period of time, users may guess that our system has missed events of interest between these two events.
To help users make accurate guesses, advanced visualization techniques can be provided on the event slider bar such as coloring various types of events with unique colors.
The current SmartPlayer mutes the audio during fastforwarding.
If the videos are event- and motion-centric, users can still understand the content.
However, lack of background audio degrades the user watching experience.
We hope to provide quality audio during fast-forwarding to accompany the video.
Our learning function weights the previous playback speed and the user's input speed to provide an updated video playback speed.
If a user seeks to change the video playback speed to his or her preferred value, he or she must input the new value several times.
Therefore, in the future we might alter the learning function to consider not only the frequency but also the duration of user's input.
In addition, we found that users sometimes accidently accelerate events.
However, the length of some event types is so short that users cannot train the SmartPlayer to reduce the speed again after they have made this mistake.
To handle this problem, we might provide a semantic acceleration mechanism such that if the event's length is too short, the SmartPlayer would adjust its speed only slightly according to users' input speed.
Though our interactive video browsing model is designed for browsing video with predefined rules, such as sports or surveillance videos, there may be the potential to extend our design concepts to different types of videos and apply it to different use scenarios, which we can explore more in the future.
We gratefully acknowledge helpful comments and suggestions from the Associate Chair, and the anonymous reviewers.
We would also like to thank to Shang Chou, MingYang Yu, and Ken-Yi Lee for their help, and to the users who perform the usability testing and provide significant insight comments on our SmartPlayer.
This paper was partially supported by the National Science Council of Taiwan under NSC97-2622-E-002-010 and also by the Excellent Research Projects of the National Taiwan University under NTU97R0062-04.
Masui, T., Kashiwagi, K., and Borden, G. R. Elastic graphical interfaces for precise data manipulation.
Peker, K. A. and Divakaran, A.
An extended framework for adaptive playback-based video summarization.
Peker, K. A., Divakaran, A., and Sun, H. Constant pace skimming and temporal sub-sampling of video using motion activity.
Sundaram, H. and Chang, S.-F. Video skims: Taxonomies and an optimal generation framework.
