We performed several experiments using a Personal Digital Assistant  as an input device in the non-dominant hand along with a mouse in the dominant hand.
A PDA is a small hand-held palm-size computer like a 3Com Palm Pilot or a Windows CE device.
These are becoming widely available and are easily connected to a PC.
Results of our experiments indicate that people can accurately and quickly select among a small numbers of buttons on the PDA using the left hand without looking, and that, as predicted, performance, does decrease as the number of buttons increases.
Homing times to move both hands between the keyboard and devices are only about 10% to 15% slower than times to move a single hand to the mouse, suggesting that acquiring two devices does not cause a large penalty.
In an application task, we found that scrolling web pages using buttons or a scroller on the PDA matched the speed of using a mouse with a conventional scroll bar, and beat the best two-handed times reported in an earlier experiment.
These results will help make two-handed interactions with computers more widely available and more effective.
Keywords: Personal Digital Assistants , Hand-held computers, Palm Pilot, Windows CE, Two-Handed Input, Smart Environments, Ubiquitous Computing, Pebbles.
Furthermore, newer PDAs, such as the Palm V and the HP Jornada 420, are rechargeable, so they are supposed to be put in their cradles next to a PC when the user is in the ofrice.
Therefore, if using a PDA in the non-dominant hand proves useful and effective, it should be increasingly easy and sensible to use PDAs for two-handed input.
Another advantage of PDAs over the input devices studied in previous experiments is that they are much more flexible.
PDAs have a display on which virtual buttons, knobs and sliders can be displayed, and they can be programmed to respond to a wide variety of behaviors that can be wellmatched to l~articular tasks.
However, a disadvantage is that the controls on the PDA screen are virtual, so users cannot find them by feel.
Research is therefore needed to assess how well the PDA screen can work as a replacement for other input devices that have been studied for the left hand.
This paper reports on several experiments that measure various aspects of using a PDA as an input device in the non-dominant hand.
Two experiments are new and are designed to measure the parameters of using a PDA.
One experiment repeats an earlier study  but uses a PDA in the non-dominant hand.
Since the actual pragmatics of input devices can have a large impact on their effectiveness , we wanted to determine whether the results seen in prior experiments would also apply to using PDAs.
In summary, the results are: * People can quickly and reliably hit large buttons drawn on the PDA with the fingers on their left hands without looking.
99% of the button taps were correct on buttons that are 1-inch square in a 2x2 arrangement.
With a larger number of smaller buttons, the accuracy significantly decreases: 95% were correct for 16 buttons that are IA inch on a side arranged 4x4.
The time from stimulus to button tap was about 0.7 sec for the large buttons and 0.9 seconds for the smaller buttons.
Many studies of two-handed input for computers have shown advantages for various tasks .
However, people rarely have the option of using more than just a mouse and keyboard because other input devices are relatively expensive, awkward to set up, and few applications can take advantage of them.
However, increasing numbers of people now do have a device that they carry around that could serve as an extra input device for the computer: their Personal Digital Assistant .
Moving to a PDA and mouse from the keyboard took an average of 0.838 seconds, which is about 15% longer than moving one hand to the mouse .
The times we found for scrolling with buttons on the PDA were faster than any of the times in the earlier study, including the 2-handed ones.
Figure 1 shows the experimental set up.
Subjects sat at a normal PC desktop computer that was running Windows NT.
On the right of the keyboard was a mouse on a mouse pad.
On the left was an IBM WorkPad 8602-30X PDA .
In the first study, we put the WorkPad in its cradle.
Subjects complained that the WorkPad was wobbly it its cradle, so for the second study, the new subjects used a WorkPad resting on a book and connected by a serial cable to the PC.
There were no further comments about the positioning.
The WorkPad has a 31,4-inch diagonal LCD display screen  which is touch sensitive.
Figure 2 shows a picture of the full WorkPad.
Subjects used their fingers to touch the screen  as shown in Figure 1.
The software running on the WorkPad was our Pebbles Shortcutter program that allows panels of controls to be created so that each control sends specified events to the PC.
The software on the PC consisted of various applications specifically created for this experiment .
One of the earliest experiments measured the use of two hands in a positioning and scaling task and for scrolling to known parts of a document .
This study found that people naturally adopted parallel use of both hands and could scroll faster with the left hand.
Theoretical studies show that people naturally assign different tasks to each hand, and that the non-dominant hand can support the task of the dominant hand .
This has motivated two-handed interfaces where the non-dominant hand plays a supporting role, such as controlling other drawing tools  and adjusting translation and scaling .
Another study investigated how accurately gestures could be drawn with the nondominant hand on a small touchpad mounted on top of a mouse .
Two-handed input for 3D interaction  has also been found to be useful.
There has been prior work on using PDAs at the same time as regular computers for various tasks including meeting support , sharing information , and to help individuals at their desks, but we found no prior work on measuring performance of non-dominant hand use of PDAs.
Two new studies were performed.
In the first, the subjects did five tasks in a row.
The first task was a typing test to see how fast the subjects could type.
Next, they performed a button size task to measure the error rates and speeds when tapping on different size buttons on the PDA.
Next, the subjects performed a homing speed task where we measured the how quickly the subjects moved among the keyboard and the devices.
Finally, they performed a scrolling task using a variety of devices, which is a repeat of an earlier experiment .
The subjects reported a number of problems with the scrolling devices on the PDA in the last task, so we redesigned the scrolling device~, and in a second study with new subjects, we evaluated the performance of the new scrollers on the same task.
Half of the subjects used the order shown above, and the other half used the reverse order .
In the 2x2 condition, the buttons were about one inch square, and in the 4x4, they were about 1/2 inch square.
At the beginning of each condition, a picture was displayed on the PC screen showing the corresponding layout of the buttons .
Then one of the buttons was shaded black .
The subjects were asked to tap on the corresponding button on the WorkPad as quickly and accurately as possible with a finger on their left hand.
The stimuli appeared in random order.
A total of 48 stimuli were used in each condition.
Every button appeared the same number of times.
For example, for the layout of 2 rows by 2 columns, each button appeared 12 times, while for the layout of 3 rows by 4 columns, each button appeared 4 times.
There was a break after each condition.
Our hypotheses were that people could more accurately select among fewer, larger buttons, and that people could make selections without looking at the WorkPad.
WorkPad click to the first character typed, and from the last character typed to the first movement of the mouse or tap on the WorkPad.
We did not count the time spent actually typing, and we eliminated the times for the first and last words, because they were biased by start-up and transients.
We hypothesized that moving to the WorkPad and the mouse would not take much longer than moving one hand since people would move both hands at the same time.
We were also interested in the actual numbers for the time measurements.
These might be used with future models of human performance for two-handed homing tasks.
The purpose of this task was to measure the times to move the hands back and forth from the keyboard to the mouse and WorkPad as the subjects switch between two-handed selection operation and two-handed typing.
We compared moving a single hand to and from the keyboard to moving both hands.
There were three conditions with three trials in each.
In each trial, 14 textboxes were shown on the screen with a label in front of each.
The conditions were that the subjects had to first select a text box by either clicking in the field with the mouse in the usual way, tapping on a full-screen button on the WorkPad , or tap on the WorkPad and click the mouse at the same time.
In other words, the selection operation in this last condition was like a "Shift-Click" operation in which the button on the WorkPad was treated as a Shift key.
After the textbox was selected, the subjects typed the word indicated on the left of the textbox.
The word was either "apple" or "peach" .
These words were chosen because they are easy to type and remember, and they start and end with keys that are under the opposite hands.
The user could not exit the field until the word was typed correctly.
After typing the word correctly into the textbox, the subject then continued to perform the same selection-typing operation in the next textbox.
The trial ended when all 14 textboxes on the screen were filled in.
There was a break after each trial.
For this task, we were able to replicate the conditions of a previous experiment  exactly.
1 The purpose of this task was to evaluate and compare subjects' performance in scrolling web pages in a standard browser using different scrolling methods.
The web pages contain text from an IBM computing terminology dictionary, and each page is about 12 screen-fulls of text.
In each web page a hyperlink with the word "Next" is embedded at an unpredictable location.
The subjects were asked to find the target hyperlink by scrolling the web page using the different scrolling mechanisms.
Once the link was visible, they used the mouse in the conventional way to click on it.
Clicking on the hyperlink brought the subject to the next web page.
For each condition, the subjects first performed a practice run of 10 pages, during which they were asked to try out the scrolling method without being timed.
Then, the subjects did two consecutive trials of 10 pages each as fast as they could.
The condition with the fastest time in the previous experiment used a "pointing stick" joystick to scroll, but we were 1 Thanks very much to Shumin Zhai of IBM for supplyingthe experimental material from the earlier study.
2 The conditions we used in our first experiment were: * Scrolling using the mouse and the regular scroll bar.
We were careful to explain to the subjects the three different ways the wheel can be used, including rolling the wheel, or tapping or holding the wheel down to go into "scroll mode" where the further you move the mouse from the tap point, the faster the text scrolls.
The subjects could choose which methods to use.
There were 6 buttons that scrolled up and down a line, up and down a page, and left and right .
The buttons auto-repeated if held down.
Putting a finger on the slider and moving up or down moved the text the corresponding amount.
If you reach the edge of the slider, then you need to lift your finger and re-stroke.
Tapping on the slider has no effect since only relative movements are used.
This is similar one of the sliders used in the early Buxton and Myers study .
Putting a finger anywhere on the WorkPad and moving up or down started the text moving in that direction, and moving the finger further from the start point scrolled faster.
The order of the conditions was varied across subjects using a Latin square.
There were 12 subjects in the first study, which took about an hour and they were paid $15 for participating.
12 different subjects did the second study, which took about Y2 hour and they were paid $10.
All subjects from both studies were Carnegie Mellon University students, faculty, or staff.
All were moderately to highly proficient with computers, and about half of the subjects had used PDAs.
The data from some extra subjects were eliminated due to technical difficulties.
The measures from two subjects who were left-handed are not included in the data, but informally, their numbers did not look different.
Pearson product-moment correlation coefficient between typing speed and tap speed in the button size task  was .60, which means the faster typists were somewhat faster at tapping.
The correlation coefficient between typing speed and the speed for moving one hand from the PDA to the keyboard in the homing task was .79 which means, as expected, subjects who were better typists could put their hands in the home position more quickly.
There was little correlation of typing speed to the other measures in the homing task.
The correlation coefficient between typing speed and scrolling speed  across all 6 conditions and both trials was 0.32, which means there was little correlation for the scrolling task.
Age and gender did not affect the measures.
We received a number of complaints and suggestions about the scrollers on the WorkPad in the first session, so we redesigned some of them and repeated the scrolling task in a second study with new subjects.
In this study, we only used four buttons for the button scroller .
We also tried to improve the rate scroller, by adjusting the scroll speeds and the areas where each speed was in affect.
Finally, we added a new  condition: * Scrolling using an "absolute scroller," where the length of the scroller represented the entire document, so putting a finger at the top jumped to the top of the document, and ttie bottom represented the bottom .
The user could also drag up and down to scroll continuously.
Therefore, it was as if the scroll bar's indicator was attached to the finger.
Figure 5 shows the times to tap on the button measured from the time the stimulus appeared on the PC monitor.
These numbers only include correct taps.
There were two orders for the trials, so each condition was seen by some subjects early in the experiment, and by other subjects later.
The chart presents the data for the early and late cases along with the average of both.
2 We did not have a pointing stick to test, and anyway, it would have been difficult to connect one to the computers we had, which illustrates one of the claims of this paper--it can be difficult to connect multiple conventional input devices to today's computers.
Since the experimental set up was identical to the original experiment , it should be valid to compare our times with the times reported there.
Plot of all times for the 2x2 layout shows  learning happening for those subjects who saw this condition first, but not  for those who saw it last.
Figure 6 shows the times to tap on a button in the 2x2 trial for each of the buttons for each of the subjects.
The left graph is of those subjects who saw the 2x2 condition first, and roughly matches the power law of practice.
However, for those subjects who did the 2x2 condition last, there was no apparent learning during that trial, and the times are flat.
Therefore, we feel it is more valid to use the times from only the subjects who saw the condition later.
The average time for just the second set is 593msec.
As shown in Figure 5, and predicted by Fitts's law , the time to tap on a button is inversely proportional to the size of the button, ranging from 593 msec in the 2x2 condition to 867 msec in the 4x4 .
There is significant interaction between button number and order of conditions  , but the learning effect is most prominent among layouts with small number of buttons.
The Tukey Test at .05 significant level indicates that there is no significant difference between the 4-button condition and the 6-button condition, between the 6-button and 8-button, or between the &button and 12button.
However, the 12-button condition is faster than the 16-button condition by a statistically significant margin.
The times for different layouts of the same number of buttons is not statistically significant, however: the Tukey Test at .05 significant level indicates that times for the 2x3 are not statistically different from 3x2, 2x4 compares to 4x2, and 3x4 compares to 4x3.
Figure 7 shows the error rates for the various configurations, which varies from 1.04% to 4.17% for the subjects who saw each condition later.
For the 4x4 layout, 45% of the errors were in the wrong row, 48% were in the wrong column, and 7% were wrong in both .
There was no consistent pattern of where the problematic buttons were located .
Homing Speed T a s k Figure 9 shows the times for moving each hand in the various conditions of the homing speed task.
When moving only one hand at a time , the subjects took 728 msec to move to the mouse and 701 msec to move back to the keyboard from the mouse.
The times to move to the PDA were 744 msec to the PDA and 639 back.
As in the study we reproduced , the time for the first trial with each input device was for practice, so Figure 10 shows the times for the second and third trials.
A repeated measure variance analysis shows that subjects' completion time was significantly affected by input method .
However, this improvement did not alter the relative performance pattern of the input method .
The new absolute scroller was quite fast.
The subjects' ratings of the new scrollers are shown in Figure 13 and parallel the performance.
A repeated measure variance analysis showed that subjects completion time was significantly affected by input method .
Taking the Mouse condition as the reference and averaging over both trials, the button scroller was 8 percent faster but the Tukey Test at .05 significant level indicates that such difference is not significant.
The scroll wheel, the absolute scroller, the slide scroller, and the rate scroller conditions were 31, 7, 12, and 64 percent slower than the standard mouse condition.
The Tukey Test at .05 significant level indicates that the difference between mouse and scroll wheel conditions and the difference between mouse and rate scroller conditions were significant, while the differences between mouse and absolute scroller conditions and between mouse and slide scroller conditions were not significant.
Ratings of the various input methods by the subjects in the first version of the scrolling experiment.
We used the same scale as .
Taking the Mouse condition as the reference and averaging over both trials, the scroll wheel, the slide scroller, and the rate scroller conditions were 28, 11, and 48 percent slower.
The Tukey Test at .05 significant level indicates that the difference between mouse and scroll wheel conditions, between the mouse and button scroller, and between the mouse and slide scroller conditions were not significant, while the difference between mouse and rate scroller conditions was significant.
Figure 11 shows the subjects' ratings of the various scrollets using a rating scale from Zhai et.
Contrary to the results of that previous study, the Tukey Test at .05 significant level indicates that the difference between ratings of mouse and scroll wheel was not significant.
Subjects gave the mouse a significantly higher rating than the slide scroller, while the difference between ratings of mouse and button scroller and the difference between ratings of mouse and rate scroller were not significant.
The differences of ratings among the three Pebbles scrollers were not significant.
We were not happy with the performance of the scrollers on the PDA, and the subjects provided useful feedback on ways to improve them.
Therefore, we performed iterative design on the software, and tried the scrolling task again with 12 new subjects.
The subjects were able to hit buttons quite accurately with their left hand, especially for small numbers of buttons.
The predicted decrease in performance with decreased button size was observed.
There seems to be a threshold of about 12 buttons before there is any affect due to the size.
CHI 2000 * 1-6 APRIL 2000 tried using the times in models of expert human performance.
One candidate is Fitts's law, but we do not know exactly where the subjects' fingers were when they started to move to tap.
Assuming a movement of about 2 inches and a target size of 1 inch , Fitts's law as formulated in  predicts a movement time of about 150msec, compared to our measurement of 593msec.
In our task, however, there is also perception and thinking time.
For the smaller buttons , Fitts's law predicts an increase in time of about 100msec, but we saw an increase of about 275msec.
We observed that subjects looked back and forth from the monitor to the PDA, at an increasing rate depending on the number of buttons to choose from.
Therefore, we believe the performance cannot be modeled simply as a Fitts's law task, but we were unable to find an appropriate alternative model.
Our results showing that users can tap up to 12 buttons accurately and quickly with the left hand is relevant since there are a number of applications where having several buttons on the PDA would be useful.
We have created a tool called "Shortcutter" which allows allows the user to design screens of keyboard shortcuts, macros, and strings on the PDA, and use these to control any PC application.
The buttons can be big enough to hit with a finger, or tiny so that many will fit on a screen.
The Shortcutter3 can provide customizable interfaces on the PDA even for applications that do not have a customization facility on the PC.
Some examples uses include scrolling with buttons , and controlling a compiler, playing music on the PC, reading mail, etc.
Homing Times Our one-handed homing time to move from the mouse to the keyboard  is longer than the time to move from the PDA to the keyboard .
This may be because the physical distance to the mouse from the home position on the keyboard is longer  due to the number-pad and arrow keys sections of the PC keyboard.
In the other direction, the increased time to acquire the PDA may be due to the unfamiliarity of homing to this kind of device.
In the classic study of text selection devices , the homing time to move from the space bar to the mouse was measured as 0.36 seconds.
This was measured from videotapes of subjects moving.
An average homing time of 0.4 seconds was incorporated into the Keystroke Level Model .
However, we measured one-handed homing times of around 0.7 seconds, which is substantially longer.
Our time was measured from the time of the mouse click to the time that the first keystroke was recognized.
Our typing test shows that the average time per keystroke was 0.3 seconds, so this might be subtracted from our measured time to get the predicted 0.4 seconds.
An important observation is that, as predicted, subjects moved both hands simultaneously, and this did not penalize the movement time much.
The sum of the one-handed times to move from mouse and PDA to the keyboard is 1340msec .
This is much larger than the time to move from both mouse and PDA to the keyboard in the two handed case which is 791 msec .
Overall, it takes only about 15% longer to acquire both the mouse and the PDA than just to acquire the mouse, and it takes only about 13% longer to get back to the keyboard from both devices than from just the mouse.
We were not able to find any prior studies of the time to acquire two devices at the same time.
Most studies of twohanded use of input devices  allow the subjects to stay homed on the devices.
We found that moving both hands slowed down each hand a little, but there was substantial parallel movement.
Realistic tasks are likely to include a mix of keyboard and other input device use, so homing issues may be important.
Scrolling Our measured times for scrolling the web pages with the mouse  is a little faster than the time reported in , and in the revised web task, the time for scrolling with the button scroller is 45.9 sec  which is faster than the time reported in  for scrolling with the in-keyboard isometric joystick .
This shows that using the PDA can match or beat the speed of other non-dominant hand devices.
An interesting comparison is between their joystick, our rate scroller  and the scroll wheel used in its most popular manner as a rate-controlled scroller.
All provide the same rate-controlled style of scrolling, but they have significantly different performances and ratings by users.
Our attempt to improve the rate scroller obviously did not help, showing that further work is needed to make this scrolling method effective.
We observed that the fast speed was much too fast, but the medium speed was too slow.
The popularity of the scroll wheel and the success of the pointing stick give us reason to keep trying.
Furthermore, IBM did significant experimentation and adjustments before the pointing stick had acceptable performance .
Therefore, an important conclusion from the scrolling experiment is that the specific design and pragmatics of the input methods has a very important influence on the performance.
This may be due to the increased experience people have with a scroll wheel , and because most of our subjects used it in its rate-controlled joystick mode, whereas most of the earlier study's subjects used the rolling mode.
An interesting observation about this W e b scrolling task in general is that it primarily tests scrolling while searching for information, so the scrolling must go slow enough so the subjects can see the content go by.
This is why the methods that provided the best control over the speed are preferred.
The low rating of the rate scroller on the P D A is because the fastest speed was much too fast to see the text go by, and the medium and slow speeds were rated as too slow.
However, other scrolling tasks, such as those tested by , require the user to go to a known place in the document, and then a method that can move long distances very quickly may be desirable.
In the future, other kinds of scrollers can be created, that might combine the various modes.
For example, it might interpret a tap as a button for line scroll, a "flick" as a page flip, and a drag as a slider.
An advantage of using the P D A is that all these are possible, and visible feedback and prompting can be provided.
Many studies have shown the effectiveness of two-handed input to computers in certain tasks.
One hindrance to twohanded applications has been that there may be only a few tasks in which using both hands is beneficial, and the benefits are relatively minor.
Another problem is that although it is interesting to study custom devices for use by the nondominant hand, in order for there to be wide-scale use, it is better to provide mechanisms that users can easily get and configure.
Since increasing numbers of people have PDAs that are easy to connect to PCs, it makes sense to see if PDAs can be used effectively in the non-dominant hand.
The research presented here shows that PDAs can be used as buttons and scrollers, and that the time to move to two devices is only slightly longer than for one.
Our study o f one application shows that at least for the scrolling task, a PDA can match or beat other 1-handed and 2-handed techniques.
Because there is no incremental cost for the P D A since users already own it, and since the P D A is connected to the PC anyway, even small efficiencies many be sufficient to motivate its use as a device for the non-dominant hand.
Our studies and many others have emphasized the importance of the pragmatics and the exact behavior of controls.
Because the PDA can be programmed with a variety of controls with various properties, further research is required to determine the most effective ways for a P D A to be used to control the PC in both the dominant and nondominant hand.
For help with this paper, we would like to thank Rob Miller, Bernita Myers and Shumin Zhai.
The research reported here is supported by grants from DARPA, Microsoft, IBM and 3Com.
This research was performed in part in connection with Contract number DAAD17-99-C-0061 with the U.S. Army Research Laboratory.
