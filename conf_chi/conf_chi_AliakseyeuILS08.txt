Multi-flick, which consists of repeated flick actions, has received media attention as an intuitive and natural document-scrolling technique for stylus based systems.
In this paper we put multi-flick to test, by designing several flickbased scrolling techniques.
We map out the design space of multi-flick and identify mapping functions that make multiflick a natural and intuitive technique for document navigation.
We then compare several multi-flick variations for navigating lists on three different devices - a PDA, a tabletPC, and a large table.
Our study shows that compoundmulti-flick  is the most preferred technique and it is at least as fast, if not faster than the traditional scrollbar.
In a follow-up study, we evaluate multi-flick for scrolling text-based documents.
Results show that all implementations of multi-flick are as good as the scrollbar for short distances while CMF is the most preferred.
We discuss the implications of our findings and present several design guidelines.
Computer Science Univ of Bristol U.K. sriram@cs.bris.ac.uk based devices.
For instance, the scrollbar is impractical on a tabletop or on a large display because, as display size increases, the physical effort and reach required for scrolling interactions increases correspondingly.
As a result, there is a need for producing more natural forms of interactive navigation tools for pen-based systems.
Researchers are devising methods for facilitating basic tasks such as pointing, selecting, and scrolling to make interactive pen-based environments more accessible to users.
Scrolling is an important interaction technique for supporting many document related daily tasks.
Scrolling shifts into the viewport parts of a document that are of interest and that reside off-screen.
Therefore any small improvements to scrolling can result in significant benefits to users.
To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee.
Recently, designers and researchers have introduced flicking as an intuitive and natural form for throwing objects in virtual environments  and for shifting content within a viewport .
Multi-flick refers to the idea that flicks can potentially be used recurrently to easily explore a variety of scrolling distances.
This is because a wide range of velocities can be specified, with very little change in position or movement, simply by adjusting the way in which consecutive flicks are combined.
Han  demonstrated the fluidity of multi-flicking off-screen content into and out of a multi-touch display.
These appealing manifestations of flicking reveal that designers are intuitively considering it to be a very natural form of interaction.
However, very little knowledge exists about the effectiveness of multi-flick for navigating or scrolling through lists and documents.
Flicking has been investigated in only one scenario; Reetz et al.
However, their study does not explore the design space of multi-flick as a method for scrolling documents.
As a result, we primarily question the efficiency of multi-flick for the common task of shifting the viewport when scrolling lists or documents.
We start by describing the design framework for multiflick.
To investigate the benefits and limitations of scroll-
In a first study, we compare three variants of multi-flick with the standard scrollbar.
Our results show that compound-multi-flick, a multi-flick variation we tested, was as good as the scrollbar for large tables and significantly better than the scrollbar in a tabletPC.
Users also consistently preferred compoundmulti-flick that combines flick-based scrolling with displacement-based scrolling to provide high-speed scrolling and fine control.
In a second experiment we evaluated the various multi-flick designs for scrolling text documents.
We found that for short documents, multi-flick techniques were slightly faster than the traditional scrollbar.
Furthermore, the compound-multi-flick was often most preferred by the users whereas the commercially popular variant of multi-flick was least preferred.
Our results offer several insights into designing with flick for the next generation of scrolling techniques in pen-based environments.
DDAZ   scrolls and zooms in proportion to the amount of cursor displacement.
DDAZ was faster for scrolling than SDAZ and other variations based on models proposed by van Wijk's and Nuij's model .
In Flipper , a variation that utilizes SDAZ, users can scroll at high rates one page at a time.
Results show that users are faster with Flipper than with SDAZ.
In a further development, Cockburn et al.
Results from that study show SFT outperforms all variations of SDAZ, including Flipper.
However, for SFT to work well, the document needs to be separated into logical units.
To a large extent, and with the exception of CrossY , scrolling systems for pen-based devices are primarily based on variations or virtual implementations of the scroll ring .
A scroll ring is designed as a doughnut-shaped touchpad that scrolls a document in response to a user's circular strokes.
A rotating scroll wheel that is prevalent on devices such as the iPodTM has seen widespread success.
In one study users were more effective with the scroll ring than the mouse wheel .
The results also suggested higher performance gains with the scroll ring for larger scrolling distances.
One explanation is that users scroll with one continuous movement with the scroll ring in comparison to multiple smaller strokes with the mouse wheel.
Inspired by the touchpad scroll ring , Moscovich and Hughes  designed a virtual scroll ring .
The VSR mapped size of the scroll ring and movement speed to the scrolling rate of the document.
Large or fast circular movements produced rapid scrolling, while small or slow movements yield slower document scrolling.
Their results show that the VSR is comparable to the mouse-wheel and heightens users' experience in scrolling large documents.
The radial scroll tool , designed for touch displays, provides a scrolling widget that consists of a circle divided into segments.
As the user crosses each segment, the document scrolls a pre-defined amount.
Even though the scroll tool requires the user to maintain visual focus on the scroll widget it was more effective than a scrollbar for short scrolling distances.
Curve dial  was designed to overcome the limitations of the radial scroll tool by using the size of the circle drawn to control scrolling speed; larger circles result in slower scrolling rates.
Curve dial is appealing as the user can scroll the document in one continuous stroke drawn anywhere on the device surface.
However, it requires constant contact with the surface of the display, which can occlude content being shifted into the viewport.
The scrollbar is the most common interface for navigating documents.
Scrollbars are placed horizontally or vertically to the side of a document and are considered to be a zeroorder positioning widget by which the user can shift portions of the document relative to the displacement of the scrollbar thumb.
Shifting the viewport can become tedious particularly in 2D graphical workspaces .
Researchers  have also noted that operating a scrollbar consumes additional cognitive and motor resources, as the user has to shift their attention away from their primary task.
The most common alternatives, to overcome the limitations of scrollbars, appear as rate-based systems that are accessible using a mouse-wheel or IBM's ScrollPointTM.
However, rate-based systems are limited by the amount of information that users can process visually , as fast scrolling rates cause disorientation.
Researchers have studied a number of techniques to overcome the visual artifacts produced by rate-based systems.
Speed-dependent automatic zooming   integrates rate-based scrolling with automatic zooming.
The document automatically zooms out when the scrolling rate increases.
According to theories of naive physics, the human perceptual and cognitive system simplifies occurrences of physical events; this simplification can lead to erroneous judgments about the estimated distance and trajectory traveled by an object, or of its velocity during movement .
Despite these limitations, researchers have proposed flicking as a compelling interaction technique for navigating and throwing objects in a virtual environment.
Geiler's throw technique  requires the user to make a short stroke over a document, in the direction opposite of the intended target, followed by a long stroke in the direction of the target.
The length of the short stroke determines the distance the document travels.
Their system maps the length of the flick gesture to the speed of the document.
However, none of these asses the benefits of flicking in a controlled evaluation as it was only featured as a secondary mechanism.
A paper by Reetz et al.
Flicking was designed to mimic the action of sliding documents over a table, and closely resembles the push-and-throw model designed by Hascoet .
In a study that required users to flick objects in target locations, flicking was found to be much faster than the radar technique for tabletop systems .
The authors concluded that throwing-based techniques show promise for improving interactions with tabletops.
Flicking also appears in different instances as a navigation technique.
Johnson  proposed a panning interface on a touch-controlled display, which consisted of panning by pushing on the background with a simple flick movement.
The document moved in the direction in which the user swiped their finger.
When using flick to access off-screen content, users usually employ multiple repeated flicks to get to the off-screen content.
Jeff Han  and video snippets showcasing iPhoneTM demonstrate flicking  as a natural form of accessing off-screen content.
External factors that can affect scrolling performance with multi-flick are target distance, target type, user familiarity with the document, input resolution and real-estate for input.
Ideally, any new scrolling technique should be minimally influenced by target distance.
However, numerous studies have shown that scrolling mechanisms are affected by various document sizes and target distances .
Additionally the perceptual characteristics of a target can also influence scrolling performance .
Text and unformatted targets are harder to locate than formatted text or graphical images.
As a result, most studies on scrolling  present the targets as salient items so that limitations of the human visual search processes do not confound with the performance of the scrolling techniques.
The level of familiarity a user has with a document has a direct effect on scrolling performance, i.e.
The spatial or temporal resolution of the input device should provide a sufficiently rich stream of input data to accurately model a single flick action so that it feels fluid and natural as in the real-world.
Finally, the amount of space the user has to perform the flick can greatly influence their perception of the fluidity and naturalness of the action.
On small devices, users might find it much harder to impart a natural flick than on a large table.
Multi-flick is not immune to any of these external factors and designers need to be wary of these.
With scrolling tasks, visual feedback typically consists of a smooth or a blurred transition from one part of the document to another.
To reduce the effects of blurring, researchers have resorted to zooming out at high scrolling speeds .
Zooming with multi-flick needs to be carefully assessed as it is difficult to perceive the document's contents at varying magnification levels.
An alternative to zooming the document is to provide transient visual cues that hint at the content of what will appear next in the scrolling sequence .
Transient visual cues can lead to occlusions which can be detrimental on devices with small view ports.
An alternative to zooming or using transient cues is to use simple animation models for multi-flick scrolling.
Klein and Bederson  demonstrate that animating the movement of the document during the scrolling operation can improve target search tasks by up to 5.3% for text targets and 24% for graphical targets.
Although animation can enhance scrolling performance, Andersen  suggests that scrolling rate should be limited by the maximum rate a target can be perceived at during the animation.
Anderson's  recommendation can be extended to multi-flick scrolling by limiting the animation to the rates proposed in the literature .
These have shown to be about 2100 pixels/sec.
We propose a design framework to identify various factors that influence the performance of multi-flick scrolling.
While we isolate two major factors, the mapping function and visual feedback that designers can control in the design of multi-flick, there exist several other elements, we refer to as external factors that designers often cannot control.
Scrolling mechanisms are driven by a mapping function that performs a translation of the user's manipulation of the input device to the scrolling operation.
The mapping function primarily affects scrolling speed.
In a zero-order position mapping, like in the classical scrollbar, the relative displacement of the cursor produces a proportional scrolling distance.
With a first-order rate mapping, such as ratebased scrolling, the mapping function translates the displacement of the cursor  to a scrolling speed.
Longer or shorter displacements of the cursor from the marker cause the document to scroll at a higher or lower rate, respectively.
Studies suggest that either zero-order or first-order mappings operate best based on the context of the user's task .
However, most novel variations of scrolling techniques that outperform traditional scrollbars are designed on the premise of a first-order rate-based mapping.
Additionally, the mapping function needs to take into consideration the effect that target distance may have on scrolling performance.
Studies show crossover effects between scrolling mechanisms and target distance .
For example, short but frequent displacements, as produced with a scroll wheel are less efficient for scrolling large documents than one continuous and fluid movement .
Multi-flick is based on consecutive flick actions.
With a single flick the rate of displacement of the pen-tip maps to scrolling speed.
Generally, in multi-flick, each successive flick maps the rate of displacement plus the current scrolling speed to a new scrolling speed.
This allows Multi-flick to employ various types of mapping functions to control scrolling speeds.
The mapping function needs to strike a balance between the frequency of the flicks and the movement speed.
While such a design constraint cannot be computed in advance, multi-flick designs should minimize the number of strokes required to scroll a document.
This fluid action assigns to the interaction an initial velocity and direction .
To calculate the pen velocity and direction we maintain a history of the last ten velocity-direction samples.
When the user lifts the pen, we apply a linear regression to the collected data to estimate the liftoff speed and direction imparted to the document.
In MFA, scrolling speed is manipulated using the rate of the flicking action as well as its direction.
Low or high flicking rates continuously decrease or increase the scrolling speed, respectively.
The direction of the flicking action can increase or decrease the scrolling speed.
As a result, successive flicks result in adding or subtracting  from the current document scrolling speed.
Figure 2, shows the relationship between the document speed to pen-flicking speed.
To stop scrolling the user taps the stylus on the screen.
The relationship between flicking rate and document scrolling rate is as follows: VS = VCS + m x , where VS - new scrolling speed, VCS - current scrolling speed, VFL - speed of the flick movement, m - C/D ratio, d is 1 based on the direction of the flick.
When VS is negative, the document starts scrolling in the reverse direction.
The main focus of our design was to explore the effectiveness of different mapping functions.
The various multiflick techniques we propose explicitly address the challenge of intuitively mapping elements of successive input flick-gestures onto the document scrolling speed.
We describe the basic flick before presenting the multi-flick variants.
In the process of flicking with a pen the user imparts speed and direction to the object in one quick motion.
Such an action can be decomposed into an initial and final velocity, an acceleration value, and a direction vector that defines the trajectory of the object.
All the multi-flick designs we evaluated are based on the velocity input model described by Reetz et al , i.e.
MFS is the default multi-flick technique that would become available to the user if a flick is supported by the system.
MFS directly maps the flick speed to the scrolling speed: VS = m x VFL Figure 2b shows the relationship between the document speed and pen-flicking speed.
There are several differences between MFA and MFS.
In MFA to reach a higher speed, the user needs to invoke a few consecutive flicks, whereas with MFS the user can achieve this with one fast flick movement.
MFA and MFS also differs with respect to the mechanism used for reversing the scrolling direction.
In MFA the user needs to flick several times in the opposite direction to scroll in the reverse direction or can tap to stop scrolling and then flick in the opposite direction.
With MFS one flick movement in the opposite direction is sufficient to reverse the scrolling direction of the document.
We implemented MFF using the flick implementation employed in the iPhoneTM.
MFF is similar to MFS but includes an additional friction "factor" that gracefully reduces the document scrolling speed after some time interval.
In essence, MFF is the default multi-flick action that would be available in a system that implements flick with a friction.
The relationship between flick rate and document rate is VS = m x VFL - t, Where  is a friction coefficient and t is elapsed time from flick lift-off .
In comparison with previous variations, MFF is the only multi-flick technique that does not require any explicit actions to stop scrolling.
MFA, MFR and MFF do not provide any feedback to the flick action until the user lifts the pen from the surface.
Lack of visual feedback can be disorienting to users.
Additionally, in all of the three previous mappings, users performed a complete flick action, i.e., stroke+lift-off.
Since scrolling speed is unknown to the user, completing a flick before seeing the document scroll can lead to over/undershoot in tasks that require searching for a specific part of the document.
DISP is the pen displacement.
As the pen is released, the relationship with document scrolling speed is VS = m x VFL.
Additionally to allow fine control over document displacement  without initiating a flick, we introduce two additional parameters: timeout and minimal liftoff speed.
If, while doing a pen movement, the pen touches the display surface for a time shorter than the timeout period, the movement is interpreted as a flick and the document scrolls accordingly.
If the pen-movement time is longer than the timeout, the liftoff speed is checked against the minimal liftoff speed.
The document scrolls if the flick liftoff speed is larger than the minimal liftoff speed.
The multi-flick visual feedback consists of simply animating the scrolling of the document.
The maximum document scrolling speed is set to a rate of 2100 px/second  based on the results of previous research .
While several other types of feedback are also possible, we did not want to confound our results with different variations of visual feedback in this preliminary investigation of multi-flick mappings.
Furthermore, common and widespread scrolling mechanisms do not rely on zooming or transient visual cues but instead consist of simple scrolling motion.
As the name suggests, CMF is a compound technique that combines flicking with a displacement-based control.
When the user glides the pen over the surface, the document displaces by a distance equivalent to the displacement of the pen .
When the user lifts the pen from the surface with a quick thrust a flick is registered and the flick speed directly maps to the scrolling speed.
The users can stop the document from scrolling by putting the pen on the document.
Users can also have fine control over scrolling by gliding the pen on the surface.
As a result this multi-flick variation operates in two states each of which influences a different variable in the scrolling operation: the displacement distance of the document and the scrolling speed.
In several preliminary studies we identified the ideal parameters for each of the various flicking techniques.
Besides identifying the parameters we also observed that MFA was on average slower and the least preferred technique by the participants.
Based on these results MFA was dropped from further investigation.
The mapping coefficient m was set at 0.5 for document window sizes larger 120 x150 mm to allow users to reach a maximum speed with a one very fast movement.
For smaller window sizes we found that at m= 0.5 the document scrolled too fast for finer control so m was set at 0.2.
The timeout for CMF was set at 0.5s, and threshold liftoff speed 1000 px/s.
The main goal of this study was to compare the various multi-flick mapping functions.
Three MF techniques were tested in the experiments MFF, MFS and CMF.
MFF was included since it's a default technique used in commercial applications , and the only technique that does not require an explicit action to stop scrolling.
MFS was included as a baseline MF technique that becomes available to the user if a system supports flick.
Additionally we contrast their performance with a scrollbar, which is a standard scrolling technique that is readily available on pen based systems.
Limited by the number of tasks that can be tested we only considered visual search in unknown documents.
As reported in , users employ different strategies in scrolling documents of various types.
To examine the effect of display size on multi-flick we carried out our experiment on three different device sizes: standard TableTop - 590x440 mm , tabletPC - 210x160 mm , and PDA - 78x58 mm .
For a TableTop we used a top-projected display  with an A2 Wacom digital board.
The system ran on Intel P4 machine.
For the PDA and tabletPC the experiment ran on a 1.20 GHz tablet with 512 MB RAM and 1024x768 display resolution.
We set the active area for viewing the list on the table and tabletPC to 575x722 pixels and on the PDA to 282x376 pixels.
We developed the experimental setup using C#.
All techniques were carried out with a digital pen that came with the tabletPC.
We used the same tabletPC to simulate the PDA configuration by placing a cardboard cutout to restrict the display and interaction area to a typical PDA size.
The video figure submitted with the paper shows the experimental system and demonstrates the techniques.
We carried out the experiment with 8 participants  between the ages of 25 and 32.
All subjects were tested individually.
The experiment used a 3x4x2 within-factor design with a variety of planned comparisons.
The independent variables were Device size , Multi-flick Techniques , and list length .
The order of presentation of the different techniques and devices was balanced using a  Latin-square design.
For short lists the target item was always one of items 20, 50 or 70, while for long lists it was always one of items 200, 280 or 360.
The order of target and lists were randomized.
Furthermore, to avoid learning effects each trial used a unique list of randomly selected and alphabetically ordered Canadian cities.
For each technique and device, participants completed 1 training trial and 12 test trials , for a total of 12 training trials and 144 test trials.
The participants on average took 60 minutes to complete the experiment.
The experimental software recorded trial completion time ; and number of crossings  as dependent variables.
MT is the total time taken to complete the task and is defined as the time taken for the user to scroll to the correct visual item.
The counter begins at the moment the user clicks on the "start-trial" button and stops when the user clicks the "finish" button.
Users were not allowed to continue to the next trial without successfully completing a trial.
NC is the number of times the target line  crosses the red tolerance bar.
In an exit questionnaire we asked participants to rank the different scrolling functions in order of preference.
Movement Time: The average trial completion time was 10.03s with a standard deviation 
Figure 4 shows the mean MT for each device and list length.
The fastest technique was CMF followed by the Scrollbar, MFF and MFS.
The fastest technique was Scrollbar followed by CMF, MFS and MFF.
Pair-wise comparisons showed significant difference for all pairs except .
Figure 3  shows the experimental setup.
Each task began with the display of a new target list item on the left part of the screen and the document window on the right.
The list window had a size of 575x722pixels.
The fastest technique was CMF followed by MFS, MFF and Scrollbar.
The following pairs were significantly different , , and .
Users were significantly faster on short than long lists.
The fastest technique was CMF followed by MFF, MFS and Scrollbar.
Scrollbar was the fastest technique followed by CMF, MFS and MFF.
All pairs were significantly different except the following  and .
We found no significant interaction between the factors.
Pair-wise comparison of the techniques showed that Scrollbar had significantly fewer NC than all other techniques, followed by MFF, MFS and CMF.
We found no significant difference between the various multi-flick techniques.
There were significantly fewer crossings with a large table than with a tabletPC or PDA.
The overhead in initiating a multiflick is lower than with scrollbar as it was possible to apply the flick gesture anywhere over the entire document.
However, users performed a high index-of-difficulty target acquisition task to acquire the scrollbar.
On tabletPCs and PDAs the parallax errors created by the physical space between the pen's contact surface and the actual display adds the problems of controlling the small scrolling widgets.
Number of Crossings: The average difference between actual position of the target item and the position at which the document was scrolled to, showed that with CMF and scrollbar participants were more precise, than with other multi-flick techniques.
More detailed analysis of recorded pen movements revealed that most of the crossings for multi-flick techniques occurred at the final part of the trial where the targeted item was already visible on the screen.
Furthermore, the size of the overshoots was generally smaller for CMF than for MFF and MFS.
This indicates that with CMF participants tended to scroll list items closer to the center of the allowed range, while with MFF and MFS they would usually finish the trial immediately when the item was within the acceptable range.
Handedness: We observed that the one left-handed subject had to reach over to the right-side to acquire the scrollbar, which led to some frustration and difficulty.
Their interaction suffered from occlusion that takes places when manipulating the scroll bar with the left hand.
However, the same participant had no difficulty in using the multi-flick technique and indicated much greater satisfaction with the multi-flick techniques over the scrollbar.
We recognize that multi-flick is unaffected by handedness and feel that this property is extremely appealing.
Figure 3  shows the experimental setup.
Each task began with the display of a new target page on the left part of the screen and the document window on the right.
The target page preview was large enough for users to legibly see the body of the text .
Page numbers were removed from the page images.
The document window had a size of 575x722pixels.
The task consisted of locating and positioning on the right pane the target page and highlighted text presented on the left pane.
To complete the trial, the user should position the highlighted text within the red vertical line at the center of the screen .
The red line indicated the maximum permissible tolerance of 150 pixels for displacement error.
The results of our study show that CMF is the fastest and most preferred multi-flick technique.
Furthermore, CMF is at least as good as the scrollbar for both small and large lists, across all display conditions.
We explain our findings by looking more closely at the detailed log files and our observations during the experiment.
Time to Initiate the Interaction: To perform a trial, participants were required to first click on the `Start Trial' button, locate the target, and then finish the task by clicking the `Finish Trial' button.
Our log files showed that users were significantly faster initiating multi-flick than acquiring the scrollbar.
The experiment used a 2x4x2 within-factor design with a variety of planned comparisons.
The independent variables were device size , scrolling techniques , and document length .
For short documents targets were always at pages 5, 11 or 18, while for large documents the targets were at pages 30, 50, or 70.
To complete the experiment in 2 hrs we excluded the PDA device.
The order of presentation of the different techniques and devices was balanced using a Latin-square design.
The target order was randomized.
To avoid learning effects, 16 unique HCI documents containing one picture per two pages, were used for the 3 short and long distances.
Each document was randomly assigned to a trial.
Participants completed 1 training and 12 test trials  per technique and device, for a total of 8 training trials and 96 test trials and took about 100 mins.
CMF had the fewest NC followed by MFF, MFS and Scrollbar.
Subjective Preference: Overall users most preferred CMF and least preferred MFF for both display sizes .
The rank-order of the techniques for both devices was the same.
However for large tables, the scrollbar was a close second to CMF whereas for the tabletPC both scrollbar and MFS were equally preferred for the 2nd spot.
For short documents user performance with multi-flick techniques is at least as good as their performance with the scrollbar.
However, for long documents the scrollbar was significantly faster despite having higher target crossings.
Overall, CMF was most preferred and MFF the least.
We examined our techniques for each target distance  and found that for target distances of 30 and 50 pages the scrollbar was significantly faster than the multi-flick techniques, but for targets at 70 pages the scrollbar was marginally faster than multi-flick .
The results suggest that relative to the scrollbar the multi-flick techniques dipped in performance for target distances between 30 and 70 pages but for distances larger than 70 pages we expect that they would perform better.
The scrollbar performs best in the mid-range documents for several reasons.
First, the amount of overhead in acquiring the scrollbar is significantly lower when the user has to scroll beyond the short range distances.
We see that an average scrollbar movement in the medium range targets varies between 20 and 35s, resulting in an 8% overhead in medium ranges in comparison to a 14% overhead in shorter ranges.
Secondly, users can maintain their pen on the scrollbar and drag at a rate that is sufficiently fast and selfcontrolled.
However, the difference between scrollbar and multi-flick diminishes again in the large target distances.
Users complain of fatigue when they have to maintain pen contact with the surface beyond 40s to glide the pen across the scroll widget.
While we did not test the techniques for targets beyond 70 pages we believe that user fatigue with the scrollbar sets-in when maintaining the pen pressure and glide the pen across the surface.
Figure 6-Left shows the mean trial completion time for each technique and target distance.
For short documents, we found no significant difference between the techniques.
The fastest technique was CMF followed by MFS, MFF and Scrollbar.
The scrollbar was significantly faster than all other techniques, followed by MFS, CMF and MFF.
We found no significant difference between multi-flick techniques.
Figure 6 shows the mean NC .
For short documents we found a significant difference between the techniques  = 8.16, p < 0.001 with the scrollbar having least NC, followed by MFF, CMF and MFS.
There was a significant difference between the following pairs , , and .
Our results suggest that tiny variations in multi-flick design can lead to differences in performance.
Ease of Use: Particularly appealing with Multi-flick is the amount of time users require to grasp the technique.
In both experiments we gave users only one training trial after demonstrating the technique.
Trail number for each device and document length.
Our comparison showed that deviations from a horizontal line were between 0.3 and -0.5 degs.
This suggests that one training trial was sufficient to obtain the performance rates we obtained in our experiment and Multi-flick can be considered a walk-up-anduse technique.
Additionally, participants consistently commented on the ease of using a natural gesture based technique for scrolling documents with a pen.
Motor and Cognitive Benefits of Multi-flick: While our results suggest that Multi-flick is as good as scrollbars, our observations highlighted certain motor and cognitive benefits of Multi-flick that we had not identified prior to our evaluation.
As mentioned earlier, Multi-flick is unaffected by handedness, i.e.
Additionally, with multi-flick users do not need to be actively and continuously focused on the scrolling interaction.
This can reduce the level of cognitive effort required by users as their eyes can remain focused on the document instead of splitting their attention between the document and the mechanics of the interaction.
Finally, for very long documents users complained about the length of the continuous operation required with the scrollbar.
Multi-flick designs can simply have the user lift-off the pen after a stroke and can passively observe the flow of the document without having to initiate any interaction.
Inking vs. gesturing: In many cases multi-flick requires a mode switch.
To avoid explicit mode switching the rapid flick gesture can be interpreted as an implicit mode switch.
However, for long documents, variable document speed led to a large number of consecutive flicks, thereby affecting performance.
While our results and observations do not allow us to prescribe whether Multi-flick designs should use constant or variable document speed, we believe that the implementation that will lead to the minimal amount of flicks should guide the design.
Reduced Number of Flicks: The number of flicks required to scroll a document grows with the target distance, the difficulty in locating a page , and to a large extent depends on the Multi-flick design.
Based on our results, the number of flicks performed reveals that both CMF and MFS had fewer flicks than MFF .
For some trials in the list study tasks were completed in a single flick.
We initially expected MFF to be the most preferred technique as it resembles how we interact daily with objects.
However, MFF and MFS were least preferred and performed worst overall.
MFF and MFS were not significantly different from CMF and scrollbar on short distances.
More than 60% of time was spent scrolling large documents.
It is possible that user preference was based on a technique's ability to scroll large documents rather than short documents.
Most commercial systems use a Multi-flick similar to MFF.
However designers should carefully consider what variation is best for a given application.
The wrong choice could negatively influence users' perceptions of Multi-flick and garner a lack of appreciation for its naturalness.
Our results show that CMF generally outperforms and is the most preferred of all the Multi-flick variations.
We can attribute this to several factors: fine control over movement, reduced number of flicks, and constant document speed.
Fine Document Control: Fine control over document displacement and speed allowed users to stop the scrolling and then quickly bring the desired item  within the targeted range.
We observed that this feature of CMF, more than other aspect of this technique reduces the number of over/undershoot operations in comparison to MFF and MFS.
This observation led us to conclude that designers should include a level of fine-grain control over scrolling speed with any Multi-flick implementation.
Constant Document Speed: Unlike MFF and MFS, document scrolling speed remained constant in CMF.
In MFF, document speed gradually decreased and in MFS users could increase and decrease document speed intermittently.
The following recommendations emerge from our study: * We believe that in pen or stylus systems, multi-flick scrolling is an effective alternative to conventional scrolling.
Its natural form of interaction makes it appealing and conducive to widespread adoption by users.
We identified various factors that influence scrolling in pen based systems and investigate the benefits and limitations of flick based solutions.
We present the design for three multiflick techniques and compare them to the standard scrollbar over three different display sizes for scrolling through an alphabetically ordered list and a text document.
Our results also highlight significant differences in preference and performance between various implementations of Multi-flick.
Given that flicking is being deployed in commercial tools, it is not the improved performance with multi-flick that will make this technique easily accepted by novice users.
Instead, users will adopt this technique and prefer it to its counterparts because of the ease and satisfaction it brings to the user's experience.
