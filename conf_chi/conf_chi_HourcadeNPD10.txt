Perceptual, cognitive and motor deficits cause many older adults to have difficulty conducting pointing tasks on computers.
Many strategies have been discussed in the HCI community to aid older adults and others in pointing tasks.
We present a different approach in PointAssist, software that aids in pointing tasks by analyzing the characteristics of submovements, detecting when users have difficulty pointing, and triggering a precision mode that slows the speed of the cursor in those cases.
PointAssist is designed to help maintain pointing skills, runs as a background process working with existing software, is not vulnerable to clusters of targets or targets in the way, and does not modify the visual appearance or the feel of user interfaces.
There is evidence from a prior study that PointAssist helps young children conduct pointing tasks.
In this paper, we present a study evaluating PointAssist with twenty older adults .
The study participants benefited from greater accuracy when using PointAssist, when compared to using the "enhance pointer precision" option in Windows XP.
In addition, we provide evidence of correlations between neuropsychological measures, pointing performance, and PointAssist detecting pointing difficulty.
These differences are greater in complex tasks .
When it comes to pointing tasks, older adults use shorter primary sub-movements and more corrective sub-movements than younger adults .
Many approaches have been proposed to ease pointing tasks on computers, although few have been directed at older adults.
Most of these approaches require information on the location of targets.
In addition, they often have issues with clusters of targets and targets in the way.
Many change the look and feel of applications, and may not be appropriate for use with a population that often has inaccurate submovements.
When it comes to their application to older adults, the other problem is that none of the approaches proposed so far have the goal of slowing the decline in motor skills that older adults face.
PointAssist uses a different approach from those proposed in the past by using an analysis of the characteristics of submovements to detect when users are having difficulty pointing.
When difficulty is detected, PointAssist triggers a precision mode that slows the speed of the system cursor.
PointAssist was originally designed for young children who are novice users of indirect pointing devices.
An earlier study provides evidence that it can help four year olds conduct pointing tasks with greater accuracy .
In this paper, we present an evaluation of PointAssist with older adults.
The results suggest that PointAssist may enable older adults to be more accurate when completing pointing tasks when compared to using Windows XP's "enhance pointer precision" option.
We also take advantage of the fact that the participants in this study had taken a battery of neuropsychological tests and report on correlations between performance on those measures, their pointing performance in this study, and PointAssist's pointing difficulty detection algorithm.
To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee.
Also, this solution will not work with existing applications that have targets that are too small for a particular user.
One of the most common adaptations is to make targets larger.
In spite of these limitations, these approaches may be useful for defining user interfaces for applications of special interest to people with motor impairments, and simple applications that are easy to learn.
In addition, the idea of modeling users to better serve them, also suggested by Keates et al.
Another way to facilitate pointing is to adjust control-display ratios , slowing the speed of the cursor to enable users to point more accurately.
Sticky icons reduce cursor speed when users are on a target , but require a certain low speed over an icon in order to trigger a slowing of the cursor.
This, in turn, requires knowledge of where targets are located.
This approach though can enable people to be more accurate without noticing the help they are getting .
Operating systems such as Windows also include options to enhance pointer precision by slowing the speed of the cursor when it goes under particular speeds, regardless of whether there are targets nearby.
Some researchers have proposed expanding targets by predicting where users are trying to point .
Any of these algorithms will not work as well if the user's initial submovement towards the target is not as accurate, as has been documented with older adults .
Area cursors expand the active area of the cursor by a set amount .
Bubble cursors and similar approaches expand the active area of the cursor dynamically .
Semantic pointing makes targets look smaller than their active area .
Others have looked at using force fields to help users point at some targets and stay away from others .
Force fields can cause problems if there are targets in the way of a pointing task.
In addition, none of the approaches listed in the last two paragraphs are likely to be of much help if targets are next to each other .
A slight variation in helping to point is helping to click, with Trewin et al.
While this approach can provide some help in pointing, it makes it difficult to complete dragging operations  and to move away from a target if users press the mouse button in the wrong location.
One thing in common among all the assistive technologies based on software that are currently available is that they aim to help all the time.
They do not challenge users to try harder before providing help.
This may not aid in slowing the decline of older adults' pointing abilities.
Another thing in common among most of the technologies discussed above is that they require knowledge of the location of targets.
This has many practical limitations as discussed by Wobbrock et al.
In addition, most include other limitations, such as not working well if there are targets in the way of a pointing task, if targets are in clusters, or if space to author or see content is a high priority.
What has been missing is a familiar, intuitive approach that can be easily made available to older adults and help them slow the decline of their motor skills.
Familiarity and intuitiveness can be achieved by keeping the user interface and the basic interactions looking and feeling the same way.
Cost, ease of setting up the technology, compatibility with existing software, and the ability to share a computer with others are key factors in terms of availability.
Helping users only after they make an effort to point could help them maintain their motor skills.
PointAssist's approach has all the desired attributes .
It assists in pointing tasks while keeping the interactions looking and feeling the same way.
It works with all existing applications.
It is a freely available software-based technology.
It also makes it very easy to share a computer with others because it does not intervene if users do not have difficulty pointing.
We hypothesize that it may also help older adults maintain pointing skills because it does not help all the time; instead asking older adults to make an effort at pointing before providing help.
Continued practice without assistance for the purpose of maintaining motor skills has proved successful, for example, for older pianists and for people with Parkinson's disease .
PointAssist was inspired by investigating the difficulty young children have in completing pointing tasks as documented by Hourcade et al.
Something that stood out in the results of that study was the high amount of activity near the targets by young children.
An analysis of the characteristics of submovements near targets found that younger participants made more, less accurate sub-movements.
In addition, these submovements near targets were different from others.
PointAssist uses an analysis of sub-movements based on the data on sub-movements from Hourcade  that identifies when children have difficulty pointing.
When difficulty is detected, PointAssist triggers a precision mode that slows the speed of the cursor by half.
PointAssist exits the precision mode when difficulty ceases to be detected.
Below, we describe the specifications of PointAssist for the version used in this study with older adults and also by Hourcade et al.
PointAssist parses sub-movements in the same way it was done in .
We adapted a widely used algorithm from Meyer et al.
It identifies the potential beginnings of submovements by looking for one or more of the following: a change in direction, a change in acceleration from negative to positive, or a relative minimum in absolute acceleration values while the acceleration is negative.
In the study software, direction is defined by classifying the motion between two mouse events as falling into one of four quadrants: right , left , up  or down  .
A change of direction is triggered when two consecutive mouse motions fall into different quadrants.
To be considered a submovement each potential sub-movement has to cover a minimum of 4 pixels, last at least 50 milliseconds, and achieve a speed of at least 0.02 pixels per millisecond.
These requirements have to be met before the beginning of another potential sub-movement is identified.
To reduce noise in the raw data from the mouse, PointAssist processes mouse events every 45 milliseconds, which eliminates noisy speed, acceleration and directions, similar to those reported by Mithal and Douglas .
PointAssist identifies difficulty by following the heuristics presented in , triggering a precision mode if it identifies consecutive slow, short sub-movements with a top speed below 0.08 pixels per millisecond, and a length below 24 pixels.
The precision mode reduces the cursor speed set by the operating system in half.
In this study and in , it reduces the speed from eight to four .
Users exit precision mode as soon as a sub-movement exceeds 24 pixels in length.
The non-study version of PointAssist, which runs as a Windows system tray application and has been freely available since the spring of 2008 at pointassist.org, makes some improvements over the study version by adjusting all pixel based calculations based on the current operating system cursor speed.
It also sets the quadrants for calculating changes in direction to be relative to the initial direction of motion of a sub-movement.
In a study with 30 four-year-old children who conducted pointing tasks with and without PointAssist , the children had higher accuracy rates with PointAssist .
For the smallest targets tested , children had an accuracy rate of 92 percent when using PointAssist and only 79 percent without PointAssist.
In addition, PointAssist helped reduce problems with slipping off the target while clicking, with participants slipping off of the smallest targets about twice as often when not using PointAssist.
In terms of efficiency, PointAssist enabled children to complete tasks with the smallest targets more quickly .
Given the success of PointAssist with children, and mentions in the literature of the similarities between the challenges older adults and children face in pointing tasks , we decided to conduct a study to evaluate PointAssist with older adults.
Our research question was whether PointAssist provides any advantages to older adults when conducting point-and-click tasks with a mouse when compared to using Windows XP's "enhance pointer precision" option.
Eleven were male and nine female.
Nineteen used their right hand to hold the mouse, and one used the left hand.
All had completed high school, fourteen had completed college, and ten had a graduate degree.
They were recruited through their participation in studies examining decision making across the life-span taking place at our University's Department of Neurology.
This provided the extra advantage of working with a set of older adults that had already taken a battery of neuropsychological tests.
We used three Dell desktop computers  running Windows XP .
The cursor speed was set to 8 .
We used the same study software used for evaluating PointAssist with children , changing only the sound feedback to be adult friendly.
This software closely mirrors the study software used in  and .
The light blue target circles always appear to the right of the square.
We presented targets in only one direction because we were not interested in researching the effects of angles on pointing tasks.
Tasks ended as soon as participants clicked, regardless of whether the click was inside or outside the target.
More details on how tasks are presented in the study software can be found in  and .
We conducted the study in two dedicated rooms at our University's Department of Neurology between April and August of 2009.
Participants had taken part in neuropsychological testing for about one hour, took a break, and then used our study software.
After providing demographic information, they conducted nine practice tasks with PointAssist turned off to ensure that they could understand what to do.
A researcher instructed them to complete tasks as quickly and accurately as possible.
The study software presented target circles of three different diameters: 8, 16 and 32 pixels.
See Table 1 for equivalent sizes in millimeters for size on the screen.
The center of the target circles appeared at one of three distances from the starting position: 128, 256 and 512 pixels.
The combination of three target sizes and three distances yielded a total of nine distinct tasks.
Eleven participants had higher accuracy rates with PointAssist, six had the same accuracy rate with and without PointAssist, and three did better without PointAssist.
The differences were more pronounced for the tasks involving the smallest, eight pixel targets .
For these, ten participants did better with PointAssist, eight did equally well, and two did better without PointAssist.
See Figure 1 and Figure 2 for accuracy distributions for all tasks and tasks involving eight pixel targets.
Figure 3 shows accuracy rates for all participants when completing tasks involving eight pixel targets with and without PointAssist.
The figures illustrate the wide variability in the performance of the participants.
Figure 3, for example, shows a contrast between the third participant from the left , and the fifth participant from the right .
Joe was 72 years old when he participated in the study.
He used computers an average of one hour a week, and had been using computers for eight years.
When clicking on eight pixel targets, he was accurate 22 percent of the time without PointAssist, and 89 percent of the time with PointAssist.
Mary was 74 years old at the time of the study.
She used computers an average of 20 hours a week and had been using computers for 25 years.
She consistently scored higher than Joe on all the neuropsychological tests.
In addition, her accuracy was slightly higher without PointAssist when clicking on eight pixel targets  and overall .
Joe triggered PointAssist's precision mode twice as often as Mary.
Figure 4 shows sample paths taken by Joe and Mary that illustrate Joe's lesser control of the mouse when compared to Mary.
Participants completed a total of three blocks of tasks after practicing, with each block consisting of two sub-blocks, one completed with PointAssist turned on and the other with PointAssist turned off.
Participants were randomly assigned to starting each block with PointAssist turned on or off .
The study software switched PointAssist on and off automatically and the participants were not told that they would be testing two modes of pointing.
Each sub-block in the study consisted of the nine distinct tasks for a total of 54 tasks in the study.
The study software presented the nine tasks in random order.
The independent variables were: target size, distance to target, block number, and PointAssist status .
The dependent variables were: accuracy, movement time, target reentry, and number of submovements.
Accuracy for each task was 100 if the participant pressed and released the mouse button while inside the target, 0 otherwise.
Movement time was measured starting when participants moved the mouse cursor from the middle of the green square and ending when they released the mouse button as part of a click.
We also checked for statistically significant differences in press and release accuracy, and did not find any.
However, we did find PointAssist had a statistically significant effect in the absolute difference between press and release accuracy .
See Figure 5 for a distribution of these values.
In exploring press and release accuracy, we found that four participants had greater accuracy when releasing the mouse button than pressing it.
Three of these four participants had greater accuracy with PointAssist.
In addition, ten of eleven participants who had higher accuracy rates with PointAssist also had different press and release accuracy rates.
Six out of seven who had the same accuracy rates when pressing and releasing the mouse button did not have higher accuracy with PointAssist.
This suggests PointAssist benefited those who have difficulty clicking, and move the mouse in doing so before pressing the button, or between pressing and releasing the button.
We conducted a Fitts' law analysis of the study data.
We conducted a linear regression using both Fitts' index of difficulty and the effective index of difficulty .
We obtained higher correlation coefficients when using Fitts' index of difficulty, consistent with previous studies where participants face tasks so difficult that spending extra time on them does not result in higher accuracy .
Table 2 shows regression data based on Fitts' index of difficulty.
Notice the higher correlation coefficient  for tasks conducted with PointAssist.
We also compared throughput using both Fitts' and the effective index of difficulty and found no statistically significant effects .
Whenever software tries to guess whether users have difficulty, there is a possibility that false positives will occur.
We checked for false positives by counting the number of tasks in which PointAssist triggered its precision mode more than 64 pixels away from the center of the target.
We found 54 such tasks, giving a false positive rate of 10 percent.
Participants were easily able to break out of precision mode in these cases as soon as they moved more than 24 pixels in their next sub-movement.
Out of these 149 tasks, there were only 4 cases in which PointAssist did not trigger its precision mode within 64 pixels of the target and participants did not click accurately on the target, yielding a false negative rate of 2.7 percent.
If we instead consider tasks where participants reentered the target more than once, then there were no false negatives.
We considered the same "difficult" tasks mentioned above to identify true positives.
Out of the 149 tasks where participants reentered the target, PointAssist triggered its precision mode within 64 pixels of the target in 81 tasks, yielding a true positive rate of 54 percent.
If we consider only tasks where participants reentered the target more than once, then the true positive rate goes up to 81 percent.
Figure 6 shows the paths taken by all participants to point at an 8-pixel target at a distance of 256 pixels with PointAssist turned on.
The paths are black when precision mode is off and red when it is turned on.
Notice how precision mode was triggered right on the target, even though PointAssist has no information on target location.
Figure 7 provides specific examples of cases where PointAssist triggered precision mode and participants completed pointing tasks successfully.
Note again how the paths turn red as participants get close to the target.
These examples also give a sense of the sub-movement structure for older adults as they complete pointing tasks, with primary sub-movements that often fall short of the target, and corrective sub-movements closer to the target.
We present statistically significant correlations with the following measures in the tests: * Wechsler Abbreviated Scale of Intelligence    o WASI-BD, block design test  o PIQ, performance  intelligence quotient Rey-Osterrieth Complex Figure Test   o RO-C, copy condition, consists of presenting a complex figure, which the participant is instructed to copy.
We took advantage of the fact that most of the participants had taken a battery of neuropsychological tests to check for correlations  between performance on those measures and the data we collected in this study.
These measures were obtained within two months of the PointAssist evaluation for 19 of the participants and within six months for the remaining participant.
Iowa Gambling Task  , a real-world decision-making task o IGT, measure of impaired  or unimpaired  decision makers In addition, we also checked for participant-level statistically significant correlations with the demographic data we gathered and between our dependent variables .
See Table 3 for results.
We would like to point out the many correlations we found with the number of times precision mode was triggered.
In particular, positive correlations with movement time and target reentry suggest precision mode was triggered for those who needed the most help.
In addition, correlations with several of the neuropsychological tests suggest that PointAssist's difficulty detection algorithm taps into the same underlying cognitive, perceptual and motor processes as the standardized tests the participants took.
Many of the demographic measures we obtained were good predictors for click accuracy, in particular years of experience using a computer and a mouse.
The strongest predictor out of all our demographic measures was actually the number of online purchases during the past year, which had statistically significant correlations at the p<.01 level with a strength above .5 with click accuracy, movement time, target reentry and the number of times precision mode was triggered.
It may indicate a level of comfort with using computers.
Note that we did not find any statistically significant correlations with age or education.
There were also strong correlations with many of the neuropsychological measures.
WASI-BD also had p<.01 level correlations with strengths above .5 with click accuracy, movement time, and the number of times precision mode was triggered.
As stated previously, both of these measures tap visuospatial processes, with a particular emphasis on visual construction.
The highest strength correlations were with PEGS-RD, which makes sense given that it tests fine motor speed and dexterity.
In all cases, the better the neuropsychological performance of the participants, the better their performance in pointing tasks, and the less likely they were to trigger precision mode.
While the links between cognitive processes and motor tasks are no news for behavioral psychologists or neurologists, they have rarely been cited in the HCI community, and this study illustrates how important they are.
We encourage HCI researchers who work with older adults or people with motor impairments to partner with behavioral scientists who have well-characterized cohorts.
The study provides evidence that PointAssist can help some older adults with pointing tasks by improving their accuracy, which can make using a computer much more accessible and less frustrating.
The higher Fitts' law correlations for tasks conducted with PointAssist suggest it can help older adults conduct tasks in a way similar to those who do not face great pointing difficulty.
We were also encouraged by the low false positive and false negative rates and the high true positive rates.
The results are also a positive story in how an approach that was originally developed for young children can also be useful for another population.
It is also remarkable that PointAssist helped as it did even though it was optimized for assisting young children.
We expect that if we were to optimize it based on the sub-movement characteristics of older adults, we would obtain even better results.
In this paper, we have introduced PointAssist to the CHI community and presented the results of a study with older adults whose participants had higher accuracy rates when using PointAssist.
The success of PointAssist with both young children and older adults, together with its ease of use, flexibility, and availability, suggest that analyzing submovement characteristics in real-time may be a valuable approach to provide help in pointing tasks.
This study was conducted using a very similar setup to studies conducted with young children .
The first difference in results that stands out is that even though children varied greatly in their performance, there was even more variability among the older adults in this study.
The other thing we noticed is that young children seemed to try harder to point at targets.
This was noted, for example, in higher target reentry rates and more sub-movements near the target for children when pointing at smaller targets.
This was not the case with older adults, who seemed to put a certain amount of effort into pointing and then click.
This project was supported in part by #5 R18 HS017034-03 and a National Institute on Aging Career Development Award to Natalie L. Denburg .
Additional funding was provided by cooperative agreement number #5 U18 HSO16094 from the Agency for Healthcare Research and Quality.
The content is solely the responsibility of the authors and does not necessarily represent the official views of the Agency for Healthcare Research and Quality or the National Institute on Aging.
In order to test our hypothesis that PointAssist can speed children's improvement in pointing skills and that it can slow older adults' decline in pointing skills, it is necessary to conduct longitudinal studies.
Ideally, these should involve installing PointAssist in the computers that participants use daily, to increase the environmental validity of the results.
We are currently working with people with motor impairments to learn how we can help them in pointing tasks by analyzing their sub-movements.
So far, we have identified challenges we had not seen with children or older adults, which have led us to experiment with new approaches.
We also believe that there is a need for more research on user modeling , with the goal of automatically adjusting settings for whatever approach is used to help users with pointing tasks.
Ideally, this should be accomplished without asking users to conduct a series of training tasks, and settings should adjust as users' pointing performances change throughout the day.
We expect an analysis of sub-movement characteristics will prove very useful in this endeavor.
