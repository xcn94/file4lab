D RAG -C ELL is a direct manipulation technique to browse values over time by dragging them; V IZ -R ANK uses transient visualization  to show the values of cells over time.
For both techniques, the temporal slider on the top provides feedback on the current temporal navigation.
Ranking tables order soccer teams represented as rows, according to values of columns containing attributes e. g., accumulated points, or number of scored goals.
Because they represent a snapshot of a championship at a time t, tables are regularly updated with new results.
Such updates usually change the rows order, which makes the tracking of a specified team over time difficult.
We observed that the tables available on the web do not support tracking such changes very well, are generally hard to read, and lack interactions.
This contrasts with the extensive use of comments on temporal trends found in soccer analysts articles.
To better support such analyzes, the two interactive techniques presented allow exploration of time, and are designed to preserve users' flow: D RAG -C ELL is based on direct manipulation of values to browse ranks; V IZ -R ANK uses a transient line chart of team ranks to visually explore a championship.
Every day, millions of soccer enthusiasts study web sites, newspapers, or other media to learn about their favorite team's current ranking and how it compares historically.
One way to present this information is to use ranking tables.
Soccer ranking tables show results for a given championship, at a given day.
Rows are teams, and columns are statistics.
Column types include, for example: the total points per season, number of wins, draws, and lost games.
Tables are updated once a round of games is over, and can become quite large.
Assuming a championship with 20 teams, a table will be updated 38 times since each team plays against each other twice.
We conducted an empirical study of 51 articles  from major soccer websites, and collected 44 pseudo-interactive soccer tables to investigate how they support temporal tasks.
Copyrights for components of this work owned by others than ACM must be honored.
Abstracting with credit is permitted.
To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee.
Furthermore, 77.3% of tables do not implement column sorting, and 73% of them do not provide any aid for temporal navigation although it may be useful for interactive exploration .
Finally, we did not observe any use of visualization, however it provides compact representation for multidimensional data  and displays trends over long time periods with line charts .
Table!, an enhanced ranking table combining We present A two novel temporal navigation techniques.
D RAG -C ELL is a direct manipulation technique to browse values over time by dragging them into the Value domain; V IZ -R ANK uses a line chart to show the values of cells over time, in the Time domain.
Both techniques follow Bederson  principles to preserve users' flow, to focus on tasks and prevent interruptions.
We conducted an on-line evaluation to assess how standard interactions with ranking tables , along with the two novel techniques, D RAG C ELL and V IZ -R ANK, can be effective for temporal tasks.
Our evaluation shows that the novel techniques efficiently support temporal tasks, which are currently not supported by ranking tables.
We discuss the design implications of our  Table!
The contributions of this paper are as follows: 1.
A Domain description and task analysis for temporal navigation techniques.
Two new techniques for temporal navigation in ranking tables, one in the value domain  and one in the time domain .
A crowdsourced evaluation of the two techniques along with standard navigation techniques; we then discuss which technique is well suited to which task according to the results and present the main takeaways from the experiment.
Such results provide a framework for further experiments with temporal tasks, and the design of novel navigation techniques in both the Value domain and the Time domain.
Numerous application areas where ranking tables are important would benefit from these results.
Illustrative example of a "complete" table at time t, featuring the most frequent designs and embedded visualizations.
Pts: number of points; W, D, L: number of Wins, Draws, Losses; Ho, Aw: number of points at Home and Away; GF, GA, GD: Goals For , Against , Difference .
An important property of permutations in soccer championships is that the higher t is, the less the teams' permutation amplitude is important because teams tend to have high points difference.
Ranking tables display tabular data and their visual design normally obey to guidelines.
Tufte  suggests that minor visual improvements, such as vertical alignment of characters and row coloring with zebra patterns, enable comparison tasks and reduce errors.
Interacting with the rank order help users perform some tasks  faster, without scanning all the rows.
Many software packages, such as spreadsheets, implement ranking interactions.
They also provide formulas to summarize rows for more compact representations with Pivot tables  by computing counts or totals.
The same principles can be applied to columns with statistics such as averages of multiple columns or min/max values to provide other ranking mechanisms .
Summarization of tables is an important challenge because rankings are often longer than the screen.
Visualization techniques can provide compact representation of cells.
TableLens  represents tables using Focus+Context principles, collapsing rows to their minimum size or up to a pixel.
This enables representing large tables on one screen as long as the number of rows is less or equal than the number of pixels.
Soccer ranking tables  are standard ranking tables, i. e. tabular data vertically ordered according to values in one column.
Ranking tables have been extensively explored using summarization, interaction and visualization techniques.
As far as we know, temporal exploration in tables has never been investigated in a comprehensive way.
A rank is an ordering technique taking as input a set of items S  and provides a permutation of these items according to one dimension .
Finally, a rank can be applied to temporal values, where t  T , with T a set of discrete events .
Sdi ,tj is the ranking table,
Find t for which Montpellier has its highest goal difference.
What is the difference of wins for Nancy between t=12 and t=20?
Find t for which Marseille has 5 wins and 3 draws.
How many scored goals for Toulouse when its number of points is 28?
What is the trend of goal difference for Troyes between t=5 and t=11?
What is the largest time interval during which the goal difference of Brest increases Who of team1 and team2 increases the most its number of points between t=24 and t=32?
What is the largest time interval during which Nice has more points than Lorient?
For the entire championship, how many times do Marseille and Paris SG tie according to their number of wins?
Extracted task categories mapped to Andrienko et al.
Black dots indicate how a soccer expert analyst estimates each category's relevance on a Likert scale from 1  to 5 .
On the right are exemplary tasks for the categories.
Red words are the unknown variable, blue words are the known variables.
LineUp  also uses nested compact visualizations in tables, but for headers showing the distribution of values contained in the rows beneath.
Ranking also plays an important role in discovery, particularly when tables are represented as a grid layout where visual variables such as color encode values.
It results in heatmaplike representations , and ranking becomes the primary interaction for finding patterns .
Such tables may become very large and require space transformation techniques, such as zooming or space folding techniques  to bring rows and columns back together for comparison.
Visualization techniques to display ranks are mainly inspired by line charts , and are also called bump charts because of the visual effect that permutations provide.
Slope Graph  plots items' values on two vertical axis--one for each time t1 and t2 --and connects similar items from one axis to another with a line.
The slope of the line is a visual cue that conveys the importance of the items' value change.
However, some empty space may appear within the chart and elements may overlap.
Several recent attempts produced compact charts reducing the amount of space and overlapping, while handling scalability.
RankExplorer  shows items ranking as a flow, with glyphs wherever two items swap their ranks, or when an item has a particular increase in rank.
Generally, visualization techniques are low-dimensional projections of data, that do not keep the original multidimensional flavor and interactivity of tables.
They may also break users' flow  because tabular layouts are too different from line charts, which require a cognitive overhead for users to connect both.
In summary, existing table improvements tackle the challenge of better sorting, summarizing, and visualizing tables.
These techniques are usually not trivial for a non-expert, which may explain why we did not find any in our empirical study.
Another reason might be that techniques are not specifically tailored for temporal navigation, as time is usually a tricky dimension that requires specific attention.
We collected and analyzed 51 soccer articles, mainly from two highly influential and visited websites: L' equipe1  weekly summaries for the entire 2012/2013 Ligue 1 Championship in France; and premierleague.com2  monthly summaries of the 2012/2013 Premier League Championship in the UK.
This was completed with articles from Yahoo sports, Wikipedia and other soccer websites .
The articles we collected outlined main events of the week or month, and illustrated them with statistics.
Out of the articles, we extracted up to 33 different tasks the journalists had to perform to write these summaries.
Then, we grouped similar tasks into generic categories.
For example, both tasks "What is the number of points of Paris SG at week 17?"
This grouping resulted in 18 generic task categories.
We observed that all the tasks categories are temporal.
Indeed, even the most basic task, such as "What is the VALUE of TEAM?"
When t is not explicitly written, it is implicitly the latest week of the championship.
We also observed that the most important column for ranking tables is the number of points of a team, determining its rank in the championship.
However, the other dimensions also occur, to improve the summary details and analysis.
For example, analysts often report: the number of scored goals or wins for the last n games of a team; the team's performances at home; or a series of consecutive games with the same result .
To structure our analysis, we mapped the categories to the task taxonomy for temporal data by Andrienko et al.
Figure 3 illustrates the mapping and provides examples.
For example, such tasks are value estimation , comparison of values at different times and time retrieval according to a given value.
For example, such tasks are trend estimation, trend comparison, and finding time intervals with a given trend.
Both categories contain direct and inverse tasks.
Direct tasks consist of estimating a value or a trend according to a given time or time interval.
Inverse tasks consist of estimating the time or time interval for which a dimension has a given value or trend.
Finally, relation-seeking tasks consist of finding relations between dimensions, values and time.
For example, such a task consists of comparing the value of a dimension for one team with the value of another dimension of another team, at different times.
We also conducted an interview with a soccer analyst in charge of an influential French web site3 and asked him to evaluate the fitness of each task category for soccer .
One interesting result is that the expert considers some categories to be important, despite not found in articles , suggesting that those tasks are probably unconsciously in the head of our expert but that he can not perform them with his current tools.
The expert and the task analysis together legitimate the tasks that we classified in the taxonomy.
The tasks our expert mentioned are, according to him, difficult to perform.
In particular because they involve ranks that change over time, which are difficult to track with series of static tables.
This suggests that journalists have important questions that they are not easily able to answer.
One of the main takeaways from our findings is that interaction is rarely available.
At best, the table provides the most common column sorting .
At times, the table provides widgets to interact with the temporal dimension: dropdown lists , range selection , next/previous arrows , discrete slider .
However, it usually triggers a page reload, making the tracking of changes between the two tables difficult.
We also observed an interesting type of ranking table mapping rows on an absolute scale  rather than the relative scale .
It is referred as Absolute scale rank.
Similarly as for Slope Graph , it gives a better idea of the team's distribution at a given time.
However, it requires more space as the count of rows for such a table is not the number of teams, but the difference of points between the first and the last team.
Only 27%  of the tables implement temporal navigation while both soccer ranking tables and analyst tasks heavily rely on time.
When available, changing t is usually cumbersome, with standard widgets--certainly because implemented in every GUI--such as: * Drop-down lists to directly jump to a specific time.
They cannot be used to dynamically browse a time interval but are very efficient to select a particular time.
They are efficient to navigate sequentially, step by step.
The results from our study highlight the lack of temporal navigation mechanisms, and only one table featured a slider which would be recommended as an efficient way to explore such a quantitative data space .
We are not able to give any explanation.
From a user perspective, we showed a dynamic slider to our soccer expert and he found it of great value, wondering himself why he does not provide one on his website.
We extracted and ranked the visual features of the collected tables, such as colors and decorations.
An example of an important feature in soccer tables is the background color for the top-k ranks, such as the top-3 ranks that qualify for the Champion's League.
Or the bottom-k that indicates which team will downgrade to a minor league.
Such an apparently small visual aid is actually very useful, to immediately know which team will earn additional revenues with Champion's Leagues games, or will lose revenues by playing in a less popular league the next year.
For the top-3 rank, we found that only 50% of the tables highlight the corresponding areas, and their design is inconsistent .
Tables also make use of Zebra  and embed visualizations: 27.3% show team logos, 29.5% add an icon encoding the latest ranking evolution, and 13.6% represent the latest results using colored circles.
As a reference, Figure 2 shows a full table, with the most frequent features.
Those techniques aim at improving the support of temporal tasks we introduced in Figure 3.
D RAG -C ELL:  dragging up and down the value of a cell  makes this value change  for the set of values it can have, and colored arrows indicate how teams would behave if the drag was released .
The slider is also synchronized with the two new interaction techniques we describe below to convey visual feedback.
We designed D RAG -C ELL and V IZ -R ANK with the challenge of preserving users' flow.
We followed Bederson  principles by supporting both novice and experts with the same display.
While tabular display remains the default view, novel techniques are activated with specific mouse interactions and new representations are animated to prevent users' interruptions.
User is always in control with incremental actions and a visual feedback to constantly show what he is doing.
From the task analysis, we observed that the expert estimated as important several inverse tasks which were not frequent in journalist articles.
Inverse tasks are challenging to perform using standard tables and it may explain why journalists avoid these tasks.
We designed D RAG -C ELL to make easier to perform these difficult tasks by interacting with cell values directly : the user manipulates the value domain instead of the time domain, unlike standard navigation techniques such as a temporal slider.
Table to V IZ -R ANK:  clicking on a cell of a team for a dimension makes  the dimension's column grow horizontally, stretching the other columns until they disappear; then  the cells fade out and the time series of the cell's value for the team fades in.
Line charts with a thinner stroke shows previously selected teams' line charts.
For example, a frequent task consists of finding the time when a team reaches 42 points; this specific value being the theoretical minimum number of points a team needs to be safe from the downgrade area.
D RAG -C ELL follows the principle of direct manipulation , with teams as objects of interest and is inspired by Tangle .
The visual instance of teams are rows, and each cell can be dragged to explore the values of the cell itself over t .
Releasing the drag changes the value of t for the table to the local tc of the cell.
The user's flow is as follows: 1.
Start: D RAG -C ELL is activated by a mouse drag on a cell.
Then by dragging the mouse up and down, the cell value changes for all possible values for this cell.
Arrows indicate the preview of each team's behavior over time if the drag was released: the arrows range from pointing down and red  to heading up and green .
End: Once the drag is released, tc is applied to the table.
Rows permute with animation to their new rank position.
V IZ -R ANK displays a temporary or transient line chart when a user clicks on a cell .
This line chart displays the teams' ranks over the whole championship.
The user can click on one point on the chart and t is set according to the corresponding value.
The user's flow is as follows: 1.
Start: V IZ -R ANK is activated by a mouse click on a cell.
Then, an animated staged transition  transforms the table into a time-line format by successive widening of columns and rows .
A line chart is displayed with the X-axis encoding the whole championship time range and the Y-axis the dimension of the cell the user clicked on.
Each team line is encoded with Semantically-Resonant Colors  that matches teams' logo .
The line chart displays by default the ranks, but the Y-axis can also encode the absolute values .
A visual feedback displays a vertical bar at the current mouse position to enable comparison.
The team associated to the cell the user clicked on is highlighted.
End: When clicking on the chart, it is animated back to its table form with t corresponding to the click x coordinate.
Crowdsourcing is the use of an unknown public to perform simple tasks .
Participants  are usually recruited through online markets  and paid to obtain results of quality.
We crowdsourced the evaluation because the target user is specific  and to keep unaltered their environment  without paying them.
We also picked up this evaluation method because existing tables do not support dynamic temporal navigation and have very inconsistent designs, thus a traditional lab experiment with a baseline comparison would not be appropriate.
We evaluated participants' performance using a quiz .
We designed the quiz's questions based on the extracted tasks for soccer analysis .
We also displayed the quiz high scores as an incentive to engage visitors.
We also added a tutorial as instructions for the novel techniques on the bottom right, using a slide-show of animated GIFs.
A help button at the bottom opened a help page on how to use the table.
We collected feedback from participants with an on-line questionnaire, reached either by clicking on a feedback button or once the quiz is completed.
This immediately resulted in a stronger engagement from the participants.
Demography: we extracted the following informations from Google Analytics: most of the visitors were from France , then United States , United Kingdom  and Canada .
Our hypotheses for the experiment are as follows: H1: side tutorials will help users to activate and learn the novel techniques, even without visual cues or affordances on the table.
H2: the temporal slider will be faster for elementary direct lookup/comparison because these tasks only require changing t and browsing the table.
H3: D RAG -C ELL will be the fastest for elementary inverse lookup/comparison tasks, tasks it was designed for.
H4: V IZ -R ANK will be errorless for synoptic tasks because it expresses best the temporal evolution of values over the whole time span.
H5: V IZ -R ANK will be slower for all tasks because the mental representation of the teams for users changes.
We logged all participants' interactions, such as: column sorting, team highlighting, slider navigation, D RAG -C ELL and V IZ -R ANK interactions.
We recorded the following values for each quiz answer: quiz session, question number, id, and category; time to perform the task; participant's answer; correct answer; associated interactions ids.
Over a 3-week period, we registered 1292 visits and 648 visitors performed at least one task.
We discarded the data for participants who performed less than 10 tasks and the 239 answers longer than 120 seconds.
143 performed more than 10 tasks , 62 participants completed the quiz  and 34 filled the questionnaire.
Only participants who completed the quiz filled the questionnaire.
This results in 6693 tasks performed and 185 636 interaction logs.
Quantitative results: participants used V IZ -R ANK for 31% of their answers, D RAG -C ELL for 9%, and exclusively the other features for 60%.
We performed the quantitative analysis using G1 results--the larger dataset--because we did not find any significant difference between G1 and G2.
Figure 8 shows the time and error for all task categories according to performed interactions.
We grouped the answers from participants using V IZ -R ANK and other interactions into VR, D RAG -C ELL and other interactions into DC, and other interactions  into O.
When both D RAG -C ELL and V IZ -R ANK were triggered, we counted the last interaction as the one that led to the answer.
We performed Anovas when the data had a normal distribution  and when the analysis of variance allowed it .
We used a Welsh two-sample t-test  for pairwise means comparison.
We report significant results only in Table 1.
Participants performed tasks issued from each category  using our previously set of 33 tasks.
We equally distributed elementary and synoptic tasks.
Task variables were randomly generated with some constraints to avoid trivial tasks where the participant's knowledge of the data would be enough to answer.
Participants had to answer 36 questions correctly to complete the quiz.
We recruited participants by advertising the web page URL using social networks, mailing lists and soccer forums, to select appropriate participants interested in soccer and statistics.
Incentive Impact: after two weeks, among the 141 visitors who resulted in 242 tasks performed, only one fully completed the quiz and answered the questionnaire.
We observed the following recurring pattern: most visitors interacted with the table, answered a few questions and then dropped out without finishing the quiz.
Soccer enthusiasts with heterogeneous backgrounds in Infor Table!
Our investigation confirms H1, although users rated the interface as difficult to use.
We also had to provide an incentive in order to engage participants and make them complete all the tasks.
Some participants commented that it was difficult to discover the interactions.
For example, one participant wrote: "I think it has a low discoverability for the graph and the drag in the cell".
D RAG -C ELL and V IZ -R ANK are relatively advanced techniques, performed directly on the table, to let users focus on their task.
For such techniques, discoverability is a well known problem .
We provided a side tutorial for beginners to learn by example.
However, the results showed that almost all participants discovered both techniques by exploring the table, without using this side tutorial and they often accidentally triggered the interactions the first time.
In fact, both D RAG -C ELL and V IZ -R ANK appear to be quite discoverable without specific affordance.
Answers to the questionnaire confirm the interest from soccer  Table!
For example, one participant wrote: "wish I had it for my own championship ".
O is faster than VR for both elementary direct lookup and comparison.
This is explained because choosing the appropriate value for t is enough to perform the task well and using V IZ -R ANK makes the user waste time.
O is also faster than DC for elementary direct lookup, so we partially confirm H2.
The most frequent interaction is changing the value of t  and was triggered most using the temporal slider, then V IZ -R ANK and D RAG -C ELL.
Participants used the team selection for 70% of the tasks, and column sorting for a third.
Qualitative Results: Figure 10 shows the participant's scores on Likert scales for their background, questions on the inter Table!
The face and more specific questions about A main observation is that participants' satisfaction with existing ranking tables is low: 91%  of the participants would like to have access to such an interactive table on their favorite soccer website.
For both elementary inverse lookup and comparison, DC has the lowest mean time and is significantly faster than VR and we partially confirm H3.
We also note that for inverse lookup tasks, we did not find any significant difference between DC and O because the standard deviation for O was too high, although it was the slowest technique overall.
D RAG -C ELL was rarely used, but when it was, participants performed tasks faster and with fewer errors.
These results confirm that D RAG C ELL is efficient to perform the tasks it was designed for.
For four synoptic tasks  VR has significantly less error than O, participants making respectively 3.6, 4.1, 3.1 and 1.3 times less error using V IZ -R ANK.
We did not find any significant difference between DC and VR for these tasks but the mean error is the smallest for VR and we partially confirm H4.
We also note that DC has less error than O for the identification definition task.
VR is the slowest for five out of the six tasks for which we were able to analyze time, with VR being almost twice as long as O for several tasks.
For half the tasks with significant difference, VR is slower than both DC and O and we partially confirm H5.
We explain this result because participants may not be familiar with line charts.
However, it is not clear if this is a general issue, if this is in the context of rank visualization or because of the short apparition of the chart.
Participants used V IZ -R ANK for complex synoptic and relation-seeking tasks that are extremely painful to perform without a dedicated technique.
The technique involves fewer errors but requires more time.
However, because journalists cannot afford to publish incorrect data, the technique must be accurate, even at the cost of a slight increase in completion time; comparing time between techniques makes sense when the techniques have similar error rates, which is not the case.
The main takeaways from our experiment are as follows: * Basic interactions remain essential, fast to operate and easy to learn for basic tasks.
However, some tasks are almost impossible to perform using only these features  and advanced interaction techniques are required.
The more interactions are used, the more the task is performed correctly .
However, it is slow to operate and requires user's basic knowledge in Information Visualization.
Finally, both D RAG -C ELL  and V IZ -R ANK  makes it easier to perform the tasks they were designed for.
Moreover, several of these tasks were almost absent from the task analysis from soccer articles but were estimated as highly relevant by the expert.
Since 2003, the Shanghai University  publishes every year an updated Academic Ranking of World Universities.
The main rank is computed on the number of Nobel Price or Fields Medal winners from the institution, among other criteria.
Top institutions like Harvard and MIT are respectively ranked first and second, and tracking them over time can be done visually.
However, some issues occur for ranks lower than 100 which are not all visible without scrolling and contain ties.
Furthermore, it only ranks the top-500 universities every year, meaning that new institutions may appear or disappear over time, making their tracking difficult.
Sorting algorithms, such as quicksort or bubble sort, perform many permutations until they end in a final result.
The number of permutations varies according to the size of the dataset |S |.
The type of permutations varies according to the algorithm itself.
Existing works already explored the visualization of execution steps4 which enable a non-expert to grasp the  Table!
A spect executions and to reach a specific execution step or time.
Such an investigation of algorithms--or any ordered dynamic process--can be used in a variety of contexts, ranging from educational purpose to algorithms optimization.
Some real-life rankings may not be immediately compatible  Table!
It is already challenging to with current A visualize and interact with rankings with partial ranks, missing data during time intervals, new dimensions, etc.
In contrast, tables do justice to such rankings by creating empty rows or additional columns to represent missing data.
It may not be optimal but it has the merit of being a consistent representation.
Adding novel interactive techniques to legacy techniques, such as ranking tables, implies many design considerations.
We only scratched the surface of making them fully effective, and we share some lessons we learned on their discover-ability and learn-ability.
Discover-ability is mainly connected to the affordance of the first interaction to start the technique.
We did not use any for simplicity, and considered natural to change values by dragging them up and down.
Some codes for affordance are already available, such as Bret Victor's  use of dashed lines to show draggable values.
The tutorial we provided during our experiment was probably not sufficiently contextualized, explaining why most of the participants discarded it.
It seems that it was natural for users to click and drag cells as they are their primary interest.
They may have acquired this knowledge  Table!
Line elsewhere and applied it to A charts provide visual guides, but require space and time to appear.
Exploring hybrid features, such as dragging values with a visual overlay showing upcoming and past values, might be the best of the two worlds but needs more investigation.
Still, regular dragging can be left as an expert-feature .
Initially, our goal was to better support ranking tables interactivity and representation of time, as the temporal dimension is crucial to understand soccer championships.
We designed novel interactions following Bederson  principles to preserve user's flow, to focus on tasks and prevent interruption.
Our evaluation shows that the techniques efficiently support temporal tasks, currently not supported by ranking tables, while not breaking user flow.
This paves the way for efficiently introducing advanced visual exploration techniques to millions of soccer enthusiasts who use tables everyday, as well as other application domains which use ranking tables.
We also thought to design novel navigation techniques to in Table!.
One of them is using a table cube metaphor, clude in A with a transient 3D animation similar as Rolling the Dice , to change a time t or a dimension d step-by-step.
This type of transition provides a consistent temporal navigation paradigm--adequate with tables which are also squared--and perfectly fits in table boundaries.
