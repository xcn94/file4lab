The human hand can naturally coordinate multiple finger joints, and simultaneously tilt, press and roll a pen to write or draw.
For this reason, digital pens are now embedded with auxiliary input sensors to capture these actions.
Prior research on auxiliary input channels has mainly investigated them in isolation of one another.
In this work, we explore the coordinated use of two auxiliary channels, a class of interaction techniques we refer to as a-coord input.
Through two separate experiments, we explore the design space of a-coord input.
In the first study we identify if users can successfully coordinate two auxiliary channels.
We found a strong degree of coordination between channels.
In a second experiment, we evaluate the effectiveness of acoord input in a task with multiple steps, such as multiparameter selection and manipulation.
We find that a-coord input facilitates coordination even with a complex, aforethought sequential task.
Overall our results indicate that users can control at least two auxiliary input channels in conjunction which can facilitate a number of common tasks can on the pen.
Naturally, prior work has investigated the design space for each of these pen input channels in isolation of one another, or when merged with pen-tip movement .
Such research has been instrumental in identifying the fundamental properties and limitations of these auxiliary pen input streams .
However, a new collection of results is necessary to explore whether users can control such channels simultaneously, beyond our abilities to do so with highly familiar and well-practiced tasks, such as writing and drawing.
If such coordination is possible, this would expand the pen's interactive space.
We build on these earlier results and investigate a-coord input, the ination of at least two different uxiliary channels, such as roll and pressure, or tilt and roll, on the pen .
The a-coord input style raises many human performance questions that warrant long-term research.
H.5.2 : User Interfaces - Interaction styles.
The digital pen has evolved into a sophisticated input device, with the ability to capture a large range of natural manipulations such as finger roll, pressure and tilt, through auxiliary input channels.
Given these capabilities in comparison to the mouse, it is not surprising that some visionaries tout the pen as becoming a highly relied upon device for the next two decades .
Prior research has demonstrated the merits in using the pen's auxiliary channels.
To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee.
We observe a high degree of coordination with 2D contextual tasks, with certain a-coord input styles exhibiting more parallelism than others.
Our findings also show that we can apply a-coord input to multi-parameter selection and manipulation, a task that involves continuous manipulation.
This latter task also has a clearer two-step delineation than the 2D contextual menus, allowing us to test a-coord input in a situation where one channel is designated as the leading channel and must be held steady while the user operates the second channel.
We follow these experiments with an illustration of how carefully composing the pen's auxiliary inputs can provide a diverse set of interactive techniques.
Our contributions include:  an examination of the coordinated control of the pen's auxiliary channels, which we term a-coord input;  an extension of such input for 2D contextual tasks;  evidence of good coordination with some a-coord input styles;  a demonstration of a-coord input's effectiveness for complex tasks, such as multiparameter selection and manipulation;  a demonstration of a varied sample of interactive tasks possible with the pen's auxiliary input channels.
Pen roll was shown to be useful for mode switching, document navigation, or for fluid parameter manipulation .
Prior results focusing on each channel in isolation serve as a foundation for the work we present here.
We investigate how these channels interact when used in a coordinated manner on the pen.
With this knowledge, designers can leverage a-coord input to create improved and fluid interactive pen techniques.
One potential advantage to using a-coord input is the ability to coordinate the channels simultaneously.
Users' ability to operate multiple degrees-of-freedom of input has been explored in a number of other contexts .
Their study revealed the importance of matching the perceptual nature of a task to that of the input device.
Other work has examined the degree of parallelism exhibited in specific settings, such as a 3D docking task  and in bimanual interaction .
We use this body of prior work to inform our visual feedback and our methods for assessing coordination.
To demonstrate that a-coord input can benefit a range of tasks, we consider its use in multi-parameter selection and manipulation.
This task is normally carried out in two distinct steps; to first select a parameter, and then to adjust its value.
Numerous techniques have been proposed for fluidly merging multi-parameter selection and manipulation.
Flowmenu  is a stroke-based interface with a radial layout of regions that define various commands.
Selecting a feature takes place by stroking across a wedge-shaped menu item.
Adjusting the value of a parameter occurs by tracing radially around the FlowMenu.
The FaST sliders interface  consists of using marking menus with a typical linear slider.
Users first apply a mark, in the marking menu, which then triggers a value adjusting slider.
The user then moves the slider in the desired position.
An informal user study showed that both FaST sliders and FlowMenus effectively support parameter manipulation, but that FaST sliders were easier for participants to learn .
In contrast to the above systems, with a-coord input it is possible that experienced users could execute some degree of parallelism, in that they could begin to manipulate the value of a parameter while they are selecting the parameter.
Key to our investigation is a comparative analysis of the various auxiliary channels on the pen.
Our research builds on the benefits and limitations of the pen's auxiliary input channels, which we review first.
We then briefly cover work in the area of parallel input control and conclude this section with a presentation of techniques for multi-parameter selection and manipulation, a task to which we apply our designs of a-coord input.
Numerous studies have explored the benefits and limitations of each of the pen's auxiliary input channels .
Existing findings with pen pressure, tilt-azimuth , tilt-altitude  and roll serve as a reference for our design of a-coord input.
Pen pressure has received considerable attention in recent years.
Studies confirm that users can comfortably control no more than 71 discrete pressure levels , which can further be improved with proper pressure space discretization techniques .
Additionally, users can control a limited number of pressure levels with simultaneous pen movement, as in PressureMarks , or for fine parameter manipulation, such as with Zliding .
The pen's tilt has an azimuth and an altitude component .
Tilt Cursor  and the TiltMenu , two early systems, respectively showed improved stimulus-response compatibility  and strong compatibility with command selection and direct manipulation .
The TiltMenu worked well for fewer than 8 discrete items, and some orientations were better than others .
Selection is necessary to complete the final step of an action.
For Pressure, a quick release or dwell have been preferred over selection with the pen's barrel button .
For Tilt, Tian et al.
For Roll, Bi et al.
Prior results also show that a button press with the non-dominant hand provides good control and efficiency .
We use this latter method in our studies, especially since two channels are being controlled at once.
Raw sensor information does not always provide an ideal mapping of sensor values to interaction .
Researchers have proposed discretizing the input for better control.
Pressure input has been discretized into distinct levels using linear , quadratic , a dynamic fisheye-based  or a sigmoid  discretization function.
We used a hysteresis function similar to that found in  for pressure.
All other channels employed a one-to-one mapping from raw Tilt or Roll motor displacements to visual effecter.
We distinguish each of these channels along five major axes: range of discrete control, bi-directionality, visuomotor mappings, cyclicality and access method, introduced below and summarized in .
Researchers have identified the number of discrete levels a channel can control.
For pressure this number is 71 , for Roll it is 80/10  or 16 levels  and for TiltAzimuth, performance degrades before attaining 8 discrete levels .
These ranges place an upper bound on what is possible in terms of item selection.
Most channels provide a reasonably good control of the input space in the forward and backward movements.
Pressure is a slight exception.
Because of how the sensors operate, pressure affords better control when moving forward and less control returning from higher to lower values .
Bi-directionality allows for better control if the user were to overshoot a desired target.
Visual feedback  is key for operating auxiliary channel input, particularly in the absence of body-based feedback  .
Prior work has employed radial controls for Roll and Tilt, but linear for Pressure.
Roll and Pressure can also be mapped to a linear or radial control, respectively.
On the other hand, mapping tiltazimuth to a linear control would not be a good match with the corresponding biomechanical operation.
Channel control can be either cyclical or noncyclical.
For example, Roll affords cyclical control, as the user can return to the starting point  in a single stroke without changing movement direction.
In contrast, Pressure can only return to its originating value if the pen were to be lifted.
This feature suggests how quickly a channel can access an item.
This can happen sequentially, by going through each value, or by leaping through a number of intermediary values and going directly to an item of interest, as observed in .
Only Tilt-Azimuth works this efficiently as one can directly tilt the pen  to the orientation of interest; all the other channels require sequentially traversing through values in their range.
The goal of this experiment was to explore whether acoord input  allows users to effectively coordinate auxiliary channels conjunctively, and  extends the number of controllable items with auxiliary input.
The selector would indicate movement into the next dimension.
Alternatively one could apply one channel, a selector, and then another channel, but this would resemble a-coord input which makes the selector redundant.
Furthermore, sequential operation of two channels does not provide the freedom to re-adjust the first channel after it has been 'locked in' .
Therefore, we used the first design as a baseline.
Ten right-handed participants  between the ages of 18 and 35 were recruited for this study.
Participants had little or no experience with digital pen input.
We used a Wacom Intuos4 tablet with an Intuos4 Art Pen.
The pen can produce pressure, tilt and roll values with a maximum of 2048 levels of pressure, and 360 of roll and tilt.
We displayed visual feedback in full-screen mode on a 22-inch monitor with a resolution of 1680x1050 pixels.
We used a 2D discrete-target selection task.
All first level items were arranged in a 360 circular layout .
Second level items were placed in concentric rings.
We chose this mapping as it would allow us to explore a range of a-coord techniques without introducing any confounds related to unintuitive visuo-motor mappings.
The size of each target was determined by the number of items in the menu .
A target was highlighted in red.
The user's cursor was displayed in yellow.
Participants were asked to select the target using either a single channel input twice or a-coord input as quickly and accurately as possible.
Once the participants landed on the desired wedge, they could then move up to second dimension in the 2D menu by pressing the CTRL key with the non-dominant hand, and then applying the same channel again.
With a-coord input, simultaneous movement across both channels was possible.
In both conditions, the final target selection was made by pressing a hardware button  using the non-dominant hand.
To undo any action users could simply lift up the pen.
Prior to the experiment, participants were shown the experimental setup, and were given several practice trials in each condition.
For the a-coord input techniques, participants were shown how channels could be engaged simultaneously .
However, participants were not required to engage in parallel action and could complete the task by allocating control to one channel and then the other.
Breaks were enforced at the end of each block of trials.
The entire experiment lasted approximately 30 minutes.
We acknowledge that our results may not generalize to all combinations of a-coord inputs, but hope to show that at least some combinations provide clear benefits.
We used these three channels with the following parameters.
Pressure - We applied a hysteresis function similar to that found in .
However, we excluded pressure readings that were simply resulting from the weight of the pen as this could confound our results.
The range selected was thus between 819 and 2048 pressure units .
The initial pressure value was mapped to 0 as indicated in Figure 2.
Roll - For roll input, we defined the initial roll value of 0 as indicated in Figure 2.
According to prior work, rolling under 10 was usually incidental and anything beyond 90 is suboptimal .
Participants could roll the pen in either direction.
Since our visual feedback consisted of a full circular layout, we employed a 1:2 mapping between the motor and visual space for roll.
Tilt - For the tilt channel, we consider only tilt in the azimuth angles, where 0 was mapped to a tilt to the East as indicated in Figure 2.
Combining these three channels, we get three different acoord techniques: Roll + Pressure  , Tilt + Pressure   and, Tilt + Roll  , where the first channel moves along the first dimension  and the second channel controls the cursor in the second dimension .
We selected these visuomotor mappings based on prior work .We included two baseline single-channel techniques: Pressure + Pressure  and Roll + Roll .
Tilt + Tilt requires a different visual mapping, since tilt works best with radial feedback, which we did not want to restrict ourselves to.
Therefore, we excluded Tilt + Tilt to avoid introducing potential confounds.
Overall, the experiment employed a 5x2x3 within-subjects factorial design.
The independent variables were Technique: P+P, R+R, R+P, T+P and T+R; Number of Levels per dimension ; and Target Distance .
Technique was counterbalanced across participants using a Latin square, while the other factors were presented in random order.
Each trial representing a Technique x Number of Level x Target Distance combination, was repeated 4 times by each participant.
Given that our focus is on the feasibility of a-coord input as opposed to developing a novel 2D menu technique, we omit comparisons to techniques such as marking menus .
With respect to marking menus, we also wish to focus on contextual tasks, where pen movement is not involved.
This effect was generally consistent across techniques.
The nature of the interaction was difficult to interpret; however, it appears as though the poor performance of techniques involving pressure  was mainly caused by the poor performance of those techniques when low pressure levels were required .
This is consistent with the findings from the prior work , showing that people have difficulty controlling pressure at its lower end.
Completion time measured the time from the target's appearance to the time participants successfully selected it, including errors.
The means for each technique are displayed in Figure 4.
There was also a nonsignificant trend indicating that T+P was faster than R+P , but there was no difference between R+P and T+R .
The difference between the two singlechannel techniques was not significant .
For the single-channel techniques, completion time can be decomposed into two sequential target acquisition components: the time it takes to make a successful selection on the first level, and the time from the end of the first task to the end of the trial.
For P+P, since pressure is unidirectional, there was an additional adjustment cost between the two task components, where participants had to release the pressure after the first task by lifting the pen tip, and to land down the pen again to start the second task .
Figure 4 shows the task decomposition for each of the two single-channel combinations.
We observe that participants require less time on the second invocation of the channel.
This goes contrary to our expectations, in that the second invocation should take longer due to the mechanical readjustment of the finger after having invoked that channel once.
We believe that this is still likely the case, but that users probably built muscle memory from the first phase, given that the targets were all laid out at the same distance in the second level.
In retrospect, we created a condition that unintentionally favoured the single channel input.
Similar to our results for completion time, the interaction was at least partly due to the techniques involving pressure, where the error rate decreased rapidly as the target distance increased.
Our results reveal several trends.
For all a-coord input styles tested, users were faster than using an auxiliary channel twice.
Based on our results across all our measures, Tilt+Roll afforded the best overall result, with completion times below those of the single channels, and error rates in an acceptable range.
One primary reason is that Tilt does not require users to traverse a range of item before reaching the target .
Additionally, Roll can control a larger number of items than pressure, thus disadvantaging this latter channel .
While Tilt+Pressure showed a trend towards being the fastest technique, it also exhibited a high error rate, making it perhaps the least desirable technique of all three a-coord styles we tested.
Error rates are similar to the ranges found in earlier studies on single channel input .
Such errors can be minimized with better discretization functions  and by using fewer number of items .
Other improvements can be found when users are trained and improve with learning .
Our results show that any A-coord technique with 4x4 items has a comparable performance with other single channel techniques.
These results show that we can extend the range of discrete items that was previously possible with single auxiliary channels.
We see that a-coord input facilitates a factor of 2 to 3 times the possible range with single channels.
Even with a conservative extension, of up to 4x4 items, error rates across a-coord input are within the bounds of what was previously reported with single channels alone.
We examine the amount of coordination facilitated by acoord input by breaking down the total completion time by the amount of control exhibited by each individual channel .
We observe a few trends.
First, we notice that while users still operate both channels in conjunction, they tend to stabilize one channel before completing the task with the other.
This result goes contrary to our initial expectation that both channels would always be operated together, instead of one leading the other.
Furthermore, stabilizing one channel before the other might explain the improved efficiency and error rates we observed with certain a-coord styles.
For example, users stabilize Tilt very quickly, which may explain why combinations with this channel, such as Tilt+Roll, worked better than other techniques.
The fact that Tilt takes considerably less time to stabilize than either roll or pressure is to be expected due to the nonsequential nature of acquiring items through tilt-azimuth.
Users take roughly 22% of the total task time to operate and stabilize tilt.
This corresponds to a value between 700 and 850 msecs, which matches very closely to tilt performance when operated alone, as shown in earlier work .
Input with the second channel, i.e.
With Roll+Pressure, we see users on average operate Roll at 50%, and Pressure at 72% of total task time.
These results indicate that users stabilized the first channel before proceeding to the final goal.
They may also suggest that the channel with more controllable input range , i.e.
For example, during the period it takes Tilt to stabilize  we observe several trends.
With Tilt+Roll we find that while users are operating Tilt, the values of Roll also grow linearly and this continues even after Tilt gets stabilized.
In the case of Tilt+Pressure and Roll+Pressure, the non-leading channel Pressure is controlled in a log manner.
This suggests that during the period that both channels are operating, pressure quickly ramps up and then slows down after the leading channel's becomes steady.
Figure 7 - Degree of control with the non-leading channel until the leading channel stabilizes, i.e.
The red vertical bar represents the timestamp at which the leading channel stabilizes.
Left: with Tilt+Roll, Roll is controlled in a linear fashion; Middle, Right: non-leading channel Pressure, is controlled in a log manner.
We demonstrate how to extend this conjunctive operation to a different task in our next study.
Our first study revealed that users can conjunctively coordinate two auxiliary channels.
In our next study we explored this a-coord input feature through multi-parameter selection and manipulation, a task that involves continuous manipulation and has a more inherent two-step structure:.
The common task of multi-parameter selection and manipulation requires users to first select a desired parameter before they can actually change its value.
We adapt a-coord input such that users concurrently choose a parameter and manipulate it.
This form of interaction would be suitable for users who know a priori the value of the target they wish to set a parameter at.
In these situations, a-coord input could be used to select and manipulate the value of a parameter through a single and continuous action.
We note that the pen's auxiliary channels were designed for continuous and fluid input, such as for drawing.
We therefore harness this natural design feature but in a multi-step fashion.
One challenge in adapting a-coord input for a multiparameter selection and manipulation task is to avoid inadvertently setting values for parameters that were not selected.
Figure 8  shows how to adjust the value of multiple parameters, e.g.
A user can move between sliders using pressure.
Only the active slider will get highlighted, for which its value can be altered by rolling the pen.
Users can press a key to confirm the change.
With a-coord input, rolling the pen while pressing will unintentionally change the value of all sliders, active or inactive.
To address this issue, we introduce a ghost wiper on every slider.
Ghost wipers are semi-transparent and work the same way as real wipers but without changing the value of the parameters.
They only show the potential change of the value.
When users press the selection key, the change takes place on the active slide, while all other sliders remain unchanged .
As an add-on benefit, a-coord interfaces allow designers to hide the inactive sliders to save expensive screen real estate.
For example the P+R interface could consist of stacked sliders with only the active one being visible.
Similarly, the T+R interface only shows the slider associated with the pen's tilt angle .
An additional distinction between this task and the 2D selection is that manipulating a continuous variable requires finer control.
We use only Roll for manipulating the continuous variable as our pilot studies showed that Pressure did not afford sufficient bidirectional control for fine-grain input, and Tilt did not map naturally to such a task.
We thus mapped parameter selection to Pressure and Tilt.
Finally, we were also interested in knowing if a-coord input affords a comparable performance to an existing multi-parameter selection and manipulation technique.
We included the FaST Slider  as a baseline technique in the study.
Other techniques exist  but FaST sliders have shown to be easier to learn, than for example, FlowMenus .
Twelve right-handed participants  between the ages of 20 and 35 were recruited for this study.
Participants had little or no experience with pen-based interfaces.
We used the same apparatus as in Experiment 1.
For the a-coord techniques, participants were asked to select a desired slider using Pressure or Tilt, and then use Roll to adjust the position of the wiper to a target value shown by a vertical bar .
The wiper was initially placed in the middle of the slider of 360 pixels  high.
Rolling the pen 1 in the counter-clockwise moved the wiper up by 1 pixel, and vice versa, providing 360 discrete levels and ensuring sufficient smoothness and continuity.
When the wiper reached the target distance, participants pressed the CTRL key using the non-dominant hand to confirm a selection.
With the FaST Slider, participants first selected a desired slider using a marking menu .
The slider appeared at the position where the participants lifted the pen .
They then used the pen tip to drag the wiper to the target value, pressing the CTRL button to confirm selection.
The height of the entire slider widget remained the same for all techniques.
This study measures user performance of a-coord input in a multi-parameter selection and manipulation task.
Unlike 2D discrete item selection, the two sub-tasks in a multiparameter selection and manipulation task are asymmetric, i.e.
A trial ended when participants successfully changed the desired parameter to the target value.
Prior to the study, participants were given practice trials to familiarize themselves with all techniques.
Similar to Experiment 1, they were shown how to engage in a-coord input in a coordinated manner, but this was not enforced in the study.
The experiment employed a 3x2x2x3 within-subjects factorial design.
The independent variables were Technique: P+R, T+R, and FaST Slider; Number of Parameters: Low  and High ; Granularity: Coarse-grain, Fine-grain; and Target Distance: Near, Mid, and Far.
Number of Parameters - High was set to 6 items since results from the first study showed that pressure was hard to control with 8 levels.
Granularity - we used wipers of 2 different sizes to adjust the level of granularity.
For rolling, the direction of roll was randomly chosen for each of the 3 target distances.
In other words, distance Near could be randomly interpreted to be between .
Technique - was counterbalanced across participants using a Latin square, while the other factors were presented in a random order.
The study consisted of four blocks, each consisting of 2 trials.
There were 3 Techniques x 2 Numbers of Parameters x 2 Granularities x 3 Target Distances x 4 Blocks x 2 Repetitions x 12 Participants = 3456 trials in total.
The data were again analyzed using Repeated-Measures ANOVA and Bonferroni corrections for post-hoc pair-wise comparisons.
For the sake of brevity, we concentrate our reporting on our primary factor of interest, Technique.
The means for each technique are displayed in Figure 9.
The difference between FaST Slider and P+R was not significant .
Results of experiment 2 show that a-coord input can be applied to a task involving continuous manipulation and a more distinct two-step process than the discrete item selection task studied in experiment 1.
Of the techniques evaluated, combining Tilt+Roll led to the lowest completion times and was comparable to an existing technique, FaST Sliders, in terms of errors.
We also note that holding a Tilt value while rolling was more controllable than holding a certain Pressure value.
Although the results showed that combining Tilt and Roll was superior to combining Pressure and Roll for a task of this nature, the latter combination can still have a comparable performance with a careful design, e.g.
Expanding on these primary findings, our experiments show that a-coord input is a viable input technique across two qualitatively different tasks.
Experiment 1 showed that a-coord input can extend the bandwidth available through a single auxiliary channel as channels are operated in conjunction.
On a conservative side the bandwidth with acoord input easily extends to 16 items , with much higher levels possible for techniques that don't involve Pressure.
Our results also indicate that when combining two channels, users have a tendency to stabilize one channel first - either Tilt, which is stabilized rapidly, or Roll.
This tendency fits with other research on parallel control, which found that users will not always allocate control equally when operating a multiple degrees-of-freedom input device, particularly when equal allocation results in a biomechanically awkward motion .
However, we also observed that while both channels are in operation, users exhibit a high amount of parallelism.
This latter result suggests that coordinating multiple auxiliary channels on the pen is a relatively natural motion.
In experiment 2, we demonstrated that a-coord input is applicable to a more continuous task and one with a more distinct division of responsibilities for the channels.
This latter task characteristic adds the challenge of having to hold the leading channel steady while operating the second channel.
Our results indicated that Tilt and Roll was particularly effective for this multi-parameter selection and manipulation task, with performance either exceeding or comparable to an alternative technique .
A loose correlation of our results to the comparative analysis of the techniques summarized in Table 1, may suggest the following.
When an auxiliary channel has a rapid access method to discrete items, such as with Tilt, this channel stabilizes quicker in a-coord style interaction.
However, in the process of stabilization, the channels involved are still being coordinated conjunctively.
A second observation is in the amount of control possible and mapping of a task to a channel.
For example, Roll was relegated to continuous parameter manipulation.
This seems intuitive but also worked well since rolling affords a high degree of control.
Single channel input on the pen has been primarily proposed for in-context interactions , where the user does not need to move the pen for interaction.
We feel that the acoord input enhances interactions in these types of scenarios but further facilitates input with the pen in ways that were not easily captured with single channels alone.
We present three application scenarios: 2D menus, improved stimulus-response compatibility, and integral actions.
2D Menus - With a-coord input, contextual menus take on a new dimension.
The technique can, increase the range and number of items selectable and allow for 2D organization of menu items.
Tilt menus have been shown to work well for menu selection , but are limited in range.
Beyond simply extending the number of items, a-coord input also permits 2D menu organization, with the structure  tailored to the strengths of the specific dual-channel combination.
We don't necessarily need to constrain menus to one level before showing the next - we can show all menu items and then allow the user to simply move to their target in a more parallel manner.
Extended Stimulus-Response Compatibility - A-coord input can also enhance stimulus-response compatibility.
Examples of combining channels in this manner include common transformations in 3D applications: we can map Tilt to axis selection, and Roll to manipulation; the latter could rotate or scale an object along the axis selected by Tilt .
This can replace the use of small handles commonly used for such tasks in graphics applications, which are prone to parallax issues with the pen.
Volumetric data navigation often requires users to change the viewing angle of a virtual camera while manipulating the camera's depth.
Tilt and Roll can provide a smoother control, for changing the orientation of the clipping plane  and simultaneously the depth of the plane  .
Integral Actions - A-coord input can also support integral actions, ones that map well to the perceptual structure of the task .
For example to fine-tune rotation of an object, Pressure can be mapped to controlling the CD ratio while Roll rotates the object .
These sub-actions could be easily carried out simultaneously to enhance fluidity with contextual actions.
The results of the first study show that a-coord input can effectively improve the bandwidth of the pen's auxiliary channels with high efficiency and accuracy and by operating the channels in parallel for at least some duration of the task.
These findings can be applied to a continuous two-step task.
We caution, however, that our understanding of a-coord input is still in its infancy.
Additional empirical work is required to:  identify more precise usable ranges for each channel combination;  determine the generalizability of our results across all other channel combinations;  empirically verify the value of a-coord input in some of the application scenarios we have proposed;  explore acoord input for direct settings;  investigate the effect of a-coord input for different visual mappings; and  determine users' qualitative responses to a-coord input in comparison to other alternatives.
Answers to some of these pertinent questions along with our findings can make acoord input a reliable, effective and common interaction method for pen-based interfaces.
