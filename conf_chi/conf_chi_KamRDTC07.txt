Poor literacy remains a decisive barrier to the economic empowerment of many people in the developing world.
Of particular importance is literacy in a widely spoken "world language" such as English, which is typically a second language for these speakers.
For complex reasons, schools are often not effective as vehicles for second language learning.
In this paper we explore game-like language learning on cell phones.
We argue that phones are an excellent technology platform in the typical ecologies of developing countries.
We present the PACE framework that is intended to support the rapid, scalable development of language learning software localized for a particular community of learners.
These learners are usually skeptical of formal education and of cultural biases they encounter in learning "remote" languages in particular.
Localization of content is crucial to make the language relevant to them and to encourage them to adopt it.
English is taught in almost all schools in India: as a second language in public schools, and as a first language and the medium of instruction in most private schools.
Fluency in English can almost be equated with membership in the middle and upper classes .
A recent article states that mastery of English is the "single most influential factor that determines access to elite educational institutions, and hence to important avenues of economic and social advancement" .
Our work was originally motivated by concerns about a "digital divide" as technology use grows in these countries.
But discussions with non-government organizations  and our own fieldwork soon showed that the "language divide" is much more basic, entrenched in the economy, and disempowering.
Language competency is also the biggest barrier to technology empowerment, e.g.
90% of the indigenous web content in India is in English.
English is certainly one of these, as is Mandarin Chinese and Spanish.
But even in countries where such a language is an official "national language," many speakers  have a different native language, and many regional languages  are often spoken.
In India, Hindi and English are official "national languages," but Hindi is native to only 20% of the population; there are 18 major regional languages.
Thus our focus is on second language learning.
Unfortunately, the school systems in developing regions face many difficulties, especially with ESL.
Another contributing factor is the preparation of local ESL teachers, whom we were often unable to communicate with in English without the help of interpreters.
We believe that ESL learning games on cellphones can address the above challenges.
In particular, we hypothesize that learners can improve their ESL skills by using mobile devices in out-of-school settings.
We also believe that game-like design can improve enjoyment of the learning experience and encourage spontaneous adoption.
Technology-assisted learning in developing regions is not far-fetched.
At least two NGOs, Pratham and the Azim Premji Foundation, have used computer games in their initiatives for children in the urban slums and rural areas of India respectively.
Most important, a large-scale evaluation by Pratham1 showed significant gains on mathematics test scores from playing computer games that target math learning .
It is plausible that similar learning outcomes can be replicated using mobile games for ESL.
For such computer-assisted learning interventions to scale, the challenge is: how can we co-design applications with community partners that meet their local language learning needs, without incurring content development costs that are beyond the budgets of community development projects?
We have learned from four rounds of fieldwork in Uttar Pradesh that iterative design is critical when designing educational software for underdeveloped regions.
First, it is difficult to obtain an accurate understanding of the user's educational baseline because it could deviate sharply from the official syllabus or accounts of local informants for the reasons indicated above.
Second, the user is likely to have limited computing experience, which implies iterating for usability.
Third, and most importantly, local stakeholders and designers may not share common cultural backgrounds, which entail continuous co-learning and iteration until the design is consistent with the local culture and social norms.
This third factor adds an extra spin to the challenges already inherent in multi-disciplinary projects.
When educational applications are designed with a clear separation among pedagogy, user-interface and curriculum, existing modules can be revised in the spirit of rapid prototyping without affecting the behavior or correctness of other components.
This emphasis on modular design and reuse is inspired by "learning objects", which are digital resources that can be reused and recombined in other educational contexts to support new learning needs .
In this paper, we present the PACE  framework that facilitates reuse along the above levels.
We found this framework to be immensely helpful during our user studies in Uttar Pradesh, i.e.
The rest of this paper proceeds as follow.
First, we describe our prefatory work in spring 2006.
We assembled a large team to design educational games for low-income children in India to learn ESL.
We give the lessons from that work that inspired the PACE framework.
Second, we elaborate on the framework and its Pattern-Activity-CurriculumExercise components.
Third, we describe how we applied the framework to our second round of design in summer 2006 and the prototypes that resulted.
Next, we report on the user studies carried out in Uttar Pradesh at the end of summer 2006 when we piloted the prototypes.
We conclude by discussing future work.
In the spring of 2006, when we set out to design a series of ESL learning games on cellphones intended for low-income children in India, we had concluded three field studies  between July 2004-05 with children from the urban slums and rural areas of India.
The goal of these prior studies was to learn first-hand about their everyday learning contexts as part of a broader needs assessment.
Each study took place in and around Lucknow, the state capital of Uttar Pradesh, over 2 weeks.
We were assisted by Hindi-speaking interpreters.
Studies beyond 2 weeks were impractical due to the learner's out-of-school commitments.
When we concluded our third field study in summer 2005, we had interacted with 12 rural school children intensively over a two-week period.
We had tested commercial ESL computer games on laptop computers that target vocabulary building and phonics instruction.
Participants were in grades 4-8, i.e.
Despite attending ESL classes for three years on average, we observed that even the most proficient students in the group could barely read each letter in the English alphabet or decode words phonetically with accuracy.
We had originally opted to work with the oldest primary school children so that we could explore a greater range of learning possibilities with technology, but this experience made us realize that we needed to return to ESL basics.
The latter seemed to resemble usability challenges that novice computer users in the industrialized world face.
Learners also seemed to have difficulty following what was taking place since the games were situated in settings, e.g.
Our most salient observation was that learners tended to guess or select every possible option until they obtained the correct answer, which was troubling since they could be correct without understanding why.
These results are by no means conclusive, but indicate that ESL games for developing regions are feasible and merit further study.
We subsequently targeted the selected functional literacies as learning objectives in our designs.
Our aim was to complete the design documents for a suite of ESL learning games by the end of spring 2006.
On top of the above resources, we drew on best practices from two sources.
First, we adopted best practices from the computer games industry, e.g.
Second, we incorporated best practices from commercial language learning packages, by distilling them into design patterns.
These patterns make up the first abstraction in the PACE framework that we elaborate on in the next two sections.
By the end of spring 2006, we had designed over 30 ESL learning games.
These games included crossword puzzles, word searches, hangman, fill-in-the-blank, multiple choice games and matching games and word scrambles.
Pattern name: Written Word->Semantics Association Problem: vocabulary building, word recognition Solution: Suppose X=4: 1.
Displays a word and also displays its meaning pictorially.
As an optional step, the meaning of the word can also be conveyed orally and/or textually in the learner's native language 2.
Repeat step 1 for X-1 more times 3.
Displays one of the X words that was previously displayed during steps 1-2 4.
Presents the learner with at least X pictures to choose from, and provide learner with feedback on whether or not his choice was correct or incorrect 5.
Armed with these observations, we set out in spring 2006 to design similar games that would run on cellphones, the fastest growing technology platform in developing regions .
Since this was our first attempt at designing in a littlestudied domain, we did not expect these early designs to succeed in the field.
Instead, we treated it as a formative evaluation cycle and prelude to future deployments.
In spring 2006, our research group of two graduate student researchers and fourteen undergraduates supervised by a faculty advisor came from backgrounds that included HCI, development studies and education.
We pooled our collective experiences and shared them with the rest of the team in the following forms: * ~80 pages of trip reports, which included interviews with teachers in rural India and other local stakeholders, as well as observations of how children from the slums and rural areas used existing software , * ~60 pages of secondary literature on the present state of elementary education in rural India, * Personas of the above children, * Scenarios of their everyday lives, and * >400 MB of photographs from the above fieldwork to help team members better visualize grassroots conditions.
One of our team members grew up in India and came to the United States two years earlier on a scholarship for his college education.
In the spring of 2006, he provided the team with invaluable perspectives on the local culture.
In particular, he helped to identify a list of functional literacies that were both relevant to the above children and entail conversational or written English, e.g.
The "Written WordAESemantics Association" design pattern that aims to develop the learner's sight vocabulary.
The pattern comprises a receptive phase  where the learner is taught new words, and an activation phase  where the learner is tested on these words.
The pattern also includes guidelines on how the difficulty level can be adjusted.
However, the above processes and resources were clearly inadequate.
The designs suffered from localization-related problems.
For instance, it was difficult for most of the team, who were unfamiliar with how English was spoken in India, to expand the shortlisted functional literacies into a suitable syllabus.
Similarly, ESL textbooks from Uttar Pradesh were not helpful because they were not structured according to the shortlisted literacies.
Moreover, game settings and userinterfaces designed by many members had Western biases.
More troubling, there were also issues with the educational quality of the games.
Before the patterns were handed out, many members came up with designs that were interesting but lacked pedagogical value.
After the patterns were provided as a design tool, members began to design games that were arguably more educational.
However, the patterns also imposed constraints on their creativity, and we noticed that on the whole, the games were less exciting to play than prior to the introduction of the patterns.
Some of these games resembled multiple-choice quizzes taken straight out of paper-and-pencil tests.
A plausible explanation is that some members adhered rigidly to the formulaic structure in which the patterns were presented , without considering that patterns are only skeletal structures that serve as starting points for further creative input.
We acknowledge that our process of giving team members design patterns based on learning software biased our team members to favor pedagogy over other qualities, including fun and engagement.
Moreover, since most members lacked specialized knowledge about language acquisition, they could not easily depart from the patterns without the risk of losing their pedagogical value.
In future, we believe it is important to also prime members with design patterns for successful games, independent of pedagogy.
Design patterns are necessary but insufficient.
Our goal is not only to promote the reuse of existing patterns, but also reuse learning activities which implement these patterns.
This extent of reuse is crucial for developing regions since activities and their user-interfaces may require several iterations before they are appropriate for the users' cultural backgrounds and low levels of computing familiarity.
This sequence also reflects the same steps in the process that a design team takes when instantiating abstract design patterns into concrete learning exercises.
A design pattern is a "template" description of a solution to a problem that has been previously encountered and solved.
In the context of language learning, a pattern allows us to represent, in a skeletal form, the steps that current language learning software take to implement a learning task, which the learner engages in with the software in order to develop his or her language skills.
Patterns are hence intended to scaffold designers who lack specialized backgrounds in language teaching to implement language learning tasks in the form of software.
They may also capture tacit knowledge about the domain after having evolved through iterative design cycles.
In this way, there is no need to reinvent the wheel, and new designs can benefit from the iteration of older ones.
As an example, a pattern for word recognition and sight vocabulary is given in Figure 1.
In steps 1-2  the learner is taught X new vocabulary words, while in steps 3-4  the learner is tested on her knowledge of one of the X words.
An activity and its user-interface that is an instantiation of the "Written WordAESemantics Association" design pattern from Figure 1.
Starting from the top left, in clockwise order:  the player is taught the meaning of "stop" with a corresponding picture,  tested if she remembers what "stop" means,  selects the wrong picture for "stop", and  finally selects the correct picture.
An activity that implements the pattern in Figure 1 could take the form of a game, such as that shown in Figure 2.
This game begins with a receptive phase where the player is presented with words and pictures that represent the meanings of those words .
In the activation phase, a word appears while pictures scroll by .
The player must press the "Enter" button when the current picture matches the word, and receives feedback for being correct  or wrong .
A further advantage of separating pattern and activity is that content developers with expertise in ESL teaching can focus on the patterns, while developers with programming backgrounds focus on implementing the learning activities.
Learning activities should be specialized to a particular curriculum.
For instance, the curriculum for the "Written WordAESemantics Association" activity in Figure 2 consists of a list of words, images that represent their meanings graphically and sounds for their pronunciations.
Finally, an exercise results from associating an activity with a curriculum, and is the actual software that the learner interacts directly with.
Separating activity from curriculum promotes reuse and scalability in four ways.
First, there are curricula, such as high-frequency word lists in commercialgrade offerings like Ladybird's Key Word Reading Scheme and Voice of America's Special English, which are relevant to most learners of the language - independent of their cultural backgrounds - and do not need to be reinvented.
Such a curriculum can be reused by associating it with a different activity whose user-interface is more culturally appropriate for a new learner population.
Second, as reported above, in some developing regions, learners in the same class or language baseline may belong to a relatively wide age bracket due to inequity.
But the curriculum for this class/baseline remains relevant to these learners despite age differences.
This curriculum can hence be reused by associating it with more than just one activity, where some activities and their user-interfaces appeal to older learners while others aim to engage younger learners.
Third, we reported above that learnability and usability are serious issues in underdeveloped regions.
Hence, when an activity and its user-interface are intuitive, presumably as a result of extensive user-testing, it makes sense to reuse the same activity as much as possible.
Fourth, a localized curriculum such as a vocabulary list that is culturally meaningful for a given learner community and which meets its learning needs can be reused by associating it with multiple activities, so as to address different aspects of the community's learning needs.
E.g., one activity can attend to spelling, one activity can concentrate on listening comprehension, another can focus on pronunciation, etc.
In this way, a comprehensive package can be created inexpensively from a core curriculum.
In summary, content development is an expensive process.
The shortage of educational content - even on paper-based media - that is relevant to communities in underdeveloped regions is a huge problem.
In view of the above advantages of scalability, reuse and learnability, the PACE process and framework promises to streamline the cost of repurposing existing language learning resources for new audiences.
Most games that we designed in this round were created from scratch, although we consolidated some ideas from the spring's designs.
This section gives an account on how we applied the framework to the design and implementation of mobile games for low-income ESL learners in north India.
The patterns that we used to guide our design were distilled from a sample of commercial language learning packages.
Applications were selected such that the overall sample reflected a balance between listening, reading, speaking and writing skills.
In addition, applications in the sample were selected based on the following factors, which we adopted as proxy indicators for educational quality: a professional customer base, highly-educated users, and excellent ratings from previous purchasers on e-commerce, home schooling, etc.
When reviewing this sample, we combined both theory and practice.
For theory, we drew on child language acquisition , second language acquisition  and reading acquisition .
A more detailed discussion on how the above knowledge informed us in identifying patterns from commercial packages that could guide others in designing language learning applications, and the methodology that we used, will be deferred to a future paper intended for a language acquisition audience.
When handouts of the patterns were distributed to the team, we had reviewed slightly over 35 software applications and had identified more than 50 patterns.
But we also reviewed this collection of patterns to shortlist those patterns which are appropriate for learners in the initial stages of the second language learning trajectory.
In total, we identified 11 patterns balanced between oral and written English.
Patterns that target the last two aspects involve the learner in word-picture matching activities, such as the pattern shown in Figure 1.
Other patterns involve the learner matching visual symbols of letters or syllables with their sounds.
One more pattern is Pimsleur's graduated interval recall principle, which is based on theories of how human memory works and is popular in the audio-only Pimsleur language learning systems.
Before we proceeded to design learning activities based on the shortlisted patterns, we showed these patterns to an ESL teacher for her feedback.
Her most salient comment was that wordpicture matching is not always effective in practice because learners may mentally associate the word with its picture without comprehending its meaning.
In these cases, the learner will fail to associate the word with another picture that stands for the same meaning.
To avoid these situations, the ESL teacher has to explain the pictures to the learner.
If the teacher is absent, as is the case with ESL learning games, the software can explain the pictures using voiceovers in the learner's native language.
In addition to the above design features, realizing that most of the designs from spring 2006 were not exciting to the average player, we applied Malone's heuristics  on how games can be fun.
For instance, we introduced difficulty levels where time limits were imposed to make the games challenging.
Building on a prior pilot study, in which rural students were observed to persist in replaying electronic quizzes until they attained the satisfaction of achieving the maximum score, we also added score-keeping  to reward the player for selecting correct  answers.
Since two of the patterns, pronunciation and Pimsleur's graduated interval recall principle, could be combined with other shortlisted patterns, there were a total of 9 learning activities that we needed to implement.
We prioritized them for development on .NET Compact Framework 2.0 for the i-Mate SP5 smartphone.
Our rationale for targeting this expensive phone is that the ease of prototyping on the .NET CF platform facilitates numerous rounds of iterative design, which is indispensable when we expected to make substantial changes in response to user observations and feedback from local stakeholders.
The same activities can be subsequently ported to more inexpensive phones once user acceptance issues have been resolved.
Two over-arching considerations guided the design of our activities.
First, to facilitate user-interface learnability, we wanted every activity to share a common conceptual model as much as possible.
Second, we consciously sought not to follow the patterns rigidly in a formulaic manner this time.
Every cycle consists of: * a receptive phase, which aims to develop the player's competence in one aspect of ESL, followed by * an activation phase, which tests the player on the targeted aspect of the language.
We innovated on the basic skeleton in each pattern.
For example, to avoid overwhelming the player with too much new material at once, each activity was designed to have several, short receptive-activation cycles.
In this way, the player is presented a small amount of material, and is tested on it before she gets feedback on her progress.
The cycle repeats until she masters the curriculum.
This leads us to a second and more important feature: motivated by the above observation that players may select the correct answer out of sheer guesswork, the player was assumed to have learned an item only if she was tested on it until she was correct thrice .
The bow-and-arrow setting for the activity that instantiates the "phonemeAEgrapheme association" pattern , and the train setting for the activity that instantiates the "syllable segmentation" pattern .
In the latter, train carriages represent multi-syllable words that the player breaks up at syllable boundaries into smaller carriages.
Most importantly, we adopted Malone's recommendation that our designs be situated in fantasy settings, so that our games do not resemble paper-and-pencil tests too closely.
In consultation with the Indian members in our team, we came up with settings from everyday Indian experiences.
As an example, Figure 3 shows two activities that are based on culturally-relevant settings.
Indian literature is replete with heroes who excel in archery, hence the bow-and-arrow setting of the first game.
We chose the train setting for the second game because trains are a familiar mode of transport for all income levels in India.
On the whole, we found Malone's heuristics to be a helpful design tool in enabling us to "add flesh" to the "bare skeleton" of the patterns.
In total, we implemented 6 out of the 9 learning activities in time for a field study in the late summer of 2006.
The implemented activities included those in Figures 2 and 3.
Mindful of the difficulties that we faced in spring 2006 in identifying culturally-appropriate words for the shortlisted functional literacies, we turned to a Hindi phrasebook for English-speaking tourists visiting north India .
He is a native of India who joined us out of his interest in the India-focus of our work.
However, because he was born and grew up in south India, he needed to consult his mother  regularly.
In total, we designed 21 curricula for the above activities.
The curricula covered the English alphabet and functional literacies such as numbers, dates and time, shopping, traveling, nature and social situations.
For the alphabet, we maintained separate curricula for lower-case and upper-case letters.
We also kept the curriculum for each functional literacy separate.
This separation enabled us to benefit from the learnability, reuse and scalability offered by the PACE framework.
The curricula were implemented in XML, with audio and images in separate binary files.
The images were obtained from clipart libraries and online repositories, and then edited for local appropriateness.
For example, the police and bus conductor uniforms in Figure 2 were edited such that their colors matched those of Indian institutions.
The curricula also included Hindi voiceovers that provided native language explanations for the target English words.
On arriving in India, we performed a short demonstration of our exercises to our NGO partner.
After some consultation, we concluded that the games for the English alphabet were suitable for the 14 kindergarten and 1st grade students in her afternoon school.
This was a surprise to us.
We had originally designed our activities and their user-interfaces for children who were 10 years old, since we expected the ESL baseline of children in the slums to be close to that of the rural children whom we interacted with in summer 2005.
On hindsight, we realized that even though the average slums student will not attain an ESL competency that is comparable to her middle-class counterpart in India, she is significantly more advanced than her rural counterparts from government-run schools because our NGO partner is highly committed to education and administers a high-quality program.
We had to change the user-interfaces to suit considerably younger users.
In particular, we altered the feedback for correct and incorrect answers from text displays to the smiley and frown .
We conducted a fourth round of fieldwork in Uttar Pradesh in the late summer of 2006 to evaluate the exercises from the above activities and curricula.
Our study took place in an afternoon school founded and directed by our NGO partner.
This program targets girls from the neighboring slums, who would otherwise not have an opportunity to receive formal schooling.
Classes are free and last 3.5 hours every afternoon, since students have housework duties in the mornings.
Students are recruited in two ways: first, some students are recruited by teachers who make home visits and convince parents about the importance of formal education for their daughters; second, some parents hear about the program through word-of-mouth and enroll their daughters subsequently.
Our study lasted an average of 2 hours every morning for 2 weeks.
We hired two local adults as our interpreters.
Children were videotaped playing the mobile games, after which we transcribed and translated our 4.5 hours of video records into English to review.
We also visited 5 students at their homes to better understand their backgrounds, which helped us to better contextualize our observations.
This study raised interesting HCI questions.
How quickly can children in an underdeveloped region who have never used cellphones learn to use them?
How well can the same children use cellphones for language learning?
Will they find the game-like experience engaging?
We spent one morning training the children to play the ESL learning games.
We observed some usability problems that we fixed that afternoon.
For example, we removed the time limit for the "easy" level of difficulty since users appeared to have trouble with the joystick button on the smartphone, which resulted in them taking more time than expected to choose their answers.
We also introduced more animations to make the receptive phase of one activity more intuitive.
With the training over, children played the same games for the next two days.
Since we lacked sufficient smartphones, participants needed to share the equipment.
Hence, as they took turns to use the smartphones, they reached across each other.
They gestured and shouted their answers collectively.
They also always repeated each letter after the game played it aloud, as they might do with a teacher in class.
Although we made sure that each participant got her turn, the children continued to demand the cellphones from one another.
Moreover, none of them noticed the camera when we videotaped them because they were engrossed in the games.
From all of the above observations, we conclude that participants found the games to be highly engaging.
One notable usability problem arose on the first day after the training.
On the bow-and-archery game , children sometimes missed the letter that was read aloud.
Not knowing which of the visual letters they were supposed to select to match the audio prompt, learners had no choice but to choose any letter so as to go on to the next question  in the activation phase.
We fixed this problem that day by adding a "repeat sound" menu option.
In comparison to usability, it was less clear if users learned the alphabet.
A pre-test indicated that 3 of the 14 students did not know any of the letters because they had enrolled only a week ago.
Other students knew two-thirds of the alphabet, on average.
After both days of game-play, one participant completed all 6 exercises that we developed; most children completed only 2 or 3 of the exercises.
The latter provided indirect evidence that some of the children had learned all the letters, since the 3 exercises collectively covered the entire alphabet and it was necessary to answer every question correctly in order to complete the exercises.
A post-test would be more conclusive.
But we decided to stop our study with this group of children after two days for two reasons.
First, their teachers were present throughout our study, and we noticed a teacher providing her students with occasional hints when they were playing the games.
As such, even if we could find time to conduct a post-test, there is nevertheless potential for bias arising from teacher intervention.
For example, teachers may introduce similar material in class concurrently with our study.
Second, in response to feedback from our NGO partner that the alphabet was too simple for the children , we spent both days upgrading the curricula to encompass "phonics instruction," i.e.
According to the proponents of phonics instructions, these decoding skills are the next logical step in promoting early literacy, and owing to our modular design, we had almost completed the upgrade after only two days.
But it turned out that our NGO partner was not in favor of these changes because she is an advocate of a different approach called "whole word instruction."
It is beyond the scope of this paper to delve into the differences between these two schools of thought.
In any case, we decided to pilot exercises based on whole word instruction, out of respect for the social norms of the community whom we are designing with.
We spent two days after the pre-test to add more difficult words, as well as create their image and audio files, to the selected curricula at our partner's request.
In total, we piloted 12 exercises over 5 days, after which we conducted a post-test.
The reader can see Figure 2 for an idea of how these exercises look.
The most common usability issue, which cropped up more than 4 times as often as other problems, was the joystick button reported above.
Other than that, participants were generally making good progress once they understood the conceptual model behind the games.
But one participant dropped out of the study mid-way since she was struggling with usability problems and felt discouraged that her peers were making more progress.
The problem that we most expected to see, but did not observe, was the login screen.
We had implemented this screen at the start of each activity so that we could track learners' scores  and thought that we will be entering their names for them.
Amazingly, every participant learned to perform text input after observing us do it on the first 1-2 days, even though this was their first experience with cellphones.
During the first two days, every time we asked participants if they wanted a break, they would refuse, stating that they wanted to continue to finish their current game.
On the third day onwards, participants began to finish the 12 exercises.
As more participants finished, those lagging behind showed reluctance to continue playing.
It seemed the games were appealing until the atmosphere became competitive.
A notable challenge was that it was not easy to think of graphics that intuitively conveyed what their corresponding words meant, for two reasons.
First, despite consulting his mother, the team member responsible for the curricula found it necessary to consult a native in Uttar Pradesh to understand the cultural conventions that the illustrations needed to embody.
He was only able to do this after arriving in UP, and spent days prior to the study iterating on the images.
In the process, he also revised the words in the curricula based on feedback from our native informant.
Second, some words were abstract nouns.
In these cases, we felt that the most appropriate images would simply be Hindi words written in the Devanagari script corresponding to the English words.
Our NGO partner felt that this approach was viable.
But she was not keen on Hindi voiceovers to explain the English words since her earlier experiences on teaching English using Hindi were not successful.
But in our view, whole word instruction is more appropriate for learners who are already familiar with the alphabet.
In consultation with our NGO partner, we switched to her 11 6th grade students.
They were aged 11-15 and had attended school regularly for 3-6 years.
Although they had learned English throughout this period, we still needed interpreters to communicate with them beyond simple greetings.
Our NGO partner also opined that some words in our original curricula were too simple.
Hence, we first conducted a pretest to determine those curricula whose words participants fared least well on.
PACE is inspired by previous work in the learning sciences on learning objects  and reusable software kits .
But their benefits have usually not been demonstrated with realworld case studies.
Whereas this paper provides concrete examples of how their ideas on reuse, modular architecture, etc.
In contrast to the first group of students, the teacher of the 6th graders was more comfortable with us since we had met during previous field studies in Uttar Pradesh.
This made a more reliable post-test possible because she did not find it necessary to accompany her students throughout our study.
We also tested for transfer by asking participants to write short stories in small teams that demonstrated their ability to use these words in new contexts.
Two teams of 3 and 2 students respectively succeeded despite having to use Hindi words to make up for their lack of English vocabulary; we lacked the manpower to guide the other participants on the story-writing task.
Iterative design with users from underserved communities is essential in localizing existing language learning content to meet their unique needs.
We found that patterns gave us a basic, abstract representation to start our design process, and more importantly, that the pattern approach resulted in designs that yielded positive learning outcomes.
But iterative design is fraught with time constraints on the learners' part.
Designing language learning prototypes that support rapid and scalable development from reusable parts permits the most productive use of time in the field.
As we have shown, designing according to the PACE framework enabled us to proceed as far as a learning assessment, as opposed to being hindered by user acceptance and other usability issues.
In particular, PACE provided us with the flexibility to adapt our prototypes for different age groups, more advanced learning levels and material, different teaching philosophies, and local cultural conventions.
We have only begun to scratch the surface of possibilities that PACE offers.
Building on the promising learning outcomes that we have observed, we plan to utilize more complex design patterns in future designs and deployments.
ACKNOWLEDGMENTS Urvashi Sahni  hosted our field studies.
Our work is funded mainly by the National Science Foundation under EIA-0326582.
Other funding sources include: the Intel Undergraduate Research Program and Microsoft Research Digital Inclusion award.
We thank our test users in India and the undergraduate researchers from spring 2006, especially Ruth Alexander, Asya Grigorieva, Maksim Lirov, Priyanka Reddy and Monish Subherwal.
The source code for our prototypes builds on earlier code by Dimas Guardado, Kristopher Hom, Aaron McKee, Anand Raghavan and Aretha Samuel.
Lastly, we thank Jeffrey Heer for helpful comments on earlier drafts of this paper, as well as the anonymous reviewers and Susan Woolley for their insights.
Alexander, C. A Pattern Language: Towns, Buildings, Constructions.
Arora, P. Karaoke for Social and Cultural Change.
The Social Context of Elementary Education in Rural India, 2004.
Adapting software for a local context is often described as a two-step process of internationalization and localization in which  culturally independent components are isolated from culturally dependent components, after which  the latter is adapted for the local context.
For our purpose, a design pattern is an abstract representation that captures a best practice that is currently employed in language learning software.
A pattern therefore enables a best practice to be isolated and represented as a culturally independent component that can be adapted for various local contexts.
Design patterns have been used in building architecture and urban planning , games design , software engineering , website design , computer science education , science education  and other social applications of computing .
Design patterns have not been applied to language learning instructional design.
We have also not encountered design patterns in earlier localization work.
Previous work that target domestic laborers , crop price finding  and micro-credit  in developing regions has involved iterative design.
Their focus, however, is on the design of novel user-interfaces and systems for their target users, and not localization or reuse.
There have also been initiatives to design custom hardware for developing country conditions, listed in .
Exceptions are Kane , Same Language Subtitling  and the multiple-mouse project  that addresses literacy issues in developing regions.
But they do not focus on the language learning problem in its entirety.
We believe that PACE provides a comprehensive framework for organizing this body of work.
Bialystok, E., and Hakuta, K. In Other Words: The Science and Psychology of Second-Language Acquisition.
Bjork, S., and Holopainen, J.
Child's Talk: Learning to Use Language.
Clegg, J., Ogange, B., and Rodseth, V. Evaluating Digital Learning Material for English Language Development in African Primary Classrooms.
IMFUNDO KnowledgeBank Paper, April 2003.
The TechBridgeWorld Initiative: Broadening Perspectives in Computing Technology Education and Research.
Faust, D., and Nagar, R. Politics of Development in Postcolonial India: English-Medium Education and Social Fracturing.
Design Patterns: Elements of Reusable Object-Oriented Software.
Hallford, N., and Hallford, J. Swords & Circuitry: A Designer's Guide to Computer Role-Playing Games.
Designing Educational Technology for Developing Regions: Some Preliminary Hypotheses.
IEEE 3rd International Workshop on Technology for Education in Developing Countries.
IEEE International Conference on Advanced Learning Technologies, 2005.
Practical Considerations for Participatory Design with Rural School Children in Underdeveloped Regions: Early Reflections from the Field.
Same Language Subtitling for Literacy: Small Change for Colossal Gains.
The Natural Approach: Language Acquisition in the Classroom.
Explorations in Language Acquisition and Use.
Larsen-Freeman, D. Techniques and Principles in Language Teaching, 2nd Edition.
Science Education: Integrating Views of Learning and Instruction.
What Makes Things Fun to Learn?
Marcus, A., and Gould, E. Cultural Dimensions and Global Web User-Interface Design: What?
6th Conference on Human Factors and the Web, 2000.
Medhi, I., Sagar, A., Toyama, K. Multiple Mice for Computers in Education in Developing Countries.
Norman, D. The Design of Everyday Things.
Parikh, T.S., Ghosh, K., Chavan, A., Sayal, P., and Arora, S. Design Studies for a Financial Management System for MicroCredit Groups in Rural India.
ACM Conference on Universal Usability, 2003.
Parikh, T.S, Javid, P., Sasikumar, K., Ghosh, K., Toyama, K. Mobile Phones and Paper Documents; Evaluating a New Approach for Capturing Microfinance Data in Rural India.
Pawar, U., Pal, J., Toyama, K. Text-Free User Interfaces for Illiterate and Semi-Literate Users.
Speech Recognition for Illiterate Access to Information and Technology.
Roschelle, J., and Jackiw, N. Technology Design as Educational Research: Interweaving Imagination, Inquiry, and Impact.
In Kelly, A. and Lesh, R.
Research Design in Mathematics & Science Education.
Scribner, S., and Cole, M. The Psychology of Literacy.
Shukla, S. From Pre-colonial to Post-Colonial: Educational Transitions in Southern Asia.
A Process Model for Developing Usable Cross-Cultural Websites.
The Science of Reading: A Handbook.
The Design of Sites: Principles, Processes and Patterns for Crafting a Customer-Centered Web Experience.
Connecting Learning Objects to Instructional Design Theory: A Definition, A Metaphor, and a Taxonomy.
Yeo, A. W. Global-Software Development Lifecycle: An Exploratory Study.
