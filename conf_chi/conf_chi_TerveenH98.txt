For many purposes,the Web page is too small a unit of interaction.
Users often want to interact with larger-scale entities, particularly collections of topically related items.
We report threeinnovations that address this userneed.
We replaced the web page with the web sire as the basicunit of interaction andanalysis* We defined a new information structure, the clan graph, that groupstogethersetsof related sites.
We have discovered interesting information that can be extracted from the structure of a clan graph.
We can identify structurally important sites with many incoming or outgoing links.
Lii between sites serve important functions: they often identify "f?ont door" pages of sites, sometimes identify especially significant pages within a site, and occasionallycontain informative anchortext.
Web searchand navigation are two difficult problems that have received much attention, with search engines and indices like Yahoo being the most widespread solution attempts- However, users have larger and longer term information needs, in particular, how to manage lasting interest in a broad topic and to comprehendcollections of multimedia documents pertaining to the topic.
Permission to make digitalhard copies of all or part of this material for personal or classroom we is granted without fee provided that the copies are not made or diibuted for profit or commrrcial advantage, the copyright notice, the title ofthe publication and its dateappear, and notice is given that copyright is by permission of the ACM.
Our goal is to addressthese user needs.
We replaced the Web pagewith the site - a structuredcollection of pages, a multimedia document- as the basic unit of interaction.
A site is more appropriate for several reasons.
Thus, users want to know what's available at a given site, not a single page.
Thus to analyze inter-site structure appropriately , we must correctly group pagesinto sites.
Second,we defined a new information structure, the clan graph, to representcollections of densely connectedsites.
The clan graph has clear intuitive motivation based on conceptsfrom social network analysis,social filtering, and co-citation analysis.
A clan graph is defined in terms of a user specifiedset of seedsites and is constructed by following hypertext links from the seeds.
It is easy for users to specify seeds,e.g., they may get them from their boolunarksfile, from an index pagethey found on the web, or from a searchengine.
And the clan graph construction algorithm is tolerant of `noise" in the seeds:a few off-topic seeds will not affect the quality of the graph.
Thiid, to enable users to comprehend and manage the information we extract, we have developedthe auditorium visualization, which communicates key information such as whethera site is structurally central or peripheral,whethera site is more of a content provider or index, important internal structure of a site, and how sites link together.
Figure 4  shows an exampleauditorium visualization.
Our system is implemented in Java.
We have built and analyzedclan graphsfor dozensof topics, performedsome experiments to evaluate our algorithms, and iterated our interfacedesignsignificantly in response to userfeedback.
Researchershave sought to define useful, higherlevel structures that can be extracted corn hypertext collections, such as "collections" , `localities" , "patches" or `books".
This approach opens up four major avenuesof innovation: definitions of new structures, algorithms to extract the structures,visualization techniques that enable users to comprehend the structures, and interface techniquesthat create a workspacein which it is easyto specify, modify, and experimentwith the structures.
We survey someleading projects in this area,then compare and contrastour approach.
Kleinberg  definesalgorithms that identify authoritative and hub pageswithin a hypertext.
Authorities and hubs are mutually dependent: a good authority is a page that is linked to by many hubs, and a good hub is one that links to many authorities.
An equilibrium algorithm is used to ident@ hubs and authorities in a hypertext collection.
For both Kleinberg and WebQuery , a collection consists of the results of a searchquery augmentedwith all pagesthat link TOor are linked to by any page in the original set of results.
WebQuery sorts pages into equivaIence classes based on their total degree , and displays the pages in a `bullseye" layout, a series of concentric circles each containing pagesof equal degree.
WebCutter  builds a collection of URLs based on text similarity metrics, then presentsthe results in tree, star, and fisheye views.
Pitkow and PiroHi  report cluster algorithms based on co-citation analysisI71.
The intuition is that if two documents, say A and B, are both cited by a third document, this is evidence that A and B are related.
The more often a pair of documentsis co-cited, the stronger the reIationship.
TYheyapplied two algorithms to Georgia Tech's Graphic Visualization and Usability Center web site and were able to identify interesting clusters.
Card, Robertson, and York  describe the WebBook, which usesa book metaphorto group a collection of related web pages for viewing and interaction, and the WebForager,an interface that lets users view and manage multiple WebBooks.
They also present a set of automatic methods for generating collections  of related pages,such asrecursively following all relative links from a specified web page, following all  links from a page one level, extracting "book-like" structures by following "next" and "previous", and grouping pages returned from a searchqueryPirolli, Pitkow, and Rao  defined a set of functional roles that web pagescan play, such as `%ead" , "index", and `%ontent"- They then developed an algorithm that used hype&k structure, text similarity, and user accessdata to categorizepagesinto the various roles.
Ma&inlay, Rao, and Card  developeda novel interface for accessingarticles from a citation database.
The central Ui object is a "Butterfly", which representsone article, its references,and its titers.
The interface makes it easy for users to browse from one article to a related one, group articles, and generatequeries to retrieve articles that stand in a particular relationship to the current article.
Mukherjea et al  and Botafogo et al  report on algorithms for analyzing arbitrary networks, splitting them into structures  that are easierfor usersto visualize and navigate.
Other efforts propose novel ways to view and navigate information structures.The Navigational View Builder  combines structural and content analysis to support four viewing strategies: binding, clustering, filtering and hierarchization.
Through the extensive use of single user operations on multiple windows, the Elastic Windows browser  provides efficient overview and sense of current location in information structures.
Lamping et al  explored hyperbolic tree visualization of information structures.
Furnas  presents a theory of how to create structuresthat are easyfor usersto navigate.
Somewhatless directly related are the SenseMaker and Scatter/Gather systems.
SenseMakersupportsusersin the contextual evolution of their interest in a topic.
The focus is on making it easyfor usersto view and managethe results of a query and to create new queries based on the existing context.
Scatter/Gathersupports the browsing of large collections of text, allowing usersto iteratively reveal topic structureand locate desirabledocuments.
There are some similarities between these researchefforts and ours.
Our work also has important differences.
Most significantly, we must induce both the basic units, the sites, and the collections into which they are structured.
Previous efforts either took the collection as a given , offered methodsfor supporting usersin creating collections, or defined the collection as an augmentationof the results of a search engine query.
Card et al  do offer some automatedtechniquesfor creating collections, but the basic unit out of which their collections are built is a single web page.
Thus, the resulting collections are more local than our clan graphs;in particular, someof them are more or less a single site.
PAPERS systembenefits from a kind of "triangulation" effect when identifying new sites of interest.
Another important difference is that the web consists of many ecologies of dynamic, evolving documents.
Thus, mutual concurrent citation is possible, even normative, unlike with paper articles where lengthy publishing cycles makes it rare.
CLAN GRAPHS:CONCEPTS AND ALGORITHMS A clan graph is a diiected graph, where nodes represent content objectsand edgesrepresenta citation of or referenceto the contentsof the target nodeby the sourcenode.
Before we can describehow we construct and visualize clan graphs,we define our termsprecisely.
Universal Graph - the graph of all inter-document links in the information structure.
Topic Graph - A subgraph of the universal graph that containssites on the sameor similar topics.
This is au ideal construct that can only be approximated, e.g., through analysisof structureor similarity of content.
Local Clan Graph - For a specified set of seedsites, this is the subgraphof the universal graph whosenodesare the seedsitesor are "closely connectefl to the seeds.
Observed Clan Graph - It is practically impossible to constructthe entire local clan graphbecause:
Fiwre 1: Motivating the use of 2-Clans believe it productively formalizesnotions like "collection" and "locality".
We now attemptto justify this belief.
Figure 1 graphically depicts three types of inter-documentrelationships.
In each case, an interesting relationship betweentwo of the documentscan be inferred basedon a known relationship betweenthe other two.
Cocitation analysis  says that documents B and C are related if A cites them both.
Social filtering  says that if documents B and C both refer to A, then B and C may be link to similar sorts of items in general, and thus deal with similar topics.
Figure lc shows a limited  transitivity; we could interpret this as "if C is on a particular topic, and cites A, then A is likely to be on topic; and if A cites B, then B is likely  to be on the sametopic."
These three relationships are the minimal 2-clans.
They show why Zclans are appropriate to represent topically related subgraphsof items in a larger graph.
2-clans are necessarybecauseno smaller structures allow us to make inferences about document relatedness, and they are sufficient becauseno larger structure enablesother simple inferences.
Notice that 2-clans are defined over undirected graphs: in other words,we take A and B as connectedwhetherA links to B or vice versa.
Again, we think this is appropriate.We have observedmany sites that are topically central but that have only in-links  or out-links .
A measurethat required bi-directional paths betweennodes would underrate some important sites.
Therefore we first establish connectivity; subsequent analysis takes directionality into account in order to identify important structureslike sinks andsources.
Finally, the 2-clan definition avoids the use of an arbitrary graph density parameter: is a graph denseenoughif its density is 0.2?
By requiring that sites be related to a certain number of seeds,we ensure that we find not just dense graphs,but graphsin which a certain number of the seeds participate.
Sincewe assume that the seeds deal with a specific topic, this is a way to stay on topic.
This is how we operationalize the "triangulation" effect we mentioned earlier.
And making K larger is a simple way to get smaller, more tightly connectedgraphs.
This usually means that the sites in the graph are more likely to be both on-topic and central to the topic.
Thus, the observedgraph is the subgraphof the local graph that we observewhen we attemptto constructthe graph.
Local clan graph: a formal definition Our goal is to find the local clan graph for a set of seed sites.
Precisely what does it mean to be "closely connected" to the seeds in the local clan graph?
We experimentedwith several definitions, but convergedon a simple, appealing definition building on concepts from social network analysis, co-citation analysis, and social filtering : the NK local clan graph for a seedset S is { I v is in an N-clan with at leastK membersof S}.
An N-clan is a graph where  every node is connected to every other nodeby a path of length N or less,and  all of the connectingpaths only go through nodesin the clan We are interestedprimarily in 2-clans, that is, the 2K local clan graph.
For example,one almost certainly would want to pick a larger value of K for a seed set of size 20 than for one of size 5.
Constructing the observed clan graph We designed a heuristic algorithm for constructing the observed graph.
The algorithm is not guaranteed to produce de completeNK local clan graph; however, what it doesproduce always is a subgraphof the NK clan graph.
In the next subsections,we discussthe role of the seedsites, ,sketchthe algorithm and describe the scoring function for site selection,and discusshow sites are defined.
Input: the seed `Ihe observedgraph we obtain dependson the properties of the seedsites we startwith.
Our experienceis that usersare able to choose good seeds.
Good seeds have three properties.
First, the seedset must cohere: if the seedsites have few outgoing lii or link to few of the samesites, the observedclan graph will be small or even empty .
This implies that the seeds do not participate in a significant dense subgraphwithin the universal graph.
Second,the seeds must cover the topic: a poorly chosen seed set may lead to an observedgraph that is a small subsetof the topic subgraph.
This can be the caseif there are too few seeds,or the seeds are not well distributed across components in the topic graph.
Finally, the seedsmust be accurate:if someof the seeds are off-topic, then the clan graph may contain offtopic sites.
However, if most of the seedsare on-topic, this is not a problem in practice.
We need a scoring metric that estimatesthe likelihood that a site on the queueis in the local graph with the seedsites, i.e., that it is in a 2-&n with at least K seeds.The metric must be efficient to compute, since it must be applied to each site on the queue, and the queue typically contains hundredsor thousandsof sites.
This metric is cheap to compute.
It also is a reasonable heuristic, since Zclans are composed of 1 and Zpaths.
Thus, if a site has a score of  5, then it already is known to be in a 2-&n with 5 seeds.
We are in the process of experimenting with and evaluating this heuristic and considering other heuristics at different points along the accuracy/efficiencycontinuum.
Sites A site is an organized collection of pages on a specific topic maintained by a single person or group.
Sites have structure, with pages that play certain roles .
A site is not the samething as a domain: for example,thousandsof sites are hosted on www.geocities.com.
And what counts as a site may be context dependent.
For example,if one is taking a survey of researchlabs, www.media.mit.edumight well be considered a site, while if one is investigating social filtering projects, individual researchers' sites hosted on www.media.mit.eduare probably the proper units.
The last observation suggesteda way to operationalize the definition of a site that suits our needs.
When building a clan graph, the relevant known context is the set of URLs that have beenlinked to by the expandedsites.The intuition is that if sites in the clan graph link to two URLs, one of which is in a directory that contains the other, then they are likely to be from the samesite'.
More precisely: ifurl A has been linked to and url A/B has beenlinked to, then assumethat A is the root page of the site and that A/B is an internal url.
This rule applies recursively, so the urls A/B/C, A/B, and A would be merged into a site with root page A and internal pagesA/B and A/B/C.
This rule can fail - two URLs that belong to the samesite will not be merged if no common ancestorin the directory structure  has been linked to, and two URLs from distinct sites can be merged, .
We needed a type of web crawler, which fetches html pages, follows  links found on the pages and induces sites from pages.
Sites that are linked-to are stored on a queue and becomecandidatesfor expansion .
And we are consideringsite-mergingheuristicsbasedon the idea that if distinct sites point to many of the samepages in the samedomain,they may be part of the samesite.
We also must decide whether a link from a page is within the site or to anothersite.
We classify links basedon their relationship to the root page of the site.
If a link is containedwithin the directory that contains the root page, then we classify it as internal, otherwise,we classify it as a link to an external site.
Internal lii are added to a siteinternal queueof candidatepagesto be fetched.
Finally, we must specify how many pagesto fetch from a site, i.e., what it meansto expand the site,.
The primary reason for fetching pages is to find links to other sites, which are the building blocks of the clan graph.
For this purpose,finding a site's index pagepresumablywould yield most or all such links, so we could stop expanding the site then.
Indeed, we try to find index pages first by sorting pageson the site-internal queue by name,preferring pages whose namescontain words lie `Thrks", "pages", "sites", "web", and `internet".
However, there is anotherreasonto fetch pages,namely to build a profile that can be used to evaluatea site.
Factors like site size and amountof content  are important The more pageswe fetch, the more accuratea site profile we can create.
Therefore, to serveboth goals, we introduce a parameterP  that controls how many pagesto fetch from a site.
The structure of clan graphs that we have observedin the web is complicatedand not easyto visualize or understand.
For example,figure 2 is a direct node/edgerepresentation of the clan graph for the Television show "Roar" observed in August of 1997.
The drawing was produced by a sophisticatedgraph layout tool, dot, which minimizes edge crossings,yet the drawing still is complicated.
The clutter of edgecrossings,edgeanglesand local node constellations divert visual attention to non-significant graphic elements.
A viewer can identify somenodesof high and low degree, but the layout reveals no overall pattern.
It is virtually impossibleto visually discerncentral and peripheral sites.
After constructing a clan graph, we analyze it to extract additional structure to aid user comprehension.We first computestructuralpropertiesof sites; for eachsite, we tally the numberof 2-clans it is a memberof and the number of in and out links.
Combining this structural information with site profile datalie size and the amountand type  of content makes it possible to distinguish "official" sites , which tend to have lots of content and in-links and few or no out-links, from index sites, which tend to have little content and lots of out-links.
Thus, users don't get stuck following links from one index site to another,never getting to the contentthat they really want.
We also identify internal pages of a site that multiple external sites have linked to.
By providing direct access to these pages, we create "shortcuts" to places the topic community found worth endorsing.
These can be considerableaids to navigation.
Finally, we analyze the text associatedwith the hyperlinks to eachsite.
Much of the time the text is either the site title or a close variation.
However, sometimesit is a useful alternative description of what the site is good for.
For the purposeof revealing nodedegree,simply collapsing the graph structure into a list of nodesorderedby degreeis a better interface.The orderedlist form of figure 3 makesit easyfor usersto comparenodedegreeand check quantities.
Note that the eighth site in the list  contains substructure,i.e., an internal page that was linked to by multiple sites.
The list view is quick and easy to produce but still hides many important properties of sites and the graph.
The list view is linear, so it easily communicatesonly one dimension.
It is textual, so it cannot exploit graphical display properties, either images from the sites or the use of color, position, shape, etc.
It is static, so there is no dynamic focusing,no hiding andrevealing of structure.
We wanted users to see the results of our clan graph analysisin terms of the graph itself.
Theseresults include site centrality/peripherality, in-link to out-link ratio, patterns of inter-site links, and how sites rank in terms of properties such as size, number of images, audio and downloadfiles.
The Auditorium view: how it satisfies our design goals To meet thesegoals, we have iterated cycles of design and usability testing, arriving at a design that we call the auditorium seating vtiualization The metaphor is to the arrangementof seating in an auditorium: row upon row curved around a center stage.
Figure 4 and color plate 1 show the auditorium seatingvisualization of the clan graph for the television show `Roar!".
Thumbnails of site "front door" pages serve as iconic representationsof sites.
The auditorium seatingvisualization is dynamic.
By moving the mouse over a site thumbnail, users switch from a general view of the graph to a view focused around the indicated site.
Figure 4 shows the visualization in de site-focused mode.
The thumbnail of the focused site is enlarged, and green%" arrows and red "our arrows appearon sites that the focused site is linked with.
Other unlinked sites are blanked, but their drop shadows are left to note their positions.
As the result of user experiencewith many design versions, we cameto use a large number of techniquesto communicateinformation necessaryto satisfy user needs.
Pleaserefer to figure 4 or color plate 1 to identify the graphic elementsdiscussed.
However, user feedback showed the desirability of ordering sites within eachrow, and while circles "wrap around", the properties important for ordering  do not.
Semi-circles,on the other hand, with their definite end points, were suitable for our purpose.
An important distinction users made was between index sites and content sites.
Allowing dynamic ordering of sites within a row by properties like number and proportion of in and out links, and amount of content  makes these distinctions apparent.
By default, we order sites within rows by the amount of content, so sites with lots of contentappearat the top of eachrow.
Graded colored bands aid in interpreting the values of the within-row ordering property of sites.
Bands are graded from bright red to bright green, with the color break occurring at the median value of the ordering property.
For example, if sites are ordered by the proportion of in links to out links, the break point is a visual cutoff behveen sites that serve more as indices and sitesthat servemore as contentrepositories.
Hiding graph spaghetti - We wanted to reveal the fine structure of inter-site links without producing visual spaghetti as in figure 2.
PAPERS either on all the links from or to a single site or traced the edge between two sites.
We designedto support those two visual tasks while removing as many distracting visual elementsas possible.
We did this with "one-site at a time" dynamicpresentationof graph structm-e. Users move the mouse cursor over a site to focus on it, and only lii from or to the focused site are shown.
To further reduce clutter, we do not draw completelinks behveensites,sincethey draw too much user attention to uninformative crossings and edge angles.
Instead, we representlinks with small in and out arrows.
Theseare pagesthat the author of the linking site found worthy of special attention.
The link text often is more informative in thesecases l Thumbnail representations reveal quite a bit of information about sites.
Overall design and color schemecan be seen.
Ratio of text to graphics on the front door page tells users something about what to expect from a site.
Saturated color, positioning and shape of banner ads reveal their presence in thumbnails.
If a user has browseda site previously, a thumbnail usually is sufficient to identify the site.
Early user testing highlighted for us the necessity of relevance feedback, leading to construction of a new observed clan graph.
Users can judge sites as on-topic  or off-topic .
On-topic sites are added to the original seedset, and off-topic sites are addedto a stop list.
Thus, users can nudge the graph into a somewhatdifferent area,moving it closer to the ideal topic they have in mind.
We must verify experimentallythat the NK local clan graph is a useful construct.
A graph should contain mostly ontopic sites, and the quality of the graph should not be too dependenton precisely which sites are selected as seeds.
Our informal inspections of dozens of graphs show these conditions to be satisfied, but clearly we need more systematic evaluation.
To that end, we did a pilot study on the topic of the rock group The Grateful Dead.
We used63 URLs obtained from Yahoo as a starting point for our experiment.
We randomly divided theseURLs into setsof size 5, 10, and 20.
We usedtheseas seedsetsfor our clan graph construction algorithm, also experimenting with different values of K. Analysis of the results so far has confirmed some of our intuitions.
First, larger seed sets  tend to result in graphs that better cover a topic than do smaller seed sets .
Second,increasing the parameterK results in smaller, more tightly focusedgraphs, while decreasing K leads to larger, but perhaps not as accurate graphs.Third, sites with large numbersof in-links almost always are discovered by the clan construction algorithm regardlessof the sites in the seedset.
Therefore, the algorithm doesnot appearoverly sensitiveto the choice of seeds.
Finally, when we ranked sites within a graph by in-degree, the top ranked sites  always were on-topic.
We did find that "the topic" may be somewhat broader than we initially had supposed.
For example,many Grateful Dead sites link to The Electronic Frontier Foundation and various tapetrading and tape-trackingsites.
Although thesesites are not aboutthe Grateful Deadper se, clearly they are part of what the online Grateful Dead community considers important and relevant.
This community is defined by but not limited to interest in The Grateful Dead.
We are continuing our evaluation work, both analyzing additional topics and quantifying the tentativeconclusionswe have drawn so far.
We are extending the interface to give users more control during the graph construction process, allowing them to intervene early if they find somesites particular interesting , thus influencing subsequent sites that are addedto the graph.
We also are considering methodsto scale our visualization.
Currently, it can handle around 35-40 sites.
We would like to scale it up to at least 100 sites and are confident that techniqueslike fisheye views and zooming will get us there.
Finally, one of our colleagues, Brian Amento, is preparingto carry out formal user studiesof the auditorium visualization and a dynamic text-table interface to the same data .
We are seeking experimental evidence of the utility of the clan graph information structureand the relative utility and usability of the auditorium visualization and the best dynamic textual interfacewe can design.
Finally, we are making our system robust enough for widespreaduse.
We will first open it up for use within our laboratory.
After any fixes and enhancements this leadsto, we intend to distribute the system freely, thus enabling anyoneto createcollections of online documentson topics they are interestedin.
We will put up a serverwherepeople can publish and retrieve collections.
It is our hypothesis that relatively few people will chooseto build collections, but many will want to view and interact with collections someoneelse has built.
By distributing our software and maintaining a server,we will be able to test this hypothesis, and, in general,to investigate the social nature and social roles of communities that organize their interests around online information resources.
CONCLUSIONS The goal of the work reported here is to help people find and managecollections of documentsrelated to topics they careabout.
Assessing the Structure of Communication on the World Wide Web.
Journal of Computer-Mediated Communication, 3, I, June 1997 lO.Kandogan,E., and Shneiderman, B. Elastic Windows: A Hierarchical Multi-Window World-Wide Web Browser, in Proceedings of UZST'97 , preprint at http://www.cs.umd.edu/usersikandoganlpapersluist97/pa per.html 1LKleinberg, J.M.
Authoritative Sourcesin a Hyperlinked Environment, in Proceedings of 1998 ACM-SIAM Symposium on Discrete Algorithms .
An Organic User Interface for Searching Citation Links, in Proceedings of CHZ'95 , ACM Press,67-73.
WebCutter: A System for Dynamic and Tailorable Site Mapping, in Proceedings of lwW6 .
XMukherjea, S., and Foley, J. D. Visualizing the WorldWide Web with the navigational view finder.
IdMukhejea, S., Foley, J.D., and Hudson, S. Visualizing Complex Hypermedia Networks through Multiple Hierarchical Views, in Proceedings of CHZ'95 ,ACM Press,331-337.
18.Pirolli, P., Schank, P., Hearst, M., and DiehI, Scatter/Gather Browsing Communicates the Topic Structure of a Very Large Text Collection, in Proceedings of CHI'96 , ACM Press,213-220.
Social Network Analysis: A Handbook.
Building Task-SpecificInterfaces to High Volume ConversationalData, in Proceedings of CHI'97 ,ACM Press,226-233.
We present an algorithm to construct a clan graph from a set of seed documents- The algorithm also tackles the hard problem `what is an online document?
Finally, we introduce and illustrate the auditorium visualization.
It gives a graphical overview of the most important several dozen sites for a topic, lets users explore structural relationships between sites and the internal structure of individual sites, and alIows dynamic sorting to aid usersin understandmg the structmal role a site plays within the community of related sites.
We are moving from informal `to formal evaluations of both our algorithms and interface and are making our implementation robust enough to be freely distributed and used.
Botafogo, RA., Rivlin, E., and Shneiderman, B.
Structural Analysis of Hypertexts: Identifying Hierarchies and Useful Metrics.
