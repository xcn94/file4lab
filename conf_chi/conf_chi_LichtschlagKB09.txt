Modern presentation software is still built around interaction metaphors adapted from traditional slide projectors.
We provide an analysis of the problems in this application genre that presentation authors face and present F LY, a presentation tool that is based on the idea of planar information structures.
Inspired by the natural human thought processes of data chunking, association, and spatial memory, F LY explores authoring of presentation documents.
Evaluation of a paper prototype showed that the planar UI is easily grasped by users, and leads to presentations more closely resembling the information structure of the original content, thus providing better authoring support than the slide metaphor.
Our software prototype confirmed these results, and outperformed PowerPoint in a second study for tasks such as prototyping presentations and generating meaningful overviews.
Users reported that this interface helped them better to express their concepts, and expressed significant preference for F LY over the traditional slide model.
Consequently, Microsoft's PowerPoint, Apple's Keynote and similar software, commonly denoted as slideware, are among the most frequently used application genres .
Slideware has been repeatedly criticized for degrading the quality of talks .
Its conceptual model is based on the notion of rectangular slides shown in a linear, predefined sequence.
However, the constraining technical possibilities of traditional slide and overhead projectors that created this model are no longer valid for computer visualizations--yet they still shape our understanding of the nature of presentations.
F LY proposes to change this, using an underlying metaphor and user interface instead that does not hinder us or force us to change our mental model .
Giving presentations is a demanding task: it is frequently a stress situation for the speaker  whose career may hinge on his performance.
Nowadays, however, presenting is seen as almost synonymous to having a good slide deck .
But giving a presentation is only one aspect: A good presentation often takes many days to research, structure, plan, prototype and rehearse, it may require handouts or video record-
To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee.
In this paper, we provide an overview of the related work in presentation technology.
We distill from this three primary aspects in which slideware limits the author's expressiveness and degrades visualization quality, because it does not accommodate for the highly interconnected nature of the information structures presented.
We then present our design, addressing each of these aspects directly.
We discuss the details of two user tests, the first using a paper prototype, the second using a resulting advanced software prototype.
They show that the concepts introduced with F LY better support prototyping and re-casting ideas when authoring presentations as well as showcasing the connections and differences between subtopics in a presentation.
The design of F LY builds upon the ideas of previous prototypes, especially the CounterPoint system.
Three key differences separate our approach from previous work: First, our analysis below indicates that slide boundaries can impede the author's performance; therefore, in F LY information items are placed atomically without slide frames.
Second, as a stand-alone implementation, all aspects of the authoring take place in a unified environment.
All previous approaches use slides, or similar formal methods to define context and detail, and many of them separate the authoring of slide content and slide connections.
We explain below how making the authoring process in F LY seamless can help the author to quickly re-cast ideas and enable her to work both top-down and bottom-up.
Third, while unrestricted Zoomable User Interfaces are powerful tools for idea organization, the multi-scale display can also become disorienting for the author as well as the unfamiliar audience.
All of the above ZUI systems create infinite zoomable spaces with nested information; for example, a slide in CounterPoint can be scaled up and down.
This gives the impression that the object moves further away from the camera or closer to it.
The downside of this is that content items often lose their relative proportions, and locating a specific item can be hard.
In order to keep proportions fixed and to help the orientation of the audience, F LY's planar design  limits interaction to a finite number of levels of depth, contrary to previous ZUI approaches.
While Good  collected qualitative feedback from presenters and the authors of Slithy  collected design rationales, the effect of planar spaces on presentations otherwise remains unexplored.
With regards to evaluation, this work looks at the problem space from a different direction.
Our two studies look at quantitative and qualitative aspects of the authoring process and help to fill in the blanks in this area.
At this point, we limit the evaluation to authoring instead of presenting for two reasons: it is heavily debated if and how the learning effects of different presentation styles can in fact be measured and compared rigorously enough to serve as scientific validation .
Also, our own informal studies as well as CounterPoint's on graph-based presentation approaches already indicated that these approaches are well-received by presenters and audiences.
While the performance of the speaker will remain the most important factor in talks, we believe that preparation--often in limited time-- is key to this performance.
As we will explain below, many presentation problems result from the limitation of current slideware authoring systems.
Thus, exploring tools to improve the preparation of presentations is the main goal of this work.
The data collected validates the ideas of F LY, CounterPoint, and similar approaches for authoring environments and explores how authors use such an interface to plan their talks and which problems can arise in the process.
We hope that with this information it will become easier to further improve the user experience for presentation authoring environments furthermore.
Classroom Presenter  allows for versatile writing of annotations onto and next to slides, and for anonymous feedback from the audience.
Pens have also been employed for flexible authoring of informal presentations , or together with speech input .
Major advantages of pen interaction are easy prototyping and rearranging, as well as impromptu additions during presentations .
Palette  and PaperPoint  use physical cards with barcodes and slides printed on digital paper as proxies to control the presentation flow.
The presenter is free to randomly access any slide via her cards, or to reorder them on the fly.
This allows her to seamlessly respond to unexpected questions or time constraints during presentations.
Previous work improving on the linear presentation flow of slideware used connected graphs of slides to display the talk structure to the presenter  and possibly the audience .
This allows for different paths to be planned through this structure for different occasions.
Our work originated from a concept-map based approach with automated layout .
Taking different paths is quite common in hypermedia  and distance learning .
The Visual Understanding Environment 1 is primarily a rich concept-mapping tool with an innovative presentation feature: the nodes automatically function as slides.
A presenter can follow predefined routes through the net, hop to other routes crossing the current one or show the concept-map to the audience.
An alternative to graph layouts are zoomable user interfaces   that allow the author to arrange slides in a spatial layout at varying distances from the virtual camera view point in the scene.
ZUIs differ from graphs because they rely on size, spatial arrangement, and depth instead of visible connections to convey context and detail.
CounterPoint  and pptPlex2 enhance Microsoft PowerPoint as ZUI plugins: slides are positioned as a second authoring step in a special authoring environment.
Their "animation principles" make a strong case for continuous meaningful animations in a ZUI context.
CounterPoint  allows more than a single path, although it does not display them reified in the main view or to the audience.
We have examined the previous criticism of the slideware model  to classify the limitations of slideware.
We believe that the following three major issues may force the author to change her mental model to the slideware model , making the task harder: content cutting, time dominance, and the detail trap.
This section will explore each of these three issues.
Slides separate content into discrete chunks of equal size, determined effectively by the target resolution of the presentation display.
Conceptually, each slide acts like a folder into which the author has to sort his contents .
Apart from screen dimensions, the size of these chunks is arbitrary.
In particular, it is not correlated to the natural size of chunks in the content.
This leads to common problems in slide preparation when sizes do not match: Content cannot span boundaries of slides, and has to be repeated when it is needed again.
Content can also overspill a slide, a problem too often battled with tiny font sizes or by simply leaving out content.
There is no "half" slide for less content, or a good way to compare two slides next to each other.
If content does not fit, it is likely to be dropped from the talk .
When a consistent topic stretches over many slides, it is an additional burden on the audience to reassemble the whole from the fragments, and the presenter's burden to help them .
During presentations, slide transitions are often neither calm nor predictable, but instantaneous and abrupt.
The author has to take great care to make the animated transitions meaningful instead of annoying .
While slides are limited in absolute size dimension, the presenter is also implicitly limited in scope to editing on a detail level.
He cannot "step back" meaningfully, as there is no more context on the current slide .
Instead, he is more likely to beautify the individual slide than to think about its place in the overall shape of the talk .
Current software limits authoring to the smallest level--there is no support for designing a "big picture" of the topic other than manually drawing it on a special slide that resides in between the rest.
The only remaining inter-slide connection is the sequence with its transition; anything else is suppressed by the format.
The author of a slide deck is required to generate separate overviews or to explicitly name interconnections of subtopics.
It takes experience to know that this is considered good practice and of great help to the audience .
Slideware is based on the technical possibilities of slides and overhead transparencies.
We believe that this metaphor is not the ideal way to author and present information because content cutting and time dominance actively separate where the human associates.
Previous work has mainly improved on the last two problem areas, using paths and context visualizations.
However, the rigid structure of slide frames is still ill-suited to the natural flow of ideas: their hard boundaries cannot display fuzzy ties and hinder emerging ideas.
In slideware, the timeline of the talk is hard-coded into the document at the moment of creation.
Any non-linear content has to be projected onto the timeline, losing its original shape unless reconstructed via clever overviews by the presenter.
Again this leads to common problems: Connections other than to the adjacent slides are lost, except for invisible hyperlinks.
Individual items are either included in the talk or left out, creating a "finalized mindset" that hinders prototyping and exploration of alternatives .
Optional material has to be put at the end, rather than close to the topic which it refers to.
Since all slides have exactly one position in time, duplicates are needed to revisit ideas.
Random access to slides is hard, and jumping to the other end of a talk is usually accomplished by the visually rather jarring experience of rapidly flipping through all slides in between .
The resulting document is only valid for its original timeframe: content that is not anticipated cannot be presented .
Reusing the document for a different talk will most likely require projecting the contents onto a new timeline all over again--even if both share most of their content.
It is the author's burden to implement a system of version control among talks .
With the exception of Slithy  and ZuiPrezi3 all previous zoomable approaches are firmly rooted in the model of slide frames as discrete rectangular areas, separating interaction for both authoring and presenting into sub-slide and interslide steps.
F LY unifies context and detail authoring without introducing modes, and information is placed without the artificial constraint of slides frames.
Instead, the visualization's gestalt can resemble the gestalt of the presentation topic.
Our design aims at a more atomic and continuous arrangement of information, avoiding categorization and borders unless they are conscious design decisions by the author.
As a consequence, we abandoned our earlier conceptmap based design : F LY now does not differentiate between content inside the nodes of a graph and the graph's topology anymore; visual connections between items are now optional, rather than required by formalism.
In F LY, information parts and graphical elements are directly positioned on an infinite plane like a collage, rather than positioning slides containing this information.
As more and more parts are put together, visual structures and a big picture evolve naturally.
The form of the visualization becomes a function of its content.
Grouped information atoms form meaningful units that do not have to adhere to boundaries of the screen or the slides.
We show in our tests that this emergent behavior can benefit the author.
The map-based design in F LY is similar to the ZUI used by previous approaches.
The author draws a two-dimensional map of the talk showing the relations of the subtopics.
At this stage, he is not concerned about putting information in a presentation order--for some open presentation formats,
He is invited to experiment and consider variations.
Layout should not be standardized or automated, because the more individual the implemented structure, the better the orientation for the author and the memorization for listeners .
We aim to avoid putting objects on top of each other, but encourage different representations of the same information: a high level view shows a semantic abstraction and its context, whereas a near view goes into more detail, similar to the difference between a country and city map.
We will discuss later how this was reflected in our software implementation.
If the author wishes to provide a path through the presentation, F LY again chooses an interface design that matches the straightforward mental model of the author as closely as possible: The author simply sets up a certain view of the plane and presses a snapshot button.
The sequence of snapshots defines the path through the material.
During presentation, transitions from one section of the plane to another are always continuous, and they are always meaningful due to the layout of the plane itself--whether the author planned for the transition by providing and using snapshots, or whether he does it spontaneously, e.g., in response to a question.
The author does not have to define the actual transition animation: the F LY presentation engine does all the work, providing a smooth, cinematographically pleasing "flight" transition between the two locations using camera zooming and panning.
Screen dimensions and timing become important when the author presents or plans the presentation.
We put time layout after spatial layout, because time layout is more likely to change: The author might give a second talk about the same topic under different conditions, or, at the beginning of the composition, she may not be completely sure how to present her material, but may know how things are interconnected.
In our system, the visualization should truthfully exhibit information rather than present snippets attractively.
Putting content arrangement first ensures that it can retain its form.
Rather than projecting content onto a timeline immediately, we want to project timelines onto the content.
Prior work introduced paths for this projection .
The visualization of paths in F LY, however, is not limited to the presenter's space but can also be shown to the audience in the zoomable view.
Also, if content is put first, it can be shared by timelines.
This way the presentation document stays more flexible and fluid.
A lecturer might design a unified information landscape about all his courses instead of individual slide sets.
This document can also be shared among coworkers: for example, a group of teachers might put their related curricula together, so that one teacher can easily reference other lectures.
Our design builds on the ideas of paths and zoomable interfaces to escape time dominance and the detail trap, but modifies those interfaces to better suit the presentation task.
Previously it was easier to work bottom-up: first design slides, then put together a bigger shape.
In F LY, an author can also work top-down, brainstorming the shape in higher zoom lev-
Additionally, we try to solve the problem of content cutting by placing information atomically in the landscape.
To examine the effect that such an environment has on the authoring process and the resulting documents, two formal user studies were conducted.
We created paper versions of an imaginary typical slideware application and F LY respectively.
The slides were simulated by 5.8 inx8.3 in  sheets of paper with a logo and the presenter's name.
F LY was simulated by a 33.1 inx46.8 in  sheet for the plane and a cardboard frame for the viewport.
The frame simulated a fully zoomed-in view when laid upon the sheet, and zoomed-out views when held at a distance.
The supplied material was presented on snippets of Post-It notes.
The font size of supplied notes was 20 points, following the standard practice of a minimal font size in slideshow presentations that ensures all text remains clearly readable from a distance.
The testers' task was to prepare two talks on the History of HCI from two sets of predefined material, which we supplied, as well as from any material they wished to add.
The scope of the two sets was designed similar in volume, difficulty of the subject, and interconnections of the six presented computer systems.
One of the talks was prepared with traditional slide semantics and the other with F LY's semantics.
Sequence of authoring semantics and scope of the talk were counterbalanced.
Q1: Did you feel that the size of the slides negatively limited the way you wanted to do your presentation?
Q2: Did you feel positively guided by the slide size?
Q3: Before putting information on the plane, did you feel lost in the big free space?
Q4: Do you feel that your final result of your plane looks messy?
Slides Q5: Was it easier for you to express your ideas on the unlimited plane or the slides?
Q6: As a presenter, what would you prefer for your real presentations?
Testers were instructed to "prepare visual aids for an upcoming talk to the best of their ability", and that the resulting document would not be used as handouts or in any other way except for the talk itself.
Testers were not asked to give the actual talk, but to shortly outline how they would use their document.
This way, the test remained focused on the authoring process itself, while still making it clear that the document was not required to be meaningful without the presenter's voice.
Afterwards, testers answered six questions  about their impressions of the interaction.
Testers were given one set of materials for each talk.
They were free to include any or all of that material as well as additional contents they deemed necessary.
This way, the testers could start right away without prior research, but were still free to shape their talk the way they considered best with any visual techniques they preferred.
The topic History of HCI is quite diverse: systems can be arranged by date, innovations, institutions, success, or heritage and inspiration.
The subject is problematic to convey in traditional linear slide presentations, so it is a good candidate to test if the map-based approach improved on this problem.
All 13 testers were HCI professionals or students of HCI, and familiar with the subject.
In fact, four participants had held lectures on this particular topic before.
Additionally, we offered aid on anything unclear, so that the focus of the test remained on authoring and not on testing their knowledge.
We assigned a score to each tester's finished documents to evaluate the visualization of the talk.
Scores ranged from zero to seven, a higher score meaning that the document showed more connections of the topic visually.
Up to two points were awarded per ordering criteria .
We expected plane visualizations to score higher but take more time to author.
Against our expectations, we did not find that plane authoring takes significantly longer, which is encouraging since it indicates that the tradeoff between media quality in the sense of topic visualization and preparation time is either nonexistent or small when using the F LY approach.
The post-experiment questions about the users' experiences during the interaction are listed in Table 2.
Q1-Q4 were answered on a 1-5 Likert scale, Q5+6 had possible answers slides, no preference, or plane.
Answers to the slide-related questions Q1 and Q2 were widespread, with a tendency towards the positive aspects of slides.
The diversity of answers and their statistical variance indicate that this is an issue of personal opinion.
We observed six users changing their layouts or leaving material out due to limitations of the slide format.
All users intentionally implemented a common slide layout oriented along the slide bounds.
Testers clearly agreed on Q5 that it is easier to convey ideas with a planar visualization.
We will discuss the visual diversity of their documents shortly.
When asked for their preference, some authors claimed they would decide depending on task: slide visualizations whenever a quick and one dimensional solution is sufficient, planar when they had to present an interconnected subject.
Plane visualization was also perceived to take longer, as indicated in the previous section.
The resulting scores  ranged from 2 to 5 for slides with a mean of 2.85, and 3 to 6 for planes with a mean of 4.62.
The mean difference between slide and plane scores is 1.77 points with a variance of 1.026, thus significant to the 0.0001 level.
Plane authoring took slightly longer per tester than slide authoring, however the difference is not significant--in fact, 6 of our 13 testers finished the plane editing faster.
The results also indicate that the test was not biased by our chosen subtopics or learning effects.
Typical slide authoring started by picking the oldest example computer system from the given materials and designing a slide for it; in seven cases editing followed a "fire and forget" style: once a slide was finished, it was cast away and not looked at until the very end, in extreme cases even flipped over and made completely invisible.
The authors were effectively falling into the detail trap.
Typical plane editing, on the other hand, started by planning the overall layout of all content on a higher semantic level, i.e., sorting before placement.
Images representing subtopics were placed in relation to each other, but could still be rearranged easily.
Afterwards, other material was grouped around them.
Some users were less familiar with conceptual planning at the beginning, and spent up to 2 minutes preparing before placing the first material.
Q3 and Q4 show that the novelty of plane editing and the different looks can be confusing.
Further research is needed to reveal whether this is a permanent issue or due to the unfamiliar interface.
However, no testers fully agreed to Q3 or Q4, indicating that plane editing was never entirely rejected.
For example, testers positioned text to the different sides of the image at the same time, thereby sharing the image between two viewports and strengthening the context .
The more flexible layout facilitated dynamic local comparisons with and without zooming .
Nearly all testers saw this possibility, and planned their layout accordingly.
With one exception, all plane documents were more verbose and left out less material than the slide ones--it is unlikely to run out of space.
In contrast, most slide authors started a new slide only when they had enough material, and left it out otherwise.
Figure 3 shows how the problem of conflicting order criteria was addressed elegantly: the vertical dimension makes it trivial to group subjects without breaking the timeline into segments, or, as one tester put it: "The Apple II should go here chronologically, but it does not fit--I see that's why we have the plane."
Most plane visualizations included the inspirations and heritage as a new dimension, which was uncommon on any slide layouts.
This result is coherent with the answers to our question concerning the users' preferences for expressing their ideas.
Since the plane documents were diverse in shape and structure, we asked our testers what the main idea of their visualization was, and found that the design depended on the dominant variable from the author's point of view: They structured their talk along this dimension, and then tried to include other dimensions.
For example, the design in Fig.
3  is rooted in the idea of time, and first orders all items chronologically from left to right, then adds clustering in the vertical dimension according to another criterion.
A second design  starts by constructing "pillars" of a common idea and then spreads them out horizontally.
A third design  revolves around a central idea of the talk, in this case an important computer system perceived as the origin of the remainder.
Designs one to three were observed 5, 4, and 3 times during our study respectively and seem equally capable of communicating the topic's features.
Taking a look at the inter-slide arrangement, we detect two conflicting forces : the author has to decide whether he wants to present the computer systems in historical order or grouped by some criteria .
If he goes for precise time order he will not be able to group correctly, and if he decides to cluster by groups time will be presented non-linearly.
Our testers were very aware of this problem and often commented accordingly: "It is hard to get a good order", and "I will present non-profits first, and then make a jump back in time and start with Apple's systems."
The possible disorientation of the audience was also a concern.
Therefore, six authors manually added a timeline slide at the beginning or end of the slide deck, and four mentioned that they would take special care to make breaks in the time ordering clear verbally during their talk.
The mean score of 2.85 also shows the limitations of the slide authoring: authors often scored fully in one ordering criterion and only half in another, because it was not easy to show both in a linear model.
The plane visualizations exhibited more variation on the detail level.
After completing the evaluation and analysis of our paper prototype, the goal of the software prototype was to find out if the concepts that worked in the paper domain would carry over to an interactive application, and to explore the impact of high-quality visual animations on the perceived fluidity of presentations.
Two major problems make it hard to transport the easy paper handling to the computer: limited screen space, and the indirect manipulation through mouse and keyboard.
The F LY software prototype runs on Mac OS X 10.5 and is implemented using Apple's included Core Animation library for fluid interaction and animation.
The presentation data is managed by Core Data and stored as XML files containing text, meta data, and references to binary data files like images.
Cutting, pasting, and embedding images and other types of media is supported and works similarly to established content arrangement tools and current slideware products.
Many testers noted that simple geometric scaling for higher zoom levels would make little sense to them.
Instead they suggested a variety of solutions for semantic zooming emphasizing context and connectivity.
Thus, the visualization should have at least two states: the normal detail view in which all material is proportional to each other, and the context view in which a subtopic is represented by a short placeholder and shape remains visually intact.
Another suggestion was to make the remainder of the material indicate its presence to the viewer, without grabbing attention or suggesting that it should be read.
Several users stated that they would rather start at this overview level, and fill in the details later.
When testers used the frame to indicate which path they wanted to take, often snippets were half visible or information of a subject not currently in focus could be seen.
This is very uncommon in slide presentations where only immediately relevant information is shown.
Authors, however, stated that they did not consider this a problem, as long as the information did not disorient the audience or was introduced beforehand.
Our findings indicated that zooming is an obvious and natural metaphor for revealing more detail about a topic.
At the same time, however, unlimited ZUIs show that arbitrary geometric zooming is hard to control and leads to much extraneous interaction.
Consequently, we introduced a layer constraint to the planar interface: Information items can be placed in two layers, topic and detail .
Text size for topics is five times larger than details, and topics are rendered on top of the remaining content.
When zoomed out, details are blurred; when zoomed in, topics are semitransparent.
This ensures that at any zoom level one of the two is always clearly readable, but the other is still visually present, ensuring a fluid and physically plausible visual experience.
Topics are a different representation of the underlying details.
This design also ensures that text items on the same semantic level always have the same size, and are clearly readable to the audience.
To keep the landscape planar, the interaction is limited to a maximum zoom that corresponds to the details and is visualized with a background texture.
This way, content arrangement does not get confusing with arbitrarily small nested and possibly new information, but stands on a firm "ground" that helps to give a clear impression of zoom "height" at all times.
Similar to complex written texts and their subheadings, very complex documents may require a third or even fourth level, which is something we intend to study in future experiments.
The F LY screen  is divided into three parts: the main center view shows the planar interface in which the user can arrange images and text as in the physical world of paper.
The user interacts with objects using the left mouse button.
The right mouse button grabs the landscape and moves it around.
Additionally, we implemented mousecentered zooming using the scroll wheel.
To the left are zoom controls, displaying the current zoom height and button shortcuts to important layers.
To the right is a list showing all paths that are defined in the landscape and individual stops .
The paths may also be displayed in the main view so that the author can see the flow of the presentation.
The possible reification of time for the audience was not present in any of the related work we found.
A new path stop is defined by moving the view to the desired position, zooming and then creating a snapshot.
Stops can be reordered, deleted, named, and directly accessed in the path list to the left.
A path stop is the equivalent of a position of the slide frame in the paper prototype test.
A well-known problem of ZUIs is the visualization of context .
We settled with displaying arrows and miniature versions of topics at the screen border .
The indications are less transparent if the object is closer, and seamlessly change into the topic's real representation.
This visualization does not show a precise distance measure, but gives an overall feel of the position in the document.
To test the F LY software prototype, we modified several aspects of the earlier user test design: The F LY software was compared to Microsoft PowerPoint 2004.
The test is an uneven match, since PowerPoint had more features, better responsiveness, a more refined UI, and is familiar.
F LY, however, had the advantage of simplicity and novelty.
Two new topics, "The Characters of Star Wars" and "The Characters of Harry Potter" were tested with 18 users.
The topics were chosen to be similar in shape and familiar to most testers.
We also supplied images and text snippets to speed up authoring.
Users were unfamiliar with F LY and had varying degrees of slideware experience.
Testers were 10 students, 5 regular lecturers, one engineer, one architect, and one quality controller.
Five testers were computer scientists, and none of them had participated in the first study.
We once again assigned scores from 0 to 7 to measure the connectivity and visual clarity of the resulting documents with respect to the topic's inherent structure.
We gathered feedback from a questionnaire and observed the majority of the tests.
We also gathered informal feedback from two real-world situations in which presenters used F LY to present their own work to the rest of our research group.
When asked whether they were satisfied with their results, testers gave generally positive answers for both PowerPoint and F LY .
Satisfaction was significantly higher for F LY .
When asked which software it was easier to express themselves in, and which they preferred for real talks, most testers chose F LY.
Each questionnaire had four free text sections asking what the testers liked or disliked about F LY and PowerPoint.
Learning a new interface paradigm is a burden, and F LY is no exception; yet five testers stated that after a difficult start, they found F LY easy to use.
Mouse-centered zooming seemed to be new to almost all testers, and five did not understand it until it was explained to them.
Restricting object placement to the two topic and detail views worked well for our users.
They did encounter a problem with our implementation, though, as the level at which new content was created depended on the current zoom level.
The next version of F LY will contain better visual cues for mouse-centered zooming, and remove the unintended side effect of the zoom slider.
Two editing layers turned out to be enough for the scope of the test materials.
We gathered strong feedback considering the three problems of slideware: Seven testers each stated that they see a benefit in the creation of overviews over PowerPoint, or, as one tester put it: " creates overviews by itself."
Seven testers saw an improvement upon PowerPoint in creativity, and six liked the ability to place elements without restricting slide frames, underlining the content cutting problem.
Two stated slideware makes "run-of-the-mill" presentations whereas F LY was considered more flexible.
Three considered the slide framework harmful, one said it helped him.
The possibility to define paths by demonstration was consistently considered positive.
When laying out their path, four users were concerned with the visibility of the next topic : They tried to hide the upcoming parts, but since F LY has no mechanisms for revealing, they had to place them at greater distance to achieve this.
For previously discussed topics this was not perceived as a problem.
While some content, such as answers to questions for discussion, will always require hiding, in many cases the preview of upcoming content might actually be helpful to the audience.
This is clearly an issue that future research on F LY will have to address.
The last two arranged information like a collage, but without hierarchies, relying on proximity alone.
All fifteen non-linear talks had meaningful overviews, and fourteen presentation documents used zooming as a visual feature in their paths.
Only one user overlaid information along the z-axis, all others kept it planar.
Although part of this roots in the novelty of the interface metaphor, we deduce that users prefer planar over threedimensional layouts.
The experiments described in this paper only evaluate the performance of F LY in the context of the authoring process.
Although we have gathered positive feedback on the user experience during the presentation from presenters and audience alike, we cannot make any claims on whether planar presentation systems like F LY are better than slideware tools when it comes to teaching, informing, or simply persuading an audience.
Future experiments will extend from authoring talks to the task of presenting them.
Some testers suggested a feature to change paths during presentations depending on available time.
The new dimensions of the document area might need better presentation remotes for spontaneous repositioning of the screen or zooming.
Also, we would like to find out how collaborative authoring of presentations works best with F LY.
For this, we plan to extend the software with data sharing and revision management capabilities.
An example of the revealing problem in F LY where the heroes are presented after another.
The path begins at Harry Potter, and leads via Ron to Hermione.
Authors often found the half-revealing of upcoming content  troublesome, but not of already presented information .
We concluded that time difference in paper authoring was minimal, but authors felt that it took longer.
We did not measure time in the software test, but no tester voiced concerns, indicating the need for further studies.
In the current software prototype, the whole information landscape, once authored, remains mostly static.
Specifically, content attributes such as visibility or position cannot be altered at presentation time.
Our testing showed, however, that authors desire a method to hide upcoming content.
Further studies should clarify these needs of authors in more detail.
One could generalize this concept towards a state machine engine that can change any part of the presentation along the path.
This would enable animations and linear content build-ups that have to occur sequentially.
We looked at the resulting documents similarly to the paper documents.
Of the 18 PowerPoint documents, 14 were strictly linear.
Three clustered all content on less than three slides, and only one created a manual overview slide before sequentially discussing each person in detail.
In contrast to that, only three F LY presentation documents were linear, nine divided the topic into two or three clusters , and two structured the characters in two pillars .
In this paper we presented F LY, an planar interface for authoring presentations, which is not based on the slide metaphor but allows authors to freely lay out information on a plane in a map-like fashion.
This concept was first evaluated in a low-fidelity prototype user test which provided strong evidence that users not only easily understood the new interface but were able to capture the structure of strongly connected topics in their presentations much better than when using the traditional slide interface.
We were able to confirm these results in a second user test comparing the authoring process of presentations using a highfidelity software prototype of F LY against Microsoft PowerPoint.
The resulting presentations contained more meaning-
Likewise, users commented positively on the ability to express their mental models of the material more freely and generally preferred F LY over interfaces based on the slide metaphor.
These findings support our hypothesis that the F LY interface, allowing planar arrangement of information, smooth and fluid navigation over the plane, and a continuously controllable level of semantic abstraction, is better suited for the task of illustrating non-trivial topics than slideware.
Better visuals do not necessarily lead to a better talk, as speaker performance will remain the dominating factor of presentation quality.
Yet, fewer barriers in editing will help authors to express their ideas freely, to create richer, more diverse, and more memorable presentations.
We hope that F LY will help to move research towards this goal.
The F LY prototype can be downloaded at http://hci.rwth-aachen.de/fly.
K. Gopal and K. Morapakkam.
Incorporating Concept Maps in a Slide Presentation Tool for the Classroom Environment.
Usage of Concept Maps in Dynamic Content Presentation for Online Learning System.
Conference on Concept Mapping, 2006.
David Holman, Predrag Stojadinovi c, Thorsten Karrer, and Jan Borchers.
Fly: an organic presentation tool.
Work in Progress What is PowerPoint?
Educating Engineering Students in its Use and Abuse.
In 35th ASEE/IEEE Frontiers in Education Conference.
How to choose good metaphors.
Technical report, Computer Science Dept., Brown University, 2004.
Palette: a paper interface for giving presentations.
Absolute PowerPoint: Can a software package edit our thoughts?
Interaction and Context in Zoomable User  Interfaces.
PhD thesis, Ecole Nationale Sup erieure des T el ecommunications, Paris, France, 2001.
The No Significant Difference Phenomenon: As Reported in 355 Research Reports, Summaries and Papers.
B. Signer and M. C. Norrie.
PaperPoint: a paper-based presentation and interactive paper prototyping tool.
MultiPoint: a case study of multimodal performance for building presentations.
The Cognitive Style of PowerPoint.
Scripted documents: a hypermedia path mechanism.
D. E. Zongker and D. H. Salesin.
We would like to thank C. Gretzki and M. Wittenhagen for their work on the sketches and the video.
This work was funded in part by the German B-IT Foundation and by the German Government through its UMIC Excellence Cluster for Ultra-High Speed Mobile Information and Communication at RWTH Aachen University.
R. Anderson, R. Anderson, B. Simon, S. A. Wolfman, T. VanDeGrift, and K. Yasuhara.
Experiences with a tablet PC based lecture presentation system in computer science courses.
B. Bederson and J. D. Hollan.
Pad++: a zooming graphical interface for exploring alternate interface physics.
Media will never influence learning.
S. M. Drucker, G. Petschnigg, and M. Agrawala.
Comparing and managing multiple versions of slide presentations.
Zoomable User Interfaces for the Authoring and Delivery of Slide Presentations.
PhD thesis, University of Maryland, 2003.
L. Good and B. Bederson.
Zoomable user interfaces as a medium for slide show presentations.
