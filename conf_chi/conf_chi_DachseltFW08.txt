Faceted browsing is a promising way to incrementally refine data sets.
Current approaches do not scale well in terms of screen size and have shortcomings in interacting with hierarchical facets.
This paper introduces FacetZoom, a novel multi-scale widget combining facet browsing with zoomable user interfaces.
Hierarchical facets are displayed as space-filling widgets which allow a fast traversal across all levels while simultaneously maintaining context.
We contribute both a seamless continuous navigation and a quick tap-and-center interaction.
Two prototypes are described which successfully apply the space-structuring widget to continuous, sampled data and an information collection.
A formative user study of the latter indicates that the interface scales well to small screens.
FacetZoom is versatile and offers consistent searching and browsing behaviors in a multitude of applications and device settings.
The second is faceted browsing.
It allows looking at the same data from different conceptual dimensions and permits an incremental refinement of a structured data set by restricting the metadata facet's values.
We observed that the inherent structure is rarely reflected in UIs of current facet browsers.
In addition, since unstructured, textually displayed facet values can easily exceed a manageable number, some comprehensible grouping is required.
Facet hierarchies furthermore make it difficult to show all values at once on limited screen space.
We also noticed that result set visualizations are treated spatially independent of the text-based facets and that navigating facet hierarchies is only possible along an already chosen branch.
Depending on the task, users want to use different granularities of faceted metadata, which is usually not supported.
To address the problems mentioned above, we developed FacetZoom, a multi-scale widget for explorative interaction with data in facet browsers.
It simultaneously displays several levels of a hierarchical facet in a space-filling and comprehensible manner .
We propose a combination of two interaction techniques.
Continuous multiscale and discrete tap-and-center navigation allow an efficient traversal of the tree in all directions.
While searching or browsing an information space, the visualized data set is seamlessly refined above the space-structuring widget.
To demonstrate the potential of FacetZoom, we present two applications for navigating both continuous  and discrete  data according to several facets.
As we will show, the novel widget scales to various screen sizes and interaction modes including mobile devices.
The tremendous growth of personal digital document collections and information resources results in the challenge to design intuitive user interfaces  for their management.
Searching and browsing of e.g.
With state-of-the-art mobile media players, hierarchically arranged lists are the predominant way of browsing media items, such as MP3 songs.
To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee.
Another is FacetMap  which displays multiple facet hierarchies and related data items according to a space-filling layout in a scalable, joint visualization space.
Animated result set refinements are triggered by single-clicks on facet values.
We aim for an equally simple interaction but separate the structuring widget from the result space.
With FaThumb , a facet-based interface for mobile search was introduced which offers iterative facetbased data filtering.
The interface shows a list of results which can be further restricted by pressing keys corresponding to facets shown in a 3x3 grid.
In contrast to our approach, FaThumb is designed for small screens only.
DateLens  combines the concept of fisheye views with compact overviews to provide a calendaring application on mobile devices.
The concept of enlarging calendar cells by simple click interactions influenced our tap-and-center navigation.
TimeZoom sketched in  is an interactive timeline widget to be combined with a tabular display of data.
Different time levels are vertically stacked and can be smoothly zoomed.
FacetZoom generalizes and improves our TimeZoom approach.
OrthoZoom Scroller  introduces a fast technique for multi-scale navigation of large onedimensional spaces.
Panning is performed along the slider dimension, zooming orthogonally.
The technique is similar to the continuous multi-scale operation of FacetZoom.
To our knowledge, OrthoZoom was neither tested on mobile devices nor with collections of discrete data items yet.
At the core, the FacetZoom widget is an interactive tree visualization of structured metadata.
Each level of a hierarchy is rendered as a horizontal bar subdivided into as many cells as nodes are available on this level.
The maximum N levels of a hierarchy are vertically stacked starting with the first level or root node at the bottom, see for example one of the widgets in Figure 1 .
As opposed to many tree visualizations, the goal of FacetZoom is not to visualize the whole hierarchy at once, but to allow a fast interactive traversal while showing neighboring nodes.
Therefore, usually only a subset of all nodes and levels will be displayed at the same time, thereby providing sufficient context.
The number of displayed levels can be configured.
At least three levels are recommended to see current, previous and next level at once.
We propose weighted level heights using a vertical fisheye effect with a smaller size for neighboring levels.
For unbalanced hierarchies often found in taxonomies, we suggest a solution to avoid gaps caused by leaf nodes on a level l < N. Cells for such nodes are reinstanced on all subordinate levels l+1 to N. See, for example, the repeated cell `Euro-Pop' in Figure 4.
FacetZoom was conceived as a means of subdividing a set of data samples or items according to hierarchically organized facets.
We distinguish between implicit and explicit hierarchies.
On one hand, physical units such as time or distance possess an implicit hierarchy depending on the scale of the measurement.
These ordered trees exhibit an equal, repeated distribution on each level and an equal subdivision of all siblings on that level.
FacetZooms of this type are especially suited for continuous, sampled data, such as temperatures.
On the other hand, explicit hierarchies include taxonomies and classifications, tag or folder hierarchies, price ranges, or tables of contents, i.e.
Basically, these trees consist of single-valued, hierarchical metadata facets associated with data items.
The hierarchies always contain lexical units and do not need to be well balanced, though this improves tree navigation.
In addition, we distinguish between a hierarchy-driven and a data-driven approach of combining FacetZooms with data.
With the second, FacetZooms adapt themselves to only show cells where data items are available.
Beside the hierarchical subdivision of the widget itself, the arrangement of filtered data is of special interest.
Due to the space-structuring nature of FacetZoom, a grid view of the data above lends itself as the visual display.
One can distinguish between continuous and discrete data being displayed.
For the domain of faceted browsing, discrete data 
See Figure 4 for music albums being arranged according to the genre facet.
FacetZoom allows for selecting a subset of adjacent data items.
They are ordered in columns above the corresponding facet value cell.
With a larger data set, the space within a column is not sufficient to show all items.
We therefore suggest a spacefilling layout algorithm which calculates the biggest possible rectangle for each item so that all items fit into the space until a threshold.
As an alternative, a semantic zooming algorithm can solve this problem.
Similar items can be summarized and only one representative is displayed.
To directly manipulate FacetZoom and navigate the data set accordingly, we combine both a continuous multi-scale and a novel discrete tap-and-center navigation.
These techniques not only allow a branch-wise up-and-down traversal of a facet hierarchy, but also to reach other nodes across branches very quickly.
If the cursor or pen is close to the edges, automated panning is started with a distancedependent speed adjustment.
Changing the current hierarchy or zoom level can be done by vertically moving the cursor or pen within the widget, a technique similar to OrthoZoom Scroller .
Alternatively, a vertical mouse wheel can be used which is commonly used for zooming and allows the cursor to stay in the widget area.
In any case, the interaction results in a smooth animation, where new level bars appear and others disappear either on the top or bottom  while maintaining the number of displayed levels and the overall widget height.
Zooming is always performed relative to the cell below the current x position of the cursor.
Besides the direct manipulation of FacetZoom, horizontal and vertical drag sliders next to the widget can be used for zoom and pan .
The tap-and-center navigation is a discrete cell-based approach allowing for stepwise navigation through and within levels, thus entirely eliminating scrolling.
A click on any cell of the widget results in adjusting the view so that the cell is centered and expanded to occupy the available xdimension.
Only parts of the neighboring cells are displayed at the edges .
After a click in these cells, the widget is horizontally panned as indicated by the red horizontal arrows.
In contrast to the free panning mentioned above, the neighboring cell is always scaled to fit into the available screen space.
Clicking on a cell in an upper or lower level results in a zoom in or out action as indicated by the blue arrows  for zooming letter `O'.
Tapping diagonal cells in the upper corners results in panning to that cell and zooming in.
To facilitate a comprehensible user interaction, all transitions are smoothly animated together with the data displayed above.
As an alternative to directly tapping cells, cursor keys or similar directional input devices can be used for panning and zooming.
This interaction mode avoids overshooting problems common with mouse-based  panning.
As an optional part, the level widget on the right allows for a quick navigation between arbitrary hierarchy levels by tapping the corresponding rectangle .
Whereas the tap-and-center navigation only allows for a stepwise navigation, the level widget permits to directly jump to the center of a facet level.
As with the time levels in Figure 3, the level widget can also be realized as single buttons.
There are several degrees of freedom for designing and scaling FacetZoom widgets, among them the number of displayed levels, the fisheye distortion factor, cell size, usage of labels or icons, and level colors.
As for the labeling of the cells, we implemented an intelligent labeling using dynamic abbreviations and label inheritance .
A design decision also had to be made for the width of cells and columns.
Equal spacing of siblings was chosen, though a data-driven approach might suggest an adaptable cell width dependent on the number of data items for that facet's value.
To realize an overview-and-detail functionality, we implemented a zoom lens displaying another level of detail for continuous data.
The lens being adjustable in width and zoom level can be dragged as an overlay view on the basic FacetZoom.
This can for example be a week-lens on a timeline showing a whole year.
In addition to that, the basic orientation can be changed from a horizontal to a vertical orientation.
This is especially useful, if the data items contain longer text as for example in tables of contents.
Even more promising is the orthogonal combination of two FacetZooms which can be exchanged as well.
This allows a flexible and highly visual filtering of data sets according to a primary and secondary metadata facet at the same time.
The scalable design of FacetZoom combined with different navigation techniques supports a number of input modalities.
Care has been taken to support mobile devices with their discrete or continuous interaction modes offered by mini joysticks, jog dials, click wheels, multi-way buttons etc.
The tap-and-center navigation is presumably well suited for mobile devices, whereas the continuous interac-
To test continuous data being displayed above a time FacetZoom we implemented a stock quote visualization .
The user can freely zoom and pan the FacetZoom widget with all interaction modes to look at and compare various stock quotes in any desired time granularity.
In comparison to similar applications the advantage is to have an unbroken linear timeline without the restriction of predefined time intervals.
The implementation was done using the Qt C++ library and runs on a PC.
FacetZoom also constitutes the basic metaphor for our implementation of Mambo , a ZUI for facet browsing of large personal music collections.
With it, songs and albums can be visually arranged according to facets, such as name, genre, or time .
Each is represented by one FacetZoom widget which can be exchanged for a given data set.
This permits to browse and filter music data by constraining facet values.
Items are always smoothly rearranged according to a facet, which can be used to further refine the data.
The need for scrolling long alphabetic lists of items is eliminated as is textual keyboard input due to lexical FacetZooms.
The prototype was implemented in C# on top of the ZUItoolkit Piccolo.NET and also runs on a UMPC.
Our implementation with the Pocket edition for mobile devices was tested on a PDA phone, but the performance still needs to be optimized.
In this paper we introduced FacetZoom as a novel multiscale widget for hierarchical metadata facets.
The comprehensible, space-structuring widget combines faceted browsing with a zoomable user interface.
Multiple levels of a facet hierarchy are permanently visible and can be reached quickly.
We combine both a continuous pan-and-zoom navigation and a tap-and-center interaction, allowing for quick search and browsing behaviors with one underlying concept.
FacetZoom is very flexible, adapts to different screen sizes and operating modes, thus proving suitable for mobile devices and bigger displays alike.
With two prototypes we demonstrated the applicability for navigating both continuous and discrete data sets.
We also see three major drawbacks with FacetZoom: metadata facets must be of a hierarchical nature, strongly unbalanced hierarchies are unfavorable, and only adjacent areas within a hierarchy can be displayed without added lens functionality.
Further user studies are required to compare the widget's performance to other techniques.
Since we assume the approach to be superior to scrolling long  lists of data items, this needs to be verified in a follow-up study.
Further research is also required to investigate continuous semantic zooming of displayed data.
We conducted a formative user study  comparing two different display conditions and two layout principles, all on a TabletPC, in order to evaluate the basic zooming metaphor and to test several design dimensions.
For the display size we used resolutions of 320x240  and 800x480 pixels, typical for Ultra Mobile PCs , without changing parameters.
The tested layouts were a variable column width  vs. equal spacing.
We compared user performance  and subjective preference for a variety of 13 tasks, among them simple search tasks, comparison tasks, simple and complex filter tasks.
A medium-sized personal MP3 collection was used containing altogether 1518 MP3 songs.
We report some of the findings related to FacetZoom: Surprisingly, there were no significant performance differences between larger  and smaller  display conditions.
This important finding suggests the scalability of FacetZoom.
In contrast to one of our hypotheses, the flexible column layout was inferior to using FacetZoom cells and data columns with equal size, especially under small display conditions.
