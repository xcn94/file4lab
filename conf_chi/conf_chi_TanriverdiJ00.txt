Eye movement-based interaction offers the potential of easy, natural, and fast ways of interacting in virtual environments.
However, there is little empirical evidence about the advantages or disadvantages of this approach.
We developed a new interaction technique for eye movement interaction in a virtual environment and compared it to more conventional 3-D pointing.
We conducted an experiment to compare performance of the two interaction types and to assess their impacts on spatial memory of subjects and to explore subjects' satisfaction with the two types of interactions.
We found that the eye movementbased interaction was faster than pointing, especially for distant objects.
However, subjects' ability to recall spatial information was weaker in the eye condition than the pointing one.
Subjects reported equal satisfaction with both types of interactions, despite the technology limitations of current eye tracking equipment.
We believe eye movementbased interaction can provide easy, natural, and fast ways of interacting in virtual environments.
Work on eye movement- based interaction has thus far focused on desktop display user interfaces , while eye movement-based interaction in virtual reality has hardly been explored.
In this study, we develop a VR interaction technique using eye movements and compare its performance to more conventional pointing.
Virtual environments can now display realistic, immersive graphical worlds.
However, interacting with such a world can still be difficult.
They usually lack haptic feedback to guide the hand and to support it in space.
We thus require new interaction techniques to provide users with easy and natural ways of interacting in virtual environments.
This is particularly important for dealing with displayed objects beyond the reach of the user's arm or the range of a short walk.
Eye movement-based interaction is an example of the emerging non-command based interaction style .
In this type of interaction, the computer observes and interprets user actions instead of waiting for explicit commands.
Interactions become more natural and easier to use.
One system that suggests such advantages is a screen-based system developed by Starker and Bolt .
It monitors eye movements of the user, interprets which objects attract the user's interest, and responds with narration about the selected objects.
It minimizes the physical effort required to interact with the system and increases interactivity.
High interactivity is even more important in VR applications where users often deal with more dynamic and complex environments.
Our overall approach in designing eye movement-based interaction techniques is, where possible, to obtain information from a user's natural eye movements while viewing the display, rather than requiring the user to make specific trained eye movements to actuate the system.
This approach fits particularly well with virtual reality interaction, because the essence of a VR interface is that it exploits the user's pre-existing abilities and expectations.
Navigating through a conventional computer system requires a set of learned, unnatural commands, such as keywords to be typed in, or function keys to be pressed.
By exploiting skills that the user already possesses, VR interfaces hold out the promise of reducing the cognitive burden of interacting with a computer by making such interactions more like interacting with the rest of the world.
An approach to eye movement interaction that relies upon natural eye movements as a source of user input extends this philosophy.
Here, too, the goal is to exploit more of the user's pre-existing abilities to perform interactions with the computer.
Another reason that eye tracking may be a particularly good match for VR is found in Sibert and Jacob's  study on direct manipulation style user interfaces.
They found eye movement-based interaction to be faster than interaction with the mouse, especially in distant regions.
The eye movement-based object selection task was not well modeled by Fitts' Law, or, equivalently, that the Fitts' Law model for the eye would have a very small slope.
That is, the time required to move the eye is only slightly related to the distance to be moved.
This suggests eye gaze interaction will be particularly beneficial when users need to interact with distant objects, and this is often the case in a virtual environment.
Finally, combining the eye tracker hardware with the headmounted display allows using the more robust headmounted eye tracker without the inconvenience usually associated with that type of eye tracker.
For many applications, the head-mounted camera assembly, while not heavy, is much more awkward to use than the remote configuration.
However, in a virtual environment display, if the user is already wearing a head-mounted display device, the head-mounted eye tracker adds very little extra weight or complexity.
The eye tracker camera obtains its view of the eye through a beam splitter, without obscuring any part of the user's field of view.
In this study, our first goal was to test the hypothesis that eye movement-based interactions would perform better in virtual environments than other natural interaction types.
In order to test it, we need to compare against a more conventional interaction technique as a yardstick.
We used hand movement for comparison, to resemble pointing or grabbing interaction that would commonly be found in virtual environments today.
In addition, we investigated whether there would be performance differences between "close" and "distant" virtual environments, i.e., where objects are respectively within and beyond the reach of the user.
Since pointing-based interaction requires the user to use hand and arm movements, the user has to move forward in order to reach and select the objects in the distant virtual environment.
Eye movement-based interaction, however, allows the user to interact with objects naturally using only eye movements in both close and distant virtual environments.
Therefore, we expected eye movement-based interactions to be faster especially in distant virtual environments.
Despite its potential advantages, eye movement-based interactions might have a drawback in terms of the users' ability to retain spatial information in virtual environments.
Search tasks can be cumbersome for users in virtual environments, especially in large virtual worlds.
They may fail to remember the places they previously visited, and may have to visit them again.
Therefore, we looked for the effect of eye movement-based interactions on spatial memory, i.e., the ability of the user to recall where objects reside in space.
For this, we compared users' ability to recall spatial information in the eye movement vs. pointing conditions.
As argued above, eye movement-based interaction decreases the effort required for interaction, whereas pointing based interaction engages the user more in the interaction.
This reduced level of engagement might also reduce the user's ability to retain spatial information about the objects during eye movement-based interactions.
Hence, we expected spatial memory to be weaker in eye movement than in pointing based interactions in virtual environments.
Using natural eye movements in virtual environments requires development of appropriate interaction techniques.
In this study, we developed an interaction technique that combines features of eye movements and non-command based interactions in a virtual environment.
Our objective is to enable users to interact with eye movements, without explicit commands where possible.
However, we should also avoid the Midas Touch problem, i.e., unwanted activation of commands every time user looks at something .
Our approach here was for the computer to respond to the user's glances about the virtual environment with continuous, gradual changes.
Imagine a histogram that represents the accumulation of eye fixations on each possible target object in the VR environment.
As the user keeps looking at an object, histogram value of the object increases steadily, while histogram values of all other objects slowly decrease.
At any moment we thus have a profile of the user's "recent interest" in the various displayed objects.
In our design, we respond to those histogram values by allowing the user to select and examine the objects of interest.
When the user shows interest in a 3D object by looking at it, our program responds by enlarging the object, fading its surface color out to expose its internals, and hence selecting it.
When the user looks away from the object, the program gradually zooms the object out, restores its initial color, and hence deselects it.
The program uses the histogram values to calculate factors for zooming and fading continuously.
As Figures 1, 2, and 3 suggest, there is too much information in our virtual environment scene to show it all at once, i.e., with all the objects zoomed in.
It is necessary for the user to select objects and expand them individually to avoid display clutter.
We developed an alternate version of our design for use with the hand, using the Polhemus sensor.
In this version, the user indicates interest in a displayed object by placing a virtual pointer on it.
When the user moves the virtual pointer into an object, our program responds by zooming in the object, fading out its color, and hence selecting the object.
When the user moves the pointer away from the object, the program deselects it.
When the subject deselects the object, it starts shrinking, its color fades back, and it returns to its initial state, with the cylinders again invisible.
The program allows subjects to select only one object at a time.
We set the time constants for fading in and out based on informal trials with the eye and Polhemus versions to optimize each version separately; the result was that eye movement response is set about half as fast as the pointing-based version, mainly to avoid the Midas Touch problem and to balance the time spent in locating the Polhemus.
We conducted this study in the Human Computer Interaction Laboratory in the Tufts University Electrical Engineering and Computer Science Department.
We used a Silicon Graphics Indigo2 High Impact workstation, Virtual i-Glasses head mounted display, ISCAN eye tracker, and Polhemus 3Space FASTRAK magnetic tracker.
One of the Polhemus receivers was on the head mounted display to provide VR camera positioning, and one was on a cardboard ring around the subject's finger for pointing in the virtual environment.
The ISCAN eye tracker system consists of the eye tracker, eye and scene monitors, and ISCAN Headhunter Line of Sight Computation and Plane Intersection Software , and its own separate computer.
The software monitors eye movements, performs calibrations, and processes eye images.
It runs on a separate Pentium 100MHz personal computer.
The eye tracker hardware is built into the head mounted display.
It has a tiny eye camera, infrared  light source, and a dichroic mirror.
The IR light source creates the corneal reflection on the eye.
The eye camera captures the eye image reflected in the mirror and sends it to a frame grabber in the PC.
The PC software calculates the visual line of gaze using the relationship between the center of the pupil and corneal reflection point.
Unlike more conventional usage of head-mounted eye trackers, in VR we only require the eye position relative to the head, not the world, since the VR display moves with the head.
The PC sends the stream of processed eye data to the Silicon Graphics computer, where the main VR system is running via a serial port.
We implemented our VR software using the new PMIW user interface management system for non-WIMP user interfaces being developed in our lab .
Our system is particularly intended for user interfaces with continuous inputs and outputs, and is thus well suited to the histogram interaction technique, with its gradual, continuous fading.
The VR programs run on the Silicon Graphics workstation, using SGI Performer to display the graphics and enable users to interact in the virtual environment.
There are four versions of the program, for eye movement vs. pointing based interactions and for close vs. distant virtual environments.
We used a within-subjects experimental design for devices.
All subjects used both eye movement and pointing interactions.
The order of the two was counterbalanced to eliminate differences in fatigue and learning.
We also investigated how performance varies between the "close" and "distant" conditions with a between-subjects design, by dividing the subjects into two groups; one interacted in close virtual environments and the other, in distant.
Our virtual environment displays a virtual room that contains fifteen geometrical objects  in five different colors  .
Each object contains four cylinders that are textured with a letter.
In one version , objects are within the reach of the subject's arm; in the other , subjects need to move 5-15 inches in order to reach the objects.
Our interaction technique allows subjects to see the cylinders and letters inside the objects by selecting the objects.
Initially, the cylinders and letters are not visible .
Thirty-one subjects volunteered to participate in the experiment.
They were undergraduate and graduate students in our department.
Their average age was 22.
Twenty-eight subjects had no prior experience with VR while three subjects had some insignificant experience: they had used a VR system only once.
We eliminated seven subjects from the sample before beginning their sessions, because we could not successfully calibrate the eye tracker to their pupils.
The remaining 24 subjects  successfully completed the experiment.
Figure 4 is an illustration of the devices used in the experiment.
The subject used the VR programs by standing next to the Polhemus transmitter, which was placed on an aluminum camera tripod, 8 inches below the subject's head.
The subject notified the experimenter each time he or she found an object containing the target letter.
The experimenter pressed the mouse button to record completion times for the first and second objects.
When the subject found the second object, the program and the search were terminated.
In the analysis, we used the elapsed time to find both of the objects as the performance measure.
The next task was the memory task.
The goal was to record how well the subject could recall which two objects contained the target letter.
The experimenter started a program that displayed to the user the virtual environment he or she had just interacted with.
This display enabled the subject to see all of the objects that were present in the virtual environment, but not to access the internal cylinders or letters.
The experimenter asked the subject which two objects had contained the target letter in the search task, and recorded his or her responses.
In the analysis, we used the number of correctly recalled objects as the measure of spatial memory.
Finally, the subject filled out a survey containing questions about satisfaction with the eye tracker and Polhemus4.
The experimenter also encouraged the subjects to give verbal feedback about their experience with the two technologies, and recorded the responses.
One day before the experiment, the subject attended a training session to familiarize him or her with the head mounted display, eye tracker, Polhemus, and the interaction techniques.
First, the experimenter introduced the devices and explained their functionality.
Then, she calibrated the eye tracker for the subject's pupil using the ISCAN software.
This calibration took approximately 2-3 minutes.
Next, the subject used the eye tracker, the Polhemus, and the programs to practice the interaction technique.
He or she learned how to select and deselect objects and see the letters in the virtual environments using eye movement and pointing based interactions.
On average, the whole training session took about 20 minutes1.
On the next day, the subject was asked to do two search tasks, one with the eye tracker, the other with the Polhemus.
First, the experimenter read a script explaining that the search task is to find the two geometrical objects2 that contain a particular target letter on their internal cylinders, and asked the subject to inform the experimenter as soon as he or she found the objects3.
Then she adjusted the physical position of the subject in order to ensure that all subjects start the experiment in a standard position.
Next, she initialized the program.
At this point, the virtual environment was not visible to the subject yet.
At the end of the experiment, we asked subjects to respond to the following statement on a 7-point Likert scale  in order to check if the training achieved its goal: "The training session familiarized me with using eye tracker/polhemus."
The responses show that they were sufficiently familiarized with eye tracker  and polhemus .
Our first hypothesis was that in virtual environments subjects would perform better with eye movement-based interactions than with hand based interactions.
As a subhypothesis, we also expected an interaction effect, that the performance difference between eye and Polhemus would be greater in the distant virtual environment compared to the close one.
Our independent variables were interaction type  and distance .
Our dependent variable was performance .
Table 1 provides the descriptive statistics for our measurements.
We tested the first hypothesis by comparing the means of the pooled performance scores  using oneway analysis of variance .
We found that performance with eye movement-based interactions was indeed significantly faster than with pointing .
The order in which the subjects used eye movement and pointing based interactions did not indicate an important effect on the performance: 21 out of the 24 subjects performed faster with eye movement-based interaction.
Next, we separated the performance scores in close and distant virtual environments into two subgroups,
At the end of the experiment, we asked subjects to respond to the following statement on a 7-point Likert scale  in order to check if they understood the task: "I understood the task before starting with the experiment."
The responses show that they understood the task .
Notes: n, M, and SD represent number of subjects, mean, and standard deviation respectively.
Table 3 shows the questions and subjects' responses.
As the ANOVA results in the last two columns of the table indicate, subjects' satisfaction with eye tracker and Polhemus were not statistically different.
We further posed the subjects the following open-ended question: "Do you prefer eye tracker or Polhemus for this task?
Eighteen of the 24 subjects specified that overall they preferred the eye tracker to the Polhemus.
They said that using eye movements was natural, easy, faster, less tiring.
Six subjects preferred the Polhemus because they found that it was accurate and easy to adapt because of its similarity to the mouse.
Mean times of performance and repeated the ANOVA for the two subgroups.
We found that in distant virtual environments, performance with eye movement-based interactions was indeed significantly higher than performance with pointing .
However, performance between the two types of interactions was not significantly different in close virtual environments .
Figure 5 shows the graphical representation of the means of pooled, distant and close performance for both eye movement and pointing based interactions.
Our second hypothesis was that in virtual environments, spatial memory of subjects would be weaker in eye movement-based interactions than that in pointing based interactions.
We measured spatial memory by the number of objects correctly recalled after completion of the memory task as our dependent variable; our independent variable was the type of interaction as before.
Table 2 shows the descriptive statistics for our measurements.
Comparing the means of the spatial memory scores in the two types of interactions using one-way ANOVA, we found that the number of correctly recalled objects in eye movementbased interactions was indeed significantly lower than that in pointing .
Finally, we were interested in exploring subjects' satisfaction with interacting with eye movements and pointing.
We asked subjects about ease of getting started, ease of use, accuracy, and fatigue felt with eye tracker and Polhemus, and whether they found these technologies useful in VR systems.
By developing an interaction technique that allows the use of natural eye movements in virtual environments, we were able to compare the performance of eye movement and pointing based interactions in close and distant virtual environments.
The results show that interaction with eye movements was faster than interaction with pointing.
They further indicate that the speed advantage of eye movements was more significant in distant virtual environments.
Our findings suggest that eye movement-based interactions could become a viable interaction type in virtual environments provided that proper interaction techniques are developed.
However, our data also point to a price paid for this increased speed when the task requires spatial memory.
Our subjects had more difficulty in recalling the locations of the objects they interacted with when they used eye movementbased interactions.
They recalled significantly more objects when they used pointing.
One possible explanation for this result may be the ease of use of eye movement-based interactions.
Our subjects explained that they were "just looking," as in the real world, when they interacted with eye movements.
Hence, the cognitive burden of interacting was low.
They did not have to spend any extra effort for locating the objects or manipulating them.
Notes: Spatial memory is measured by the number of letters recalled by subjects after completion of the task.
Satisfaction of subjects with eye tracker and Polhemus Eye-tracker Survey Questions Getting started with eye tracker/polhemus is easy.
The eye tracker/polhemus is easy to use.
The eye tracker/polhemus is accurate.
Are you satisfied with the accuracy of eye tracker/polhemus?
Did you feel fatigued when searching with eye tracker/polhemus?
I would find the eye tracking/pointing useful in virtual reality systems.
Notes: All questions were posed using a 7-point Likert scale ranging from strongly disagree  to strongly agree .
M and SD represent mean and standard deviation respectively.
F and p-values are from ANOVA analyses that compare the means of the answers given for eye-tracker and polhemus.
Spending this extra effort may have helped them retain the spatial information of objects in their memory.
This finding has implications for the choice of interaction technique in a virtual environment: eye is a particularly good choice if later spatial recall is not necessary.
It may also be possible to design new eye movement-based interactions that facilitate the user in retaining the spatial information of objects after interacting with them.
One approach to address this weakness might be to incorporate more spatial cues to help users recognize and retain spatial information in the virtual environments .
Currently, eye tracker technology is not as mature and reliable as the Polhemus-type magnetic tracker.
This applies to the technology in general, other available eye trackers we have used in other work have given roughly similar performance.
Therefore, we had expected that the subjects would be less satisfied with eye tracker technology than with Polhemus.
However, our satisfaction survey and interviews with subjects after the experiment showed that they were equally satisfied with eye tracker and Polhemus.
They stated that they liked the idea of using eye movements without having to think of initiating a command.
This provides support for our claim that eye movements fit well into a non-command style user interface.
This study has shown that eye movement-based interactions are promising in virtual environments.
We believe that by developing proper interaction techniques, eye movementbased interactions can address weaknesses of extant interaction techniques in virtual environments.
In subsequent work, we hope to examine still more subtle or "lightweight" interaction techniques using eye movements, to compare "interaction by staring at" with a more subtle "interaction by looking around."
We want to thank Prof. Sal Soraci of the Psychology Department at Tufts for valuable discussions about the spatial memory issue.
We thank each of our subjects who volunteered to participate in this experiment.
We gratefully acknowledge their support.
Bolt, R.A. Gaze-Orchestrated Dynamic Windows, Computer Graphics, vol.
Eyes at the Interface, Proc.
ACM Human Factors in Computer Systems Conference, pp.
Bowman, D.A., Hodges, L.F., An Evaluation of Techniques for Grabbing and Manipulating Remote Objects in Immersive Virtual Environments, Proceedings of the 1997 Symposium on Interactive 3D Graphics, 1997, pp.35-38 4.
Darken, R., Sibert, J., Wayfinding Strategies and Behaviors in Large Virtual Worlds, Proceedings on Human Factors in Computing Systems, CHI'96 pp.
Forsberg A., Herndon K., Zeleznik R., Effective Techniques for Selecting Objects in Immersive Virtual Environments, Proc.
ACM UIST'96 Symposium on User Interface Software and Technology , 1996.
Glenn, F.A., and others, Eye-voice-controlled Interface, Proc.
30th Annual Meeting of the Human Factors Society, pp.
Jacob, R.J.K., The use of eye movements in humancomputer interaction techniques: what you look at is what you get, ACM Transactions on Information Systems, 9, 3, pp.
Jacob, R.J.K., Eye Tracking in Advanced Interface Design, in Advanced Interface Design and Virtual Environments, ed.
Jacob, R.J.K., A Visual Language for Non-WIMP User Interfaces, Proc.
IEEE Symposium on Visual Languages pp.
Jacob, R.J.K., Deligiannidis, L., Morrison, S., A Software Model and Specification Language for Non-
