The inefficient use of complex computer systems has been widely reported.
These studies show the persistence of inefficient methods despite many years of experience and formal training.
To counteract this phenomenon, we present the design of a new course, called the Strategic Use of CAD.
The course aims at teaching students efficient strategies to use a computer-aided drafting system through a two-pronged approach.
Learning to See teaches students to recognize opportunities to use efficient strategies by studying the nature of the task, and Learning to Do teaches students to implement the strategies.
Results from a pilot experiment show that this approach had a positive effect on the strategic behavior of students who did not exhibit knowledge of efficient strategies before the class, and had no effect on the strategic behavior of those who did.
Strategic training can thus assist users in recognizing opportunities to use efficient strategies.
We present the ramifications of these results on the design of training and future experiments.
Productions which produce actions which are merely nonoptimal, however, are more difficult to detect and persist for longer periods" .
These experimental results have been validated in our studies of real-world CAD usage.
In data collected during an ethnographic study , we found that despite formal training in CAD and several years of experience, many users missed opportunities to use efficient methods in routine CAD tasks.
Furthermore, many of these inefficient methods appeared to be directly transferred from manual drafting methods that still worked in the new medium.
The above empirical findings point to the difficulty that users have in moving from a sufficient use to a more efficient use of computer applications.
We have argued that neither good interface design nor experience guarantee that this transition will occur .
Instead, we have come to believe that strategic knowledge holds the key to efficient usage and that this knowledge must be explicitly taught.
This contrasts with traditional training, which focuses on the use of commands to complete simple tasks.
We hypothesized that if users were taught to use efficient strategies in the context of tasks, they wbuld be able to recognize opportunities to use them also in new tasks.
To test this hypothesis, we developed and implemented a new approach to training called the Strategic Use of CAD.
This paper presents initial findings that demonstrate the effects of this approach on the ability of users to recognize opportunities for using efficient CAD strategies.
We begin by describing the nature of strategic knowledge in the context of complex computer tools.
Given the tremendous leverage that computers can provide if used efficiently, this situation seriously limits the overall productivity of human-computer interaction.
The causes and persistence of inefficient methods to perform various tasks have been explored for many decades.
Early work identified the Einstellung effect, which demonstrated not only the powerful influence of prior experience on novel tasks, but also how it prevented users from exploring other methods .
The course content and structure were based on a two-pronged approach: Learning to See taught students how to recognize opportunities to use efficient strategies; Learning to Do taught students how to implement these strategies to complete a task.
We present the results of a pilot experiment to explore the efficacy of this approach.
We conclude by discussing the ramifications of these results for the design of training and future experiments.
Complex computer applications such as CAD systems typically offer more than one way to perform a given task.
Consider the task of drawing the three shapes shown in Figure 1.
One way of doing this is to draw the outline of all the outer shapes, then to outline the inner shapes, and finally to pattern all the inner-shapes individually .
An alternate way to do the same task, shown in Figure IB, is to draw all the elements of the first shape , to group these elements using an appropriate command like FENCE , and then to make multiple copies of the fence contents to create the other shapes .
Both of these methods allow a user to complete the task.
The Sequence-by-Operation and DetailAggregate-Manipulate  methods illustrated in Figure 1 are prime examples of CAD strategies.
When we refer to strategic knowledge, we refer to knowledge of such alternate methods and of how to choose between them.
To arrive at a precise understanding of the knowledge required to use various strategies, we modeled them using GOMS .
The DAM strategy, for example, was represented by a combination of a selection rule and a method as shown below:
A comparisonof the stepsrequired for the :iequenceby-Operation strategy and the Detail-Aggregate-Manipulate  strategy.
Concrete strategies are important because CAD systems provide in many cases more than one command to achieve a result.
The strategy furthermore reduced low-level mouse interactions, which tend to be error-prone.
The main reason why the DAM strategy is rnorl= efficient than the Sequence-by-Operation strategy is that it exploits the iterative power of the computer through aggregation commands .
By aggregating the first shape and then applying the copy operation to the aggregate, the computer performs the iterative actions of copying each element.
In contrast, the Sequence-by-Operation strategy requires the user to perform the iterative task of drawing and patterning multiple copies of the same shape, which leads to time-consuming and error-prone actions.
Such analyses of strategic knowledge helped us understand the sources and consequences of different strategies; they led us in the end to the formulation of a general theory of efficient strategies .
Using the theory of efficient strategies, we identified other strategies that exploit the power of iteration provided by computers.
Figure 2A shows the Aggregate-Drop-ModifyStrategy , which is useful for the modification of multiple elements with exceptions.
The selection rule connects the nature of the task  to a strategy label ; the method decomposes the label into subgoals .
This representation shows that the knowledge required to use the DAM strategy is fairly abstract in that it does not include knowledge of explicit CAD commands.
In fact, we have shown that strategies such as DAM are useful in other applications such as word processors and spreadsheets .
We therefore call them abstract strategies.
The Aggregate-Drop-Modify strategy is anotherexample of an aggregationstrategythat delegatesiteration to the computer.Aggregation strategiessuch as DAM can be used recursively to createcomplex drawings .
Several experimental and real-world studies have shown that strategic knowledge is not easily acquired by computer users in command-based training or through many years of experience .
Furthermore, we have argued that even well-designed interfaces cannot express this knowledge unambiguously .
We therefore hypothesized that the most effective way to make users efficient is to teach them strategic knowledge explicitly.
The GOMS representation and the theory of efficient strategies led directly to the design of the Strategic Use of CAD course.
Figure 3 shows how the presentation of abstract and concrete strategic knowledge was interleaved throughout the course, which moved from 2-D and 3-D drawing to rendering and finally macro development.
Individual classes were held in a computer cluster.
They were structured around the demonstration of abstract and concrete strategies using MicroStationTM.
Demonstrations were supported by lectures focussing on the underlying concepts or background knowledge, such as the mathematics of b-spline curves.
Students were allowed to choose their own midterm and final projects  to demonstrate their understanding and mastery of efficient strategies.
Pedagogical Approach The GOMS representation of strategies discussed earlier made salient two important knowledge components necessary to use a strategy.
The selection rule suggested that a student must learn to recognize when a task offers an opportunity to use a particular strategy.
We call the process of acquiring this knowledge Learning to See.
The method component suggested that a student must learn how to implement the strategy by decomposing the task into temporally-ordered subgoals.
We call the process of acquiring this knowledge Learning to Do.
We realized early on that it was not possible to gauge whether a student actually used an efficient strategy just by inspecting a completed drawing.
The goal of the Strategic Use of CAD course was to teach architectural graduate students how to use MicroStationTM, a complex CAD package.
While the students were taught how to use a wide range of commands to complete complex drawings, the course focused on how to use efficient abstract strategies that are useful in any CAD system.
Course Content The course concentrated on teaching six classes of strategies.
These strategies exploited the powers of calculation, precision, iteration, propagation, visualization and generation provided by CAD systems in various degrees.
A time-line for the semester-longStrategic Use of CAD course showing the interleaving of abstractand concrete strategic training.
Powersof CAD are italicized, and aggregationstrategiesare in upper case.
While designing exercises to help students in the process of Learning to See and Learning to Do, we therefore asked students to describe in words and figures the steps they plan to use in completing their homework exercises, mid-term and final projects.
We called these descriptions action sequences.
The steps shown in Figures 1 and 2 are examples of very simple action sequences.
We therefore required students to describe the abstract strategies they intended to use explicitly and completely in their action sequences.
Students were not required to specify the concrete strategies  they planned to use.
Figure 4 shows the various types of knowledge taught by the Learning to See and Learning to Do components.
The gray cells represent the knowledge captured in action sequences.
Action sequences are pedagogically important because they make the process public and therefore open for i,nspection.
Furthermore, it allows the instructor to provide timely feedback to students.
To motivate students to think about the process as well as their final products, they were informed that their final grade would depend on their action sequences as well as the quality of the final drawings.
This approach is a significant departure from traditional training approaches, which concentrate on giving feedback mainly on the final product.
To understand the efficacy of this approach, we tested its effect in a pilot experiment.
The Strategic Use of CAD course was offered in the graduate program in the School of Architecture at CMU in the spring semester of 1998; it was open to advanced undergraduates.
Eight students  took the course for credit.
The sm,all size of the class is typical of graduate-level courses offered at the university.
Six of the students were architecture majors and two of them were HCI graduate students.
While all the students took part in the experiment, one student had to be dropped from the analysis as she had attended some lectures when the course was offered in the previous year, which invalidated her pre-test scores.
Taking part in the experiment did not affect the students' course grad.e.
The experiment consisted of a pre-test conducted on the first day of classes and a post-test conducted on the last day of classes.
The goal of the experiment was to investigate how the course affected the students' ability to decompose a drawing task so that efficient CAD strategies could be applied.
A pre-test task  and its isomorph in the post-test .
This task requires an application of the DAM strategy described in Figure 1B.
The drawings presentedhere are half the size of the original taskspresentedto the students.
Students were instructed to use 8-1/2"xll" sheets of unruled paper provided by us to describe the steps.
Students could choose their own writing instruments to perform the experiment.
The pre- and post-test each consisted of three drawing tasks'.
The first task required the DAM strategy, the second required the ADM strategy, and the third task was designed to test if the students could use the DAM strategy recursively.
The post-test drawing tasks were isomorphs of those in the pre-test.
Figure 5 shows an example of a task 1.
A fourth task, which tested knowledge of a strategy called LAMM , had to be dropped from the analysis because the difference between the before and after drawings in the pre-test was too subtle; this caused five of the seven students to misunderstand the pre-test task.
These tasks were similar to those observed in our ethnographic study  where real-world to use aggregation architects missed opportunities strategies.
The students were given no time limit, but all completed the tasks within the 80 minute time slot of the class.
The DAM strategy was used successfully if all details were completed in the first drawing before it was aggregated and mirror-copied to create any subsequent copies.
The Detail stage itself did not have to be correct, but any attempt to draw elements in the copy was considered a non-use of the strategy.
Two attemptsby studentsin the experiment to do the pre-testtask  requiring the DAM strateg:y.
A score of 0 was given to the attempt shown in , and a scoreof 1 was given to the attempt shown in .
The ADM strategy was used successfully if there was any attempt to aggregate elements in such a way as to exclude the exceptions.
Attempts to modify each element individually to avoid the exceptions was considered a nonuse of this strategy.
The type of commands to perform the aggregation was irrelevant.
The recursive use of the DAM strategy was considered successful if the strategy was used in at least two levels as shown in Figure 2B.
Based on the above criteria, a score of 1 was given if the appropriate strategy was used, and a score of 0 if the strategy was not used.
This coarse-grained analysis reflected the main goal of the experiment, which was not so much to see if the students could execute commands or draw accurately, but rather to determine if the students could recognize opportunities to use abstract strategies and plan a course of action.
The criteria also reflected the temporal aspect of the aggregation strategies .
Figure 6A shows an example of how a student decomposed the task requiring the DAM strategy described in Figure 1B.
The steps show how he planned to draw both the "L" shapes using lines similar to those that would be drawn using a Tsquare in manual drafting.
This is similar to the Sequenceby-Operation strategy shown in Figure 1A.
As the student did not recognize the opportunity to use the DAM strategy, he was given a score of 0 for that task.
Figure 6B shows how another student attempted the same pre-test task.
Here she correctly saw the symmetrical composition of the task and demonstrated the use of the DAM strategy by first drawing all the details in the first "L" shape, and then aggregating and mirroring the shape to create the copy.
She was therefore given a score of 1 for that task.
As shown in Figure 7, two  of the seven students demonstrated knowledge of all the strategies in the pre-test, while one student  demonstrated knowledge of none.
The rest of the students showed knowledge of at least one aggregation strategy, but not of all.
To determine if there was an overall positive effect of the class, the Wilcoxon test' was performed on the data collapsed over taiks.
A onetailed test showed a significant improvement of thle post-test scores over the pre-test scores .
Of the 11 cases where students did not exhibit knowledge of a strategy in the pre-test, only 2 did not display that 1.
The Wilcoxon test is a distribution-free, non-parametric test designed for nominal data and is similar to the paired sample T-test designed for continuous data.
In fact, four of the seven students failed to use the DAM strategy in the pre-test while all used it in the post-test.
We found the same proportion of pre-test and post-test scores in the recursive DAM task.
The three missed opportunities to use the ADM strategy and subsequent analysis suggest that students may not have learned the conditions for its use because we did not spend enough time in describing and demonstrating the ADM strategy.
This has been observed in other studies that taught strategies.
Thus, if either explicit conditions for strategy selection do not exist , or sufficient time is not taken to teach them , students may fail to use the strategies.
In the next iteration of the course, we intend to provide explicit conditional information for the ADM strategy.
Clearly, our pilot experiment is limited by the small number of students that registered for the graduate-level course, a constraint beyond our control.
In addition, the pilot experiment was limited by the absence of a control condition.
This could lead to the rival hypothesis that the observed improvements in recognizing opportunities to use strategies could have occurred just by virtue of learning how to use a CAD system for a semester, irrespective of the training approach.
However, we have evidence against such a claim.
First, although one of the students in the experiment had taken a command-based AutoCADTM  course at CMU in the preceding semester, he still used the inefficient Sequenceby-Operation strategy in the pre-test .
While he had mastered the use of aggregation commands in AutoCADTM, the command-based course had not helped him to recognize opportunities to use them with efficient strategies.
Second, our ethnographic study also demonstrates the ineffectiveness of command-based training to make users efficient: despite formal training through their-CAD vendor, the users in the study exhibited similar forms of inefficient usage.
Both limitations of this pilot experiment  will be addressed in our current research that aims to design and test a strategy-based course for other complex applications .
This new course will be taught to approximately 130 incoming freshmen next year with the same number of students in a traditional command-based control condition.
The pre- and post-test scores for seven students performing three tasks.The scoresrepresentthe unsuccessful and successful use of aggregationstrategies.
These cases show up in the table as a pair of OSin the pre- and post-test scores for the same task .
Furthermore, there was only one case where a strategy known by a user in the pretest was not used in the post-test .
It is interesting to note that all three cases occurred in the task requiring the ADM strategy.
We therefore performed a more detailed analysis to determine whether the ADM strategy was taught differently from the DAM strategy.
The analysis revealed that the DAM strategy was introduced in the first week and emphasized for homework assignments throughout the course.
Furthermore, the recursive DAM strategy was explicitly taught in the third week.
In contrast, the ADM strategy was taught for only a small portion of the eighth week.
Therefore, the DAM and ADM strategies received proportionately different times in lectures, demonstrations, and practice in homework assignments.
The results provide encouraging evidence that the Strategic Use of CAD course improved the students' ability to recognize opportunities for the use of efficient strategies.
While the students came into the course with mixed abilities to recognize these opportunities, the post-test scores show a far more uniform ability at the end of the course.
Furthermore, with the exception of one student in one task, all students who could recognize opportunities to use strategies at the start of the course did not loose that ability at the end of the course.
The course therefore helped those who did not know the strategies and did not hurt those who knew them.
Because students had no discernible problems showing the steps they would use to do the pre-test task, we are confident that these results were not caused by an improved ability to describe action sequences over the semester.
Based on converging evidence starting from the Einstellung effect down to our own studies on experienced CAD usage, we have begun to recognize the widespread and persistent occurrence of inefficient methods and their negative effects on performance.
Our research over several years has explored different approaches to counter-act this phenomenon.
We have focused on the systematic identification of strategic knowledge and the dissemination of that knowledge to users.
Insights from the research led directly to the design of the Strategic Use of CAD course.
The course design made two departures from conventional training.
The first was to focus on the teaching of strategies in addition to commands as neither can achieve efficient usage on its own.
The second departure was to make students think consciously about process before they attempted their tasks.
Both relied on a pedagogical device we called action sequences.
The results of our pilot experiment suggest that the strategic approach had a positive effect on the students' ability to recognize opportunities for using efficient abstract strategies and to develop a plan to use them.
Furthermore, the course did not negatively affect existing knowledge of strategies.
While the experimental tasks tested the learning of abstract strategies for relatively small drawings, future experiments should investigate whether the strategic approach also helps users apply abstract strategies in the context of large complex drawings requiring deep decompositions.
In addition, future research should investigate the link between abstract strategies which are general to any CAD package, and concrete strategies which are specific to a particular package.
Finally, we need a systematic understanding of trade-offs between strategies because we have observed situations where the choice between competing strategies is not as clear-cut as those we have discussed in this paper.
Although we have explored other ways to disseminate strategic knowledge, such as active assistance as well as better management and peer interaction , we believe that there can be no replacement for the explicit training and practice of strategic knowledge to use complex computer systems.
Our current research extends the strategic approach to the teaching of other complex computer applications.
We intend to study if users are able to transfer abstract strategies across applications and if they retain this knowledge over time.
The hope is that this research will provide a way to counter-act the persistence of inefficient usage, which has plagued modem computer usage for many years.
