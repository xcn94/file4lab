MacKenzie and Soukoreff have previously introduced a Fitts' Law-based performance model of expert two-thumb text entry on mini-QWERTY keyboards .
In this work we validate the original model using results from a longitudinal study of mini-QWERTY keyboards, and update the model to account for observed inter-key time data.
The mini-QWERTY keyboards used in previous studies: Targus  and Dell .
60.74 words per minute  for their example keyboard.
However, there was no empirical validation of this figure.
In out previous experiment , participants used either a Dell or Targus brand mini-QWERTY keyboard for twenty 20-minute typing sessions to obtain empirical typing data.
The Mackenzie and Soukoreff model predicts an expert rate of 57.88 wpm with the specifications of our Dell keyboard.
At first glance, this seems to align with the study results: the mean typing rate after 400 minutes of practice for the Dell participants was 59.32 wpm, a difference from the model of less than 3%.
However, a closer examination of the results reveals discrepancies between the predicted and observed inter-key times .
Mini-QWERTY keyboards are miniature versions of the traditional desktop QWERTY keyboard and are used in many mobile devices.
MacKenzie and Soukoreff introduced a Fitts' Law-based performance model of two-thumb text entry on mini-QWERTY keyboards .
Such a model can help inform the design of new mini-QWERTY keyboards by providing a priori predictions of expert performance.
We have previously reported the results of a longitudinal study of typing rates on two mini-QWERTY keyboard models .
In this paper we examine the original model in light of that study and suggest an alteration to improve its accuracy.
We use data from one keyboard group to investigate the alteration; we use data from the other group to evaluate the change.
The result is a validated model of expert two-thumb text entry, which may be useful for mobile device designers.
Fitts' Law  is a performance model for aimed movement when users are experts at a pointing task and cognitive overhead is not a major factor.
MacKenzie and Soukoreff proposed a similar model for two-thumb text entry on miniature keyboards .
The Mackenzie and Soukoreff two-thumb typing model  takes as inputs a representation of a two-thumb keyboard layout, a word corpus and a key-thumb assignment table; it produces a predicted value for an average expert user's typing rate.
The representation of the keyboard encodes the physical layout of the keys on the device.
The word corpus can be any representative body of sentences, such as MacKenzie and Soukoreff's own corpus .
The model employs two fundamental times.
The first time calculation represents the time for a thumb to move from one key to the next and is derived from Fitts' Law, using Fitts' Law coefficients from related work .
The model uses these times together to calculate the time to press a sequence of keys.
The model begins by assigning a time to the first letter in a word.
This time depends on which side of the keyboard the first letter is on and which thumb pressed the preceding space key.
Using the British National Corpus, MacKenzie and Soukoreff calculated that the right thumb is used to press the space key 70.49% of the time.
If the first key of a word is assigned to the right thumb, the time it takes to move from the space key to the first letter of the word will be the Fitts- modeled transition.
When the first character is assigned to the left thumb, the weighting factors are simply reversed.
Tn represents the predicted time for a word up to the nth character.
The mean inter-key times  for each transition class predicted by the model, observed 
Differences are affected by rounding.
Table 1 shows that for Fitts' Law-modeled transitions , subjects consistently type faster than predicted.
Conversely, in cross-thumb transitions subjects are slower than predicted.
The difference between the two transition types  is statistically significant .
Consequently, the model's relatively accurate prediction masks inaccuracies at a lower level; as such it is worthwhile to investigate possible improvements.
One possibility is revisiting the assumption that each key is statically assigned to a particular thumb.
For subsequent characters, if the current and previous keys are assigned to the same thumb, the prediction is increased by the time to move the thumb, tf itts .
When the current and previous keys are assigned to opposite thumbs, the current key may have been located in the time it took for the opposite thumb to press the previous letter.
The time for the current thumb to move from its former location  to the current key is tf itts .
The original model assumes static thumb-key assignments: the model designates the left thumb to press keys on the left half of the keyboard and the right thumb to press keys on the right half.
While our previous experiment did not collect direct evidence of actual thumb usage patterns, informal observation and anecdotal user comments suggest that keys in the middle of the keyboard may be pressed by either thumb.
We refer to these keys and this kind of usage as variable or flexible.
Alternating thumb use allows users to perform thumb movements in parallel, which can increase typing rates in some circumstances.
Given our knowledge of this practice by users, we extended the model to incorporate the concept of keys that can be operated by either thumb.
The basic structure of the updated model is similar to the original.
If the first character is not in the set of variably assigned keys, the model proceeds according to the original algorithm.
Since the right thumb is used for the space key 70.49% of the time, we assume the left thumb is used for the first character 70.49% of the time for words beginning with a key from the variable set.
If both the current and previous keys may be pressed with either thumb, we assume expert users take a localized greedy approach to optimizing their thumb assignment plans.
The total time when the most recently used thumb is chosen is Tn-1 + tf itts  .
If the typist chooses the opposite thumb, the total time is Tn-k + tf itts .
Since we assume a greedy approach, the typist will choose the shorter of these times: min Tn-1 + tf itts , Tn-k + tf itts  
The model explicitly handles transitions between letters assigned to the same thumb separately from those assigned to different thumbs.
As such, it is natural to assign interkey times into categories based on the thumb assigned to the source and destination keys.
There are four such categories: LeftLeft; RightRight; LeftRight; RightLeft.
Thus, it may be useful to contrast the predicted and actual inter-key times for each of the four classes.
Since the model is of expert use, we limited our data source to error-free sentences from Dell users' sessions 16-20 collected in our previous work .
Table 1 contains the mean inter-key times predicted by the model, observed in our previous experiment, and the difference between those two values.
The values in the observed columns are calculated by finding the mean inter-key time for each key pairing, and then averaging those values according to their transition type .
Similarly, the model column values are averages of the interkey time predictions for each key pair in the respective transition type.
This is not a frequency-weighted operation, but such an adjustment yields similar results.
Note that the model update is independent of specific thumb- key assignments, so we must still determine which keys should be variably assigned.
We collected no direct evidence of specific policies in our original experiments, so we instead examine the inter-key timing data for evidence of dual- thumb usage.
Updated model computation for the word nags.
The existence of flexible key use is most likely to manifest itself in the data in the form of faster-than-expected inter- key timings.
Specifically, time intervals between keys assigned to the same thumb that are consistently faster than Fitts' Law predicts are likely candidates.
We measured this by comparing the mean deviation between letters typed by the same thumb to the predicted times.
We computed 26 mean intervals  in this manner.
The average difference was 37 ms ; two letters had average deviations more than one SD below the mean: v and b.
However, v is a significant outlier: transitions beginning with v were 187 ms faster than predicted, while the next lowest value was 97 ms .
The standard deviation excluding this outlier was s = 28 ms; using s instead s yields two additional letters more than one SD below the mean: g and y.
We conclude from this analysis that a reasonable set of variably-assigned keys was v, b, g and y.
The updated model predicts an expert speed for our Dell keyboard of 60.51 wpm  using these keys as our flexibly assigned set.
Consider the model's treatment of the word nags where the letter g is a variably assigned key which may be pressed by either thumb.
Character entry is left-to-right; the lines represent the activities of the left and right thumbs.
Dark circles represent statically assigned keys and the gray circle indicates a thumb usage choice made by the model.
The first two letters are calculated as they would be with the original model.
It may have reached the a key in the time it has taken the right thumb to press n, but the time increment should be at least tmin : T2 = max At this point the procedure diverges from the original model, in which the g key would have been statically assigned to the left thumb and the left thumb would move immediately from a to g, a time given by T2 + tf itts .
However, the right thumb has previously hit n which is close to g. In the updated model, we examine the possibility that using the right thumb might be faster.
The time to move from n to g is T1 + tf itts .
3:   T2 + tmin , T2 + tf itts ,  T3 = max  min T1 + tf itts  We use the original model process to calculate the time for the final letter since the updated model has made the explicit choice to press the preceding key with the right thumb.
Thus: T4 = max The speed increase suggested by the modified model is readily apparent.
For the above example, the original model predicts an expert entry time of 1.11 seconds with g being statically assigned to the left thumb.
In the updated model considering g as a variably assigned key predicts an expert entry time of 0.57 seconds.
The updated model prediction is not radically different from the original, but as we noted the original prediction masked lower-level inaccuracies.
We validate the updated model via two methods.
First, we use an error metric similar to the procedure discussed above, which compares the predicted inter-key transition times with the empirical data.
Second, we validate the model using data from the second keyboard in our previous study .
Since we have not examined the Targus data in the context of the theoretical model, it has not influenced the model's evolution and provides an unbiased data set against which to gauge the updated model's performance.
As before, we analyzed the timing data from the set of error- free sentences in sessions 16-20 where our participants had over 300 minutes of experience.
Both the model and the empirical data yield a 26 x 26 matrix of transition times between each possible combination of any two key presses .
To correct for sampling frequency, we weight individual cells in each matrix by their frequency of occurrence in the empirical data.
We then compute an error metric by summing the squares of the differences between corresponding entries in the model and empirical matrices.
This measure is a better indicator of model quality than a simple comparison of model and observed wpm values.
The observed wpm values are essentially an amalgam of the inter-key times; the error metric examines them in smaller groups and weights them by frequency.
We use this metric  to evaluate the relative fitness of the model variations.
The score for the original model is 37.1, while the the {v,b} and {v,b,g,y} versions of the updated model score 34.4 and 33.3, respectively: the latter-- the final form of the updated model--is more than a 10% improvement over the original.
The original Mackenzie and Soukoreff two-thumb model provides a reasonable prediction of expert speed.
However, our analysis of empirical data indicates that at a lower-level the model's predictions are consistently slower or faster for different classes of thumb transitions.
This fact led us to re-examine the static thumb-key assignment assumption of Mackenzie and Soukoreff's original model and to extend its formulation to account for flexible key usage.
This extension has its basis in both experimental data and anecdotal user reports.
The altered model makes slightly faster typing rate predictions with 8-10% lower error scores.
Analytic models like the two-thumb model can be powerful HCI tools: predictive statements about prospective designs have great utility.
Comparing design alternatives, for example, can be done at very early stages of the design process using these models.
Thus, their verification by empirical observation is a crucial bookend to their development.
Apart from the improvements to the two-thumb model made in this work, the model's validation by our corpus of user data is a useful contribution to its development.
As we have seen, the validation process not only provides an empirical basis for confidence in a model's predictions, but also can reveal opportunities for improvement and refinement.
The original model assumes that each character is entered by a single key.
However, the Targus keyboard used in our study has two space keys .
Updating the model to account for both spaces is relatively straightforward and does not affect the model's overall structure--the model works at the word level and the space key is already a special case.
Changing the model for the case of multiple keys for the same letter would require more extensive modifications.
The updated model predicts an expert rate of 60.62 wpm versus an original prediction of 57.95 wpm.
Targus users, in comparison, had a mean rate of 58.74 wpm after 400 minutes.
Hence, the updated model is also more accurate for the Targus keyboard.
Thanks to Jim Foley and the Stephen J. Fleming Chair for support of the first author.
This work is funded in part by NSF Grant #0093291 and the Rehabilitation Engineering Research Center on Mobile Wireless Technologies for Persons with Disabilities, which is funded by the National Institute on Disability and Rehabilitation Research of the U.S. Department of Education grant #H133E010804.
Clarkson, E., Clawson, J., Lyons, K., and Starner, T. An Empirical Study of Typing Rates on Mini-QWERTY Keyboards.
In CHI '05 Extended Abstracts, pp.
Fitts, P. M. The Information Capacity of the Human Motor System in Controlling the Amplitude of Movement.
Kabbash, P. and Buxton, W. A. S. The "Prince" Technique: Fitts' Law and Selection Using Area Cursors.
In Proceedings of CHI '95, pp.
MacKenzie, I. S. and Soukoreff, R. W. A Model of Two-Thumb Text Entry.
In Proceedings of Graphics Interface '02, pp.
MacKenzie, I. S. and Soukoreff, R. W. Phrase Sets for Evaluating Text Entry Techniques.
In CHI '03 Extended Abstracts, pp.
Silfverberg, M., MacKenzie, I. S., and Korhonen, P. Predicting Text Entry Speed on Mobile Phones.
In Proceedings of CHI '00, pp.
There are a number of avenues for future research in this area.
Additional studies on mini-QWERTY keyboard use can help refine the model further and empirically examine factors like flexible key use.
Examinations of more unique keyboard designs could test applicability of the model to less standard key layouts.
There is also ample opportunity for more basic Fitts' Law research.
Presumably, both nontrivial cursor  and target  widths may have some effect on motor performance.
Although the standard Fitts model addresses large target regions, and area cursor work  covers large selection regions, we are not aware of any work on their combination.
Such work might suggest a different method for calculating the effective key width and thus improve the two-thumb model.
Finally, we are also not aware of any research examining how aimed movement tasks are affected by crowded target environments.
Whether Fitts' Law accurately models these situations or can be modified to do so is an open question, and one which has obvious implications for typing on miniature keyboards.
