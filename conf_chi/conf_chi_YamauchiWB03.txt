But not infrequently they face a new and unforeseen problem and, given the complexity of the machines, there is then considerable uncertainty about how to solve it.
The technicians have been provided with repair documentation on their laptop computers.
The documentation is organized around Repair Analysis Procedures, or RAPs, that start from presenting symptom  and lead them through a decision tree to "the answer."
Alternatively, on the same laptop, they have the Eureka system, a search/browse-based interface to a collection of informal tips written by other technicians on how they have creatively solved difficult problems in the field.
Our exploration of their use of these and other resources helps to provide some design guidance for tools that can provide effective information access.
Although we have conducted extensive field observations, we have focused here on only two service calls.
Tellingly, only when they have no further ideas will they resort following the prescribed RAPs; in doing this, they have two goals--finding the cause of the problem, and learning what they were missing in their own practice.
Our analysis shows that there are informational and interactional resources of Eureka that make it a preferred documentation source because it appears to nicely fit into their gleaning practice.
It was startling to us that they rarely used the formal documents as informal resources in their gleaning; we later suggest ways of making augmenting the formal documentation to support this common practice.
Service technicians in the field often come across difficult service problems that are new to them.
They have a large number of resources that they can draw on to deal with such problems, including both people and documents.
We have undertaken a detailed study of technicians' everyday work, and have discovered two distinct types of information use, reflecting two different problem-solving practices.
The less frequently used problem-solving practice is instruction following , where technicians follow company-documented Repair Analysis Procedures .
The second, more common practice is gleaning, where the information is gathered from many sources ae including other technicians and informal tips, which are documents written by technicians describing their invented solutions to hard service problems.
Our observations show how the informational and interface affordances of the system for accessing the tips support their easy incorporation into the gleaning approach for problem solving in difficult cases.
We also recommend ways that RAPs can be augmented to provide affordances for gleaning, and more effective instruction following.
Work in modern organizations is done in a complex web of technologies, documents and human actors.
Workers have to obtain relevant information from various resources to cope with everyday work situations.
Organizations seek to improve work performance by distributing documentation to front line workers, often through computer-based knowledge management systems.
Although this seems to be a good approach, many organizations are facing the difficulty of getting people to actually use these systems.
Some are not used as intended and others are ignored.
What do workers do instead to obtain information?
What truly works for them and why?
Addressing these questions requires a real-work context to provide grounding.
We have therefore conducted a detailed study of a particular group of technicians who repair and maintain document machines in the field, at a variety of customer sites.
To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee.
All too often, knowledge systems are designed under the premise that workers can improve their work performance if systems provide relevant information.
This simple premise seems to make sense at the first sight but often does not work in reality.
For practitioners, useful information is not always something others can readily provide in advance.
If they need information, they refer to documents, ask questions and, more important, create the information itself by acting rather than only listening.
Nor is information something that can merely be distributed.
The real challenge is not how to simply provide information but how to enable/encourage practitioners to use it.
The literature on workplace studies and CSCW suggests that actual information use in the workplace is embedded in a complex web of heterogeneous resources .
Practitioners' use of documents, tools and conversations are intertwined in a temporally unfolding manner and made possible by their extensive knowledge of the environment .
In his ethnographic study of service technicians, Orr  argued that informal, everyday conversations and the telling of stories were crucial for knowledge sharing.
Because technicians in this setting have radios to communicate with each member or all of their workgroup, these conversations are more prevalent.
Above all, the conclusion seems to be that workers already have developed ways of using information efficiently, taking many kinds of contextual factors into account, mobilizing their previous knowledge and combining it with information gleaned from various tools, documents and conversations.
However, knowledge management systems are typically designed with a different model of information use in mind.
Some systems are built to provide prepackaged solutions that workers can follow.
Others systems try to reinvent the ways workers do their jobs by introducing standards and canonical processes.
Consequently, these systems are frequently not used as intended and oftentimes ignored by users.
Why should we not design technology by drawing on the actual, artful methods by which practitioners use information in their work?
Why should we not design a system that enables these workers to easily "jump" to various resources, just as they now do informally all the time?
Why should we not design a system that works much like an everyday conversation among workers?
Figure 1: Eureka interface The laptop also supports the Eureka system, designed to facilitate practical knowledge sharing among technicians.
If a technician discovers a solution to a difficult service problem valuable enough to share with others, he or she submits a "tip".
A validator reviews the tip with the author, and if/when the tip is acceptable , the validator posts it on Eureka for everyone to see.
Each tip has a title and is structured into three sections: Problem, Cause and Solution.
Technicians can write freely in these sections, using their own vernacular.
The names of the tip author and validator are also listed, making them feel both responsible and proud.
Technicians update their on-the-laptop Eureka knowledge base whenever they connect to the system .
Eureka tips are found on the laptop through a text-matching search procedure that supports exact and close matches.
Figure 1 shows the interface: the left top area of the interface is the search field; the bottom left is the list of search results; and the large area on the right shows the content of a selected document from that list.
Eureka was implemented as an extension to Internet Explorer on the premise that familiarity would ease learning.
In addition to Eureka, the official company repair documentation is loaded on the laptop.
The most important part of this documentation is a service manual listing all kinds of machine details including anatomic and schematic diagrams .
To support diagnosis, Repair Analysis Procedures  are also provided.
Engineers develop RAPs through intensive laboratory tests where faults are inserted.
All major fault codes  have a corresponding RAP.
These are structured as decision-trees that technicians can follow.
Technicians perform the instructed action and observe the results, then answer Yes, No or Other to the questions posed by the RAP, following the RAP to the next specified branch of the tree.
At the leaf of the tree the faulty part is identified, and a pointer given to a repair procedure.
We observed 48 service calls performed by 16 service technicians with a variety of experience and problem types.
We spent an entire day with each technician, shadowing them and videotaping their work activities whenever possible.
We occasionally asked questions during the shadowing.
After the data collection and subsequent analysis of the video data, we had some follow-up interviews and data sessions with some of the technicians to confirm our understanding of their activities and obtain broader perspectives.
Technicians' experience varied from 6 to 31 years except for one new technician with 3 months.
This means that our data are mostly on experienced workers and the discussions that follow should be considered in that context.
The company provides every service technicians with a laptop computer loaded with proprietary software.
One application is a call-handling program through which technicians check, dispatch, and close service calls.
Early in their shift, they are expected to check the service call queue connecting to the company's server.
They can dial from their home; they often do it from the parts drop , a field station where they can order and pick up parts.
The parts drop is also a place where technicians typically hang out with each other when not on a call.
We report a typical case for a technician at work.
By reporting in great detail, we seek to show the nature of technicians' actual work practice and, most important, their moment-to-moment use of all forms of information.
As the case unfolds, we devote particular attention to the use of Eureka.
In this account, indented paragraphs are excerpts from our field notes.
Personal names have been changed to protect privacy.
A color machine of a large print shop had paper jams.
A technician, Ben, was on the machine on Thursday last week and the customer placed a service call on Friday.
Ben called the customer but did not have time to work on it on Friday.
Sean, seventeen years in service, took this service call on Monday because Ben was busy on another machine and Sean happened to have no service calls up.
When wrapping up his previous call, Sean talked with Ben over the radio and was advised to replace tray 1 feed rolls, which Sean could bring into the site.
Checking the service call entry he found only "FC 8110"--fault code 8-110, which he copied to his notebook.
In everyday service, these "obvious" problems are not at all unusual.
The visual inspection gave Sean a vague idea of the nature of the problem.
The fact that the two sheets of paper overlapped means that the first sheet stopped for some reason and the second one hit onto it.
This suggested that the timing of paper transport might be problematic.
Dirty rollers cause jams quite often this way.
Paper dust--particularly from recycled paper--makes rollers slippery.
This initial phase contains a particularly important information resource.
Many service calls have fault codes the customer mentions when requesting service.
Fault codes are an interesting type of information.
Machine generated, they are objective in that anyone can consistently refer to them anytime within various information resources.
Without the code, customers have to describe the problem in their own language.
For a copy quality problem, a subjective description is often provided with terms such as "streaks," "lines," "smears," and so on, that are neither precise nor consistent.
In addition, all technicians know that when the first digit of the fault code is 8, there is a problem in the paper transport.
So, the minimal information "FC 8-110" was enough for Sean to expect paper jams.
But the specific code 110 was not familiar to him.
Secondly, the radio played an important role in increasing Sean's knowledge of the situation through his conversation with Ben.
Ben had worked on the machine the week before and talked with the customer.
Learning what Ben had found out would enable Sean to avoid "reinventing the wheel."
Usually, technicians get paged on their radio/cell phone with a short message that contains the customers address and phone number, but because this was a service call for another technician, he got this information on the laptop and wrote it down in his notebook.
Sean called the customer and gave an estimated time of arrival.
As soon as he arrived, he noticed that the machine still indicated the 8110 fault code.
As usual, Sean opened the front door and visually inspected the place where paper was jammed.
Two sheets of paper stuck in the aligner transport were slightly overlapped.
He said, "First thing you do is always to do the most obvious thing."
He did not find any obvious things such as a paper clip, broken piece of paper and parts out of position.
At this moment, he did not know the cause of the jam.
He said, " could be a timing problem.
Could be just a dirty roller... Looks more like mechanical."
Paperwork is a necessary part of technicians' jobs, which the company mandates.
Meter readings in some cases, not in this case, provide information on the status of the machine.
A technician in another case found that a machine was too old by looking at the meter.
The information was consequential because the problem was noise, which could come from many places if the machine was old, and she decided to replace a whole assembly.
Sean then ran 10 single-sided test copies off the glass using his own test pattern.
Although this was a color machine, he selected faster black and white copies because this was an issue not of copy quality but of paper transportation.
Four sheets  of paper came out and then the jam occurred.
Replicating the problem is almost always necessary.
The fact that the four sheets came out without jam seems to have reinforced his initial reasoning of a timing issue and dirty rollers.
Note that the technician did not simply analyze previously collected information.
He actively poked around and more interestingly, he created, or "enacted" , the information by manipulating the materials in the situation.
We cannot ignore this information enactment because the enacted information was inherently an integral part of his diagnosis.
Sean then opened his laptop computer.
The computer did not start.
He had had this problem at the previous site and fixed the computer with the help of technical specialist, whose job was to support technicians with tools.
He removed the battery and put it back in.
The laptop began to boot up.
While waiting for the system to come up, he took a brief look at the log book.
By reading the latest page listing the last five service calls, he said, "Replaced tray one already," while reading the entry of the last call, "Cleaned tray 1 feed rolls.
Replaced tray 1 feed kit."
An initial visual inspection of the faulty machine is part of his  routine.
As he stated, "Before you go too deep of troubleshooting, it's always best just to give a overall visual inspection.
A lot of times, a problem could be real easy, just look at it.
You wanna make sure everything looks good."
Technicians who come to a machine that somebody else has serviced can gain information from the log book.
As Sean did in this case, technicians can often find out what parts have been replaced.
But, because leaving records in the log book is not a technician's main job , the description of problems and actions taken is minimal.
No other information, such as the reason for the replacement or the problem description, were listed.
But, it was not difficult to guess what happened previously because Sean had sufficient background knowledge to fill in.
He did not view the content of the document.
He tried to determine whether copies from other trays would jam so that he could focus on this tip if jams did not occur from other trays.
He ran copies from tray 3 and tray 2, both of which worked without jams.
While waiting for these copies, he opened the first document and read it through.
This was a tip advising that an upper chute baffle, whose gap was too tight for paper to go through, be reformed.
He said, "Reform the baffle."
He pulled out the aligner transport, where the paper was jammed, and removed the paper.
Also, he carefully touched and pushed the bracket that covers the aligner.
Next he saw how the upper chute baffle  fit with the bracket and slightly adjust the baffle.
He also checked the rollers whose idler rollers were indicated on Eureka.
Next, he wiped out all the rollers in the aligner with a cloth moistened with a liquid cleaner.
This piece of the vignette shows that the title of the document played a crucial role.
He not only determined the relevance of the document but also learned that only tray 1 had a problem.
It enabled him to narrow down the problem.
The title is an exemplary instance of information `scent' , an indicative representation that leads to the information itself.
Sean again enacted the information by operating the machine.
Moreover, he was interacting with Eureka.
The information "Tray 1 only" prompted him to check other trays.
Here, the fact that he knew Ben had "Replaced tray 1 already" had a consequence.
But since he determined that only tray 1 had the jam, the tip was made relevant.
This segment therefore exhibits that information from various sources and the action are interwoven.
He read aloud the title of the second result, "08-110 First Side Jams on the Aligner," but did not open it.
Then, he opened the third result "8110 when selecting more than one copy."
It explained that a software update might be related and the machine needed reinitialization.
As soon as he glimpsed at it, he went back to the second result and opened it.
It was a tip indicating that the guide in tray one could be bent toward the stack of the paper.
Sean then moved to the fourth document titled "08-110."
This was a tip that suggested that aligner idler's tension was not enough and the aligner idler spring's tension be increased.
He opened the sixth and eighth results, both RAPs, but did not read.
He closed the laptop and said, "Looks like  either the aligner or the baffle.
So, I'll check both of those."
The reason he skipped the second search result seems to be that the jam occurred with single sided copies.
Sean returned to this tip soon and read it.
The third document "selecting more than one copy" was relevant because he selected multiple copies and the first four copies came out without jam.
But, he did not read it carefully.
His previous utterance, "Looks more like mechanical," suggests that his initial thought excluded "software" as a cause of the problem.
This segment suggests the selective nature of information use.
The selection is based on numerous factors such as the machine's condition, the history of service, the nature of the customer, etc.
Sean juxtaposed the perspectives he gained from Eureka tips and other sources.
First, he had the initial conjecture from his experience about the dirty rollers.
Second, he talked with the coworker and learned about the feed rolls.
Lastly, Eureka tips advised him to look at the aligner and the baffle.
Somehow, through this process, he quickly enriched his understanding of the problem with additional information.
He checked the bracket, which technicians also call baffle.
Although the upper chute baffle is a different part, Sean paid attention to this bracket.
This distinction of names is not clear to technicians.
When we asked what the upper chute baffle is, many of them did not have a definite answer.
This does not mean that they are not knowledgeable; rather, it suggests that they can fulfill their practical purpose even in this ambiguous way.
The purpose of Eureka tips is typically not to pinpoint the problematic place but to direct technicians' attention to the likely place and let them go further by themselves.
One technician mentioned, "Just because Eureka tip says there, it says there doesn't mean it fixes everything, you know.
You just have to take it with a grain of salt.
Okay, well, it's around here somewhere.
At least it's telling you where to look, not someplace else."
The bracket or baffle he touched and pushed carefully turned out to be the cause of this jam although he could not see it at this moment.
The bracket was bent and incurred uneven pressure on the paper.
So, he was checking the correct place.
But he did not try to reshape the bracket.
Sean looked at the upper chute baffle carefully as indicated by the Eureka tip.
The aligner idler also indicated by another tip is attached on this baffle.
Although he briefly checked the rollers and the idlers, he did not pay attention to the spring that was indicated by Eureka.
It seems that he saw the gap between the roller and the idler and thought the spring tension was not loose.
The technician who worked on the machine the week before  suggested this replacement.
It is interesting because Sean knew that the tray 1 feed kit including the rolls had been replaced the week before and that Ben still suggested that the new rolls be replaced.
This was due to the specific nature of this machine and this customer.
Because this was a large print shop, machines were used very heavily.
Technicians report that it is not unusual that even new feed rolls are problematic.
In addition, this print shop cuts paper on site rather than uses precut paper.
This often generates more paper dust and makes the feed rolls slippery.
Workers can make sense of information only in the particular context.
Sean ran test copies, but paper still jammed.
He looked at the paper transportation again.
The problem turned out to be that paper became stuck in the paper transportation because the bracket was deformed.
Two of his coworkers came to this site to get together for lunch and one of them reshaped it.
The technician had this same problem before.
The technician who joined Sean and fixed the problem turned out to be new to the company  although he had service experience in another company.
He happened to have encountered the same problem Friday before this and figured out this problem with the bracket after spending hours replacing the aligner, the feed rolls and all other possible parts.
This conversation among the three technicians is much like reading an Eureka tip although there was no tip indicating this problem.
Or, we should probably say that it is Eureka tips that are like the workers' conversations.
Dave had just fixed a problem with the fuser module on a color product.
When he ran test copies, the machine reported a paper jam at the sorter, which sorted and stapled copies.
Dave used a cheater, a small plastic key for a door latch to deceive the machine as if the door was closed, to look at the sorter while running copies, while saying, "I'll see if my roll turns."
Shortly he found the roll not turning and said, "They ain't turning."
Because the roll was not turning, the paper could not be driven into the sorter.
He decided to go back to his van and get his laptop to troubleshoot this problem.
Just before leaving, he noticed the fault code 11-145, which he was not familiar with, and wrote it down on his notebook.
In sum, Sean extracted information from various resources including the coworkers, the service call message, the log book, the machine, the environment and the Eureka tips.
Information was then locally juxtaposed.
The juxtaposition is a product of complex interactions among the person's knowledge, documents, talks, materials in the situation and social organization.
He made sense of each pieces of information mobilizing his knowledge in light of the particular situation.
The information is not only retrieved from sources but also enacted through actions.
The juxtaposed information was not literally acted upon but used as a hint from which he initiated more situated actions.
We call the type of information use possessing these characteristics `gleaning'.
One technician expressed his perspective in a data session,
It's a whole bunch of things when you- when you troubleshoot.
You have to take ... the environment in.
And the key operator, you listen to what they are saying and what they are doing, what application because you got to understand that a lot of our products are connected on digital front end.
So, they might be sending something wrong to it, too.
You got to take that information in.
You take the condition of the machine.
You look at the machine.
You look at the code.
You look at your manuals.
There were many reasons for Dave to use the laptop.
Even though he tried to solve the problem by himself by visually inspecting and trying to see if the roll would turn, he could not figure out the cause.
Like Sean, he began with the "obvious things first" strategy and then moved to deeper troubleshooting with additional resources.
Another reason is that troubleshooting of electric parts  is difficult without special documentation and diagnostics tools, which are available on the laptop.
Orr  explained this practice of gleaning using the concept of bricolage.
The bits of the puzzle must be examined in the light of experience to see which combination provides the most reasonable representation of the problematic situation" .
The detailed account of the case can help further this concept.
Important for our analysis, the technician used Eureka in the same way as a number of other information resources.
That is, he used his "whole knowledge" to use Eureka, and the information he extracted became in turn a part of his knowledge.
In this regard, many technicians in fact equate using Eureka to talking with fellow technicians.
As one stated, "For me, it's kind of comfortable that some- to see somebody already saw that problem and actually went through it.
It's just like having somebody on the radio with me or somebody behind me.
That's how I look at .
It's somebody standing behind my back."
We discuss these issues in more detail below.
Dave set max on the `fuzzy' search option, which gave him more documents than those that include the search terms.
He said, "I leave it on max because it looks more verbosely...
It's a matter of interpretation.
People that write Eureka, the tips they submitted.
They might see things different than I do.
Or, they might have different terminology.
So, they might type in something that I wouldn't know."
He would rather read through a large number of results than a limited number of results.
Another technicians also said the same thing to us, although that technician did not use the fuzzy option but instead typed in the product name, which was very general.
It appears that technicians do not think of information overload as a serious problem here.
Note that Dave had never heard any noise on this machine.
The reason he selected this tip was that this was the only tip whose title included 11-145.
He later said that a solenoid and a clutch were the parts that often made noise and he suspected from the observation that the clutch might be bad.
Therefore, although the tip itself was not a perfect match with his situation, he could extract something from it by interpreting the document not literally but as a hint.
Dave scrolled down several pages and selected a result "11-143 Paper Jams in Sorter."
He also read this carefully.
This tip suggested to "Reposition the idle rollers on Vertical Transport Baffle," which was out of position.
Dave then selected a result titled "DC12 Sorter / Mailbox Jams."
This was a tip that explained that if a guide tab assembly is bowed, it can put pressure of the exit roll drive shaft.
But, the title indicated "paper jams" and also the fault code was close to 11-145.
He said that a machine often had multiple fault codes that were all related.
The reason he selected "DC12 Sorter / Mailbox Jams" was that the title matches the problem he had .
Then he switched to the Repair Analysis Procedure .
He opened the RAP for this fault code 11-145.
The first section was "Description" of the fault code.
It basically said that the exit sensor did not detect the lead edge of the paper within the specified time.
He read this description carefully.
It said, "Check the following parts for wear, glazing and slipping: Entrance Roll, Pinch Rollers, Exit Roll, and Drive Gears.
He said, "Wipe it down and see if that help."
He wiped all of the rolls suggested.
He tested the machine and saw it working properly.
But, he did not understand why just wiping could fix it.
I don't know," and "Maybe, it had a hiccup in it.
You know, locked up or something like ."
Next, he scrolled down and read the "Initial Action."
This section suggested that he check several things .
He checked the sensor by taking it out and reconnecting it back in.
He also rotated the rolls by hand to see how they turned.
He ran some copies but encountered the same problem.
He again checked the rolls and tried to run copies again.
He acted based on the understanding of the problem he recollected from the first two parts of the RAP .
He checked the sensor because he knew that the sensor did not detect the lead edge of paper.
This suggested that the sensor might be dead or the paper might not be driven to the sensor.
He checked the rolls as suggested in the initial action.
He was skeptical about the idea of wiping the rollers because he knew that the rollers did not turn and the paper jammed before it would have slipped on the rollers.
His conclusion was that the problem was with the electric parts  and rotating the roll and moving other parts during diagnostics had some effect on the parts.
The case seems to show that the technician followed the RAP blindly without knowing exactly what he was doing.
It is not the case.
Analytical and interpretive effort is not only helpful but necessary in following a procedure .
Although he typed in the dC330 program as the instruction said, the action made perfect sense to him because he suspected that the clutch might be bad.
The final action  is more complicated.
Certainly he was skeptical that these actions would help.
But, he was not simply doing so without thinking.
His attitude was more of curiosity characterized by his utterance, "Wipe it down and see if that helps."
Because he did not know what to do, following the instruction was not a bad idea at least to eliminate one of the causes.
He went to the machine and entered this code 11-010 and saw the rolls on the sorter rotate.
He went back to the RAP and answered "Yes."
He scrolled down following the line coming out of the "Yes."
Because the line was too long and there were several parallel lines, he was not sure that he was following the correct one.
He scrolled up to confirm it and again scrolled down.
He answered "Yes" to the next question "The entrance rolls are rotating."
He typed the code in and saw the roll turn.
The dC330 program is a set of commands to operate input  and output  of the machine components.
The dC330 program is important because it gives information that is not accessible by looking at and touching the parts.
Usually technicians do not use the dC330 program for the purpose of troubleshooting.
In fact, no one in our sample used it for troubleshooting.
Dave said, "You have to have a RAP tell you what the code is.
There are too many of them."
In this case, the RAP provided right information at the right time.
The first half of the vignette showed gleaning from Eureka.
In this case, his gleaning was not successful enough for him to put together a good enough story of what was going wrong.
Later he said, "I think what it is, it is just reinforcing what you have already checked.
Kind of backs up what you are looking for."
Then, in the second half, he focused on one document and followed the instructions.
During this he needed to interpret the instructions and the questions to follow the tree.
In addition, the final action was not logical to him although he followed it anyway.
Using the dC330 procedure augmented the technician's knowledge.
Providing the right information at the right time is the ultimate goal of the systems like RAPs; but this case crucially reveals the difficulty of realizing this goal.
The technician had to follow all the instructions to get that information, although most of what he learned was redundant.
How could the technician get only the needed information - could he have done it without having to follow the instructions?
Technicians prefer gleaning to instruction following.
They almost always begin talking with other technicians and exploring in Eureka.
One technician in a data session said, "Sometimes, we get too dependent on Eureka and we don't actually go to our manual  and try to troubleshoot it... We try this one  first."
Plainly, technicians use Eureka much as they do conversations with other technicians.
As one of them told us, "Eureka is a bunch of guys sitting together talking about problems they see and solutions they came up with...  you  talking to a person about a thousand miles away."
Why is this experience of Eureka seen as like "a bunch of guys talking together"?
To answer to this question has some important implications of our findings for information system design.
First, Eureka tips are very concise and "elliptically practical."
As shown in the vignettes presented above, though the tips are terse, workers can easily fill in meaning and extrapolate from the written information by drawing on their extensive knowledge.
Technicians need only write "Reform the baffle"; they do not need to be told how to reform it.
Nor do they need to be told to check all the obvious things.
What is omitted is known-in-common information, since a technician is writing to other technicians.
That is to say, Eureka tips speak the experienced technicians' language and presume the community's common knowledge and practices.
In contrast, RAPs are targeted to the least experienced technicians, and written by design engineers.
These engineers write down all instructions carefully and completely .
But these RAPs have a varied audience, and it would have significant value if they were structured  to give a high level overview, and provide resources for those less familiar with the particular problem.
Likewise, Eureka does not require explaining all the steps to solutions.
Tips point directly to what would take hours to find solutions for using a complete, step-by-step repair procedure.
By gleaning from these tips, technicians get to the solution directly--"cut  from point A to point Z," as one stated.
Instructions could be improved for gleaning purposes by noting which parts are implicated or exonerated by answering a particular question one way or the other.
We should also note that most tips are about locally discovered solutions that are not covered in the documentation, so the content can often be completely different from that of the manual.
For example, a tip suggests widening a tracking hole of a photoreceptor belt when a sensor seems to be failing.
Another mentions changing the NVM setting for older machines so that a motor can rotate at lower speed.
These changes could be fed back to designers, helping to create a valuable knowledge loop from the design to the field and back again.
Second, it is important that Eureka tips are used together with all other resources, actions and knowledge.
Users are given the freedom to organize the information resources however they want.
In finding the title "Tray 1 only," Sean moved back to the machine and sought more information.
Users can choose what to do based on their habitual knowledge on the environment.
In other words, Eureka tips are integrated with other information sources such as the person's past experience and coworker's suggestion.
By the same token, the information and actions can be interwoven as necessary.
This point is particularly crucial because some types of information cannot be simply absorbed but need to be actively enacted .
That is, workers need to seek out and create the information by manipulating and modifying the materials in the situations.
The enactment also appears in instruction following, but with limited understanding.
Third, RAPs are designed to construct the context by having users answer Yes and No in the decision tree.
The specific path up to that point in the tree represents the context of the particular problem.
This context can be extended in the ways suggested earlier of indicating some of what answering a particular question implies.
Technicians can easily consider very broad contextual information: for example, knowing that the customer cuts the paper on site or that the tray 1 feed kit has already been replaced.
Eureka fully exploits the user's local knowledge whereas the RAP tries to formulate the context from scratch .
Only by letting users judge can systems incorporate all contextual information.
We also showed that technicians preferred going through a number of documents to focusing on limited choices.
But, delegating the role of formulating the context to users requires careful design effort because it may incur huge cost to users .
First, the titles of the tips were found to be crucial as information `scent' .
To find relevant information, technicians rely heavily on the titles.
Sometimes, titles are too long to fit in the small field in the search result panel.
To compensate, a popup appears on "mouse-over" and shows the entire title.
This small feature turned out to be very important.
For example, one technician was looking for information on possible tips on a patch to software update and found a title that read "After 1.5 Upgrade W." But, when he placed the pointer in it, the popup showed the entire title "After 1.5 Upgrade Won't Print from Bypass."
So, this tip was on the bypass tray, not a software patch.
Recall that Eureka tips have three-section structure: Problem, Cause and Solution.
This structure is crucial for gleaning because depending on the purpose technicians can focus on only one of the sections.
In trying to understand the nature of the problem, one can skim through Problem and read Cause.
In search of quick solutions, one can simply read the Solutions.
This three-section structure is a proven format countering the trade-off between freedom and structure.
Authors are given reasonable amount of freedom in describing what they found while the "gleanability" of information is maintained.
In sum, gleaning is made possible with a hierarchy of information filters.
First, users can type in keywords and show the largest set of possibly relevant information.
Second, quick visual skimming of titles could reduce the number of documents.
Fourth, technicians can open the document on the right panel and read the content.
They can see the Problem section and immediately tell if the information is relevant.
If the Problem section resonates with the present problem description, they can now scroll the document.
As information foraging theory  suggests, this hierarchy of filters is a form of optimization of information diet .
This design is crucial to help technicians, who prefer reading through a larger number of results and picking up relevant documents by themselves.
As a conclusion, we suggest that any systems to support practitioners should be built on the extensive knowledge that the practitioners already have.
As Whalen and Vinkhuyzen  argue, workers most often need a "system for experts" rather than "expert system."
Systems should not seek to give information to users but make it easy for users to make sense of--and use of--information.
To do so, we suggest that information be rendered practically concise and right to the point rather than carefully authored to only be followed in a step-by-step manner.
Users simply know better than the system and the designers.
In addition to the specific design issues, we have to pay equal attention to the organizational context in which the system is used.
Eureka's significance is not confined to interface design.
Technology uses always emerge through complex interaction between people and some specific technology .
Eureka is a result of many years of fieldwork and user-centered design practice .
Significantly, Eureka tips are written by the technicians.
Researchers and designers have discovered that the validation and reward  are all inseparable component of the system.
Local champions, technicians who liked Eureka, played a crucial role in promoting it in the technicians' communities.
The literature on information seeking behavior has ignored most of the arguments given in this paper.
Most theories suggest models of information use that are sequestered within a library or the worldwide web.
Even those theories that explicitly incorporate broader elements  ignore the roles of social organization, users' extensive practical knowledge, the way information and action are interwoven, and the formulation of the context.
These issues were found to be critical for effective use of Eureka in the organization.
In this paper, we examined how workers actually make use of information.
Based on detailed analysis, we specifically discussed two types of information use: gleaning and instruction following.
These two types of information use, in turn, provided some important implications to technology, document content and work organization.
The design of browsing and berrypicking techniques for the on-line search interface.
The Eureka Story: Community Knowledge Sharing in Practice.
Ellis, D. A Behavioural Approach to Information Retrieval System Design.
Goodwin, C. and Goodwin, M.H.
Seeing as a Situated Activity: Formulating Planes.
Cognition and Communication at Work, Cambridge University Press, Cambridge, 1996, 61-95.
Hutchins, E. Cognition in the Wild.
The Duality of Technology: Rethinking the Concept of Technology in Organizations.
Talking About Machines: An Ethnography of a Modern Job.
ILR Press, Cornell University Press, Ithaca NY, 1996.
11.Suchman, L.A. Plans and Situated Actions: The Problem of Human Machine Communication.
Cambridge University Press, Cambridge, 1987.
13.Whalen, J. and Vinkhuyzen, E. Expert Systems in Action: Diagnosing Document Machine Problems over the Telephone.
Workplace Studies: Recovering Work Practice and Information System Design, Cambridge University Press, Cambridge, UK, 2001, 92-140.
