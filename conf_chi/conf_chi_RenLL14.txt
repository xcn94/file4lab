Although touchscreen mobile phones are widely used for recording informal text notes , the lack of efficient mechanisms for combining informal graphical content with text is a persistent challenge.
In this paper, we present InkAnchor, a digital ink editor that allows users to easily create ink-based notes by finger drawing and writing on a mobile phone touchscreen.
InkAnchor incorporates flexible anchoring, focus-plus-context input, content chunking, and lightweight editing mechanisms to support the capture of informal notes and annotations.
We describe the design and evaluation of InkAnchor through a series of user studies, which revealed that the integrated support enabled by InkAnchor is a significant improvement over current mobile note taking applications on a range of mobile note-taking tasks.
Multi-touch; digital ink; note-taking; multi-scale sketching, drawing; mobile interaction.
H.5.2 : Input devices and strategies, Interaction style.
It is common for people to capture small, but often critical, pieces of information in their daily lives, such as ideas, reminders or driving directions .
Although physical paper such as Post-Its remains a favorite medium for this kind of note taking, more and more people are using digital tools such as email or text editors .
We foresee the trend becoming even more pronounced with the rapid adoption of touchscreen mobile phones , which are often more accessible than pen and paper.
Copyrights for components of this work owned by others than the author must be honored.
Abstracting with credit is permitted.
To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee.
Publication rights licensed to ACM.
An important challenge with existing mobile note-taking tools is the lack of efficient methods for note entry .
In contrast, extensive work has shown that hand-drawn ink, without recognition, is often preferred for note taking, e.g., .
Using ink allows arbitrary content, such as diagrams and symbols, and offers a close analogy to the paper-based approach.
Because mobile notes are consumed mostly by the note takers themselves, the informal look of ink is often less of an issue .
As we interviewed end-users who drew and sketched on multi-touch phones, it became clear that the capture of informal ink-based notes was a common but poorly supported task on multi-touch smartphones.
One of our participants, a site coordinator  who frequently sketched on his smartphone at construction sites, stated: I would rather draw with my fingers on the dusted windshield of my car than draw with  the phone.
While sharing this smartphone sketch, the store designer also said:
To be honest, I don't really sketch on my phone anymore.
I bought the Samsung Note 10.1 specifically to make my sketching easier and more accurate.
However, another option to resolve this problem, which we intend to explore, is to enhance the sketching experience sufficiently on small-screen smartphones so that people are not left with the need to purchase more specialized devices.
Essentially, we seek to understand how best to design an effective, multi-touch sketching experience for mobile phones.
The remainder of this paper is organized as follows.
We first review related work in informal note-taking.
Next, we present the results of a survey that we conducted to understand existing mobile note-taking practices.
We then describe the design of the InkAnchor system, by first giving an overview of the system and then elaborating on the design process of each major feature of the tool.
Finally, we present two evaluations of InkAnchor and discuss our findings of its benefits for informal note taking.
In particular, recent studies  investigated note-taking in informal situations, such as creating a reminder or capturing a phone number.
The design of InkAnchor was built on prior work as well as our own investigation through an online survey.
A significant body of work in note-taking tools is focused on activities such as active reading  or classroom note taking .
In addition, much of the above past research has focused primarily on stylus-based ink editing on a larger surface, such as a tablet, rather than on multi-touch note taking.
Mobile phone applications  that support some form of ink-based note taking for mobile phones exist.
TreadMill Ink  addressed the limited writing space on touchscreen mobile phones by automatically scrolling a designated writing area, but requires the written ink to be recognized as characters to be added into a text editor.
Recognition limits ink formatting to flowed ascii text and constrains what a user can write to what the recognizer supports.
As a result, a mathematical expression or a simple sketched map cannot be entered.
In addition, recognition errors can distract the user from taking notes.
DIZI  and Note Taker  are focus+context note-taking apps.
DIZI  allows a user to zoom into a specified region of a document and then write in the magnified window on a pen-based tablet device.
Similarly, Note Taker  employs focus+context but adds more dedicated support for writing text and shifting the zoom focus.
Researchers have designed algorithms to automatically group ink strokes and infer layouts , but these have rarely been incorporated into commercial smartphone apps due to the problem of recognition errors that accompany automatic reasoning in informal note-taking.
Past research has, however, informed the design of InkAnchor.
Our discussions of sketching with our participants and our experience designing system variants for ink-based multitouch sketching resulted in InkAnchor, an ink editor for creating finger-drawn ink-based notes on a touchscreen mobile phone .
InkAnchor addresses two major problems.
The first issue is interaction space.
In contrast to pens and tablets, which prior work focused on , the small form factor of mobile phones and the occlusion caused by finger-based touch input provide a limited effective space for interaction.
Touch-based input also has low precision because of the large contact area of the finger on a touchscreen .
InkAnchor allows users to alter the scale and precision of strokes by supporting separate modes for screen-sized drawings and text-sized stroking.
Second, many ink notes  incorporate a significant number of text strokes, which must be entered efficiently.
InkAnchor supports word-grouping based on user-pauses to autoadvance and flow text, allowing the rapid entry and flexible editing of hand-drawn letters and words.
As the design of InkAnchor evolved from a series of exploratory user studies, it represents the culmination of feedback from a number of end-users.
Both of these techniques have appeared in the research literature.
InkWriter , a tablet pc application, treats ink objects as text and uses flow layout to reflow ink.
While both of the above systems provide inspiration for components of our system, they do not address the particular challenges of sketching on finger-based, touchscreen mobile phones.
Finally, a large body of work has focused on integrating virtual paper into computers so as to leverage the convenience of paper and the processing power of a computer .
InkAnchor complements prior work, by focusing on everyday informal note-taking situations that use only multi-touch input.
This finding confirmed the result from the previous study , in which 96% of the collected note samples contained text, while only 7% had drawings.
This result informed us that our application should support the editing of text content but not exclude drawings.
The practice of informal note taking has been extensively studied .
Building on prior knowledge, we conducted an online survey to refresh our understanding and capture any potential changes caused by the rapid evolution of the mobile user experience.
The survey covered topics such as the situations in which users take informal notes, the type of content they capture, what tools they use, and the difficulties in note-taking practice.
We sent the survey to a mailing list in an IT company that included software engineers and users in non-technical departments such as human resources and marketing.
We received a response from 138 people .
Overall, we found results similar to those identified by a previous study .
Informal note taking is equally distributed between at-work and on-the-go situations.
When people are on the go, they often have their mobile phones with them.
Among the problems that our survey participants constantly cited was how cumbersome it was to enter notes, which is consistent with the findings of a previous study .
We also found that the primary use of notes was targeted for note creators themselves , implying that the informal look of ink strokes should not be a major concern.
Beyond our informal survey, many of the participants that we worked with over the course of our iterative design studies and during our first use evaluation of InkAnchor had used their smartphones to capture ink drawings.
For these participants, the challenge of mixing large-scale strokes with more precise lines and with text strokes was particularly acute.
Participants need to adjust zoom level to support text entry.
In the rest of this section, we focus on the findings that heavily influenced our design of InkAnchor.
In prior work, a typical approach for ink editing on touchscreen phones is to apply focus+context to a drawing canvas .
In this approach, a specific area of the drawing canvas is zoomed large enough so that the users can comfortably write with a finger.
At the same time, the surrounding ink on the canvas remains visible.
The zoom focus, a rectangular region, has to be moved before the users can write in another area of the canvas.
The strokes drawn with the finger are scaled down on the basis of zoom focus size relative to the entire screen.
These focus+context note-taking tools employed various ways for moving the zoom focus, e.g., by panning with two fingers  or switching to the panning mode .
Users could also dismiss the existing zoom focus and select another area of the canvas to zoom .
In particular, Note Taker, a commercial iPhone application , employs a semi-automatic approach to shift the zoom focus by providing several hint areas on the screen for users to shift the zoom focus either horizontally  or vertically to the next line .
This design is specifically tailored for entering text in a horizontal, linebased layout.
It does not support arbitrary orientations.
As well, ink is unstructured, making editing challenging.
Based on our understanding of existing mobile note-taking practices, we created InkAnchor, a tool for mobile users to easily enter and edit an ink-based note on a finger touchscreen.
We here give an overview of how a user would use this tool.
In InkAnchor, users can add multiple ink blocks, each at a different size, position, and orientation on the canvas .
An ink block can have a single line or multiple lines, and each line may consist of a sequence of text strokes clustered into groups of characters, chunks, that nominally represent words.
Semantically, an ink block can be a paragraph, a bulleted line, a chart legend, or any information fragment that is meaningful to the users, and a chunk is a primitive object that consists of a group of strokes that can be manipulated as a whole.
As we mentioned earlier, one challenge when writing on a mobile phone touchscreen is limited space for users to write as much as they want.
For example, writing a single word such as "Renew" with a finger would use up the entire screen .
To address this issue, we anchor raw, finger-drawn strokes into a scaled-down, well-arranged form.
Orientation of a line Figure 3a: The anchor defines height, position, and orientation of the ink block.
Figure 3b: InkAnchor launches with the anchor  and a rectangular magnifying lens.
Figure 3c: Users can write on the lens, and the ink is scaled down and shown on the background in real time.
Figure 3d: InkAnchor detects and avoids collisions of ink blocks.
Similar to the cursor in a text editor, which specifies where the next typed character will occur, the anchor indicates where the next ink strokes will be added.
The anchor also defines how the strokes will be geometrically transformed.
Users can write anywhere on a virtual magnifying lens, and the strokes of their handwriting are transformed and organized into a line-based flow layout according to the anchor's size, position, and orientation .
While the users write, the touch trace is displayed at the original scale and the transformed ink is shown on the background in real time .
Users will pause when they finish a semantic unit  or they reach the edge of the touchscreen.
After a timeout , the anchor advances to the end of their current input, thus repositioning automatically to allow the user to continue writing.
When the line reaches the boundary of the canvas or collides with another existing block, it automatically wraps and left-aligns with the start of the previous "line", leaving an interval between the two "lines".
For example, the block "A new Insurance is needed" in Figure 3d automatically wrapped at the chunk "new" and "is", when it collided with the block "Renew the Insurance by Sept. 18".
Consequently, users can keep writing without having to pay attention to how the strokes are organized.
Users can directly start a new ink block anywhere on the canvas by a long finger press at the target position on the touchscreen.
Once the system detects a long press, a vibration feedback is given as a notification, and InkAnchor is in the adjustment stage.
The anchor jumps to the finger's position, following the finger's movement until the users exit the adjustment stage by lifting their finger.
In addition, since the user's finger can occlude the anchor, a big cross centered at the anchor is shown in the adjustment stage.
The lines of the cross coincide with the short bar and the line of the anchor .
With the cross, users can easily see where the anchor is positioned before dropping it.
Users can also change the anchor's orientation in the adjustment stage .
While the users rotate the mobile phone, the anchor and the cross remain horizontal relative to the ground.
After users exit the adjustment stage, the orientation of the anchor is fixed.
Informed by our survey of note-taking practices, and specifically by the importance of text in ink note-taking, InkAnchor incorporates four features to support ink entry on touchscreens: focus+context views, text anchoring, freeform orientation, and auto-delimiting of text.
There are many different ways that these features can be realized in an application, so we conducted a series of four design studies to refine the design of these features in InkAnchor.
Our design studies used thinkalouds to assess participants' perspectives on how well InkAnchor supported a set of simple tasks.
The tasks in our design studies included asking the participants to write some basic text, to draw a simple node-link diagram, or to draw a graph and annotate the graph.
We provided participants with exemplars of the tasks, but also allowed participants to specify their own content and to play with the InkAnchor interface.
Finally, we walked through individual features being explored in the design study with each participant and collected their thoughts on how the features could be improved.
A total of seven participants participated in our design studies.
Because our design studies incorporated an aspect of participatory design, we considered it important that participants be skilled users of touchscreens.
As a result, our participants were all chosen from technical disciplines within our university community, and all were owners of touchscreen smartphones.
While scheduling constraints did not permit all participants to participate in all design studies, at least four participants participated in each design study, and all participants participated in at least two design studies.
As we have discussed in Related Work, focus+context benefits note taking on small screen devices.
However, sketches and text often require input at different scales, which implies that focus+context should be switched off when users want to sketch instead of entering text.
While researchers have explored methods for automatically classifying ink strokes into text and drawings , automatic segmentation remains challenging, particularly for real-time situations in which there is often insufficient information for inference.
Therefore, we decided to allow users to activate focus+context in InkAnchor manually.
As depicted in our screenshots, we incorporate a "Magnify" mode to support multi-scale drawing, which can be enabled or disabled by the user.
While a mode switch seems somewhat inelegant, in our design studies, we observed that users would draw in a large scale, then spend significant time drawing text, then revert to large scale drawing briefly, then return to text for another block of time.
Essentially, our mode-based approach mimics the behavior of our participants, where text entry was segmented in time from large-scale drawing.
To reduce mode errors, we experimented with various visualizations to highlight the fact that the system is in the anchor mode, including grayed background and flashing cursor.
With no clear preference, we chose a glass lens in our design of InkAnchor .
When children begin learning to write, they are asked to write on notebooks with guidelines that allow them to judge the size and the relative position of ascending and descending characters.
We experimented with 3 different variants of these guidelines as shown in Figure 6.
Participants in our study, however, disliked the 4-line guideline common in school notebooks.
While either the anchor mapping  or the two-line variant  was acceptable, for simplicity we chose the anchor variant of Figure 6a as our final design.
In our preliminary design, to change the size of the scaleddown strokes or the height of a line, users could adjust the anchor height via a long press on the anchor.
However, we observed that our participants typically used a long press followed by a drag to adjust the anchor's position, rather than teleporting the anchor for repositioning as we expected.
Interestingly, in studying the re-sizing of ink, it became obvious to us that re-sizing was not a frequent operation.
If the system provided a good default scaling for ink based on screen size and resolution, participants would leave this default unchanged.
If they wished to create larger or smaller text, for example a title or a superscript, participants would simply adjust the size of their input strokes.
This behavior seems analogous to what is observed when people draw on a whiteboard or a sheet of paper: There is an expected viewing distance for any given medium, and writing is frequently scaled to that expected viewing distance.
Figure 6 depicts our default scaling for the hardware we used in our studies .
This scaling was tuned via several initial sessions, and, once set, new participants saw no need to adjust the default scaling of ink.
As a result, we replaced ink resizing via long-press on the anchor by radio options  in a settings menu.
Long-press on the anchor would then allow participants to drag the anchor around the screen, and a long press at any other location on the screen would cause the anchor to teleport to that location.
To facilitate text input, we developed text anchoring as a novel way of moving the zoom focus, where users' handwritten ink is scaled down automatically to a specific size at a specific position.
We explored a variety of techniques for users to easily understand the effects of ink scaling.
Perhaps the most important feature added through our design studies, to support accuracy of inking, was realtime scaling of ink content.
The immediacy of the visual feedback allowed users to intuitively adjust size and position to produce a more accurate drawing.
Even with real-time scaling, screen occlusion and misjudgments of participants still caused problems accurately scaling ink.
We experimented extensively with baseline detection techniques.
Combining baseline analysis with the height of the anchor can determine both the scaling factor and the translation for the vertical alignment in a line .
However, two facts impair the worth of baseline detection.
First, there is no perfect way to find the baseline of an English word without handwriting recognition.
Second, since we take the real-time visual feedback of ink editing as an important part of our design, we need to decide the absolute position of the transformed ink as soon as the user starts writing.
As a result, we are not able to wait for the users to finish writing an ink chunk to calculate the baseline or to dynamically scale.
Some other feedback mechanism to allow users to adjust the scale is needed.
We provide two kinds of delimiters to chunk ink in InkAnchor.
The first is an auto-delimiter, which chunks handwritten ink automatically after a certain period of time and advances the anchor for subsequent input, i.e.
Participants were asked to accomplish several basic tasks with different timeouts  and we selected 650ms as the timeout in our final design.
Users can also manually advance the anchor and chunk ink by clicking the "Next" button or the "Enter" button at the bottom right of the magnifying lens.
Specifically, the "Enter" button also functions like the "Enter" key on the keyboard, which advances the anchor to the start of the next line.
This timeout was the most controversial feature in our design.
Participants in our design studies began by disliking the feature.
As we could easily disable auto-advance, we experimented frequently with manual advance or with longer timeouts.
However, in every case, as participants became more comfortable with the interface they would typically want the auto-advance/timeout re-enabled to support the entry of longer blocks of text.
If, instead, we simply left it enabled at the beginning of the studies, participants seemed to quickly acclimatize to the timeout.
As a result, auto-advance with timeouts is a useful feature as users become familiar with the tool, and our timeout worked well as participants became comfortable with the specific timeout setting.
Flexible layouting of ink content is essential for creating rich ink-based notes.
We designed and experimented with methods for users to easily arrange their ink content via a touchscreen mobile device.
Physical paper offers direct, easy content entry-we can write anywhere on paper with an arbitrary orientation and size.
In contrast, all the text in a text editor is constrained to a horizontal flow layout, which offers an efficient way to maintain the layout of sequential text-based content while it is being edited, such as deleting a word from a sentence.
One of the constraints of many ink-based note-taking apps is the assumption that a text editor's horizontal flow layout would work best in any situation.
This assumes that notes are solely comprised of text.
As we found in our survey, despite the prevalence of text, many users occasionally  wish to combine text with drawings or use text to annotate other content such as photographic images.
To combine advantages of both physical paper and electronic text editing, we incorporate two distinct layout strategies at different levels of ink structuring .
For the global, inter-block layout, InkAnchor employs an absolute layout as a physical paper does.
A block can appear anywhere on the canvas and at various orientations.
For the local, inner-block layout, InkAnchor employs a flow layout, as in a text editor.
Stroke chunks in a block are laid out sequentially and wrapped automatically when the block grows to the boundary of the canvas or runs into other blocks.
We selected this design to mediate between the benefits of horizontal flow layout and the flexible positioning paper provides.
In contrast to the horizontal layout of a text editor, users frequently write text along an arbitrary orientation as on physical paper, such as while annotating the vertical axis of a graph in a mathematical document or labeling a road in a hand-drawn map .
As a result, InkAnchor must be able to detect the intended orientation of users so as to determine how ink strokes should be geometrically transformed.
There are two options for changing the orientation of ink on a smartphone.
A user can either manipulate the anchor as a widget by rotating it, or a user can rotate the device to change the orientation of the ink.
When asked how best to rotate the anchor, all of our participants wished to simply twist a single finger on the display.
While it may be possible to monitor the shape of a finger on the display and detect when the finger is turning , variations in the size of participants' fingers, the contact force, and the fidelity of the multi-touch sensors on different smartphones all affect the ability to recognize single-touch finger rotations in a generic way.
As a result, we designed InkAnchor to capture the user's intended orientation by detecting the mobile phone's physical orientation.
In other words, no matter how the phone is rotated, InkAnchor keeps the anchor's orientation horizontal relative to gravity using accelerometer data.
Our approach for detecting screen orientation is similar to that used by existing mobile devices such as Android phones .
The basic idea is first to extract the acceleration caused by gravity from readings of the phone's 3D accelerometer using the 1 Filter  and then to analyze the distribution of gravity along the device's three axes.
This technique works when the user is in a normal upright posture, such as sitting or standing.
When gravity is distributed along only the z-axis, e.g., when the phone lies flat on a table, it is not feasible to determine the device's orientation by using acceleration alone.
We tried to resolve this defect by combining the data from the geomagnetic field sensor.
However, since the geomagnetic field sensor is not sufficiently accurate, we abandoned this idea and do not detect changes in orientation when the phone is resting on a horizontal surface.
In testing the feature, we found that this constraint was acceptable.
Participants adjusted quickly to the need to hold the phone in their hands to rotate.
In fact, creating drawings with the phone flat on a horizontal surface was much more awkward than with the phone held in one hand and angled toward a participant's face.
We also found that orientations that are horizontal or vertical should be advantaged over arbitrary angles.
InkAnchor stabilizes anchor orientation by snapping to the horizontal and the vertical orientation when a user is within ten degrees  of horizontal or vertical.
Ten degrees worked well as a balance between stabilizing to horizontal and vertical while still permitting arbitrary orientations that were off-axis.
As an alternative, a snapand-go technique might work well for all orientations, but, in practice it seemed unnecessary as participants simply angled their input while drawing to support small deviations from horizontal or vertical.
To test the efficiency of InkAnchor, we conducted a small scale user study contrasting InkAnchor  with two existing techniques.
The first technique was a focus+Context view found in Note Taker, Figure 7, where a small zoomed window is shown in the background and full screen input is scaled to that window .
The second technique was typing text on a soft keyboard on the multi-touch mobile phone .
The goal of our evaluation was not to prove that InkAnchor was faster, but instead to ensure that it was not significantly worse at basic text or text-plus-drawing note taking tasks.
We asked six participants to draw six different diagrams, specifically an email contact , a reminder, an address, a grocery shopping list with nine items, a simple graph of data with axes labels and three annotations, and a simple map of driving directions showing three streets with names.
The first four diagrams were created using all three techniques.
The remaining two, the graph and map task were only performed using the Zoom and Anchor, as they included drawing.
For text notes, participants were told that they did not need to pay attention to capitalization or punctuation.
They were also asked not to be influenced by the layout used in the instructions.
However, for the chart and the map, we asked participants to enter them exactly as shown on the instruction sheet, in terms of the position and orientation of textual labels.
Both the graph and map task required participants to switch between the writing and direct drawing modes.
Technique was fully counterbalanced across participants; drawings were performed in the order listed above, essentially from simplest  to most complex .
Based on this study, we found InkAnchor had similar overall time performance to both Focus+Context drawing and typing on the set of tasks in the experiment.
However, we observe potential advantages of using InkAnchor for complex note taking tasks as shown by the chart and map tasks in Figure 8.
As a result, we conducted a first-use study , focusing on prospective users' ability to perform a series of diagram entry tasks.
We specifically screened for participants who had experience with multi-touch sketching, with a preference for multitouch sketching on smartphones.
Our goal was to first assess their past experiences with multi-touch sketching, to have them perform sketching tasks using InkAnchor, and to then evaluate the individual features of InkAnchor and the overall utility of the InkAnchor application.
Participants were recruited from within our university community, but included both students and professionals.
The constraint that participants had some experience with multi-touch sketching seemed in the end to restrict our participant pool to more technical disciplines.
However, we felt that the need for preconceived impressions of multitouch sketching was particularly important for a first-use study of a novel sketching app.
Fifteen participants completed our study .
Nine of the participants had experience sketching on smartphones, three on multi-touch tablets, and one on both.
The remaining two participants had extensive sketching experience, and responded to the call for participants because of an interest in multi-touch sketching.
Sessions lasted for one hour, and participants received a $10 gift certificate to a local cafe as a token of appreciation.
Each session began with a semi-structured interview that explored participants' impressions of multi-touch sketching apps and the overall experience of sketching via multi-touch.
We also discussed sketches participants had created using multitouch, if available.
Next, we provided a brief description of the InkAnchor program and asked participants to complete three tasks using InkAnchor : a map drawing task, a labeling task, and an annotation task.
Finally, an interview and questionnaire were used to assess overall impressions of InkAnchor's features.
The map sketching task mimics the creation of Figure 10: Each question was graded on a -3  to +3 an informal ink note that contains both  scale.
The bars show the 95% confidence drawings and text.
Sketching informal maps or interval of the median.
Text Editing and Annotation Participants were asked to draw a simple sketch map of our Many of the participants mentioned that sketching would be locale with InkAnchor, as shown in Figure 9a.
As a result, we designed words that required movement of the anchor to complete a simple annotation task, shown in Figure 9c, to simulate the word so we could gauge participants' perspective on editing a text document or annotating other text content entering longer words: Would they notice the need to only using InkAnchor.
We gave participants a PowerPoint slide enter half of the word at a time before advancing the anchor?
Would auto-advance cause any particular problems?
Would We gave no specific directions on how to correct the typos they adjust their behavior by writing smaller?
Would they or how to incorporate the definition into the slide.
Our room labeling task mimics the photo annotation task shown in Figure 1.
Participants were shown a room diagram with a list of room names.
The background of InkAnchor was replaced by a picture of the room diagram and we asked participants to label each room with the corresponding name in a list .
Participants were asked to fit each word into the corresponding blank space, which is very limited in size.
In this section, we highlight several outcomes of the user study.
We analyze InkAnchor's key features and examine participants' overall impressions of the system.
InkAnchor combines four key features to support informal sketching: real-time feedback, auto-scaling, ink rotation, and auto-delimiter via timeout.
Figure 10 summarizes the quantitative results from our questionnaire, and Figure 11 shows notes from one of the participants.
Each question is graded on a -3 to +3 scale.
We depict median values and 95% confidence intervals for the median.
You may note that confidence intervals extend significantly beyond +3 in many cases.
This is an artifact of extremely high median and mode values for InkAnchor's features.
In particular, real-time visualization, auto-scaling, ink rotation and block collision/word wrapping were all considered highly useful, with median and mode values of +3 for usefulness.
Even our timeout auto-delimiter had median and mode values of +2, indicating the value of the linked feature set in InkAnchor.
In our observation of participants, we noted that the behavior of ink rotation was the one feature that was not self-revealing for our participants.
One participant used both a finger rotation and a device rotation when reorienting ink, and noted: Yeah, I'm not quite sure what kind of tech you are using for rotation; maybe it's multi-touch, or the gravity, so I tried to use both of them to make it work.
Just the rotation, I'm not sure which direction I'm actually writing.
I think if you can, instead of rotating the phone, maybe rotate your two fingers to address the text alignment.
Ink rotation worked particularly well when users were cradling the phone .
However, because it is more comfortable for users to draw while holding the phone, this did not seem to impede usability.
The other feature that caused some difficulty for our participants was the auto-delimiter timeout of 650ms.
Despite our tuning efforts, participants universally complained about quick timeout early in their evaluation, and argued for a longer time-out.
So the pause time is a bit is too short.
I'm considering how much space I need to write the "Hallman", but I automatically wrapped it up .
If I want to move to the next word, it helps a lot.
But for me, I think it's ideal.
Tightening the timeout might allow participants to perform better initially, but it might also cause problems for participants as they need to continue to adjust to an evershorter timeout during initial use.
Given the speed with which participants adapted to the current timeout, it is questionable whether a looser initial timeout is necessary.
Beyond individual features, we also explored the utility of InkAnchor for the experimental tasks of map drawing, labeling, and annotation.
Figure 11 depicts output from one of our participants.
Our participants rated InkAnchor very high for each of the representative tasks: Median and mode scores were either 2 or 3, and 95% confidence intervals were all positive.
We also asked participants about the perceived speed and accuracy of InkAnchor for text and graphics, with equally positive feedback.
Initially, most of the participants had a negative feeling about sketching on touchscreen phones.
Our civil engineer participant quoted in the introduction was not alone in his desire to avoid multi-touch sketching.
Other participants from P4, a graduate student in computer science, to P2, a graduate student in engineering, all expressed similar sentiments: I think, hmm, I think a mouse gives more control to a certain extent, I'm pretty good at mouse.
I'm not quite used to this, you know, drawing with your finger things.
However, at the end of the study, participants held positive attitudes towards sketching with InkAnchor.
Thirteen of our sixteen participants expressed a desire or a strong desire to use the app, and one of our participants requested a download link for the app from the Android Market.
We present the design of InkAnchor, a multi-touch tool for informal note-taking for mobile phones.
InkAnchor offers a unique combination of a set of features, including text anchoring, focus+context input, free-form layouts and autodelineation of ink groups.
We derived the design of InkAnchor through an iterative design process that involved testing and revising each aspect of InkAnchor repeatedly with a group of user participants.
InkAnchor provides the integrated support to allow flexible entry of rich ink-based notes that consist of larger drawings and detailed text annotations.
We evaluated InkAnchor via two user studies and reported the initial user response to InkAnchor.
